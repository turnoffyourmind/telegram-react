{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Assets/Icons/logo.png","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/SectionHeader.js","Utils/Language.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Delete.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/TopChat.js","Components/Security/List/Tile/ChatTile.js","Components/Security/List/Tile/DialogTitle.js","Actions/Message.js","Components/Security/List/Tile/Dialog.js","Components/Security/List/Tile/SelectedItem.js","Components/Security/List/Search/Search.js","Assets/Icons/Back.js","Assets/Icons/Search.js","Components/Security/List/Search/SearchInput.js","Components/Security/List/DialogsHeader.js","Components/Security/List/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Components/Security/List/DialogsList.js","Utils/Archive.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/Security/List/List.js","Components/Security/List/index.js","Stores/Secret.js","Components/Security/KeyBoardCommon.js","Components/Security/KeyBoardIos.js","Components/Security/List/ChatsLoader.js","Components/Security/Pin.js","Components/Security/index.js","Components/Security/Setup.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","module","exports","ThemePicker","handleChange","event","type","target","value","ApplicationStore","emit","primary","getColor","color","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","handleClose","open","theme","palette","t","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","FormControl","component","FormLabel","focused","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","classes","root","enhance","compose","withSaveRef","withTheme","withTranslation","withRestoreRef","SectionHeader","command","multiline","onClick","children","classNames","Boolean","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DialogTitle","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","chat_id","nextProps","nextState","ChatStore","on","off","showSavedMessages","isVerified","isChatVerified","title","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","chat","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","user_id","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","UserStore","SupergroupStore","externalSubtitle","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","RecentlyFoundChat","contextMenu","top","left","handleContextMenu","a","preventDefault","stopPropagation","clientX","clientY","handleCloseContextMenu","handleDelete","onDelete","ListItem","button","onContextMenu","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","e","MenuList","MenuItem","ListItemIcon","Delete","ListItemText","PureComponent","TopChat","shortTitle","getChatShortTitle","dialog","showOnline","ChatTile","onClientUpdateChatBlob","fileId","loaded","photo","src","getSrc","small","onUpdateChatPhoto","file","store","FileStore","getStore","loadChatContent","letters","getChatLetters","handleSelect","handleLoad","size","style","width","height","tileLoaded","typeId","getChatTypeId","tileColor","abs","pointer","onLoad","draggable","alt","unpinMessage","messageId","message_id","unpinAllMessages","Dialog","hidden","SelectedItem","list","onClickCapture","pointerEvents","includes","DeleteForever","Search","handleKeyDown","modals","isComposing","blur","concatSearchResults","results","arr","map","chat_ids","j","set","push","sort","b","orderCompare","getChatOrder","searchText","text","sessionId","Date","savedMessages","promises","localPromise","query","limit","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","Promise","all","catch","local","toUpperCase","savedMessagesStrings","some","el","splice","recentlyFound","loadChatsContent","trimmedText","trim","startsWith","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","sender_user_id","from_message_id","offset","filter","chat_list","offset_date","offset_chat_id","offset_message_id","MessageStore","setItems","linkMessage","url","messageLinkInfo","message","console","log","chats","users","sender","keys","loadUsersContent","loadContent","topPromise","category","recentlyFoundPromise","savedMessagesPromise","getMyId","force","error","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","current","scrollTop","offsetHeight","scrollHeight","SCROLL_PRECISION","onLoadPrevious","getOffset","date","concatMessages","total_count","concat","loading","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","createRef","searchOrLoadContent","KeyboardManager","add","remove","onSelectChat","topChats","recentlyFoundChats","localChats","ref","onScroll","IconButton","Close","SearchInput","keyCode","element","innerText","nativeEvent","stopImmediatePropagation","onBackspace","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","handleInput","inputRef","onFocus","hint","showIcon","placeholder","contentEditable","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","onInput","DialogsHeader","onUpdateAuthorizationState","authorizationState","authorization_state","handleSearch","onSearch","openSearch","isAuthorizationReady","handleSearchTextChange","onSearchTextChange","searchInputRef","handleCloseSearch","onCloseSearch","handleFocus","AppStore","getAuthorizationState","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","focus","focusInput","popup","content","DialogPlaceholder","index","titleWidth","contentWidth","cos","position","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","items","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","behavior","setTimeout","scrollTo","reset","chatList","filters","onUpdate","chat_filters","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogListItem","DialogsList","onClientUpdateChatList","params","completed","loadFirstSlice","onClientUpdateLeaveChat","inProgress","hiddenChats","delete","onLoadNext","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","currentIndex","findIndex","chatIds","chatOrder","newChatIds","getChatId","last_message","setChatId","changeChatDetailsVisibility","reorderChats","loadChatContents","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","FilterStore","callback","orderedChatIds","isDifferentOrder","replace","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offset_order","finally","clientUpdate","shift","replaceChats","appendChats","newChats","isChatPinned","Array","oldChatIds","getArchiveTitle","archive","chatsOrder","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","debounce","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","user","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","defaultTimeout","enter","enteringScreen","exit","leavingScreen","List","onUpdateChatFilters","handleSaveCache","onClientUpdatePageWidth","isSmallWidth","timeout","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateThemeChange","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","handleHeaderClick","scrollToTop","visible","toggleChat","setList","setOpenList","mainItems","loadCache","onClientUpdateSettings","onClientUpdateArchive","onClientUpdateContacts","onClientUpdateNewGroup","onClientUpdateNewChannel","CacheStore","mainChats","mainCacheItems","CSSTransition","in","mountOnEnter","unmountOnExit","StorageVal","readed","securityStatus","pin","onNumber","onDel","onOk","rootCN","cn","textElements","logo","Backspace","w","innerWidth","boxStyle","btn","fill","ChatsLoader","patch","cb","onUpdateChats","res","getRequests","warn","requests","isChatMember","remove_from_chat_list","isCreator","status","is_member","wait","ms","leaveChats","chatLoader","Mount","loads","flatMap","request","Pin","masterPin","onUpdatePinStatus","useState","setPin","number","setVal","navigator","platform","userAgent","Setup","pinStatus","getVal","setSecurityStatus","setWarn","openList","themePickerRef","useRef","saveSettings","test","enabled","Lock","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","oldTop","normalizePosition","handleLoadedData","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","mouseDownRoot","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","handleMouseDown","dragging","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","prevVolume","exitFullscreen","requestFullscreen","getCurrentTime","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleBlur","connectPlayer","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","tabIndex","Hint","onMouseEnter","onMouseLeave","Slider","max","step","rail","track","thumb","active","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","selected","copy","clipboard","writeText","copyOld","successful","createElement","readOnly","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","Error","removeChild","ForwardDialog","getPublicMessageLink","getChatsPromise","messageIds","isSupergroup","getChatUsername","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","getForwardPhotoSize","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","canSendMessages","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","DialogActions","Button","autoFocus","withSnackbar","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","Checkbox","edge","checked","disableRipple","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","padding","scroll","filtersRef","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","deleteMessages","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Share","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","openMedia","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","charCodeAt","SharedLink","webPage","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","offsetTop","offsetParent","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","getRowHeight","migrateCompleted","getFilter","handleVirtScroll","prevScrollTop","loadIncomplete","lastMessages","fromMessageId","requestId","currentParams","isValidMessage","incompleteResults","loadMessageContents","onLoadMigratedNext","handleOpen","openUser","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","mediaRef","counters","migratedCounters","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","member","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","wordWrap","paddingLeft","GroupsInCommonHeader","GroupsInCommon","getChatUserId","minHeight","SharedMediaHeader","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","onUpdateUser","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","unread_count","isPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","chat_filter_id","handleMainClick","handleWheel","deltaY","LocalizationStore","onWheel","Archive","innerListRef","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","General","handleAppearance","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","handleDialogEnter","headerRef","openSettings","meChatId","openContacts","openNewGroup","openNewChannel","paper","onEnter","Dialogs","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleBack","handleSearchChat","localize","str","showProgressAnimation","Back","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","LStore","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","handleLeaveContinue","getLeaveChatNotification","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"kJAOMA,E,WACF,WAAYC,GAAyB,IAAD,OAAdC,EAAc,uDAAJ,GAAI,yBASpCC,MAAQ,WACJ,EAAKC,SAAU,EACf,EAAKC,GAAKC,sBAAsB,EAAKC,gBAXL,KAcpCA,cAAgB,SAAAC,GAAc,IAClBC,EAAwB,EAAxBA,UAAWR,EAAa,EAAbA,SAEnB,EAAKQ,UAAYD,EACjB,EAAKE,QAAUD,EAAYR,EAC3B,EAAKU,KAAKH,IAnBsB,KAsBpCG,KAAO,SAAAC,GAAQ,IACHR,EAA0C,EAA1CA,QAASH,EAAiC,EAAjCA,SAAUQ,EAAuB,EAAvBA,UAAWP,EAAY,EAAZA,QAMtC,GAJIU,EAAMH,EAAYR,GAAYC,EAAQW,MAAM,SAAAC,GAAC,OAAIA,EAAEC,KAAOD,EAAEE,SAC5D,EAAKZ,SAAU,IAGfA,EAAJ,CAEA,IAAMa,EAAOC,KAAKC,IAAIP,EAAMH,EAAWR,GACjCmB,EAAiB,IAAbnB,EAAiB,EAAMgB,EAAOhB,EAClCoB,EAAMrB,EAASsB,QAAQF,GAE7BlB,EAAQqB,QAAQ,SAAAT,GAAM,IACVU,EAAmBV,EAAnBU,KAAMT,EAAaD,EAAbC,GAAIU,EAASX,EAATW,KAClBX,EAAEE,KAAOQ,GAAQT,EAAKS,GAAQH,EAC9BI,EAAKX,EAAEE,QAGX,EAAKX,GAAKC,sBAAsB,EAAKK,QAzCL,KA4CpCe,KAAO,WACH,EAAKtB,SAAU,EACfuB,qBAAqB,EAAKtB,KA7C1BuB,KAAK1B,QAAUA,EACf0B,KAAK3B,SAAWA,E,yDAGL4B,GACX,OAAOX,KAAKY,IAAKD,EAAIX,KAAKa,GAAM,O,KA4CzB/B,O,6GC5CTgC,G,kNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,M,EAiCtBC,kBAAoB,SAAAC,GAAY,IAEpBhC,EADkBgC,EAAlBA,QACAhC,GAERiC,IAAgBC,KAAK,CACjB,QAAS,mBACTF,QAAS,CAAE,QAAS,cAAehC,QACpCmC,KAAK,SAAAC,GACA,EAAKC,MAAML,UAAYA,GACvB,EAAKM,SAAS,CACVT,MAAOO,EAAOG,OAAOC,KAAK,U,kFA1BvBC,EAAWC,EAAWC,GAAW,IACxCX,EAAYT,KAAKc,MAAjBL,QAEJA,GAAWA,IAAYS,EAAUT,SACjCT,KAAKQ,kBAAkBC,K,0CAIV,IACTA,EAAYT,KAAKc,MAAjBL,QAEJA,GACAT,KAAKQ,kBAAkBC,K,+BAoBrB,IACEA,EAAYT,KAAKc,MAAjBL,QACAH,EAAUN,KAAKK,MAAfC,MAER,OAAKG,EAGD,yBAAKY,UAAU,mBACX,yBAAKA,UAAU,yBAAyBf,GACxC,kBAAC,IAAD,CACIG,QAASA,EACTa,YAAaC,KACbC,OAAQC,IAAkBC,WARjB,Q,gDAlDOZ,EAAOT,GAAQ,IACnCI,EAAYK,EAAZL,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,S,GAjBcqB,IAAMC,YA2EpBxB,O,6GCzFf,4BASeyB,gBACX,0BAAMC,EAAE,2nCACR,U,8WCXJC,EAAOC,QAAU,IAA0B,kC,8tFCgCrCC,G,mBACF,WAAYnB,GAAQ,IAAD,8BACf,4CAAMA,KASVoB,aAAe,SAAAC,GACX,EAAKpB,SAAS,CAAEqB,KAAMD,EAAME,OAAOC,QAEnCC,IAAiBC,KAAK,4BAA6B,CAC/CJ,KAAMD,EAAME,OAAOC,MACnBG,QAAS,EAAKC,SAAS,EAAKrC,MAAMsC,UAfvB,EAmBnBC,mBAAqB,SAAAT,GACjB,EAAKpB,SAAS,CAAE4B,MAAOR,EAAME,OAAOC,QAEpCC,IAAiBC,KAAK,4BAA6B,CAC/CJ,KAAM,EAAK/B,MAAM+B,KACjBK,QAAS,EAAKC,SAASP,EAAME,OAAOC,UAxBzB,EA4BnBO,eAAiB,SAAAP,GACb,OAAQA,GACJ,KAAKQ,IAAI,KACL,MAAO,MACX,KAAKC,IAAO,KACR,MAAO,SACX,KAAKC,IAAM,KACP,MAAO,QACX,KAAKC,IAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,IAAO,KACR,MAAO,SACX,KAAKC,IAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,EAiDnBT,SAAW,SAAAJ,GACP,OAAQA,GACJ,IAAK,MACD,OAAOQ,IACX,IAAK,SACD,OAAOC,IACX,IAAK,QACD,OAAOC,IACX,IAAK,QACD,OAAOC,IACX,IAAK,OACD,MAAO,CAAEG,KAAM,WACnB,IAAK,SACD,OAAOF,IACX,IAAK,aACD,OAAOC,IAGf,OAAO,MAnEQ,EAsEnBE,YAAc,WACV,EAAKtC,SAAS,CAAEuC,MAAM,KAvEP,EA0EnBA,KAAO,WACH,EAAKvC,SAAS,CAAEuC,MAAM,KAxEtB,EAAKjD,MAAQ,CACTiD,MAAM,EACNlB,KAAM,EAAKtB,MAAMyC,MAAMC,QAAQpB,KAC/BO,MAAO,EAAKE,eAAe,EAAK/B,MAAMyC,MAAMC,QAAQf,QAAQW,OANjD,E,sEA8ET,IACEK,EAAMzD,KAAKc,MAAX2C,EADH,EAEyBzD,KAAKK,MAA3B+B,EAFH,EAEGA,KAAMO,EAFT,EAESA,MAAOW,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACII,QAASC,IACTC,mBAAoB,EACpBN,KAAMA,EACNO,QAAS7D,KAAKqD,YACdS,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,IAAD,CAAatF,GAAG,sBAAsBgF,EAAE,eACxC,kBAAC,IAAD,KACI,kBAACO,EAAA,EAAD,CAAaC,UAAU,WAAW5C,UAAU,qBACxC,kBAAC6C,EAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBR,EAAE,UAEP,kBAACW,EAAA,EAAD,CACIC,aAAW,QACXC,KAAK,SACLjD,UAAU,qBACViB,MAAOF,EACPmC,SAAUvE,KAAKkC,cACf,kBAACsC,EAAA,EAAD,CAAkBlC,MAAM,QAAQmC,QAAS,kBAACC,EAAA,EAAD,CAAO/B,MAAM,YAAcgC,MAAM,UAC1E,kBAACH,EAAA,EAAD,CAAkBlC,MAAM,OAAOmC,QAAS,kBAACC,EAAA,EAAD,CAAO/B,MAAM,YAAcgC,MAAM,WAGjF,kBAACX,EAAA,EAAD,CAAaC,UAAU,WAAW5C,UAAU,qBACxC,kBAAC6C,EAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBR,EAAE,WAEP,kBAACW,EAAA,EAAD,CACIC,aAAW,SACXC,KAAK,UACLjD,UAAU,qBACViB,MAAOK,EACP4B,SAAUvE,KAAK4C,oBACf,kBAAC4B,EAAA,EAAD,CACIlC,MAAM,MACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,sBAIlBF,MAAM,QAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,SACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,yBAIlBF,MAAM,WAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,QACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,wBAIlBF,MAAM,UAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,QACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,wBAIlBF,MAAM,UAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,OACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,uBAIlBF,MAAM,SAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,SACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,yBAIlBF,MAAM,WAEV,kBAACH,EAAA,EAAD,CACIlC,MAAM,aACNmC,QACI,kBAACC,EAAA,EAAD,CACI/B,MAAM,UACNiC,QAAS,CACLC,KAAM,8BAIlBF,MAAM,wB,GAvMZhD,IAAMC,YA0NjBkD,EAPCC,YACZC,cACAC,IACAC,cACAC,cAGWL,CAAQ7C,G,2DC/NRmD,MAff,YAAmE,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAClD,OACI,yBAAKnE,UAAU,kBACX,yBAAKA,UAAWoE,IAAW,uBAAwB,CAAE,iCAAkCH,KAAeE,GACrGE,QAAQL,IAAY,uBAAGE,QAASA,GAAUF,K,0BCPhD,SAASM,GAAQlC,EAAGmC,GAAe,IAAD,uBAANC,EAAM,iCAANA,EAAM,kBACrC,OAAOpC,EAAEmC,EAAK,CAAEE,YAAa,UAAWH,QAASE,IAGrD,IAAIE,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtB3D,EAAU2D,EAAV3D,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAAS4D,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,KAAYC,IAAI,oBAChCC,EAAkBF,KAAYC,IAAI,8BAExC,KAD0BP,GAAiBK,IAAkBL,GAAiBQ,IACtD,OAAO,KAE/BT,GAAgBA,IAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIR,EAAMC,OAAQO,IAAK,CACnC,IAAIZ,GAAca,IAAIT,EAAMQ,IAGxB,OAAO,KAFPD,GAAUX,GAAcQ,IAAIJ,EAAMQ,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,GAAa,KAwCjB,SAASC,GAAcX,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BS,GAAaA,IAznC,IAAIE,GAAWD,IAAIT,EAAMQ,IAGrB,OAAO,KAFPD,GAAUG,GAAWN,IAAIJ,EAAMQ,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,E,qGCnInB7E,gBACX,0BAAMC,EAAE,+PACR,YCIEiF,I,kNAyBFC,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGTC,kBAAoB,SAAAF,GAAW,IACnBG,EAAW,EAAKtG,MAAhBsG,OAEJH,EAAOI,UAAYD,GAEvB,EAAKF,e,qFAjCaI,EAAWC,GAAY,IAAD,EAClBvH,KAAKc,MAAnBsG,EADgC,EAChCA,OAAQ3D,EADwB,EACxBA,EAEhB,OAAI6D,EAAUF,SAAWA,GAIrBE,EAAU7D,IAAMA,I,0CAQpB+D,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,kBAAmBzH,KAAKmH,qB,6CAIrCK,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,kBAAmB1H,KAAKmH,qB,+BAehC,IAAD,EACoCnH,KAAKc,MAAtC2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQO,EADd,EACcA,kBAEbC,EAAaC,aAAeT,GAC5BU,EAAQC,aAAaX,EAAQO,EAAmBlE,GAEtD,OACI,yBAAKpC,UAAU,gBACX,0BAAMA,UAAU,qBAAqByG,GACpCF,GAAc,kBAAC,GAAD,CAAmBvG,UAAU,2B,GA9ClCM,IAAMC,YAyDhCmF,GAAYiB,aAAe,CACvBL,mBAAmB,GAGRzC,qBAAkB6B,I,kBCqIlBkB,I,mBAhMX,WAAYnH,GAAQ,IAAD,uBACf,4CAAMA,KA8DVoH,mBAAqB,SAAAjB,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,GACAA,EAAK/F,KAAV,CAEA,IAAIgG,GAAiB,EACrB,OAAQD,EAAK/F,KAAK,UACd,IAAK,qBACD,IAAMiG,EAAWC,KAAgBC,YAAYJ,EAAK/F,KAAKoG,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAAxJ,GAAC,OAAIA,EAAEyJ,UAAY1B,EAAO0B,YAE3DP,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGD,EAAK/F,KAAKuG,UAAY1B,EAAO0B,UAC7BP,GAAiB,GASzBA,GACA,EAAKA,eAAehB,KAnGT,EAuGnBgB,eAAiB,SAAAhB,GACb,EAAKrG,SAAS,CACV6H,SAAUC,aAA6BzB,GACvC0B,SAAUC,aAAkC3B,MA1GjC,EA8GnB4B,qBAAuB,SAAA/B,GAAW,IACtBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAH6B,IAKrB/F,EAAS+F,EAAT/F,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAKuG,UAAY1B,EAAO0B,SAExB,EAAKP,eAAehB,MA3HT,EA+HnB6B,2BAA6B,SAAAhC,GAAW,IAC5BG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAHmC,IAK3B/F,EAAS+F,EAAT/F,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKoG,iBAAmBvB,EAAOuB,gBACjF,EAAKJ,eAAehB,KAxIT,EA4InB8B,2BAA6B,SAAAjC,GAAW,IAC5BG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAHmC,IAK3B/F,EAAS+F,EAAT/F,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK+G,gBAAkBlC,EAAOkC,eAChF,EAAKf,eAAehB,KArJT,EAyJnBgC,mBAAqB,SAAAnC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAH2B,IAKnB/F,EAAS+F,EAAT/F,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKoG,iBAAmBvB,EAAOoC,YAAY5K,IAC7F,EAAK2J,eAAehB,KAlKT,EAsKnBkC,mBAAqB,SAAArC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAH2B,IAKnB/F,EAAS+F,EAAT/F,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK+G,gBAAkBlC,EAAOsC,WAAW9K,IAC3F,EAAK2J,eAAehB,KA/KT,IAGPA,EAAW,EAAKtG,MAAhBsG,OAHO,OAKf,EAAK/G,MAAQ,CACTmJ,WAAYpC,EACZwB,SAAUC,aAA6BzB,GACvC0B,SAAUC,aAAkC3B,IARjC,E,mFA0BGE,EAAWC,GAAY,IACjCH,EAAWpH,KAAKc,MAAhBsG,OADgC,EAETpH,KAAKK,MAA5BuI,EAFgC,EAEhCA,SAAUE,EAFsB,EAEtBA,SAElB,OAAIxB,EAAUF,SAAWA,IAIrBG,EAAUqB,WAAaA,GAIvBrB,EAAUuB,WAAaA,K,0CAQ3BW,KAAUhC,GAAG,mBAAoBzH,KAAKkI,oBACtCI,KAAgBb,GAAG,mBAAoBzH,KAAKoJ,oBAC5CM,KAAgBjC,GAAG,mBAAoBzH,KAAKsJ,oBAC5CG,KAAUhC,GAAG,qBAAsBzH,KAAKgJ,sBACxCV,KAAgBb,GAAG,2BAA4BzH,KAAKiJ,4BACpDS,KAAgBjC,GAAG,2BAA4BzH,KAAKkJ,8B,6CAIpDO,KAAU/B,IAAI,mBAAoB1H,KAAKkI,oBACvCI,KAAgBZ,IAAI,mBAAoB1H,KAAKoJ,oBAC7CM,KAAgBhC,IAAI,mBAAoB1H,KAAKsJ,oBAC7CG,KAAU/B,IAAI,qBAAsB1H,KAAKgJ,sBACzCV,KAAgBZ,IAAI,2BAA4B1H,KAAKiJ,4BACrDS,KAAgBhC,IAAI,2BAA4B1H,KAAKkJ,8B,+BAuH/C,IACYS,EAAqB3J,KAAKc,MAApC8H,SADH,EAE0B5I,KAAKK,MAA5BuI,EAFH,EAEGA,SAAUE,EAFb,EAEaA,SAElB,OACI,yBAAKzH,UAAWoE,IAAW,gBAAiB,CAAE,uBAAwBqD,KACjEa,EAAmBA,EAAmB,KAAO,KAC7Cf,M,gDA9KmB9H,EAAOT,GACnC,GAAIS,EAAMsG,SAAW/G,EAAMmJ,WAAY,CAAC,IAC5BpC,EAAWtG,EAAXsG,OAER,MAAO,CACHoC,WAAYpC,EACZwB,SAAUC,aAA6BzB,GACvC0B,SAAUC,aAAkC3B,IAIpD,OAAO,S,GAxBYzF,IAAMC,YCC3BgI,I,mBACF,WAAY9I,GAAQ,IAAD,uBACf,4CAAMA,KAYV+I,YAAc,WAAO,IAAD,EACa,EAAK/I,MAA1BsG,EADQ,EACRA,OAAQ0C,EADA,EACAA,SACXA,GAELA,EAAS1C,IAjBM,IAGPA,EAAW,EAAKtG,MAAhBsG,OAHO,OAIf,EAAK/G,MAAQ,CACT8H,KAAMX,KAAUjB,IAAIa,IALT,E,mFASGE,EAAWC,GAC7B,OAAOD,EAAUF,SAAWpH,KAAKc,MAAMsG,S,+BAUjC,IAAD,EACqFpH,KAAKc,MAAvFsG,EADH,EACGA,OAAQwB,EADX,EACWA,SAAUmB,EADrB,EACqBA,aAAcC,EADnC,EACmCA,WAAYrC,EAD/C,EAC+CA,kBAAmBsC,EADlE,EACkEA,IAAKC,EADvE,EACuEA,UAEtEC,EAAkBC,cAAShD,GAEjC,OACI,yBAAK/F,UAAWoE,IAAW,OAAQ,CAAE,WAAYwE,IAAQ1E,QAASvF,KAAK6J,aACnE,yBAAKxI,UAAU,gBACX,kBAAC,KAAD,CAAU4I,IAAKA,EAAK7C,OAAQA,EAAQ0C,SAAUC,EAAcpC,kBAAmBA,IAC9EuC,GACG,yBAAK7I,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAa+F,OAAQA,EAAQO,kBAAmBA,KAEnDqC,KAAgBG,IAAoBxC,IACjC,yBAAKtG,UAAU,mBACX,kBAAC,GAAD,CAAc+F,OAAQA,EAAQwB,SAAUA,Y,GArCzDjH,IAAMC,YA0DzBgI,GAAK5B,aAAe,CAChBL,mBAAmB,EACnBqC,YAAY,EACZE,WAAW,GAGAN,UCvEA/H,gBACX,0BAAMC,EAAE,suBACR,U,4DCQEuI,I,kNACFhK,MAAQ,CACJiK,aAAa,EACbC,IAAK,EACLC,KAAM,G,EAGVC,kB,sCAAoB,WAAMtI,GAAN,iBAAAuI,EAAA,qDACZvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBQ,yC,wDAqBpBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,EAGjCU,aAAe,SAAA7I,GACX,EAAK4I,0BAILE,EAFqB,EAAKnK,MAAlBmK,a,wEAKF,IAAD,EAC0BjL,KAAKc,MAA5B2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQ7B,EADd,EACcA,QADd,EAE8BvF,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,IAAKC,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAACU,GAAA,EAAD,CACIC,QAAM,EACN9J,UAAU,sBACVkE,QAASA,EACT6F,cAAepL,KAAKyK,mBACpB,kBAAC,GAAD,CAAMrD,OAAQA,KAElB,kBAACiE,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAKgL,cACpB,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oB,GA5ErB9B,IAAMwK,gBA2FvBjH,iBAAkBmF,IC1F3B+B,I,kNACF/L,MAAQ,CACJiK,aAAa,EACbC,IAAK,EACLC,KAAM,G,EAGVC,kB,sCAAoB,WAAMtI,GAAN,iBAAAuI,EAAA,qDACZvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBQ,yC,wDAqBpBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,EAGjCU,aAAe,SAAA7I,GACX,EAAK4I,0BAILE,EAFqB,EAAKnK,MAAlBmK,a,wEAKF,IAAD,EAC8CjL,KAAKc,MAAhDsG,EADH,EACGA,OAAQ0C,EADX,EACWA,SAAUnC,EADrB,EACqBA,kBAAmBlE,EADxC,EACwCA,EADxC,EAE8BzD,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,IAAKC,EAFrB,EAEqBA,KAEpB6B,EAAaC,aAAkBlF,EAAQO,EAAmBlE,GAEhE,OACI,oCACI,kBAACyH,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,WAAWkE,QAASuE,EAAUsB,cAAepL,KAAKyK,mBACzE,kBAAC,KAAD,CAAU8B,QAAM,EAACnF,OAAQA,EAAQO,kBAAmBA,EAAmB6E,YAAU,IACjF,yBAAKnL,UAAU,kBAAkBgL,IAErC,kBAAChB,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAKgL,cACpB,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oB,GA3E/B9B,IAAMwK,gBA2F5BC,GAAQpE,aAAe,CACnBL,mBAAmB,GAGRzC,qBAAkBkH,ICnG3BK,I,kNACFpM,MAAQ,G,EAoER2G,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGTwF,uBAAyB,SAAAzF,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OADuB,EAEJ,EAAK/G,MAAxBsM,EAFuB,EAEvBA,OAAQC,EAFe,EAEfA,OAEhB,GAAIxF,IAAWH,EAAOG,QAClBuF,IAAW1F,EAAO0F,SAEjBC,EAAQ,CACT,IAAMzE,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAFT,IAID0E,EAAU1E,EAAV0E,MACFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MAEzC,EAAKjM,SAAS,CACV+L,U,EAKZG,kBAAoB,SAAAhG,GAAW,IACnBG,EAAW,EAAKtG,MAAhBsG,OACAC,EAAmBJ,EAAnBI,QAASwF,EAAU5F,EAAV4F,MAEjB,GAAIxF,IAAYD,EAAhB,CAEA,IAAMe,EAAOX,KAAUjB,IAAIa,GACrB8F,EAAO/E,GAAQA,EAAK0E,MAAO1E,EAAK0E,MAAMG,MAAQ,KAE9CL,EAASO,EAAOA,EAAKzO,IAAM,EAC3BqO,EAAMC,YAAOG,GACbN,EAAS,EAAKvM,MAAMyM,MAAQA,GAAe,KAARA,IAA0B,IAAZH,EAQvD,GANA,EAAK5L,SAAS,CACV4L,SACAG,MACAF,WAGAC,EAAO,CACP,IAAMM,EAAQC,KAAUC,WACxBC,YAAgBH,EAAO/F,M,EAI/BD,kBAAoB,SAAAF,GAAW,IAAD,EACJ,EAAKnG,MAAnBsG,EADkB,EAClBA,OAAQ3D,EADU,EACVA,EAGhB,GAFoBwD,EAAZI,UAEQD,EAAhB,CAEA,IAAMmG,EAAUC,aAAepG,EAAQ3D,GAEvC,EAAK1C,SAAS,CAAEwM,c,EAGpBE,aAAe,SAAAtL,GAAU,IAAD,EACS,EAAKrB,MAA1BsG,EADY,EACZA,OAAQ0C,EADI,EACJA,SACXA,IAEL3H,EAAMyI,kBACNd,EAAS1C,K,EAGbsG,WAAa,WACT,EAAK3M,SAAS,CAAE6L,QAAQ,K,qFA9GNtF,EAAWC,GAAY,IACjCH,EAAWpH,KAAKc,MAAhBsG,OADgC,EAECpH,KAAKK,MAAtCsM,EAFgC,EAEhCA,OAAQG,EAFwB,EAExBA,IAAKF,EAFmB,EAEnBA,OAAQW,EAFW,EAEXA,QAE7B,OAAIjG,EAAUF,SAAWA,IAIrBG,EAAUoF,SAAWA,IAIrBpF,EAAUuF,MAAQA,IAIlBvF,EAAUqF,SAAWA,GAIrBrF,EAAUgG,UAAYA,O,0CAQ1B/F,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,kBAAmBzH,KAAKiN,mBACrCzF,KAAUC,GAAG,kBAAmBzH,KAAKmH,mBACrCiG,KAAU3F,GAAG,uBAAwBzH,KAAK0M,0B,6CAI1ClF,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,kBAAmB1H,KAAKiN,mBACtCzF,KAAUE,IAAI,kBAAmB1H,KAAKmH,mBACtCiG,KAAU1F,IAAI,uBAAwB1H,KAAK0M,0B,+BA2ErC,IAAD,EACkD1M,KAAKc,MAApDsG,EADH,EACGA,OAAQ0C,EADX,EACWA,SAAUkD,EADrB,EACqBA,MAAOT,EAD5B,EAC4BA,OAAQtC,EADpC,EACoCA,IAAK0D,EADzC,EACyCA,KADzC,EAE4B3N,KAAKK,MAA9ByM,EAFH,EAEGA,IAAKF,EAFR,EAEQA,OAAQW,EAFhB,EAEgBA,QAEjBK,EAAQ,KASZ,GARID,IACAC,EAAQ,CACJC,MAAOF,EACPG,OAAQH,KAIHnG,KAAUjB,IAAIa,GAChB,OAAO,KAElB,IAAM2G,EAAajB,GAAOF,EACpBoB,EAASC,aAAc7G,GACvB8G,EAAS,qBAAkB5O,KAAK6O,IAAIH,GAAU,EAAK,GAEzD,OACI,yBACI3M,UAAWoE,IACP,YADiB,eAEdyI,GAAaH,GAChB,CAAEK,QAAStE,GACX,CAAE,cAAeyC,GACjB,CAAE,aAAcS,GAChB,CAAE,WAAY/C,IAElB2D,MAAOA,EACPrI,QAASvF,KAAKyN,eACZM,GACE,yBAAK1M,UAAU,cACX,0BAAMA,UAAU,aAAakM,IAGpCT,GAAO,yBAAKzL,UAAU,aAAayL,IAAKA,EAAKuB,OAAQrO,KAAK0N,WAAYY,WAAW,EAAOC,IAAI,S,gDA9KzEzN,EAAOT,GAAQ,IACnC+G,EAActG,EAAdsG,OAAQ3D,EAAM3C,EAAN2C,EAEhB,GAAIpD,EAAMmJ,aAAepC,EAAQ,CAC7B,IAAMe,EAAOX,KAAUjB,IAAIa,GACrB8F,EAAO/E,GAAQA,EAAK0E,MAAO1E,EAAK0E,MAAMG,MAAQ,KAE9CL,EAASO,EAAOA,EAAKzO,IAAM,EAC3BqO,EAAMC,YAAOG,GAInB,MAAO,CACH1D,WAAYpC,EAEZuF,SACAG,MACAF,OARWvM,EAAMyM,MAAQA,GAAe,KAARA,IAA0B,IAAZH,EAS9CY,QARYC,aAAepG,EAAQ3D,IAY3C,OAAO,S,GAzBQ7B,cA+LvB6K,GAASzE,aAAe,CACpBL,mBAAmB,EACnB6E,YAAY,GAGDtH,qBAAkBuH,ICtM3B1F,I,kNAyBFC,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGTC,kBAAoB,SAAAF,GAAW,IACnBG,EAAW,EAAKtG,MAAhBsG,OAEJH,EAAOI,UAAYD,GAEvB,EAAKF,e,qFAjCaI,EAAWC,GAAY,IAAD,EAClBvH,KAAKc,MAAnBsG,EADgC,EAChCA,OAAQ3D,EADwB,EACxBA,EAEhB,OAAI6D,EAAUF,SAAWA,GAIrBE,EAAU7D,IAAMA,I,0CAQpB+D,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,kBAAmBzH,KAAKmH,qB,6CAIrCK,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,kBAAmB1H,KAAKmH,qB,+BAehC,IAAD,EACoCnH,KAAKc,MAAtC2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQO,EADd,EACcA,kBAEbC,EAAaC,aAAeT,GAC5BU,EAAQC,aAAaX,EAAQO,EAAmBlE,GAEtD,OACI,yBAAKpC,UAAU,gBACX,0BAAMA,UAAU,qBAAqByG,GACpCF,GAAc,kBAAC,GAAD,CAAmBvG,UAAU,2B,GA9ClCM,IAAMC,YAyDhCmF,GAAYiB,aAAe,CACvBL,mBAAmB,GAGRzC,qBAAkB6B,I,mBChD1B,SAASyH,GAAapH,EAAQqH,GACjC,OAAO/N,KAAgBC,KAAK,CACxB,QAAS,mBACT0G,QAASD,EACTsH,WAAYD,IAIb,SAASE,GAAiBvH,GAC7B,OAAO1G,KAAgBC,KAAK,CACxB,QAAS,uBACT0G,QAASD,I,WCDXwH,G,iLACQ,IACExH,EAAWpH,KAAKc,MAAhBsG,OACR,OACI,yBAAK/F,UAAU,kBACX,kBAAC,GAAD,CAAU+F,OAAQA,IAClB,yBAAK/F,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAa+F,OAAQA,W,GARxBxF,aAoBrBgN,GAAO5G,aAAe,CAClB6G,QAAQ,EACRlH,mBAAmB,GAGRzC,qBAAkB0J,IC/ClBE,GAbM,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAM3H,EAAwC,EAAxCA,OAAQ0C,EAAgC,EAAhCA,SAAUtE,EAAsB,EAAtBA,SAAUoI,EAAY,EAAZA,MAMxD,OACE,yBAAKvM,UAAU,oBAAoB2N,eANtB,SAACnD,GACdA,EAAElB,iBACFkB,EAAEjB,kBACFd,EAAS1C,IAGkDwG,MAAOA,GAChE,yBAAKA,MAAO,CAAEqB,cAAe,SAAWzJ,GACvCuJ,EAAKG,SAAS9H,GAAU,kBAAC+H,EAAA,EAAD,MAAmB,O,2jBCyB5CC,G,YACF,WAAYtO,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuO,cAAgB,SAAAlN,GACZ,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAIV,OAAQpN,EAAMyD,KACV,IAAK,SACDzD,EAAMwI,iBACNxI,EAAMyI,kBACNzI,EAAME,OAAOmN,OAEb,EAAKnM,gBAnCE,EA4DnBoM,oBAAsB,SAAAC,GAId,IAHJ,IAAMC,EAAM,GACNC,EAAM,IAAInJ,IAEHE,EAAI,EAAGA,EAAI+I,EAAQtJ,OAAQO,IAAK,CACzC,IAAI9F,EAAS6O,EAAQ/I,IAAM+I,EAAQ/I,GAAGkJ,SACtC,GAAIhP,EACA,IAAK,IAAIiP,EAAI,EAAGA,EAAIjP,EAAOuF,OAAQ0J,IAC1BF,EAAIhJ,IAAI/F,EAAOiP,MAChBF,EAAIG,IAAIlP,EAAOiP,GAAIjP,EAAOiP,IAC1BH,EAAIK,KAAKnP,EAAOiP,KAUhC,OAJAH,EAAIM,KAAK,SAACvF,EAAGwF,GACT,OAAOC,aAAaC,aAAaF,GAAIE,aAAa1F,MAG/CiF,GAhFQ,EAmFnBU,WAnFmB,sCAmFN,WAAMC,GAAN,6EAAA5F,EAAA,wDACT,EAAK6F,UAAY,IAAIC,KACrB,EAAKF,KAAOA,EACNC,EAAY,EAAKA,UACnBpD,EAAQ,KAIJ/F,EAAW,EAAKtG,MAAhBsG,OACAqJ,EAAkB,EAAKpQ,MAAvBoQ,cAEHrJ,EAXI,wBAYCsJ,EAAW,GACXC,EAAejQ,KAAgBC,KAAK,CACtC,QAAS,cACTiQ,MAAON,EACPO,MAAO,MAEXH,EAASV,KAAKW,IAERG,EAAYhK,GAAcwJ,KACfQ,IAAcR,IACrBS,EAAoBrQ,KAAgBC,KAAK,CAC3C,QAAS,cACTiQ,MAAOE,EACPD,MAAO,MAEXH,EAASV,KAAKe,KAGZC,EAAe9K,GAAiBoK,KAClBU,IAAiBV,IAC3BW,EAAuBvQ,KAAgBC,KAAK,CAC9C,QAAS,cACTiQ,MAAOI,EACPH,MAAO,MAEXH,EAASV,KAAKiB,IArCb,UAwCiBC,QAAQC,IAAIT,EAASd,IAAI,SAAA1Q,GAAC,OAAIA,EAAEkS,MAAM,SAAAvF,GAAC,OAAI,UAxC5D,WAwCC6D,EAxCD,OAyCC2B,EAAQ,EAAK5B,oBAAoBC,GAEnCa,IAAc,EAAKA,UA3ClB,sDA+CDE,IACQhN,EAAM,EAAK3C,MAAX2C,EAEF4M,EAAaC,EAAKgB,gBAClBC,EAAuB,CAAC,iBAAkB9N,EAAE,iBAAiB6N,gBAG1CE,KAAK,SAAAC,GAAE,OAAIA,EAAGvC,SAASmB,MAC3CS,GAAaS,EAAqBC,KAAK,SAAAC,GAAE,OAAIA,EAAGvC,SAAS4B,EAAUQ,mBAEpED,EAAMK,OAAO,EAAG,EAAGjB,EAAchS,KAIzC,EAAKsC,SAAS,CACVwJ,IAAK,KACLoH,cAAe,KACfN,MAAOA,IAGXlE,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAOkE,MAGxBQ,GADIA,EAAcvB,EAAKwB,QACGC,WAAW,KAAOF,EAAYG,OAAO,GAAKH,GACpDzL,QAAU6L,OAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgBzR,KAAgBC,KAAK,CACvC,QAAS,oBACTiQ,MAAOiB,IAEXK,EAAelC,KAAKmC,GAEhBrB,IAEAsB,GADIA,EAAmBtB,EAAUgB,QACGC,WAAW,KAAOK,EAAiBJ,OAAO,GAAKI,GAC9DhM,QAAU6L,OAAuBG,IAAqBP,IACjEQ,EAAqB3R,KAAgBC,KAAK,CAC5C,QAAS,oBACTiQ,MAAOwB,IAEXF,EAAelC,KAAKqC,IAzF3B,UA6F2BnB,QAAQC,IAAIe,EAAetC,IAAI,SAAA1Q,GAAC,OAAIA,EAAEkS,MAAM,SAAAvF,GAAC,OAAI,UA7F5E,WA6FKyG,EA7FL,OA8FKC,EAAS,EAAK9C,oBAAoB6C,GAEpC/B,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKxP,SAAS,CACVwR,WAGJpF,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAOoF,GAzGvB,wBA2GD,EAAKxR,SAAS,CACVwR,OAAQ,OA5GX,WAiHLC,EAAW,IACXpL,EAlHK,kCAmHY1G,KAAgBC,KAAK,CAClC,QAAS,qBACT0G,QAASD,EACTwJ,MAAON,EACPmC,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACR9B,MAAO,GACP+B,OAAQ,OA3HP,QAmHLJ,EAnHK,gDA8HY9R,KAAgBC,KAAK,CAClC,QAAS,iBACTkS,UAAW,CAAE,QAAS,gBACtBjC,MAAON,EACPwC,YAAa,EACbC,eAAgB,EAChBC,kBAAmB,EACnBnC,MAAO,KArIN,QA8HL2B,EA9HK,kBAyITS,KAAaC,SAASV,EAASA,UAE3BW,EAAc,KACb/L,EA5II,4CA8I6B1G,KAAgBC,KAAK,CAC/C,QAAS,qBACTyS,IAAK9C,IAhJR,QA8IK+C,EA9IL,OAoJDJ,KAAaC,SAAS,CAACG,EAAgBC,UAEvCH,EAAcE,EAtJb,mDAwJDE,QAAQC,IAAI,mBAAqBlD,EAAO,yBAAxC,MAxJC,WA8JLC,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKxP,SAAS,CACVyR,WACAW,gBAGEM,EAAQ,IAAIhN,IACZiN,EAAQ,IAAIjN,IACTE,EAAI,EAAGA,EAAI6L,EAASA,SAASpM,OAAQO,IAC1C8M,EAAM1D,IAAIyC,EAASA,SAAS7L,GAAGU,QAASmL,EAASA,SAAS7L,GAAGU,SACzDmL,EAASA,SAAS7L,GAAGgN,OAAOhL,SAC5B+K,EAAM3D,IAAIyC,EAASA,SAAS7L,GAAGgN,OAAOhL,QAAS6J,EAASA,SAAS7L,GAAGgN,OAAOhL,SAI/EwK,IACQ9L,GADM,EACe8L,GAArB9L,QAASiM,EADJ,EACIA,QAEjBG,EAAM1D,IAAI1I,EAASA,GACfiM,IACQK,EAAWL,EAAXK,SACMA,EAAOhL,SACjB+K,EAAM3D,IAAI4D,EAAOhL,QAASgL,EAAOhL,UAK7CwE,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAD,YAAYsG,EAAMG,SAClCC,YAAiB1G,EAAD,YAAYuG,EAAME,SAhMzB,yDAnFM,wDAsRnBE,YAtRmB,qBAsRL,4CAAApJ,EAAA,yDACS,EAAK5J,MAAhBsG,OADE,uBAGN,EAAKrG,SAAS,CACVwJ,IAAK,KACLoH,cAAe,KACfN,MAAO,KACPkB,OAAQ,KACRC,SAAU,KACVW,YAAa,OATX,iCAeJY,EAAarT,KAAgBC,KAAK,CACpC,QAAS,cACTqT,SAAU,CAAE,QAAS,wBACrBnD,MAAO,KACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASvB,SAAU,MAGnCoE,EAAuBvT,KAAgBC,KAAK,CAC9C,QAAS,cACTiQ,MAAO,GACPC,MAAO,MACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASvB,SAAU,MAGnCqE,EAAuBxT,KAAgBC,KAAK,CAC9C,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,IACRhD,MAAM,SAAAiD,MAnCC,SAqCwCnD,QAAQC,IAAI,CAC1D4C,EACAE,EACAC,IAxCM,mCAqCH3J,EArCG,KAqCEoH,EArCF,KAqCiBlB,EArCjB,KA2CV,EAAK1P,SAAS,CACVwJ,MACAoH,gBACAlB,gBACAY,MAAO,KACPkB,OAAQ,KACRC,SAAU,KACVW,YAAa,OAGXhG,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAO5C,EAAIsF,UAC5B+B,YAAiBzE,EAAOwE,EAAc9B,UAvD5B,0CAtRK,EAgVnByE,yBAA2B,SAAAnS,GACvBA,EAAMyI,kBAENlK,KAAgBC,KAAK,CACjB,QAAS,4BAGb,EAAKI,SAAS,CAAE4Q,cAAe,QAvVhB,EA0VnB4C,oBAAsB,SAACnN,EAAQqH,EAAW+F,EAAaC,GAAc,IACzDC,EAAoB,EAAK5T,MAAzB4T,gBAEJF,GACA9T,KAAgBC,KAAK,CACjB,QAAS,uBACT0G,QAASD,IAIjBsN,EAAgBtN,EAAQqH,EAAWgG,IApWpB,EAuWnBE,aAAe,WACX,IAAM5F,EAAO,EAAK6F,QAAQC,QAEtB9F,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,OAC1D,EAAKC,kBA3WM,EA+WnBC,UAAY,SAAA3C,GACR,IAAMpM,EAASoM,EAAWA,EAASA,SAASpM,OAAS,EAMrD,MAAO,CACH0M,YALe1M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAGgP,KAAO,EAMjErC,eALiB3M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAGiB,QAAU,EAMtE2L,kBALoB5M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAG3H,GAAK,IApXzD,EA6XnB4W,eAAiB,SAAC7C,EAAU3R,GACxB,OAAKA,GACAA,EAAO2R,SAASpM,OAEhBoM,GACAA,EAASA,SAASpM,OAEhB,CACHkP,YAAazU,EAAOyU,YACpB9C,SAAUA,EAASA,SAAS+C,OAAO1U,EAAO2R,WALxB3R,EAHF2R,GA9XL,EA0YnB0C,eA1YmB,qBA0YF,4CAAAxK,EAAA,yDACT,EAAK8K,QADI,oDAGLpO,EAAW,EAAKtG,MAAhBsG,OAEFmJ,EAAY,EAAKA,UAEfiC,EAAa,EAAKnS,MAAlBmS,SAEFG,EAAS,EAAKwC,UAAU3C,GAE9B,EAAKgD,SAAU,EACX3U,EAAS,IACTuG,EAbS,kCAcM1G,KAAgBC,KAAK,CAChC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,EAAKN,KACZmC,eAAgB,EAChBC,gBAAiBC,EAAOK,kBACxBnC,MAAO,GACP+B,OAAQ,OArBH,QAcT/R,EAdS,gDAwBMH,KAAgBC,KAAhB,IACX,QAAS,iBACTkS,UAAW,CAAE,QAAS,gBACtBjC,MAAO,EAAKN,MACTqC,EAJQ,CAKX9B,MAAO,MA7BF,QAwBThQ,EAxBS,kBAgCb,EAAK2U,SAAU,EAEfC,aAAwB5U,EAAQ2R,EAAWA,EAASA,SAAW,IAC/DS,KAAaC,SAASrS,EAAO2R,UAEzBjC,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKxP,SAAS,CACVyR,SAAU,EAAK6C,eAAe7C,EAAU3R,KAGtC4S,EAAQ,IAAIhN,IACZiN,EAAQ,IAAIjN,IACTE,EAAI,EAAGA,EAAI9F,EAAO2R,SAASpM,OAAQO,IACxC8M,EAAM1D,IAAIlP,EAAO2R,SAAS7L,GAAGU,QAASxG,EAAO2R,SAAS7L,GAAGU,SACrDxG,EAAO2R,SAAS7L,GAAGgN,OAAOhL,SAC1B+K,EAAM3D,IAAIlP,EAAO2R,SAAS7L,GAAGgN,OAAOhL,QAAS9H,EAAO2R,SAAS7L,GAAGgN,OAAOhL,SAIzEwE,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAD,YAAYsG,EAAMG,SAClCC,YAAiB1G,EAAD,YAAYuG,EAAME,SAxDrB,0CA1YE,EAqcnB8B,qBAAuB,SAAAvT,GACnBA,EAAMyI,mBAtcS,EAycnBvH,YAAc,YAGVQ,EAFoB,EAAK/C,MAAjB+C,YA1cO,EA+cnB8R,8BA/cmB,sCA+ca,WAAMvO,GAAN,eAAAsD,EAAA,wDACvBtD,EADuB,iEAGtB1G,KAAgBC,KAAK,CACvB,QAAS,0BACT0G,QAASD,IALe,UAQpBuK,EAAkB,EAAKtR,MAAvBsR,cARoB,iDAW5B,EAAK5Q,SAAS,CACV4Q,cAAc,GAAD,GAAOA,EAAP,CAAsB9B,SAAU8B,EAAc9B,SAAS+C,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,QAZ9D,yCA/cb,wDA+dnBwO,oBA/dmB,sCA+dG,WAAMxO,GAAN,eAAAsD,EAAA,wDACbtD,EADa,iEAGZ1G,KAAgBC,KAAK,CACvB,QAAS,gBACT0G,QAASD,EACT4M,SAAU,CACN,QAAS,0BAPC,UAWVzJ,EAAQ,EAAKlK,MAAbkK,IAXU,iDAclB,EAAKxJ,SAAS,CACVwJ,IAAI,GAAD,GAAOA,EAAP,CAAYsF,SAAUtF,EAAIsF,SAAS+C,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,QAf1C,yCA/dH,sDAGf,EAAKyO,gBAAkB,IAAIC,IAAgB,EAAKzG,eAChD,EAAKuF,QAAUjT,IAAMoU,YACrB,EAAK1V,MAAQ,GALE,E,iFAQE,IACTiQ,EAAStQ,KAAKc,MAAdwP,KAERtQ,KAAKgW,oBAAoB1F,GAEzB2F,IAAgBC,IAAIlW,KAAK6V,mB,6CAIzBI,IAAgBE,OAAOnW,KAAK6V,mB,yCAuBb3U,EAAWC,EAAWC,GAAW,IAAD,EACtBpB,KAAKc,MAAtBsG,EADuC,EACvCA,OAAQkJ,EAD+B,EAC/BA,KAEZpP,EAAUoP,OAASA,EACnBtQ,KAAKgW,oBAAoB1F,GAClBpP,EAAUkG,SAAWA,GAC5BpH,KAAKgW,oBAAoB1F,K,0CAIbA,GAChB,IAAMuB,EAAcvB,EAAOA,EAAKwB,OAAS,GAEpCD,EAGD7R,KAAKqQ,WAAWwB,GAFhB7R,KAAK8T,gB,+BA4bH,IAAD,EACqC9T,KAAKc,MAAvCsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAAGsL,EADd,EACcA,KAAMqH,EADpB,EACoBA,aADpB,EAEiCpW,KAAKK,MAAnCkK,EAFH,EAEGA,IAAKoH,EAFR,EAEQA,cAAeN,EAFvB,EAEuBA,MAEtBlJ,EAAOX,KAAUjB,IAAIa,GAErBiP,EACF9L,GAAOA,EAAIsF,SACLtF,EAAIsF,SAASD,IAAI,SAAA1Q,GAAC,OACd,kBAAC,GAAD,CAAckI,OAAQlI,EAAG6P,KAAMA,EAAMjF,SAAUsM,GAC3C,kBAAC,GAAD,CAAQxQ,IAAK1G,EAAGkI,OAAQlI,OAGhC,GAEJoX,EACF3E,GAAiBA,EAAc9B,SACzB8B,EAAc9B,SAASD,IAAI,SAAA1Q,GAAC,OAC1B,kBAAC,GAAD,CAAckI,OAAQlI,EAAG6P,KAAMA,EAAMjF,SAAUsM,GAC3C,kBAAC,GAAD,CAAQxQ,IAAK1G,EAAGkI,OAAQlI,OAG9B,GAEJqX,EAAalF,EACbA,EAAMzB,IAAI,SAAA1Q,GAAC,OACL,kBAAC,GAAD,CAAckI,OAAQlI,EAAG6P,KAAMA,EAAMjF,SAAUsM,GAC3C,kBAAC,GAAD,CAAQxQ,IAAK1G,EAAGkI,OAAQlI,OAGlC,GAEN,OACI,yBAAKsX,IAAKxW,KAAK4U,QAASvT,UAAU,SAASoV,SAAUzW,KAAK2U,cACrDxM,GACG,oCACI,yBAAK9G,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,qBAClB,yBAAKpC,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAM+F,OAAQA,EAAQ4C,YAAY,KAEtC,kBAAC0M,EAAA,EAAD,CACIrV,UAAU,sBACVgD,aAAW,SACXuH,YAAa5L,KAAKqD,aAClB,kBAACsT,EAAA,EAAD,SAIZ,yBAAKtV,UAAU,kCAGtBgV,EAASjQ,OAAS,GACf,oCACI,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,cAClB,yBAAKpC,UAAU,wBAAwBoV,SAAUzW,KAAK0V,sBAClD,yBAAKrU,UAAU,iCACdgV,EACD,yBAAKhV,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtBiV,EAAmBlQ,OAAS,GACzB,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,CAAegE,QAAS5B,EAAE,eAAgB8B,QAASvF,KAAKsU,0BACnD7Q,EAAE,WAEN6S,GAGRC,EAAWnQ,OAAS,GACjB,oCACI,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,qBACjB8S,GAEL,yBAAKlV,UAAU,uC,GAnkBlBM,IAAMC,WAklBZsD,iBAAkBkK,IC9mBlBvN,gBACX,0BAAMC,EAAE,0tBACR,QCFWD,gBACX,0BAAMC,EAAE,wjBACR,UCEE8U,I,kNACFvH,cAAgB,SAAAlN,GACZ,GAAsB,KAAlBA,EAAM0U,QACN1U,EAAMwI,sBACH,GAAsB,KAAlBxI,EAAM0U,QAAgB,CAAC,IAAD,EACC,EAAK/V,MAA3ByD,EADqB,EACrBA,SAAUV,EADW,EACXA,QAEZiT,EAAU3U,EAAME,OACtB,IAAKyU,EAAS,OAEd,GAAIA,EAAQC,UAMR,OALA5U,EAAMyI,kBACNzI,EAAM6U,YAAYC,2BAElBH,EAAQC,UAAY,UAChBxS,GAAUA,EAASuS,EAAQC,YAI/BlT,GACAA,EAAQ1B,QAET,GAAsB,IAAlBA,EAAM0U,QAAe,CAAC,IACrBK,EAAgB,EAAKpW,MAArBoW,YAEFJ,EAAU3U,EAAME,OACtB,IAAKyU,EAAS,OACd,GAAIA,EAAQC,UAAW,OAEnBG,IACA/U,EAAMyI,kBACNsM,O,EAKZC,YAAc,SAAAhV,GACV,IAAM2U,EAAU3U,EAAME,OACtB,GAAKyU,EAAL,CAFmB,IAIXM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,Q,EAI5BC,YAAc,SAAAlV,GACV,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,K,EAIlDK,YAAc,SAAAxV,GAAU,IACZoC,EAAa,EAAKzD,MAAlByD,SAEFuS,EAAU3U,EAAME,OACjByU,GAEDvS,GACAA,EAASuS,EAAQC,Y,wEAIf,IAAD,EAC4C/W,KAAKc,MAA9C8W,EADH,EACGA,SAAUnU,EADb,EACaA,EAAGoU,EADhB,EACgBA,QAASC,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAK1W,UAAU,gBACX,yBACI5C,GAAG,kBACH+X,IAAKoB,EACLI,YAAaF,GAAQrU,EAAE,UACvBwU,iBAAe,EACfC,gCAA8B,EAC9BC,UAAWnY,KAAKqP,cAChB+I,QAASpY,KAAKmX,YACdkB,QAASrY,KAAKqX,YACdiB,QAAStY,KAAK2X,YACdE,QAASA,IAEZE,GAAY,kBAAC,GAAD,CAAY1W,UAAU,2B,GAlFzBM,IAAMC,YAkGhCgV,GAAY5O,aAAe,CACvB+P,UAAU,GAGC7S,qBAAkB0R,ICkClB2B,G,YArIX,WAAYzX,GAAQ,IAAD,8BACf,4CAAMA,KAgEV0X,2BAA6B,SAAAvR,GACzB,EAAKlG,SAAS,CAAE0X,mBAAoBxR,EAAOyR,uBAlE5B,EAqEnBC,aAAe,WAAO,IAAD,EACgB,EAAK7X,MAA9B8X,EADS,EACTA,SAAUC,EADD,EACCA,WACVJ,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,IAE1BG,GAAUC,IA1EK,EA6EnBE,uBAAyB,WAAO,IACpBC,EAAuB,EAAKlY,MAA5BkY,mBAEFlC,EAAU,EAAKmC,eAAepE,QACpC,GAAKiC,EAAL,CAJ2B,IAMnBM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,MAIxB4B,EAFsBlC,EAAdC,aAvFO,EA4FnBmC,kBAAoB,WAChB,EAAKpY,MAAMqY,iBA7FI,EAgGnBC,YAAc,WACV,EAAKT,gBA9FL,EAAKM,eAAiBtX,IAAMoU,YAE5B,EAAK1V,MAAQ,CACToY,mBAAoBY,IAASC,wBAC7BhW,MAAM,GAPK,E,0EAWNsN,GAAQ,IACToI,EAAuBhZ,KAAKc,MAA5BkY,mBAEFO,EAAcvZ,KAAKiZ,eAAepE,QACxC,GAAI0E,EAAa,CAEb,GADAA,EAAYxC,UAAYnG,EACpB2I,EAAYC,WAAWpT,OAAS,EAAG,CACnC,IAAMqT,EAAQhC,SAASiC,cACvBD,EAAME,SAASJ,EAAYC,WAAW,GAAID,EAAYC,WAAW,GAAGpT,QACpEqT,EAAMG,UAAS,GAEf,IAAMC,EAAYC,OAAOC,eACzBF,EAAUG,kBACVH,EAAUI,SAASR,GAEvBF,EAAYW,QACZlB,EAAmBpI,M,yCAIR1P,EAAWC,EAAWC,GAAW,IACxCyX,EAAe7Y,KAAKc,MAApB+X,WAER,GAAIA,IAAe3X,EAAU2X,WACzB,GAAIA,EACA7Y,KAAKma,iBACF,CACH,IAAMZ,EAAcvZ,KAAKiZ,eAAepE,QACpC0E,IACAA,EAAYxC,UAAY,S,mCAOpC,IAAMwC,EAAcvZ,KAAKiZ,eAAepE,QACpC0E,GACAA,EAAYW,U,0CAKZla,KAAKc,MAAMsZ,OACXpa,KAAKma,aAGTd,IAAS5R,GAAG,2BAA4BzH,KAAKwY,8B,6CAI7Ca,IAAS3R,IAAI,2BAA4B1H,KAAKwY,8B,+BAsCxC,IAEF6B,EAAU,KAad,OAXIA,EAHmBra,KAAKc,MAApB+X,WAIA,kBAAC,GAAD,CACIjB,SAAU5X,KAAKiZ,eACf1U,SAAUvE,KAAK+Y,uBACflV,QAAS7D,KAAKkZ,oBAIZ,kBAAC,GAAD,CAAatB,SAAU5X,KAAKiZ,eAAgBpB,QAAS7X,KAAKoZ,cAIpE,yBAAK/X,UAAU,iBACX,yBAAKkE,QAASvF,KAAKkZ,mBAAmB,kBAAC,GAAD,OACrCmB,O,GAvHW1Y,IAAMC,WCqCnB0Y,I,wLAtCD,IAAD,EACgCta,KAAKc,MAAlCsG,EADH,EACGA,OAAQmT,EADX,EACWA,MAAOrQ,EADlB,EACkBA,UAEnBpC,EAAQ,KACRoC,IACApC,EAAQC,aAAaX,GAAQ,IAGjC,IAAMoT,EAAU,UAAM,GAAuB,GAAlBlb,KAAKY,IAAIqa,GAApB,KACVE,EAAY,UAAM,GAAuB,GAAlBnb,KAAKob,IAAIH,GAApB,KAElB,OACI,yBAAKlZ,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACV6I,EACGpC,EAEA,yBAAKzG,UAAU,2BAA2BuM,MAAO,CAAEC,MAAO2M,MAGlE,yBAAKnZ,UAAU,mBACX,yBAAKA,UAAU,6BAA6BuM,MAAO,CAAEC,MAAO4M,a,GAzBxD9Y,IAAMC,Y,8jBCFtC,IAAMgM,GACW,SAAAE,GAAM,MAAK,CACpBA,SACA6M,SAAU,aAHZ/M,GAKI,SAAC2M,EAAOzM,GAAR,MAAoB,CACtBA,SACAtD,KAAM,EACNoQ,MAAO,EACPrQ,IAAKuD,EAASyM,EACdI,SAAU,aAILE,GAAb,YACI,WAAY/Z,GAAQ,IAAD,8BACf,4CAAMA,KA+CVga,kBAAoB,WAAO,IACftZ,EAAW,EAAKV,MAAhBU,OACAsT,EAAc,EAAKzU,MAAnByU,UACAD,EAAY,EAAKD,QAAjBC,QACR,GAAKA,EAAL,CAEA,IAAMkG,EAAiBC,WAAWlB,OAAOmB,iBAAiBpG,EAAS,MAAMqG,iBAAiB,WACpFC,EAAY,EAAKC,aAAa5Z,EAAQuZ,EAAgBjG,GAG5D,EAAK/T,SAAL,IAAgBga,kBAAmBI,MA1DpB,EAwFnBE,kBAAoB,SAAAlZ,GAAU,IAAD,EACe,EAAKrB,MAArCU,EADiB,EACjBA,OAAQ8Z,EADS,EACTA,UAAW7E,EADF,EACEA,SADF,EAEa,EAAKpW,MAAnC0a,EAFiB,EAEjBA,eAAgBjG,EAFC,EAEDA,UAExB,GAAIxV,KAAK6O,IAAIhM,EAAME,OAAOyS,UAAYA,IAAcwG,EAAW,CAC3D,IAAMH,EAAY,EAAKC,aAAa5Z,EAAQuZ,EAAgB5Y,EAAME,OAAOyS,WAEzE,EAAK/T,SAAL,IACI+T,UAAW3S,EAAME,OAAOyS,WACrBqG,IAIP1E,GACAA,EAAStU,IAtGE,EA8GnBoZ,cAAgB,SAAChB,EAAOQ,EAAgBjG,GAAe,IAAD,EACb,EAAKhU,MAAlC0a,EAD0C,EAC1CA,cAAeF,EAD2B,EAC3BA,UAKvB,OAHgBf,EAAQe,EAIVxG,EAAY0G,EAAgBF,IAHtBf,EAAQ,GAAKe,EAIhBxG,EAAYiG,EAAiBS,EAAgBF,GAnH9D,EAAK1G,QAAUjT,IAAMoU,YAErB,EAAK1V,MAAQ,CACTyU,UAAW,EACXqG,UAAW,IAAI1U,IACfgV,cAAe,GACfV,eAAgB,GATL,EADvB,gFAcuB7Z,EAAWC,EAAWC,GACjCF,EAAUM,SAAWxB,KAAKc,MAAMU,QAChCxB,KAAK8a,sBAhBjB,4CAoB0BxT,EAAWC,EAAWmU,GACxC,OAAO,IArBf,0CAwCQ5B,OAAO6B,iBAAiB,SAAU3b,KAAK8a,mBAAmB,GAD1C,IAGRjG,EAAY7U,KAAK4U,QAAjBC,QACHA,IACLA,EAAQ8G,iBAAiB,SAAU3b,KAAKqb,mBAAmB,GAE3Drb,KAAK8a,uBA9Cb,mCA8DiBtZ,EAAQuZ,EAAgBjG,GAAY,IAAD,OACtCqG,EAAY,IAAI1U,IAChBgV,EAAgB,GAQtB,OAPAja,EAAO7B,QAAQ,SAACic,EAAMrB,GACd,EAAKgB,cAAchB,EAAOQ,EAAgBjG,KAC1CqG,EAAUpL,IAAIwK,EAAOA,GACrBkB,EAAczL,KAAKuK,MAIpB,CAAEY,YAAWM,mBAxE5B,6CA4EQ3B,OAAO+B,oBAAoB,SAAU7b,KAAK8a,mBADvB,IAGXjG,EAAY7U,KAAK4U,QAAjBC,QACHA,GACLA,EAAQgH,oBAAoB,SAAU7b,KAAKqb,qBAhFnD,yCAsFQ,OAFsBrb,KAAKK,MAAnB8a,YApFhB,mCA4GQ,OAAOnb,KAAK4U,UA5GpB,+BA2Hc,IAAD,EACgD5U,KAAKc,MAAlDO,EADH,EACGA,UAAWG,EADd,EACcA,OAAQsa,EADtB,EACsBA,WAAYR,EADlC,EACkCA,UAC/BH,EAAcnb,KAAKK,MAAnB8a,UAEFY,GAASva,GAAU,IAAIoO,IAAI,SAACgM,EAAMrB,GACpC,OAAOY,EAAUvU,IAAI2T,IAAUuB,EAAW,CAAEvB,QAAO3M,MAAOA,GAAW2M,EAAOe,OAKhF,OACI,yBAAK9E,IAAKxW,KAAK4U,QAASvT,UAAWoE,IAAW,QAASpE,IACnD,yBAAKuM,MAAOA,IAAmBpM,GAAU,IAAI4E,OAASkV,IACjDS,QAxIrB,GAAqCpa,IAAMC,WAgJ3CiZ,GAAgB7S,aAAe,CAC3BxG,OAAQ,GACR8Z,UAAW,GACXE,cAAe,GAYJX,UCjLR,SAASmB,GAAiBlF,GAC7B,GAAIA,EAAQmF,WAAaC,KAAKC,UAC1B,OAAOrF,EAGX,IAAK,IAAInQ,EAAImQ,EAAQ0C,WAAWpT,OAAS,EAAGO,GAAK,EAAGA,IAAK,CACrD,IAAMyV,EAAWJ,GAAiBlF,EAAQ0C,WAAW7S,IACrD,GAAIyV,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASjC,GAAWrD,GACvB,GAAKA,EAAL,CAEA,IAAMsF,EAAWJ,GAAiBlF,GAClC,GAAIsF,EAAU,CACV,IAAM3C,EAAQhC,SAASiC,cACvBD,EAAME,SAASyC,EAAUA,EAAShW,QAClCqT,EAAMG,UAAS,GAEf,IAAMC,EAAYC,OAAOC,eACzBF,EAAUG,kBACVH,EAAUI,SAASR,GAGvB3C,EAAQoD,SAGL,SAASpF,GAAUgC,GAA+B,IAAtBuF,EAAqB,uDAAV,SACrCvF,IAELA,EAAQhC,UAAYxV,KAAKC,IAAIuX,EAAQhC,UAAW,KAChDwH,WAAW,WACPxF,EAAQyF,SAAS,CACbhS,IAAK,EACL8R,cAEL,K,uBC6BDlP,GAAQ,I,YAlEV,aAAe,IAAD,8BACV,+CAOJqP,MAAQ,WACJ,EAAKC,SAAW,CAAE,QAAS,gBAC3B,EAAKC,QAAU,MAVL,EAadC,SAAW,SAAA1V,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtByR,EAAwBzR,EAAxByR,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK8D,QAKb,MAEJ,IAAK,oBAAsB,IACfI,EAAiB3V,EAAjB2V,aAER,EAAKF,QAAUE,EACf,EAAKpa,KAAK,oBAAqByE,KAhC7B,EAwCd4V,eAAiB,SAAA5V,GACb,OAAQA,EAAO,UACX,IAAK,uBAAyB,IAClBwV,EAAaxV,EAAbwV,SAER,EAAKA,SAAWA,EAEhB,EAAKja,KAAK,uBAAwByE,KA/ChC,EAuDd6V,iBAAmB,WACfpc,KAAgB+G,GAAG,SAAU,EAAKkV,UAClCjc,KAAgB+G,GAAG,eAAgB,EAAKoV,iBAzD9B,EA4DdE,oBAAsB,WAClBrc,KAAgBgH,IAAI,SAAU,EAAKiV,UACnCjc,KAAgBgH,IAAI,eAAgB,EAAKmV,iBA3DzC,EAAKL,QAEL,EAAKM,mBALK,E,2BADQE,OAoE1BlD,OAAOlH,OAASzF,GACDA,UClDT8P,G,8LACoB3V,EAAWC,EAAWmU,GAAc,IAAD,EAChB1b,KAAKc,MAAlCsG,EAD6C,EAC7CA,OAAQqV,EADqC,EACrCA,SAAU5N,EAD2B,EAC3BA,OAC1B,OAAIvH,EAAUF,SAAWA,IAKrBE,EAAUmV,WAAaA,GAKvBnV,EAAUuH,SAAWA,K,+BASnB,IAAD,SACgC7O,KAAKc,MAAlCsG,EADH,EACGA,OAAQqV,EADX,EACWA,SAAU5N,EADrB,EACqBA,OAE1B,OACI,yBAAKxN,UAAU,mBAAmBkE,QAAS,kBAAM,EAAKmP,gBAAgBtN,KAClE,kBAAC,GAAD,CAAQA,OAAQA,EAAQqV,SAAUA,EAAU5N,OAAQA,S,GA3BvClN,IAAMC,WA+epBsb,G,YA7cX,WAAYpc,GAAQ,IAAD,uBACf,4CAAMA,KAuGVqc,uBAAyB,SAAAlW,GAAW,IACxBwV,EAAaxV,EAAbwV,SAER,EAAK1b,SAAS,CACV0b,WACAW,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,IAEhB,WACC,EAAKC,oBAlHM,EAsHnBhU,mBAAqB,SAAArC,KAtHF,EAgInBsW,wBAA0B,SAAAtW,GAAW,IACzBuW,EAAuBvW,EAAvBuW,WAAYpW,EAAWH,EAAXG,OAEhBoW,EACA,EAAKC,YAAY1N,IAAI3I,EAAQA,GAE7B,EAAKqW,YAAYC,OAAOtW,GAG5B,EAAKF,eAzIU,EA4InBsR,2BAA6B,SAAAvR,GAAW,IACPwR,EAAuBxR,EAA5CyR,oBAER,EAAK3X,SAAS,CAAE0X,sBAAsB,kBAAM,EAAK6E,oBA/IlC,EAkJnBtW,uBAAyB,SAAAC,GACrB,EAAK0W,YAAW,IAnJD,EAsJnBL,eAtJmB,qBAsJF,4BAAA5S,EAAA,wDACL+N,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,GAFb,iEAIPrL,KAAUwQ,OAAO,kBAAM,EAAKD,YAAW,KAJhC,yCAtJE,EA6JnBE,UAAY,WAAO,IAAD,EACgB,EAAK/c,MAA3Bgd,EADM,EACNA,YAAa1b,EADP,EACOA,KACbqa,EAAa,EAAKpc,MAAlBoc,SACK,iBAATra,GACsB,iBAAtBqa,EAAS,UAETqB,GAAaA,KAnKF,EAsKnBC,qBAAuB,SAAA9W,GAAW,IACtBwV,EAAa,EAAKpc,MAAlBoc,SACA9B,EAAa1T,EAAb0T,SAEHqD,aAAevB,EAAU9B,EAAS5L,OAIvC,EAAKkP,kBAAkBhX,IA9KR,EAiLnBgX,kBAAoB,SAAAhX,GAAW,IAAD,EACU,EAAK5G,MAAjCoT,EADkB,EAClBA,MAAOgJ,EADW,EACXA,SAAUW,EADC,EACDA,OACzB,GAAK3J,EAAL,CAF0B,IAIlB+B,EAAY4H,EAAZ5H,QACR,IAAIA,GAAY/B,EAAMrN,OAAtB,CAL0B,IAOlBiB,EAAYJ,EAAZI,QAEFc,EAAOX,KAAUjB,IAAIc,GAC3B,GAAKc,GAIA+V,aAAY7W,EAASoV,GAA1B,CAIA,IAAM0B,EAAQ/N,aAAa/I,EAASoV,GAC9B2B,EAAe3K,EAAM4K,UAAU,SAAAnf,GAAC,OAAIA,IAAMmI,IAChD,IAAsB,IAAlB+W,GAAiC,MAAVD,EAA3B,CAKA,IADA,IAAMG,EAAU,GACP3X,EAAI,EAAGA,EAAI8M,EAAMrN,OAAQO,IAAK,CACnC,IAAMwB,EAAOX,KAAUjB,IAAIkN,EAAM9M,IAC3B4X,EAAYnO,aAAaqD,EAAM9M,GAAI8V,GACrCtU,GAAsB,MAAdoW,GACRD,EAAQtO,KAAK7H,EAAK1J,IAI1B,IAAM+f,EAAa,GACL,MAAVL,EAEI9W,IAAYgS,IAASoF,aAAgBtW,EAAKuW,eAC1Che,KAAgBie,UAAU,GAC1BC,cAA4B,KAGV,IAAlBR,IACI5I,EACAjC,QAAQc,MAAM,+BAAgCpN,GAG9CuX,EAAWxO,KAAK3I,IAK5B,EAAKwX,aAAaP,EAASE,EAAY,WACnC,EAAKM,iBAAiBN,GACtB,EAAKX,mBAtOM,EAqQnBlJ,aAAe,WAEX,IAAM5F,EAAO,EAAK6F,QAAQC,QAAQkK,aAAalK,QAC1C9F,IAGDA,EAAK+F,WAAakK,MAClB,EAAKC,aACElQ,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAejG,EAAKgG,cAEtE,EAAK4I,eA/QM,EAgYnB7B,WAAa,WAAmBta,GAAY,IAA5B+Y,EAA2B,EAA3BA,MAAO3M,EAAoB,EAApBA,MAAoB,EACR,EAAK9M,MAA5BiO,EAD+B,EAC/BA,KAAMqH,EADyB,EACzBA,aACNqG,EAAa,EAAKpc,MAAlBoc,SACFvd,EAAIsC,EAAO+Y,GAEjB,OACI,kBAAC,GAAD,CAAc3U,IAAK1G,EAAG6P,KAAMA,EAAMjF,SAAUsM,EAAchP,OAAQlI,EAAG0O,MAAOA,GACxE,kBAAC,GAAD,CAAgB8G,gBAAiB,EAAK5T,MAAM4T,gBAAiBtN,OAAQlI,EAAGud,SAAUA,EAAU5N,OAAQ,EAAK4O,YAAY7W,IAAI1H,OApYjI,EAAKue,YAAc,IAAIhX,IAEvB,EAAKmO,QAAUjT,IAAMoU,YALN,IAOP0C,EAAuBY,IAAvBZ,mBAPO,OASf,EAAKpY,MAAQ,CACToY,qBACAhF,MAAO,KACPyL,iBAAiB,EACjBzC,SAAyB,iBAAf3b,EAAMsB,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,mBACnFgb,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,IAhBJ,E,mFAqBG/V,EAAWC,GAAY,IAAD,EACoCvH,KAAKc,MAAzEyC,EADgC,EAChCA,MAAOD,EADyB,EACzBA,KAAM6b,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAcrD,EADR,EACQA,MAAOsD,EADf,EACeA,WAAYtQ,EAD3B,EAC2BA,KAD3B,EAEZ/O,KAAKK,MAAzBoT,EAFgC,EAEhCA,MAAOgJ,EAFyB,EAEzBA,SAEf,OAAInV,EAAU/D,QAAUA,IAGpB+D,EAAUyH,OAASA,IAInBzH,EAAUhE,OAASA,IAInBgE,EAAUyU,QAAUA,IAIpBzU,EAAU+X,aAAeA,IAIzB/X,EAAU6X,cAAgBA,IAI1B7X,EAAU8X,eAAiBA,IAI3B7X,EAAUkM,QAAUA,GAIpBlM,EAAUkV,WAAaA,W,8CAOPvb,EAAWC,GAAY,IAC1B4N,EAAS/O,KAAK4U,QAAvBC,QACR,OAAK9F,EAEE,CAAE+F,UAAW/F,EAAK+F,WAFP,CAAEA,UAAW,K,yCAKhB5T,EAAWC,EAAWC,M,0CAKrCpB,KAAKsd,iBAELjE,IAAS5R,GAAG,2BAA4BzH,KAAKwY,4BAE7ChR,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,wBAAyBzH,KAAKud,yBAC3C/V,KAAUC,GAAG,yBAA0BzH,KAAKie,mBAC5CzW,KAAUC,GAAG,wBAAyBzH,KAAKie,mBAC3CzW,KAAUC,GAAG,qBAAsBzH,KAAK+d,sBAExCuB,GAAY7X,GAAG,uBAAwBzH,KAAKmd,wBAE5CzT,KAAgBjC,GAAG,kBAAmBzH,KAAKsJ,sB,6CAI3C+P,IAAS3R,IAAI,2BAA4B1H,KAAKwY,4BAE9ChR,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,wBAAyB1H,KAAKud,yBAC5C/V,KAAUE,IAAI,yBAA0B1H,KAAKie,mBAC7CzW,KAAUE,IAAI,wBAAyB1H,KAAKie,mBAC5CzW,KAAUE,IAAI,qBAAsB1H,KAAK+d,sBAEzCuB,GAAY5X,IAAI,uBAAwB1H,KAAKmd,wBAE7CzT,KAAgBhC,IAAI,kBAAmB1H,KAAKsJ,sB,mCAqInCgV,GAAqC,IAA5BE,EAA2B,uDAAd,GAAIe,EAAU,uCACrC9C,EAAazc,KAAKK,MAAlBoc,SAEF+C,EAAiBlB,EAAQ/I,OAAOiJ,GAAYvO,KAAK,SAACvF,EAAGwF,GACvD,OAAOC,aAAaC,aAAaF,EAAGuM,GAAWrM,aAAa1F,EAAG+R,MAG9DS,EAAYuC,iBAAiBzf,KAAKK,MAAMoT,MAAO+L,GAKpDxf,KAAKe,SAAS,CAAE0S,MAAO+L,GAAkBD,GAJjCA,GAAUA,M,+NAqCLG,E,gCAAiB7O,E,+BAAQ8O,KACrB3f,KAAKc,MAAdsB,K,EAC4BpC,KAAKK,MAAjCoT,E,EAAAA,MAAOgJ,E,EAAAA,WAAUW,E,EAAAA,QAGd5H,Q,qDAKP4H,EAAOC,U,wDAKPuC,EAAc,sBACdC,EAAe,GACdH,GAAWjM,GAASA,EAAMrN,OAAS,IAC9B+B,EAAOX,KAAUjB,IAAIkN,EAAMA,EAAMrN,OAAS,OAE5CwZ,EAAcxP,aAAajI,EAAK1J,GAAIge,GACpCoD,EAAe1X,EAAK1J,IAK5B2e,EAAO5H,SAAU,E,UACI9U,KAAgBC,KAAK,CACtC,QAAS,WACTkS,UAAW4J,EACX1J,eAAgB8M,EAChBC,aAAcF,EACd/O,MAAO8O,OACRI,QAAQ,WACP3C,EAAO5H,SAAU,EACbkK,GACAhf,KAAgBsf,aAAa,CAAE,QAAS,2BAA4BjR,KAAM0N,M,WAT5E5b,E,OAcFuc,IAAWpd,KAAKK,MAAM+c,O,mDAKtBvc,EAAOgP,SAASzJ,OAAS,GAAKvF,EAAOgP,SAAS,KAAOgQ,GACrDhf,EAAOgP,SAASoQ,QAGpB7C,EAAOC,WAAaxc,EAAOgP,SAASzJ,OAEhCsZ,EACA1f,KAAKkgB,aAAarf,EAAOgP,SAAU,WAC/B,EAAKiP,iBAAiBje,EAAOgP,UAC7B,EAAKgO,YAEDhd,EAAOgP,SAASzJ,OAASuZ,MACzB,EAAKhC,YAAW,EAAOgC,KAAmB9e,EAAOgP,SAASzJ,QAG9D,IAAM2I,EAAO,EAAK6F,QAAQC,QAAQkK,aAAalK,QAC1C9F,IACLA,EAAK+F,UAAY,KAIrB9U,KAAKmgB,YAAYtf,EAAOgP,SAAU,WAE9B,EAAKiP,iBAAiBje,EAAOgP,UAEzBhP,EAAOgP,SAASzJ,QAAUvF,EAAOgP,SAASzJ,OAASyK,GACnD,EAAK8M,YAAW,EAAO9M,EAAQhQ,EAAOgP,SAASzJ,U,4IAM9CkY,GACb,IAAMnR,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOmR,K,kCAGhBA,EAASiB,GACjB,GAAuB,IAAnBjB,EAAQlY,OAAZ,CAD2B,IAQrBga,GAFYpgB,KAAKK,MAAfoT,OAEmB,IAAI8B,OAAO+I,GACtCte,KAAKe,SAAS,CAAE0S,MAAO2M,GAAYb,QAP3BA,GAAUA,M,mCAUT9L,EAAO8L,GAChBvf,KAAKe,SAAS,CAAE0S,SAAS8L,K,oCAMzBzK,GAFa9U,KAAK4U,QAAQC,QAAQkK,aAAalK,W,+BAmBzC,IAAD,SACwB7U,KAAKc,MAA1BwC,EADH,EACGA,KAAM+b,EADT,EACSA,WADT,EAEuBrf,KAAKK,MAAzBoT,EAFH,EAEGA,MAAOgJ,EAFV,EAEUA,SAGf,IAAKnZ,EAAM,OAAO,KAElBtD,KAAKwB,OAAS,GAEd,GAAIiS,EAAO,CAEPA,EAAM9T,QAAQ,SAAAT,GACNmhB,aAAanhB,EAAGud,IACDvd,IAGvBc,KAAKwB,OAASiS,OACX,GAAI4L,EAAY,CAEnBA,EAAW1f,QAAQ,SAAAT,GACXmhB,aAAanhB,EAAGud,IACDvd,IAGvBc,KAAKwB,OAAS6d,EAAWzP,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,SAUV,iBAAtBge,EAAS,UACC6D,MAAM1gB,KAAK0gB,MAAM,KAAK1Q,IAAI,SAAC1Q,EAAGqb,GAAJ,OAAc,kBAAC,GAAD,CAAmB3U,IAAK2U,EAAOA,MAAOA,MAMhG,OACI,kBAAC,GAAD,CACI/D,IAAKxW,KAAK4U,QACVvT,UAAU,eACVG,OAAQxB,KAAKwB,OACb8Z,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG,EAAKsC,SACzCiV,SAAUzW,KAAK2U,kB,wCAtMH4L,EAAY/B,GAChC,GAAI+B,EAAWna,SAAWoY,EAAWpY,OAAQ,CACzC,IAAK,IAAIO,EAAI,EAAGA,EAAI4Z,EAAWna,OAAQO,IACnC,GAAI4Z,EAAW5Z,KAAO6X,EAAW7X,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GAnQWhF,IAAMC,WCpDzB,SAAS4e,KACZ,IAAMC,EAAUjZ,KAAUiV,SAASlW,IAAI,mBACjCkN,EAAQ,GACRiN,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQ7M,OAA7B,+CAAqC,CAAC,IAA3BxM,EAA0B,QAC3Be,EAAOX,KAAUjB,IAAIa,GAC3B,GAAIe,EAAM,CACN,IAAMgW,EAAQ/N,aAAahJ,EAAQ,CAAE,QAAS,oBAChC,MAAV+W,GAAe1K,EAAMzD,KAAK7H,GAC9BuY,EAAW1Q,KAAK,CAAEmO,QAAO1f,GAAI2I,EAAQU,MAAOK,EAAKL,UANhD,mFAab,OAFqB2L,EAAMxD,KAAK,SAACvF,EAAGwF,GAAJ,OAAUC,aAAaC,aAAaF,EAAG,CAAE,QAAS,oBAAsBE,aAAa1F,EAAG,CAAE,QAAS,uBAE/GkF,IAAI,SAAA1Q,GAAC,OAAIA,EAAE4I,QAAO7G,KAAK,M,cCMhCyC,GADC,I,qIAxBDkC,G,yEACDtD,EAAQqe,aAAaC,QAAQhb,G,yCAChB,M,yCAGRib,KAAKC,MAAMxe,I,yDAEX,M,iLAIJsD,EAAKtD,G,gEACZqe,aAAaI,QAAQnb,EAAKib,KAAKG,UAAU1e,I,uKAGhCsD,G,gEACT+a,aAAaM,WAAWrb,G,sOAIxB+a,aAAaO,Q,uGCqUf/T,GAAQ,I,YA7UV,aAAe,IAAD,8BACV,+CAWJqP,MAAQ,WACJ,EAAKE,QAAU,KACf,EAAK4B,QAAU,GACf,EAAK6C,eAAiB,GACtB,EAAKC,OAAS,KACV,EAAKC,gBACL,EAAKC,SAAW,MAGpB,EAAKC,MAAQ,MArBH,EAwBd5E,SAAW,SAAA1V,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtByR,EAAwBzR,EAAxByR,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK8D,QACL,EAAK0E,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDM,GAAarL,OAAO,SACpBqL,GAAarL,OAAO,SAChB,EAAKkL,eACLG,GAAarL,OAAO,eA5C9B,EAyDd0G,eAAiB,SAAA5V,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAKwa,kBA5DH,EAmEd3E,iBAAmB,WACfpc,KAAgB+G,GAAG,SAAU,EAAKkV,UAClCjc,KAAgB+G,GAAG,eAAgB,EAAKoV,iBArE9B,EAwEdE,oBAAsB,WAClBrc,KAAgBgH,IAAI,SAAU,EAAKiV,UACnCjc,KAAgBgH,IAAI,eAAgB,EAAKmV,iBAvEzC,EAAKwE,eAAgB,EAErB,EAAK7E,QAEL,EAAKM,mBAEL,EAAK4E,aAAeC,aAAS,EAAKD,aAAc,KATtC,E,2MA+EJhR,EAAW,IACRV,KAAKwR,GAAaI,KAAK,SAASxQ,MAAM,SAAAiD,GAAK,OAAI,QACxD3D,EAASV,KAAKwR,GAAaI,KAAK,SAASxQ,MAAM,SAAAiD,GAAK,OAAI,QACxD3D,EAASV,KAAKwR,GAAaI,KAAK,WAAWxQ,MAAM,SAAAiD,GAAK,OAAI,QACtDrU,KAAKqhB,eACL3Q,EAASV,KAAKwR,GAAaI,KAAK,YAAYxQ,MAAM,SAAAiD,GAAK,OAAI,Q,SAEjBnD,QAAQC,IAAIT,G,sCAArD6Q,E,KAAOM,E,KAAOnF,E,KAAS4E,E,KAExBQ,GAAY,GACZP,IAASA,EAAM9N,M,iBACN9M,EAAI,E,aAAGA,EAAI4a,EAAM9N,MAAMrN,Q,sBACpBsY,EAAiB6C,EAAM9N,MAAM9M,GAA7B+X,gBACYA,EAAajM,e,wBAC7BqP,GAAY,E,6BAHoBnb,I,+BAQxCmb,IACAP,EAAQ,MAGZvhB,KAAKuhB,MAAQA,EACTvhB,KAAKuhB,QACLvhB,KAAKuhB,MAAMM,MAAQA,GAAS,IAG5B7hB,KAAKqhB,eACDC,KACCA,GAAY,IAAI3hB,QAAQ,SAAAT,GACrBuK,KAAUsG,IAAI7Q,KAGlBc,KAAKshB,SAAW,CACZ,QAAS,QACTS,SAAUT,EAAS1R,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,KAC9B6W,YAAagM,EAASlb,SAKlCpG,KAAK0c,QAAUA,EAEX1c,KAAKuhB,OACLvhB,KAAKgiB,WAAWhiB,KAAKuhB,O,kBAIlBvhB,KAAKuhB,O,sIAGLA,GACP,GAAKA,EAAL,CADc,IAGNH,EAAiFG,EAAjFH,OAAQ3N,EAAyE8N,EAAzE9N,MAAOwO,EAAkEV,EAAlEU,aAAcvO,EAAoD6N,EAApD7N,MAAOwO,EAA6CX,EAA7CW,YAAaC,EAAgCZ,EAAhCY,YAAaN,EAAmBN,EAAnBM,MAAOvjB,EAAYijB,EAAZjjB,SAG5EujB,GAAS,IAAIjP,OAAO,SAAA1T,GAAC,OAAIwG,QAAQxG,KAAIS,QAAQ,YAAkB,IAAflB,EAAc,EAAdA,GAAI2U,EAAU,EAAVA,IACjDhG,KAAUgV,WAAW3jB,EAAI2U,MAG5BM,GAAS,IAAI/T,QAAQ,SAAAT,GAClBuK,KAAUsG,IAAI7Q,MAGjBgjB,GAAe,IAAIviB,QAAQ,SAAAT,GACxBoJ,KAAgByH,IAAI7Q,MAGvBijB,GAAe,IAAIxiB,QAAQ,SAAAT,GACxBwK,KAAgBqG,IAAI7Q,MAGvBuU,GAAS,IAAI8B,OAAO0M,GAAgB,IAAI1M,OAAO,CAAC6L,IAASzhB,QAAQ,SAAAT,GAC1DA,WACOA,EAAEmjB,oBAET7a,KAAUuI,IAAI7Q,GACVA,EAAE2N,QACE3N,EAAE2N,MAAMG,OAAOI,KAAU2C,IAAI7Q,EAAE2N,MAAMG,OACrC9N,EAAE2N,MAAM5C,KAAKmD,KAAU2C,IAAI7Q,EAAE2N,MAAM5C,MAEvC/K,EAAEyb,UACFnT,KAAU8a,oBAAoBpjB,EAAET,IAEhCS,EAAEwf,cACFzL,KAAalD,IAAI7Q,EAAEwf,kBAK9BpgB,GAAW,IAAIqB,QAAQ,YAAmB,IAAD,mBAAhBlB,EAAgB,KAAZ8jB,EAAY,KACtCjc,KAAYyJ,IAAItR,EAAI8jB,Q,uEAIbjE,EAAS6C,G,2FACdqB,EAAU,IAAI/b,IACdgc,EAAU,IAAIhc,IACdic,EAAgB,IAAIjc,IACpBkc,EAAgB,IAAIlc,IACpB2a,EAASphB,KAAKohB,OACd3N,EAAQ6K,EAAQ1O,IAAI,SAAA1Q,GAAC,OAAIsI,KAAUjB,IAAIrH,KACvC0jB,EAAU,IAAInc,IAAIgN,EAAM7D,IAAI,SAAA1Q,GAAC,MAAI,CAACA,EAAET,GAAIS,MACxC+iB,EAAed,EAAevR,IAAI,SAAA1Q,GAAC,OAAIsI,KAAUjB,IAAIrH,KAE3DuU,EAAM8B,OAAO0M,GAAc1M,OAAO,CAAC6L,IAASzhB,QAAQ,SAAAT,GAAM,IAC9C2N,EAA8B3N,EAA9B2N,MAAOzK,EAAuBlD,EAAvBkD,KAAMsc,EAAiBxf,EAAjBwf,aACrB,GAAI7R,GAASA,EAAMG,MAAO,CAAC,IACfvO,EAAOoO,EAAMG,MAAbvO,GACR,GAAIA,EAAI,CACJ,IAAMokB,EAAOzV,KAAU0V,QAAQrkB,GAC3BokB,GACAL,EAAQzS,IAAItR,EAAIokB,IAK5B,OAAQzgB,EAAK,UACT,IAAK,qBACD,IAAM2gB,EAAaza,KAAgB/B,IAAInE,EAAKoG,gBACxCua,GACAL,EAAc3S,IAAIgT,EAAWtkB,GAAIskB,GAGzC,IAAK,kBACL,IAAK,iBACD,IAAMC,EAAOvZ,KAAUlD,IAAInE,EAAKuG,SAC5Bqa,GACAP,EAAQ1S,IAAIiT,EAAKvkB,GAAIukB,GAG7B,IAAK,qBACD,IAAMzZ,EAAaG,KAAgBnD,IAAInE,EAAK+G,eACxCI,GACAoZ,EAAc5S,IAAIxG,EAAW9K,GAAI8K,GAK7C,GAAImV,EAAc,CAAC,IACP/K,EAAW+K,EAAX/K,OACR,OAAQA,EAAO,UACX,IAAK,oBACD,IAAMqP,EAAOvZ,KAAUlD,IAAIoN,EAAOhL,SAC9Bqa,GACAP,EAAQ1S,IAAIiT,EAAKvkB,GAAIukB,GAEzB,MAEJ,IAAK,oBACD,IAAM7a,EAAOX,KAAUjB,IAAIoN,EAAOtM,SAC9Bc,GACAya,EAAQ7S,IAAI5H,EAAK1J,GAAI0J,O,kBAQlC,CACHiN,KAAM,IAAI5E,KACV4Q,SACA3N,MAAM,YAAKmP,EAAQK,UACnBhB,eACAvO,MAAM,YAAK+O,EAAQQ,UACnBf,YAAY,YAAKQ,EAAcO,UAC/Bd,YAAY,YAAKQ,EAAcM,UAC/BpB,MAAM,YAAKW,EAAQU,WACnB5kB,QAAQ,YAAKgI,KAAYyV,MAAMmH,a,2KAI5BxG,EAAS4B,EAAS6C,G,mEACzBnhB,KAAKse,QAAUA,EACfte,KAAKmhB,eAAiBA,E,KACRnhB,KAAKohB,O,qCAAgB1gB,KAAgBC,KAAK,CACpD,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,I,6BAHXpU,KAAKohB,O,MAKDphB,KAAKqhB,c,yBACWrhB,KAAKshB,S,uCAAkB5gB,KAAgBC,KAAK,CACxD,QAAS,gB,4BADbX,KAAKshB,S,aAITthB,KAAK0c,QAAUA,EAEf1c,KAAK0hB,e,qRAKe1hB,KAAKmjB,SAASnjB,KAAKse,QAASte,KAAKmhB,gB,cAA/CI,E,OACAM,EAAQN,EAAMM,MACpBN,EAAMM,MAAQ,G,SAERL,GAAa4B,KAAK,QAAS7B,G,cAE3B7Q,EAAW,GACjBmR,EAAMliB,QAAQ,SAAAT,GAAM,IAAD,cACIA,EADJ,GACRT,EADQ,KACJokB,EADI,KAEfnS,EAASV,KACL,IAAIkB,QAAQ,SAACmS,EAASC,GAClB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcZ,GACzBU,EAAWG,OAAS,SAAA7X,GAChBwX,EAAQ,CAAE5kB,KAAI2U,IAAKvH,EAAExJ,OAAOxB,UAEhC0iB,EAAWI,QAAU,SAAA9X,GACjBwX,EAAQ,Y,UAMFnS,QAAQC,IAAIT,G,eAA5BhB,E,iBAEA8R,GAAa4B,KAAK,QAAS1T,G,YAE7B1P,KAAKqhB,c,wBACCC,EAAWthB,KAAKshB,SAASS,SAASnS,IAAI,SAAA1Q,GAAC,OAAIuK,KAAUlD,IAAIrH,K,UACzDsiB,GAAa4B,KAAK,WAAY9B,G,YAGpCthB,KAAK0c,Q,kCACC8E,GAAa4B,KAAK,UAAWpjB,KAAK0c,S,mIAK5C,IAAMhM,EAAW,GACjBA,EAASV,KAAKwR,GAAarL,OAAO,SAAS/E,MAAM,SAAAiD,GAAK,OAAI,QAC1D3D,EAASV,KAAKwR,GAAarL,OAAO,SAAS/E,MAAM,SAAAiD,GAAK,OAAI,QAC1D3D,EAASV,KAAKwR,GAAarL,OAAO,WAAW/E,MAAM,SAAAiD,GAAK,OAAI,QAC5D3D,EAASV,KAAKwR,GAAarL,OAAO,YAAY/E,MAAM,SAAAiD,GAAK,OAAI,QAC7D3D,EAASV,KAAKwR,GAAarL,OAAO,YAAY/E,MAAM,SAAAiD,GAAK,OAAI,QAE7DnD,QAAQC,IAAIT,K,sCAIR1Q,KAAKuhB,OACavhB,KAAKuhB,MAAfM,MAEFliB,QAAQ,YAAkB,IAAflB,EAAc,EAAdA,GAAc,EAAV2U,IACjBhG,KAAUwW,cAAcnlB,S,GAxUfue,OA+UzBlD,OAAOyH,MAAQpU,GACAA,UCzUT0W,GAAiB,CACrBC,MAAOzlB,YAAS0lB,eAChBC,KAAM3lB,YAAS4lB,eC3BFC,G,YD+Bb,WAAYpjB,GAAQ,IAAD,8BACjB,4CAAMA,KAoGRqjB,oBAAsB,WACpB,EAAKC,mBAtGY,EAyGnBC,wBAA0B,SAAApd,GACCA,EAAjBqd,eAIgB,EAAKjkB,MAArBwY,YAEN,EAAK9X,SAAS,CACZ8X,YAAY,EACZ0L,QAAS,GACR,WACD,EAAKxjB,SAAS,CACZwjB,QAASV,SArHE,EAsKnB5F,kBAAoB,WAAO,IACJuG,EAAoB,EAAKnkB,MAAtC8e,YAESsF,EAAgB,EAAKC,cAA9B7P,QACR,IAAI4P,IAAeA,EAAYjP,QAA/B,CAJwB,IAQPmP,EAAmB,EAAKC,eAAjC/P,QACR,IAAI8P,IAAkBA,EAAenP,QAArC,CAIA,IAAMqP,EAAcrd,KAAUiV,SAASlW,IAAI,mBACrC4Y,EAAc0F,GAAeA,EAAYlX,KAAO,EAEtD,EAAK5M,SAAS,CAAEoe,cAAaC,aAAcoB,MAAqB,WAC9D,IAAKgE,GAAmBrF,EAAa,CAAC,IAC5BtK,EAAY,EAAK6P,cAAjB7P,QACR,GAAIA,EAAQD,QAAS,CAAC,IACHkQ,EAAgBjQ,EAAQD,QAAjCC,QACJiQ,GAAeA,EAAYhQ,UAAY,IACzCD,EAAQC,WAAa,QAMzB0P,IAAoBrF,GACtBze,KAAgBsf,aAAa,CAC3B,QAAS,gCApMI,EAyMnB+E,0BAA4B,WAC1B,EAAK7d,eA1MY,EA6MnB8d,yBAA2B,SAAA/d,GAEzB,IADyBoS,IAAjBiL,aACR,CAFmC,IAI3Bld,EAAkBH,EAAlBG,OAAQwJ,EAAU3J,EAAV2J,MAJmB,EAKc,EAAKvQ,MAA9CwY,EAL2B,EAK3BA,WAAYoM,EALe,EAKfA,aAAc5U,EALC,EAKDA,WAElC,IAAIwI,GAAczR,IAAW6d,GAAgBrU,IAAUP,EAAvD,CAIA,IAAM6U,EAAS,EAAKC,iBAAiBtQ,QACrC,EAAK9T,SACH,CACE8X,YAAY,EACZoM,aAAc7d,EACdiJ,WAAY,MAEd,WACM6U,GACFA,EAAOE,aAAaxU,QAjOT,EAuOnByU,kBAAoB,WAClB,EAAKX,cAAc7P,QAAQyQ,eAxOV,EA2OnB3M,aAAe,SAAA4M,GACb,EAAKxkB,SAAS,CACZ8X,WAAY0M,EACZN,aAAc,EACd5U,WAAY,QA/OG,EAmPnBmV,WAAa,SAACpe,GAAY,IAAD,EACG,EAAKtG,MAAvBiO,EADe,EACfA,MAOR0W,EARuB,EACTA,SAEV1W,EAAKG,SAAS9H,GACN2H,EAAK6D,OAAO,SAAAnU,GAAE,OAAIA,IAAO2I,IAE5B,sBAAO2H,GAAP,CAAa3H,MAzPL,EA6PnBgP,aAAe,EAAKoP,WA7PD,EA+PnBjR,oBAAsB,SAACnN,GACrB,EAAKoe,WAAWpe,IAhQC,EA6QnB8R,kBAAoB,WACb,EAAK7Y,MAAMwY,WAIhB,EAAK9X,SAAS,CACZ8X,YAAY,EACZoM,aAAc,EACd5U,WAAY,OANZ,EAAKvP,MAAM4kB,aAAY,IA/QR,EAyRnB3M,uBAAyB,SAAAzI,GACvB,EAAKvP,SAAS,CACZsP,WAAYC,EACZM,MAAO,QA5RQ,EAgSnBwT,gBAAkB,WAChB,EAAKvG,aA9RL,EAAK6G,cAAgB/iB,IAAMoU,YAC3B,EAAK6O,eAAiBjjB,IAAMoU,YAC5B,EAAKoP,iBAAmBxjB,IAAMoU,YAE9B,EAAK1V,MAAQ,CACXkhB,MAAO,KAEPpC,aAAa,EACbC,aAAc,KAEduG,UAAW,GAEXpB,QAASV,GACThL,YAAY,EAEZoM,aAAc,EACd5U,WAAY,KACZO,MAAO,MApBQ,E,mFAwBGtJ,EAAWC,GAAY,IAAD,EAStCvH,KAAKK,MAPPkhB,EAFwC,EAExCA,MACApC,EAHwC,EAGxCA,YACAC,EAJwC,EAIxCA,aACAuG,EALwC,EAKxCA,UACA9M,EANwC,EAMxCA,WACAoM,EAPwC,EAOxCA,aACA5U,EARwC,EAQxCA,WAGF,OAAI9I,EAAUga,QAAUA,IAIpBha,EAAU4X,cAAgBA,IAI1B5X,EAAU6X,eAAiBA,IAI3B7X,EAAUoe,YAAcA,IAIxBpe,EAAUsR,aAAeA,IAIzBtR,EAAU0d,eAAiBA,IAI3B1d,EAAU8I,aAAeA,GAGzB/I,EAAUyH,OAAS/O,KAAKc,MAAMiO,a,0CAQlC/O,KAAK4lB,YAELvM,IAAS5R,GAAG,yBAA0BzH,KAAKglB,0BAC3C3L,IAAS5R,GAAG,0BAA2BzH,KAAK+kB,2BAC5C1L,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,yBAC1C7c,KAAUC,GAAG,yBAA0BzH,KAAKie,mBAC5CzW,KAAUC,GAAG,wBAAyBzH,KAAKie,mBAC3CzW,KAAUC,GAAG,qBAAsBzH,KAAKie,mBACxCzW,KAAUC,GAAG,uBAAwBzH,KAAK6lB,wBAC1Cre,KAAUC,GAAG,sBAAuBzH,KAAK8lB,uBACzCte,KAAUC,GAAG,uBAAwBzH,KAAK+lB,wBAC1Cve,KAAUC,GAAG,uBAAwBzH,KAAKgmB,wBAC1Cxe,KAAUC,GAAG,yBAA0BzH,KAAKimB,0BAC5C3G,GAAY7X,GAAG,oBAAqBzH,KAAKmkB,uB,6CAIzC9K,IAAS3R,IAAI,yBAA0B1H,KAAKglB,0BAC5C3L,IAAS3R,IAAI,0BAA2B1H,KAAK+kB,2BAC7C1L,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,yBAC3C7c,KAAUE,IAAI,yBAA0B1H,KAAKie,mBAC7CzW,KAAUE,IAAI,wBAAyB1H,KAAKie,mBAC5CzW,KAAUE,IAAI,qBAAsB1H,KAAKie,mBACzCzW,KAAUE,IAAI,uBAAwB1H,KAAK6lB,wBAC3Cre,KAAUE,IAAI,sBAAuB1H,KAAK8lB,uBAC1Cte,KAAUE,IAAI,uBAAwB1H,KAAK+lB,wBAC3Cve,KAAUE,IAAI,uBAAwB1H,KAAKgmB,wBAC3Cxe,KAAUE,IAAI,yBAA0B1H,KAAKimB,0BAC7C3G,GAAY5X,IAAI,oBAAqB1H,KAAKmkB,uB,oKA0BrB+B,GAAWtE,O,gDAAW,G,OAArCL,E,KAEE9N,EAAwB8N,EAAxB9N,MAAOwO,EAAiBV,EAAjBU,aAEf3C,GAAY5C,QAAU4C,GAAY5C,SAAWwJ,GAAWxJ,QACxD1c,KAAKe,SAAS,CACZwgB,QAEApC,YAAa8C,GAAgBA,EAAa7b,OAAS,EACnDgZ,aAAcoB,OAGhBxgB,KAAK8e,kBAAkBrL,GAAS,IAAI7D,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,MAE/CiC,KAAgBsf,aAAa,CAC3B,QAAS,4B,sQAKLtP,EAAW,IACRV,KAAKtP,KAAgBC,KAAK,CACjC,QAAS,WACTkS,UAAW,CAAE,QAAS,gBACtBiN,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO8O,QAETjP,EAASV,KAAKtP,KAAgBC,KAAK,CACjC,QAAS,WACTkS,UAAW,CAAE,QAAS,mBACtBiN,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO8O,Q,SAE+BzO,QAAQC,IAAIT,G,mCAA7CyV,E,KAAWlE,E,KAEVvF,EAAY4C,GAAZ5C,QAERwJ,GAAW9C,KAAK1G,EAASyJ,EAAUtW,SAAUoS,EAAapS,U,uIAiI3CyO,GACf,IAAMnR,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOmR,K,+BAGhB,IACAvP,EAAS/O,KAAKc,MAAdiO,KADD,EAWH/O,KAAKK,MARPkhB,EAHK,EAGLA,MACApC,EAJK,EAILA,YACAC,EALK,EAKLA,aACAuG,EANK,EAMLA,UACA9M,EAPK,EAOLA,WACA0L,EARK,EAQLA,QACAU,EATK,EASLA,aACA5U,EAVK,EAULA,WAGI+V,EAAiB7E,EAAQA,EAAM9N,OAAS,GAAK,KACnD,OACE,oCACE,yBAAKpS,UAAU,WACb,yBAAKA,UAAU,gBACb,kBAAC,GAAD,CACEmV,IAAKxW,KAAKmlB,iBACVtM,WAAYA,EACZ0L,QAAqB,IAAZA,EACThf,QAASvF,KAAKqlB,kBACdzM,SAAU5Y,KAAK2Y,aACfQ,cAAenZ,KAAKkZ,kBACpBF,mBAAoBhZ,KAAK+Y,yBAE3B,yBAAK1X,UAAU,mBACb,yBAAKA,UAAU,4BACb,kBAAC,GAAD,CACEe,KAAK,eACLoU,IAAKxW,KAAK0kB,cACVrF,WAAY+G,EACZrK,MAAO4J,EACPxG,YAAaA,EACbC,aAAcA,EACdhJ,aAAcpW,KAAKoW,aACnB9S,MAAM,EACNwa,YAAa9d,KAAKokB,gBAClBrV,KAAMA,KAGV,kBAACsX,EAAA,EAAD,CACE5gB,WAAW,SACX8e,QAASA,EACT+B,GAAIzN,EACJ0N,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACEpf,OAAQ6d,EACR3U,KAAMD,EACN+F,aAAcpW,KAAKoW,aACnBvS,QAAS7D,KAAKkZ,kBACdnK,KAAMA,a,GA/VFnN,aE/BhB6kB,G,WACJ,WAAY7gB,GAAM,oBAChB5F,KAAK4F,IAAMA,EACX5F,KAAK0mB,QAAS,EACd1mB,KAAKsC,MAAQ,K,qDAQb,OAJKtC,KAAK0mB,SACR1mB,KAAKsC,MAAQue,KAAKC,MAAMH,aAAaC,QAAQ5gB,KAAK4F,MAClD5F,KAAK0mB,QAAS,GAET1mB,KAAKsC,Q,6BAENA,GACNtC,KAAKsC,MAAQA,EACbqe,aAAaI,QAAQ/gB,KAAK4F,IAAKib,KAAKG,UAAUhhB,KAAKsC,Y,KAI1CqkB,GAAiB,IAAIF,GAAW,kBAChCG,GAAM,IAAIH,GAAW,OACrBhK,GAAW,IAAIgK,GAAW,Y,+BC8DxB3hB,GALCC,YACdE,IAIaH,CA7EQ,SAAC,GAA2C,IAAzC8hB,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMxjB,EAAY,EAAZA,MAC9CyjB,EAASC,IAAG,oBAA4C,SAAvB1jB,EAAMC,QAAQpB,KAAkB,oBAAsB,sBAGvF8kB,EAAe,YAAIN,EAAIlH,QAAQ,KAAM,WACxC9P,IAAI,SAAAnM,GAAC,OAAI,yBAAKpC,UAAU,0BAA0BoC,KACrD,OACE,yBAAKpC,UAAW2lB,GACd,yBAAKla,IAAKqa,KAAM9lB,UAAU,sBAC1B,yBAAKA,UAAU,qBACZ6lB,GAEH,yBAAK7lB,UAAU,oBACb,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,SAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,QAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,SAGJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,QAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,QAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,SAGJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,SAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,QAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,UAGJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,sBAAsBkE,QAASuhB,GAC5C,6BAAK,kBAACM,GAAA,EAAD,OACL,yBAAK/lB,UAAU,oBAAf,SAEF,yBAAKA,UAAU,sBAAsBkE,QAASshB,EAAS,IACrD,kCACA,yBAAKxlB,UAAU,oBAAf,MAEF,yBAAKA,UAAU,sBAAsBkE,QAASwhB,GAC5C,mCACA,yBAAK1lB,UAAU,oBAAf,aCYKyD,I,OAJCC,YACdE,IAGaH,CA7EK,SAAC,GAAiD,IAA/C8hB,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMxjB,EAAkB,EAAlBA,MAAOoK,EAAW,EAAXA,KACpD0Z,EAAwB,GAApBvN,OAAOwN,WACTC,EAAW,CACf1Z,MAAOwZ,GAEHG,EAAM,CACV3Z,MAAOwZ,EAAE,IACTvZ,OAAQuZ,EAAE,KAGNH,EAAe,sBAAIN,EAAIlH,QAAQ,KAAM,WAAtB,YAA+BY,MAAM3S,EAAOiZ,EAAIxgB,QAAQqhB,KAAK,UAAKxmB,KAAK,MACzF2O,IAAI,SAAAnM,GAAC,OAAI,yBAAKpC,UAAU,qBAAqBoC,KAG1CujB,EAASC,IAAG,eAAuC,SAAvB1jB,EAAMC,QAAQpB,KAAkB,eAAiB,iBACnF,OACE,yBAAKf,UAAW2lB,GACd,yBAAKpZ,MAAO2Z,GACV,yBAAKlmB,UAAU,gBACZ6lB,GAEH,yBAAK7lB,UAAU,eACb,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,SAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,QAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,SAGJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,QAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,QAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,SAGJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,SAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,QAEF,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAC5D,kCACA,yBAAKxlB,UAAU,eAAf,UAGJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASuhB,GAAO,kBAACM,GAAA,EAAD,OAC5D,yBAAK/lB,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASshB,EAAS,IAA9D,KACA,yBAAKxlB,UAAU,iBAAiBuM,MAAO4Z,EAAKjiB,QAASwhB,GAArD,Y,6NCvDV,IAkTeW,G,WArSb,WAAY5mB,GAAQ,IAAD,gCAVnBC,SAAW,SAAC4mB,EAAOC,GAKjB,OAJA,EAAKvnB,M,uVAAL,IACK,EAAKA,MADV,GAEKsnB,GAEEC,KAKU,KAHnBC,cAAgB,aAGG,KAgDnB1K,uBAAyB,SAAAlW,GAAW,IAC1BwV,EAAaxV,EAAbwV,SAER,EAAK1b,SAAS,CACZ0b,WACAW,OAAQ,CACN5H,SAAS,EACT6H,WAAW,IAEZ,WACD,EAAKC,oBA1DU,KA8DnBhU,mBAAqB,SAAArC,KA9DF,KAmEnBsW,wBAA0B,SAAAtW,GAAW,IAC3BuW,EAAuBvW,EAAvBuW,WAAYpW,EAAWH,EAAXG,OAEhBoW,EACF,EAAKC,YAAY1N,IAAI3I,EAAQA,GAE7B,EAAKqW,YAAYC,OAAOtW,IAzET,KA6EnBoR,2BAA6B,SAAAvR,GAAW,IACTwR,EAAuBxR,EAA5CyR,oBAER,EAAK3X,SAAS,CAAE0X,sBAAsB,kBAAM,EAAK6E,oBAhFhC,KAmFnBtW,uBAAyB,SAAAC,GACvB,EAAK0W,YAAW,IApFC,KAuFnBL,eAvFmB,qBAuFF,4BAAA5S,EAAA,wDACP+N,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,GAFX,0EAIR,IAAIvH,QAAQ,SAAAmS,GAAO,OAAIjW,KAAUwQ,OAAO,kBAAM,EAAKD,YAAW,GAAM/c,KAAKyiB,QAJjE,yCAvFE,KA8FnBxF,UAAY,aA9FO,KAuGnBE,qBAAuB,SAAA9W,GAAW,IACxBwV,EAAa,EAAKpc,MAAlBoc,SACA9B,EAAa1T,EAAb0T,SAEHqD,aAAevB,EAAU9B,EAAS5L,OAIvC,EAAKkP,kBAAkBhX,IA/GN,KAkHnBgX,kBAAoB,SAAAhX,GAAW,IAAD,EACQ,EAAK5G,MAAjCoT,EADoB,EACpBA,MAAOgJ,EADa,EACbA,SAAUW,EADG,EACHA,OACzB,GAAK3J,EAAL,CAF4B,IAIpB+B,EAAY4H,EAAZ5H,QACR,IAAIA,GAAY/B,EAAMrN,OAAtB,CAL4B,IAOpBiB,EAAYJ,EAAZI,QAEFc,EAAOX,KAAUjB,IAAIc,GAC3B,GAAKc,GAIA+V,aAAY7W,EAASoV,GAA1B,CAIA,IAAM0B,EAAQ/N,aAAa/I,EAASoV,GAC9B2B,EAAe3K,EAAM4K,UAAU,SAAAnf,GAAC,OAAIA,IAAMmI,IAChD,IAAsB,IAAlB+W,GAAiC,MAAVD,EAA3B,CAKA,IADA,IAAMG,EAAU,GACP3X,EAAI,EAAGA,EAAI8M,EAAMrN,OAAQO,IAAK,CACrC,IAAMwB,EAAOX,KAAUjB,IAAIkN,EAAM9M,IAC3B4X,EAAYnO,aAAaqD,EAAM9M,GAAI8V,GACrCtU,GAAsB,MAAdoW,GACVD,EAAQtO,KAAK7H,EAAK1J,IAItB,IAAM+f,EAAa,GACL,MAAVL,EAEE9W,IAAYgS,IAASoF,aAAgBtW,EAAKuW,eAC5Che,KAAgBie,UAAU,GAC1BC,cAA4B,KAGR,IAAlBR,IACE5I,EACFjC,QAAQc,MAAM,+BAAgCpN,GAG9CuX,EAAWxO,KAAK3I,IAKtB,EAAKwX,aAAaP,EAASE,EAAY,WACrC,EAAKM,iBAAiBN,GACtB,EAAKX,mBAtKP7d,KAAKyd,YAAc,IAAIhX,IADN,IAGTgS,EAAuBY,IAAvBZ,mBAERzY,KAAKK,MAAQ,CACXoY,qBACAhF,MAAO,KACPyL,iBAAiB,EACjBzC,SAAyB,iBAAf3b,EAAMsB,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,mBACnFgb,OAAQ,CACN5H,SAAS,EACT6H,WAAW,I,oDAMf,IAAMyK,EAAM9nB,KAAKsd,iBAajB,OAXAjE,IAAS5R,GAAG,2BAA4BzH,KAAKwY,4BAE7ChR,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,wBAAyBzH,KAAKud,yBAC3C/V,KAAUC,GAAG,yBAA0BzH,KAAKie,mBAC5CzW,KAAUC,GAAG,wBAAyBzH,KAAKie,mBAC3CzW,KAAUC,GAAG,qBAAsBzH,KAAK+d,sBAExCuB,GAAY7X,GAAG,uBAAwBzH,KAAKmd,wBAE5CzT,KAAgBjC,GAAG,kBAAmBzH,KAAKsJ,oBACpCwe,I,gCAIPzO,IAAS3R,IAAI,2BAA4B1H,KAAKwY,4BAE9ChR,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,wBAAyB1H,KAAKud,yBAC5C/V,KAAUE,IAAI,yBAA0B1H,KAAKie,mBAC7CzW,KAAUE,IAAI,wBAAyB1H,KAAKie,mBAC5CzW,KAAUE,IAAI,qBAAsB1H,KAAK+d,sBAEzCuB,GAAY5X,IAAI,uBAAwB1H,KAAKmd,wBAE7CzT,KAAgBhC,IAAI,kBAAmB1H,KAAKsJ,sB,mCA8HjCgV,GAAqC,IAA5BE,EAA2B,uDAAd,GAAIe,EAAU,uCACvC9C,EAAazc,KAAKK,MAAlBoc,SAEF+C,EAAiBlB,EAAQ/I,OAAOiJ,GAAYvO,KAAK,SAACvF,EAAGwF,GACzD,OAAOC,aAAaC,aAAaF,EAAGuM,GAAWrM,aAAa1F,EAAG+R,MAG5DiL,EAAYjI,iBAAiBzf,KAAKK,MAAMoT,MAAO+L,GAKpDxf,KAAKe,SAAS,CAAE0S,MAAO+L,GAAkBD,GAJnCA,GAAUA,M,yLAmBDG,E,gCAAiB7O,E,+BAnNX,G,EAoNe7Q,KAAKK,MAAjCoT,E,EAAAA,MAAOgJ,E,EAAAA,WAAUW,E,EAAAA,QAGd5H,Q,qDAKP4H,EAAOC,U,wDAKPuC,EAAc,sBACdC,EAAe,GACdH,GAAWjM,GAASA,EAAMrN,OAAS,IAChC+B,EAAOX,KAAUjB,IAAIkN,EAAMA,EAAMrN,OAAS,OAE9CwZ,EAAcxP,aAAajI,EAAK1J,GAAIge,GACpCoD,EAAe1X,EAAK1J,IAKxB2e,EAAO5H,SAAU,E,UACI9U,KAAgBC,KAAK,CACxC,QAAS,WACTkS,UAAW4J,EACX1J,eAAgB8M,EAChBC,aAAcF,EACd/O,MAlPmB,KAmPlBkP,QAAQ,WACT3C,EAAO5H,SAAU,EACbkK,GACFhf,KAAgBsf,aAAa,CAAE,QAAS,2BAA4BjR,KAAM0N,M,WATxE5b,E,OAcFuc,IAAWpd,KAAKK,MAAM+c,O,sDAKtBvc,EAAOgP,SAASzJ,OAAS,GAAKvF,EAAOgP,SAAS,KAAOgQ,GACvDhf,EAAOgP,SAASoQ,QAGlB7C,EAAOC,WAAaxc,EAAOgP,SAASzJ,QAEhCsZ,E,kCACI1f,KAAKkgB,aAAarf,EAAOgP,SAAU,WAIvC,GAHA,EAAKiP,iBAAiBje,EAAOgP,UAC7B,EAAKgO,YAEDhd,EAAOgP,SAASzJ,OA3QH,GA4Qf,OAAO,EAAKuX,YAAW,EA5QR,GA4QkC9c,EAAOgP,SAASzJ,U,iDAK/DpG,KAAKmgB,YAAYtf,EAAOgP,SAAU,WAItC,GAFA,EAAKiP,iBAAiBje,EAAOgP,UAEzBhP,EAAOgP,SAASzJ,QAAUvF,EAAOgP,SAASzJ,OAASyK,EACrD,OAAO,EAAK8M,YAAW,EAAO9M,EAAQhQ,EAAOgP,SAASzJ,U,4IAM7CkY,GACf,IAAMnR,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOmR,K,kCAGdA,EAASiB,GACnB,GAAuB,IAAnBjB,EAAQlY,OAAZ,CAD6B,IAQvBga,GAFYpgB,KAAKK,MAAfoT,OAEmB,IAAI8B,OAAO+I,GACtC,OAAOte,KAAKe,SAAS,CAAE0S,MAAO2M,GAAYb,GAPpCA,GAAUA,M,mCAUL9L,EAAO8L,GAClB,OAAOvf,KAAKe,SAAS,CAAE0S,SAAS8L,M,wCAvGVgB,EAAY/B,GAClC,GAAI+B,EAAWna,SAAWoY,EAAWpY,OAAQ,CAC3C,IAAK,IAAIO,EAAI,EAAGA,EAAI4Z,EAAWna,OAAQO,IACrC,GAAI4Z,EAAW5Z,KAAO6X,EAAW7X,GAAI,OAAO,EAG9C,OAAO,EAGT,OAAO,M,KC3MX,IAAMohB,GAAc,SAAC3gB,GACnB,IAAMe,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAEH,OADAoL,QAAQyU,KAAK,gBAAiB5gB,GACvB,GAET,IAAM6gB,EAAW,GACjB,OAAQ9f,EAAK/F,KAAK,UAChB,IAAK,qBACC8lB,aAAa9gB,IACf6gB,EAASjY,KAAK,CAAE,QAAS,YAAa3I,QAASD,IAEjD6gB,EAASjY,KAAK,CAAE,QAAS,oBAAqB3I,QAASD,EAAQ+gB,uBAAuB,IACtF,MAEF,IAAK,qBACCC,aAAUhhB,GACZ6gB,EAASjY,KAAK,CACZ,QAAS,sBACT3I,QAASD,EACTuB,QAASc,KAAU0K,UACnBkU,OAAQ,CACN,QAAS,0BACTC,WAAW,KAGNJ,aAAa9gB,IACtB6gB,EAASjY,KAAK,CAAE,QAAS,YAAa3I,QAASD,IAEjD,MAEF,IAAK,kBACL,IAAK,iBACH6gB,EAASjY,KAAK,CAAE,QAAS,oBAAqB3I,QAASD,EAAQ+gB,uBAAuB,IAG1F,OAAOF,GAEHM,GAAO,SAACC,GAAD,OAAQ,IAAItX,QAAQ,SAAAmS,GAAO,OAAI/G,WAAW+G,EAASmF,MAE1DC,GAAU,sCAAG,WAAO1Z,GAAP,iCAAArE,EAAA,4DACXge,EAAa,IAAIhB,GAAY,CAAEtlB,KAAM,iBAD1B,SAEXsmB,EAAWC,QAFA,uBAGXJ,GAAK,KAHM,OAIbK,EAAQ,GAJK,YAKV7Z,EAAKyC,KAAK,SAAA/S,GAAE,OAAK+I,KAAUjB,IAAI9H,MAAQmqB,GAAS,GALtC,iCAMTF,EAAW/K,aANF,wBAOT4K,GAAK,KAPI,QAQfK,IARe,wCAWXF,EAAWC,QAXA,QAYXV,EAAWlZ,EAAK8Z,QAAQd,IAZb,+BAaKE,EAbL,0EAaNa,EAbM,4BAeKpoB,KAAgBC,KAAKmoB,GAf1B,QAePhB,EAfO,OAgBbvU,QAAQC,IAAIsU,GAhBC,mDAkBbvU,QAAQC,IAAR,KAAesV,GAlBF,0VAAH,sDAwDDC,GAhCH,SAAC,GAAiD,IAA1CC,EAAyC,EAA9CpC,IAAgB7X,EAA8B,EAA9BA,KAAMka,EAAwB,EAAxBA,kBAAwB,EACrCC,mBAAS,IAD4B,mBACpDtC,EADoD,KAC/CuC,EAD+C,KAErDtC,EAAW,SAACuC,GAAD,OAAY,WACvBxC,EAAIxgB,QAAS4iB,EAAU5iB,QAG3B+iB,EAAO,GAAD,OAAIvC,GAAJ,OAAUwC,MAEZtC,EAAQ,WACZqC,EAAOvC,EAAI5U,OAAO,EAAG4U,EAAIxgB,OAAS,KAE9B2gB,EAAI,sCAAG,sBAAArc,EAAA,wDACPkc,IAAQoC,EADD,gBAETC,EAAkB,MAFT,6BAIT1V,QAAQC,IAAI,YAAazE,GAJhB,SAKH0Z,GAAW1Z,GALR,OAMTuN,WAAW,WACT2M,EAAkB,UACjB,KACH9b,GAAekc,OAAO,IATb,yCAAH,qDAcV,MArGO,CACH,iBACA,mBACA,iBACA,OACA,SACA,QACAna,SAASoa,UAAUC,WAEjBD,UAAUE,UAAUta,SAAS,QAAU,eAAgBuI,SA6FpD,kBAAC,GAAD,CAAaqP,MAAOA,EAAOD,SAAUA,EAAUE,KAAMA,EAAMH,IAAKA,EAAKjZ,KAAMqb,EAAU5iB,SAErF,kBAAC,GAAD,CAAgB0gB,MAAOA,EAAOD,SAAUA,EAAUE,KAAMA,EAAMH,IAAKA,KCjH/D6C,GCMD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWT,EAAuB,EAAvBA,kBAAuB,EACbC,mBAAS/b,GAAqBwc,UADjB,mBAC1CtB,EAD0C,KAClCuB,EADkC,OAEzBV,qBAFyB,mBAE1ClB,EAF0C,KAEpC6B,EAFoC,OAG3BX,mBAAS/b,GAAUwc,UAAY,IAHJ,mBAG1C/C,EAH0C,KAGrCuC,EAHqC,OAIzBD,mBAAS/b,GAAewc,UAAY,IAJX,mBAI1C5a,EAJ0C,KAIpC0W,EAJoC,OAKjByD,oBAAS,GALQ,mBAK1CY,EAL0C,KAKhCpE,EALgC,KAO3CqE,EAAiBC,iBAAO,MAMxBC,EAAe,WACnB,MAAK,SAASC,KAAKtD,IAInBzZ,GAAekc,OAAOta,GACtB5B,GAAUkc,OAAOzC,GAEjBiD,EAAQ,4IAAD,OAA+B9a,EAAK3I,OAApC,kBAAoDwgB,KACpD,IAPLiD,EAAQ,wEACD,IAoBLM,EAAqB,YAAX9B,EAEhB,OAAI8B,IAAYT,EACP,kBAAC,GAAD,CAAKT,kBAAmBA,EAAmBrC,IAAKA,EAAK7X,KAAMA,IAGhE+a,EACK,kBAAC,GAAD,CAAMpE,YAAaA,EAAaD,QAASA,EAAS1W,KAAMA,IAK/D,yBAAK1N,UAAU,iBACb,yBAAKA,UAAU,sBAAf,SAGA,yBAAKkE,QA5BY,WACJ,YAAX8iB,GACFlb,GAAqBkc,OAAO,OAC5BO,EAAkBzc,GAAqBwc,UACvCE,EAAQ,YACCI,MACThB,EAAkB,MAClB9b,GAAqBkc,OAAO,WAC5BO,EAAkBzc,GAAqBwc,UACvCE,EAAQ,WAAD,OAAYjD,MAmBSvlB,UAAS,6BAAwB8oB,EAAS,mBAAqB,sBACzF,iCAAOA,EAAU,8FAAqB,wFAAtC,KACA,6BAAMA,EAAU,kBAAChb,EAAA,EAAD,MAAmB,OAErC,yBAAK9N,UAAU,sBAAf,OAEE,2BAAOA,UAAU,qBAAqBiB,MAAOskB,EAAKriB,SAAU,SAAAsH,GAAC,OAAIsd,EAAOtd,EAAExJ,OAAOC,QAAQF,KAAK,UAEhG,yBAAKf,UAAU,qBAAqBkE,QAAS,kBAAMmgB,GAAY,KAC7D,gHACA,6BAAM3W,EAAK3I,SAEb,yBAAK/E,UAAU,qBAAqBkE,QAAS0kB,GAA7C,iHAGA,yBAAK5oB,UAAU,qBAAqBkE,QA1Df,WACvBwkB,EAAelV,QAAQvR,SAyDrB,6EAGA,kBAAC,EAAD,CAAakT,IAAKuT,IAEhBI,GACE,yBAAK9oB,UAAU,qBAAqBkE,QAAS,kBAAM0jB,EAAkB,QACnE,2GACA,kBAACmB,EAAA,EAAD,OAIJpC,GAAQ,yBAAK3mB,UAAU,iBAAgB,6BAAM2mB,M,oBC5DtCqC,OAff,SAAmCC,GAAmB,IAC5CC,EAD2C,iLAGzC,OACI,kBAAC,oBAAD,CAAkBC,SAAUC,MACxB,kBAACH,EAAqBtqB,KAAKc,YALM,GACda,IAAMC,WAWzC,OAFA2oB,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,uFCw3BIK,I,mBA52BX,WAAY9pB,GAAQ,IAAD,8BACf,4CAAMA,KA4CV+pB,4BAA8B,SAAA5jB,GAAW,IAC7B9E,EAAU8E,EAAV9E,MACHA,GAEL,EAAKgW,UAAUhW,IAjDA,EAoDnBgW,UAAY,SAAAhW,GAAU,IACVyD,EAAkDzD,EAAlDyD,IAAKklB,EAA6C3oB,EAA7C2oB,KAAMC,EAAuC5oB,EAAvC4oB,OAAQC,EAA+B7oB,EAA/B6oB,QAASC,EAAsB9oB,EAAtB8oB,QAASC,EAAa/oB,EAAb+oB,SAErCC,EAAU,EAAKrqB,MAAfqqB,MACR,GAAKA,EAAL,CAEA,IAAIC,GAAU,EACd,OAAQN,GACJ,IAAK,SACIC,GAAWC,GAAYC,GAAYC,IACpC,EAAK7nB,cACL+nB,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcC,MACpCH,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcE,MACpCJ,GAAU,GAEd,MAEJ,IAAK,aACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcC,MACpCH,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAMG,YAAcE,MACpCJ,GAAU,GAEd,MAEJ,IAAK,UACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKO,aAAaN,EAAMO,OAASC,OACjCP,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKO,aAAaN,EAAMO,OAASC,OACjCP,GAAU,GAEd,MAEJ,IAAK,QACL,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKrhB,cACLuhB,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKU,aACLR,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKW,mBACLT,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IAEpCE,GAAU,GAEd,MAEJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACD,IAAKL,IAAWC,IAAYC,IAAYC,EAAU,CAC9C,IAAMY,EAAW,IAAIC,OAAOnmB,EAAI8Z,QAAQ,QAAS,KAAO,GACxD,EAAKsM,mBAAmBF,GACxBV,GAAU,EAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAW,GAChBD,GAAU,GAEd,MAEJ,IAAK,MACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,WAAWF,EAAM9sB,SAAW,GACjC+sB,GAAU,GAEd,MAEJ,IAAK,QACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKe,mBAAmBd,EAAMe,aAAeC,MAC7Cf,GAAU,GAEd,MAEJ,IAAK,SACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKe,mBAAmBd,EAAMe,aAAeC,MAC7Cf,GAAU,GAMlBA,IACAjpB,EAAMyI,kBACNzI,EAAMwI,oBA3LK,EAyMnB8gB,aAAe,SAAAC,GAAW,IACdP,EAAU,EAAKrqB,MAAfqqB,MACHA,IAELO,EAASU,aAAMV,EAAQW,MAAmBC,OAE1CnB,EAAMO,OAASA,EACf,EAAKa,cAAL,UAAsBjtB,KAAKktB,MAAqB,IAAfrB,EAAMO,QAAvC,QAhNe,EAmNnBO,mBAAqB,SAAAQ,GAAS,IAClBtB,EAAU,EAAKrqB,MAAfqqB,MACHA,IAELsB,EAAOL,aAAMK,EAAMC,KAAyBC,MAE5CxB,EAAMe,aAAeO,EACrB,EAAKF,cAAL,UAAsBE,EAAtB,QA1Ne,EA6NnBT,mBAAqB,SAAAF,GAAa,IACtBX,EAAU,EAAKrqB,MAAfqqB,MACHA,GAEL,EAAKE,WAAWS,EAAWX,EAAM9sB,WAjOlB,EAoOnBgtB,WAAa,SAAAC,GAAgB,IACjBH,EAAU,EAAKrqB,MAAfqqB,MACHA,IAELG,EAAcc,aAAMd,EAAa,EAAGH,EAAM9sB,UAAY,GAEtD8sB,EAAMG,YAAcA,EACpB,EAAKvqB,SAAS,CAAEuqB,kBA3OD,EA8OnBsB,mBAAqB,WACjB,IAEMC,GAFoBpV,SAASqV,mBAAqBrV,SAASsV,sBAAwBtV,SAASuV,2BACzEvV,SAASwV,eAAe,sBAGjD,EAAKlsB,SAAS,CACV8rB,gBApPW,EAwPnBK,eAAiB,WAGb,KAD0BzV,SAASqV,mBAAqBrV,SAASsV,sBAAwBtV,SAASuV,yBAClG,CAEA,IAAMG,EAAS1V,SAASwV,eAAe,cAEjCG,EAAUC,SAASF,EAAOvf,MAAMpD,KAAM,IACtC8iB,EAASD,SAASF,EAAOvf,MAAMrD,IAAK,IARvB,EAUG,EAAKgjB,kBAAkBH,EAASE,GAAQ,GAAtD9iB,EAVW,EAUXA,KAAMD,EAVK,EAULA,IAEV6iB,IAAY5iB,GAAQ8iB,IAAW/iB,IAGnC4iB,EAAOvf,MAAMpD,KAAOA,EAAO,KAC3B2iB,EAAOvf,MAAMrD,IAAMA,EAAM,QAxQV,EAkUnBijB,iBAAmB,SAAArrB,GACWA,EAAlBE,QAnUO,EAuUnBorB,qBAAuB,SAAAtrB,GAAU,IACbgpB,EAAUhpB,EAAlBE,OACR,GAAK8oB,EAAL,CAF4B,IAIpBG,EAAgB,EAAKjrB,MAArBirB,YACAjtB,EAA+B8sB,EAA/B9sB,SAAUqtB,EAAqBP,EAArBO,OAAQgC,EAAavC,EAAbuC,SAG1B,EAAK3sB,SAAS,CACV1C,WAEAqtB,SACAiC,SAAS,EACTD,YACD,WACMpC,IAELH,EAAMG,YAAcA,OAxVT,EA4VnBsC,cAAgB,SAAAzrB,GAAU,IACNgpB,EAAUhpB,EAAlBE,OAER,EAAKtB,SAAS,CACV4sB,SAAS,GACV,WACMxC,IAEY,EAAK9qB,MAAdwtB,KAEJ1C,EAAM0C,OAEN1C,EAAM2C,YAxWC,EA6WnBC,WAAa,SAAA5rB,GAAU,IACX6rB,EAAW,EAAKltB,MAAhBktB,OAER,EAAKjtB,SAAS,CACV8sB,MAAM,EACNhf,QAAQ,IAGZnO,KAAgBsf,aAAa,CAAE,QAAS,gCACxCgO,GAAUA,EAAO7rB,IAtXF,EAyXnB8rB,YAAc,SAAA9rB,GAAU,IACZ+rB,EAAY,EAAKptB,MAAjBotB,QAER,EAAKntB,SAAS,CACV8sB,MAAM,EACNhf,QAAQ,IAGZnO,KAAgBsf,aAAa,CAAE,QAAS,iCACxCkO,GAAWA,EAAQ/rB,IAlYJ,EAqYnBgsB,YAAc,SAAAhsB,GAAU,IACZisB,EAAY,EAAKttB,MAAjBstB,QAER1tB,KAAgBsf,aAAa,CAAE,QAAS,iCACxCoO,GAAWA,EAAQjsB,GAJA,IAMXgpB,EAAU,EAAKrqB,MAAfqqB,MACR,EAAKkD,eAAe,CAAC/C,YAAa,EAAGjtB,SAAU8sB,EAAM9sB,YA5YtC,EA+YnBiwB,iBAAmB,SAAAnsB,GAAU,IACTgpB,EAAUhpB,EAAlBE,OACR,GAAK8oB,EAAL,CAFwB,IAIhBxe,EAAW,EAAK7L,MAAhB6L,OACA2e,EAA4CH,EAA5CG,YAAajtB,EAA+B8sB,EAA/B9sB,SAAUqtB,EAAqBP,EAArBO,OAAQgC,EAAavC,EAAbuC,SAEvC,EAAK3sB,SAAS,CACV1C,WACAitB,cACAI,SACAgC,aAGJhtB,KAAgBsf,aAAa,CACzB,QAAS,oCACTrT,SACA2e,cACAjtB,WACAqtB,SACAgC,aAGJ,EAAKW,eAAe,CAAE/C,cAAajtB,eAtapB,EAyanBkwB,mBAAqB,SAAApsB,GAAU,IACnBqsB,EAAmB,EAAK1tB,MAAxB0tB,eAEQrD,EAAUhpB,EAAlBE,OACR,GAAK8oB,EAAL,CAJ0B,IAMlBO,EAAWP,EAAXO,OAER,EAAK3qB,SAAS,CACV2qB,WAGJhrB,KAAgBsf,aAAa,CAAE,QAAU,0BAA2B0L,WACpE8C,GAAkBA,EAAersB,KAtblB,EAybnBssB,eAAiB,SAAAtsB,GAAU,IACPgpB,EAAUhpB,EAAlBE,OACR,GAAK8oB,EAAL,CAFsB,IAIdxe,EAAW,EAAK7L,MAAhB6L,OAEA+gB,EAAavC,EAAbuC,SAER,EAAK3sB,SAAS,CACV2sB,aAGJhtB,KAAgBsf,aAAa,CACzB,QAAS,kCACTrT,SACA+gB,eAxcW,EA4cnBgB,cAAgB,WACZ,EAAK3tB,SAAS,CAAE4sB,SAAS,KA7cV,EAgdnB9jB,YAAc,WACV,EAAK8kB,mBAjdU,EAodnBA,gBAAkB,WAAO,IACbxD,EAAU,EAAKrqB,MAAfqqB,MACHA,IAEe,EAAK9qB,MAAjBstB,QAEJ,EAAK5sB,SAAS,CACV8sB,MAAO,EAAKxtB,MAAMwtB,KAClBhf,QAAQ,IAGRsc,EAAMyD,OACNzD,EAAM0C,OAEN1C,EAAM2C,UAleC,EAuenBe,sBAAwB,SAAA1sB,GACpB,IAAM2sB,EAAMrX,SAASwV,eAAe,sBAChC6B,GAAKA,EAAI5U,QAEb,EAAK6U,eAAgB,EACrB5sB,EAAMwI,iBAE0B,IAA5BxI,EAAM6U,YAAYgY,QAEtB,EAAKC,QAAU9sB,EAAM6U,YAAYiY,QACjC,EAAKC,QAAU/sB,EAAM6U,YAAYkY,QAEjCzX,SAAS0X,YAAc,EAAKC,gBAC5B3X,SAAS4X,UAAY,EAAKC,cAE1B,EAAKvuB,SAAS,CACVwuB,gBAAgB,MAvfL,EA2fnBD,cAAgB,SAAAntB,GACZA,EAAMwI,iBAEN8M,SAAS0X,YAAc,KACvB1X,SAAS4X,UAAY,KAErB,EAAKtuB,SAAS,CACVwuB,gBAAgB,KAlgBL,EA8iBnBH,gBAAkB,SAAAjtB,GACdA,EAAMwI,iBADiB,MAGD,EAAK4iB,kBAAkBprB,EAAM0I,QAAU,EAAKokB,QAAS9sB,EAAM2I,QAAU,EAAKokB,SAAS,GAAjG1kB,EAHe,EAGfA,KAAMD,EAHS,EAGTA,IAER4iB,EAAS1V,SAASwV,eAAe,cACvCE,EAAOvf,MAAMpD,KAAOA,EAAO,KAC3B2iB,EAAOvf,MAAMrD,IAAMA,EAAM,MArjBV,EAwjBnBilB,gBAAkB,SAAArtB,GACdA,EAAMyI,kBADiB,IAGfugB,EAAU,EAAKrqB,MAAfqqB,MACHA,GAEL,EAAKpqB,SAAS,CACV0uB,UAAU,EACVC,aAAcvE,EAAMG,eAhkBT,EAokBnBppB,aAAe,SAACC,EAAOG,GAAW,IACtB6oB,EAAU,EAAKrqB,MAAfqqB,MACHA,GAEL,EAAKpqB,SAAS,CACV2uB,aAAcptB,EAAQ6oB,EAAM9sB,YAzkBjB,EA6kBnBsxB,sBAAwB,WAAO,IAAD,EACS,EAAKtvB,MAAhCovB,EADkB,EAClBA,SAAUC,EADQ,EACRA,aACbD,GAEL,EAAK1uB,SAAS,CACV0uB,UAAU,EACVnE,YAAaoE,EACbA,aAAc,GACf,WAAO,IACEvE,EAAU,EAAKrqB,MAAfqqB,MACHA,GAEDY,OAAO6D,SAASF,KAChBvE,EAAMG,YAAcoE,MA1lBb,EA+lBnBG,iBAAmB,WACf,EAAKC,YAAa,GAhmBH,EAmmBnBC,iBAAmB,WACf,EAAKD,YAAa,GApmBH,EAumBnBE,gBAAkB,SAAA7tB,GACd,EAAK4sB,eAAgB,EACF,EAAK1uB,MAAhBwO,QAGJ,EAAK9N,SAAS,CACV8N,QAAQ,IAIhBohB,aAAa,EAAKC,kBAClB,EAAKA,iBAAmB5T,WAAW,WAC3B,EAAKwT,YACJ,EAAKzvB,MAAMwtB,MACX,EAAKxtB,MAAMhC,UAEhB,EAAK0C,SAAS,CACV8N,QAAQ,KAEb,MA1nBY,EA6nBnBxL,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,+BACTmQ,UAAW,QAhoBA,EAooBnBC,yBAA2B,SAACjuB,EAAOupB,GAC3BA,IAAW,EAAKrrB,MAAMqrB,QAE1B,EAAK3qB,SAAS,CACV2qB,UACD,WAAO,IACEP,EAAU,EAAKrqB,MAAfqqB,MACHA,IAELA,EAAMO,OAASA,MA7oBJ,EAipBnB2E,kCAAoC,SAAAluB,GACd,EAAKrB,MAAfqqB,OAGR1T,SAAS6Y,cAAc9gB,QArpBR,EAwpBnBoc,WAAa,WAAO,IACRT,EAAU,EAAKrqB,MAAfqqB,MACHA,IAEgB,IAAjBA,EAAMO,OACNP,EAAMO,OAAS,EAAK6E,YAAc,IAElC,EAAKA,WAAapF,EAAMO,OACxBP,EAAMO,OAAS,KAhqBJ,EAoqBnBG,iBAAmB,SAAA1pB,GACfA,GAASA,EAAMyI,kBAEf,IAAM/F,EAAO4S,SAASwV,eAAe,sBAChCpoB,IAEqB4S,SAASqV,mBAAqBrV,SAASsV,sBAAwBtV,SAASuV,wBAE9F,EAAKwD,iBAIT,EAAKC,kBAAkB5rB,KAhrBR,EA+rBnB6rB,eAAiB,WAAO,IACZ/jB,EAAW,EAAK7L,MAAhB6L,OAEFO,EAAOE,KAAU7G,IAAIoG,GAC3B,GAAKO,EAAL,CAJmB,IAMXyjB,EAAWzjB,EAAXyjB,OACR,GAAKA,EAAL,CAPmB,IASXC,EAAcD,EAAdC,UACR,GAAKA,EAEL,OAAOC,KAAYH,eAAeE,MA3sBnB,EA8sBnBvC,eAAiB,SAAA/C,GAAgB,IACrB3e,EAAW,EAAK7L,MAAhB6L,OAEFO,EAAOE,KAAU7G,IAAIoG,GAC3B,GAAKO,EAAL,CAJ4B,IAMpByjB,EAAWzjB,EAAXyjB,OACR,GAAKA,EAAL,CAP4B,IASpBC,EAAcD,EAAdC,UACHA,IAEAtF,EAGDuF,KAAYxC,eAAeuC,EAAWtF,GAFtCuF,KAAYC,iBAAiBF,OA3tBlB,EAiuBnBG,uBAAyB,SAAA5uB,GACrBA,EAAMwI,iBACNxI,EAAMyI,mBAnuBS,EAsuBnBomB,gBAAkB,SAAA7uB,GACdA,EAAMyI,kBADiB,gBAGfmkB,eAGR,EAAKJ,mBA5uBU,EA+uBnBsC,kBAAoB,SAAA9uB,GAChBA,EAAMyI,kBADmB,gBAGjBmkB,eAGR,EAAKlD,iBAAiB1pB,IArvBP,EAwvBnBiX,YAAc,WACVnD,IAAgBC,IAAI,EAAKL,kBAzvBV,EA6vBnBqb,WAAa,WACTjb,IAAgBE,OAAO,EAAKN,kBA3vB5B,EAAKA,gBAAkB,IAAIC,IAAgB,EAAKqC,WAChD,EAAK9X,MAAQ,GAJE,E,iFA2BE,IACT8qB,EAAUnrB,KAAKc,MAAfqqB,MACRnrB,KAAKmxB,cAAchG,GACnBrR,OAAO6B,iBAAiB,SAAU3b,KAAKktB,gBACvCzV,SAASkE,iBAAiB,mBAAoB3b,KAAK4sB,oBACnDiE,KAAYppB,GAAG,4BAA6BzH,KAAK6qB,+B,6CAG7B,IACZM,EAAUnrB,KAAKc,MAAfqqB,MACRnrB,KAAKoxB,iBAAiBjG,GACtBrR,OAAO+B,oBAAoB,SAAU7b,KAAKktB,gBAC1CzV,SAASoE,oBAAoB,mBAAoB7b,KAAK4sB,oBACtDiE,KAAYnpB,IAAI,4BAA6B1H,KAAK6qB,6BAElD5U,IAAgBE,OAAOnW,KAAK6V,mB,oCAqJlBvF,GAAO,IACT3D,EAAW3M,KAAKc,MAAhB6L,OAERjM,KAAgBsf,aAAa,CACzB,QAAS,wBACTrT,SACA2D,W,yCAsEWpP,EAAWC,EAAWC,GAAW,IACxC+pB,EAAUnrB,KAAKc,MAAfqqB,MAEJjqB,EAAUiqB,QAAUA,IACpBnrB,KAAKoxB,iBAAiBlwB,EAAUiqB,OAChCnrB,KAAKmxB,cAAchG,M,oCAIbA,GACV,GAAKA,EAAL,CAEA,IAAMkG,EAAY5Z,SAASwV,eAAe,cAHzB,EAIKjtB,KAAKutB,kBAAkBsD,KAAYS,UAAU9mB,KAAMqmB,KAAYS,UAAU/mB,KAAK,GAA5FC,EAJS,EAITA,KAAMD,EAJG,EAIHA,IACd8mB,EAAUzjB,MAAMpD,KAAOA,EAAO,KAC9B6mB,EAAUzjB,MAAMrD,IAAMA,EAAM,KAEHkN,SAASwV,eAAe,sBAChC/S,QAIjB,IAAMqX,EAAY9Z,SAASwV,eAAe,wBACrCsE,IAELpG,EAAMqG,iBAAmBxxB,KAAKytB,qBAC9BtC,EAAMsG,aAAezxB,KAAKwtB,iBAC1BrC,EAAMuG,UAAY1xB,KAAK4tB,cACvBzC,EAAMwG,OAAS3xB,KAAK+tB,WACpB5C,EAAMyG,QAAU5xB,KAAKiuB,YACrB9C,EAAM0G,QAAU7xB,KAAKmuB,YACrBhD,EAAM2G,aAAe9xB,KAAKsuB,iBAC1BnD,EAAM4G,eAAiB/xB,KAAKuuB,mBAC5BpD,EAAM6G,WAAahyB,KAAKyuB,eACxBtD,EAAM8G,UAAYjyB,KAAK0uB,cAEvB6C,EAAUna,UAAY,GACtBma,EAAUW,YAAY/G,O,uCAGTA,GACRA,IAELA,EAAMqG,iBAAmB,KACzBrG,EAAMsG,aAAe,KACrBtG,EAAMuG,UAAY,KAClBvG,EAAMwG,OAAS,KACfxG,EAAMyG,QAAU,KAChBzG,EAAM0G,QAAU,KAChB1G,EAAM2G,aAAe,KACrB3G,EAAM4G,eAAiB,KACvB5G,EAAM6G,WAAa,KACnB7G,EAAM8G,UAAY,Q,wCAuMJznB,EAAMD,GAAwB,IAAnB4nB,IAAkB,yDACrChF,EAAS1V,SAASwV,eAAe,cACjCmF,EAAcjF,EAASA,EAAOkF,YAAc,IAC5CC,EAAenF,EAASA,EAAOoF,aAAe,IAE/BC,EAAkB/a,SAASgb,gBAAxCJ,YACcK,EAAmBjb,SAASgb,gBAA1CF,aA+BR,OA7BIJ,GAAanyB,KAAK2yB,SAClBnoB,EAAO,EACA2nB,GAAanyB,KAAK4yB,UACzBpoB,EAAOgoB,EAAgBJ,GAKvB5nB,GADAA,EAAOA,EAAOqoB,KAA8B,EAAIroB,GAClCgoB,EAAgBJ,EAAcS,KAA8BL,EAAgBJ,EAAc5nB,EACxGA,EAAO4hB,aAAM5hB,EAAM,EAAGgoB,EAAgBJ,IAGtCD,GAAanyB,KAAK8yB,QAClBvoB,EAAM,EACC4nB,GAAanyB,KAAK+yB,WACzBxoB,EAAMmoB,EAAiBJ,GAGvB/nB,GADAA,EAAMA,EAAMsoB,KAA8B,EAAItoB,GAClCmoB,EAAiBJ,EAAeO,KAA8BH,EAAiBJ,EAAe/nB,EAC1GA,EAAM6hB,aAAM7hB,EAAK,EAAGmoB,EAAiBJ,IAGzCtyB,KAAK2yB,SAAoB,IAATnoB,EAChBxK,KAAK4yB,UAAYpoB,IAASgoB,EAAgBJ,EAC1CpyB,KAAK8yB,QAAkB,IAARvoB,EACfvK,KAAK+yB,WAAaxoB,IAAQmoB,EAAiBJ,EAE3CzB,KAAYS,UAAY,CAAE9mB,OAAMD,OAEzB,CAAEC,OAAMD,S,wCAwIDuM,GACd,IAAMkc,EAASlc,EAAQ2Z,mBAAqB3Z,EAAQmc,sBAAwBnc,EAAQoc,wBAEpFF,GAAUA,EAAOG,KAAKrc,K,uCAItB,IAAMkc,EAASvb,SAAS+Y,gBAAkB/Y,SAAS2b,qBAAuB3b,SAAS4b,qBAEnFL,GAAUA,EAAOG,KAAK1b,Y,+BAqEhB,IACE9K,EAAW3M,KAAKc,MAAhB6L,OADH,EAE0H3M,KAAKK,MAA5HkvB,EAFH,EAEGA,eAAgBE,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,aAAcpE,EAF3C,EAE2CA,YAAajtB,EAFxD,EAEwDA,SAAUwvB,EAFlE,EAEkEA,KAAMF,EAFxE,EAEwEA,QAASD,EAFjF,EAEiFA,SAAU7e,EAF3F,EAE2FA,OAAQ6c,EAFnG,EAEmGA,OAAQmB,EAF3G,EAE2GA,WAE1GxtB,EAAOowB,EAAWC,EAAepE,EACjChpB,EAAQjE,EAAW,EAAIgB,EAAOhB,EAAW,EACzCi1B,EAAeC,KAAOC,gBAAgBn0B,EAAMquB,GAC5C+F,EAAgBp1B,EAAW,EAAIi1B,EAAej1B,EAAW,EAEzDq1B,EAAaC,aAAkBr0B,KAAKs0B,MAAMv0B,IAAS,GACnDw0B,EAAiBF,aAAkBr0B,KAAKs0B,MAAMv1B,IAAa,GAG3Dy1B,EAAoBrc,SAASqc,mBAAqBrc,SAASsc,sBAAwBtc,SAASuc,wBAElG,OACI,yBACIv1B,GAAG,aACH4C,UAAWoE,IAAW,aAAc,CAAE,sBAAuB8pB,EAAgB,wBAAyB1C,IACtGjhB,YAAa5L,KAAK6uB,sBAClBoF,YAAaj0B,KAAKgwB,gBAClBzqB,QAASvF,KAAKgxB,gBACdkD,cAAel0B,KAAKixB,mBACpB,yBACIxyB,GAAG,qBACH4C,UAAWoE,IAAW,CAAE,4BAA6BoJ,IACrDgJ,QAAS7X,KAAKoZ,YACd+a,OAAQn0B,KAAKkxB,WACbkD,SAAU,GACV,yBAAK31B,GAAG,yBACR,kBAAC41B,GAAA,EAAD,CAAM1nB,OAAQA,IAEd,4BAAQf,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,mBAAmBvJ,UAAWoE,IAAW,gBAAiB,sBAAuB,CAAE,sBAAuBoJ,IAAWtJ,QAASvF,KAAKqD,aAC3J,kBAACsT,EAAA,EAAD,OAEJ,yBACItV,UAAWoE,IAAW,eAAgB,CAAE,sBAAuBoJ,IAC/DtJ,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,mBAChBgB,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,mBACpBspB,cAAel0B,KAAK+wB,uBACpBuD,aAAct0B,KAAK6vB,iBACnB0E,aAAcv0B,KAAK+vB,kBACnB,yBAAK1uB,UAAU,iBACX,0BAAMA,UAAU,6BAA6BuM,MAAO,CAAEC,MAAuB,IAAhB4lB,EAAsB,OACnF,kBAACe,GAAA,EAAD,CACIlyB,MAAOA,EACP/C,IAAK,EACLk1B,IAAK,EACLC,KAAM,KACN9vB,QAAS,CACLC,KAAM,qBACN8vB,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZvwB,SAAUvE,KAAKkC,aACf6yB,kBAAmB/0B,KAAK2vB,sBACxB/jB,YAAa5L,KAAKwvB,mBAG1B,yBAAKnuB,UAAU,mBACX,4BAAQA,UAAU,gBAAgBkE,QAASvF,KAAK6J,aAC3CgkB,EAAO,kBAACmH,GAAA,EAAD,MAAe,kBAAC,KAAD,OAE3B,yBAAK3zB,UAAU,eAAf,UACQqyB,EADR,cACwBG,IAExB,yBAAKxyB,UAAU,iBACX,kBAACmzB,GAAA,EAAD,CACIlyB,MAAOopB,EACPnsB,IAAK,EACLk1B,IAAK,EACLC,KAAM,KACN9vB,QAAS,CACLC,KAAM,qBACN8vB,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZvwB,SAAUvE,KAAKowB,yBACf2E,kBAAmB/0B,KAAKqwB,qCAGhC,4BAAQhvB,UAAU,gBAAgBkE,QAASvF,KAAK4rB,YAC3C2H,KAAO0B,cAAcvJ,IAE1B,4BAAQrqB,UAAU,gBAAgB6zB,UAAWpB,EAAmBvuB,QAASvF,KAAK6rB,kBAC1E,kBAACsJ,GAAA,EAAD,SAOZ,kBAACC,GAAA,EAAD,CAAUzH,QAASA,S,gDA11BH7sB,EAAOT,GAAQ,IACnC8qB,EAAkErqB,EAAlEqqB,MAAO9sB,EAA2DyC,EAA3DzC,SAAUitB,EAAiDxqB,EAAjDwqB,YAAaI,EAAoC5qB,EAApC4qB,OAAQmC,EAA4B/sB,EAA5B+sB,KAAMH,EAAsB5sB,EAAtB4sB,SAAUC,EAAY7sB,EAAZ6sB,QAC9D,OAAIttB,EAAMg1B,YAAclK,EACb,CACHkK,UAAWlK,EACX9sB,WACAitB,cACAI,SACAmC,OACAH,WACAC,UACA8B,UAAU,EACV5gB,QAAQ,EACRge,YAAY,GAIb,S,GAzBSlrB,IAAMC,Y,oBCpBxB0zB,I,wLACQ,IAAD,EACqCt1B,KAAKc,MAAvCsG,EADH,EACGA,OAAQmuB,EADX,EACWA,SAAUzrB,EADrB,EACqBA,SAAUrG,EAD/B,EAC+BA,EAE9B4I,EAAaC,aAAkBlF,GAAQ,EAAM3D,GAEnD,OACI,yBACIpC,UAAWoE,IAAW,sBAAuB,CAAE,+BAAgC8vB,IAC/EhwB,QAASuE,GACT,yBAAKzI,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAAC,KAAD,CAAU+F,OAAQA,KAErBmuB,GAAY,yBAAKl0B,UAAU,kCAC5B,yBACIA,UAAWoE,IACP,2BACA8vB,EAAW,oCAAsC,yCAGzD,yBAAKl0B,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6BgL,Q,GAvB5B1K,IAAMC,YAmCvBsD,iBAAkBowB,IC3C1B,SAAeE,GAAtB,mC,6CAAO,WAAoBllB,GAApB,SAAA5F,EAAA,kEAEK4e,UAAUmM,UAFf,gCAGWnM,UAAUmM,UAAUC,UAAUplB,GAHzC,iCAIY,GAJZ,uDAOCiD,QAAQc,MAAM,sDAAd,MAPD,iCAUIshB,GAAQrlB,IAVZ,wD,sBAaP,SAASqlB,GAAQrlB,GACb,IAAIwG,EACA8e,EACJ,IAqBI,IApBA9e,EAAUW,SAASoe,cAAc,aACzB5d,iBAAkB,EAC1BnB,EAAQgf,UAAW,EACnBhf,EAAQxU,MAAQgO,EAChBwG,EAAQlJ,MAAMuD,IAAM,QACpB2F,EAAQlJ,MAAM+M,SAAW,QACzB7D,EAAQlJ,MAAMrD,IAAM,EACpBuM,EAAQlJ,MAAMmoB,KAAO,mBACrBjf,EAAQlJ,MAAMooB,WAAa,MAC3Blf,EAAQlJ,MAAMqoB,iBAAmB,OACjCnf,EAAQlJ,MAAMsoB,cAAgB,OAC9Bpf,EAAQlJ,MAAMuoB,aAAe,OAC7Brf,EAAQlJ,MAAMwoB,WAAa,OAE3B3e,SAAS4e,KAAKnE,YAAYpb,GAE1BA,EAAQoD,QACRpD,EAAQwf,WAERV,EAAane,SAASC,YAAY,SAE9B,MAAM,IAAI6e,MAEd,OAAO,EACT,SACEhjB,QAAQc,MAAM,uDAAwDuhB,GA1B1E,QA4BQ9e,GACAW,SAAS4e,KAAKG,YAAY1f,GAIlC,OAAO,E,WCxBL2f,G,YACF,WAAY31B,GAAQ,IAAD,8BACf,4CAAMA,KAmBVgT,YApBmB,qBAoBL,0CAAApJ,EAAA,4DACV,EAAKgsB,uBAEChmB,EAAW,GACXimB,EAAkBj2B,KAAgBC,KAAK,CACzC,QAAS,WACTmf,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO,MAEXH,EAASV,KAAK2mB,GAERziB,EAAuBxT,KAAgBC,KAAK,CAC9C,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,IAEX1D,EAASV,KAAKkE,GAjBJ,SAmB2BhD,QAAQC,IAAIT,EAASd,IAAI,SAAA1Q,GAAC,OAAIA,EAAEkS,MAAM,SAAAvF,GAAC,OAAI,UAnBtE,mCAmBH4H,EAnBG,KAmBIhD,EAnBJ,KAqBV,EAAK1P,SAAS,CACVud,QAAS7K,EAAM5D,SACfY,cAAeA,IAGbtD,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOsG,EAAM5D,UA3BpB,0CApBK,EAkDnB6mB,qBAlDmB,qBAkDI,kCAAAhsB,EAAA,0DACY,EAAK5J,MAA5BsG,EADW,EACXA,OAAQwvB,EADG,EACHA,WACXxvB,EAFc,oDAGdwvB,EAHc,sDAIfA,EAAWxwB,OAAS,GAJL,oDAKdywB,cAAazvB,GALC,oDAMd0vB,aAAgB1vB,GANF,oEAQE1G,KAAgBC,KAAK,CACtC,QAAS,iBACT0G,QAASD,EACTsH,WAAYkoB,EAAW,GACvBG,WAAW,EACXC,aAAa,IAbE,QAQbn2B,EARa,OAgBnB,EAAKE,SAAS,CACVk2B,kBAAmBp2B,IAjBJ,0CAlDJ,EAuEnBwC,YAAc,WACV6zB,aAAQ,OAxEO,EA2EnBC,eAAiB,WAAO,IACZ1zB,EAAM,EAAK3C,MAAX2C,EACAwzB,EAAsB,EAAK52B,MAA3B42B,kBAEHA,GACAA,EAAkBG,OAEvB5B,GAAKyB,EAAkBG,MAEvB,EAAKC,sBAAsB5zB,EAAE,iBApFd,EAuFnB4zB,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,kBAAMgyB,EAAcC,KAC7B,kBAAC7gB,EAAA,EAAD,WApGG,EA0GnBkhB,oBAAsB,SAACzwB,EAAQwvB,GAC3B,GAA0B,IAAtBA,EAAWxwB,OAAc,OAAO,KAEpC,IAAMkN,EAAUL,KAAa1M,IAAIa,EAAQwvB,EAAW,IACpD,IAAKtjB,EAAS,OAAO,KAJqB,IAMlCwkB,EAA8BxkB,EAA9BwkB,iBAAkBzd,EAAY/G,EAAZ+G,QAC1B,IAAKyd,GAAyC,2BAArBzd,EAAQ,SAAuC,CAAC,IAC7DxN,EAAUwN,EAAVxN,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DkrB,EAAUlrB,EAAVkrB,MACR,GAAIA,GAASA,EAAM3xB,OACf,OAAO2xB,EAAMA,EAAM3xB,OAAS,GAIpC,OAAO,MA3HQ,EA8HnB4xB,WAAa,WACT,EAAK30B,cACL40B,eAFe,MAIqC,EAAKn3B,MAAjDsG,EAJO,EAIPA,OAAQwvB,EAJD,EAICA,WAAYsB,EAJb,EAIaA,oBAC5B,GAAK9wB,GAAWwvB,GAAesB,EAA/B,CAEA,IAAM5nB,EAAO,EAAK6nB,aAAa,EAAKC,WAAWvjB,SAE/C,EAAKwjB,YAAY14B,QAAQ,SAAA24B,GACrB,GAAIJ,EAwCA,OAvCI5nB,IACI,YAAa4nB,EACbA,EAAoBK,QAAU,CAC1B,QAAS,gBACTjoB,OACAkoB,SAAU,MAGd93B,KAAgBC,KAAK,CACjB,QAAS,cACT0G,QAASixB,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTvoB,KAAM,CACF,QAAS,gBACTA,OACAkoB,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,WAM7Br4B,KAAgBC,KAAK,CACjB,QAAS,cACT0G,QAASixB,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuBX,IAM/B,IAAMvqB,EAAO,EAAKkqB,oBAAoBzwB,EAAQwvB,GAC9C,GAAIjpB,EAAJ,CAAW,IACCE,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,OAAQjB,EAAUc,EAAVd,MAEvBnM,KAAgBC,KAAK,CACjB,QAAS,cACT0G,QAASixB,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,oBACThsB,MAAO,CACH,QAAS,cACTpO,GAAIoO,EAAMpO,IAEdu6B,UAAW,KACXC,uBAAwB,GACxBprB,MAAOA,EACPC,OAAQA,EACRyqB,QAAS,CACL,QAAS,gBACTjoB,OACAkoB,SAAU,MAEdU,IAAK,UAOb5oB,GACA5P,KAAgBC,KAAK,CACjB,QAAS,cACT0G,QAASixB,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTvoB,KAAM,CACF,QAAS,gBACTA,OACAkoB,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,KAKzBr4B,KAAgBC,KAAK,CACjB,QAAS,kBACT0G,QAASixB,EACTa,aAAc/xB,EACdgyB,YAAaxC,EACb8B,uBAAuB,EACvBC,iBAAiB,EACjBU,UAAU,QAhPH,EAqPnBC,sBAAwB,SAAAlyB,GAChB,EAAKixB,YAAYzxB,IAAIQ,GACrB,EAAKixB,YAAY3a,OAAOtW,GAExB,EAAKixB,YAAYtoB,IAAI3I,EAAQA,GAKjC,EAAKF,eA9PU,EAiQnBixB,aAAe,SAAArhB,GAAY,IACfM,EAAcN,EAAdM,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,MAEFN,EAAdC,WAtQO,EA2QnBwiB,oBAAsB,SAAAp3B,GACI,KAAlBA,EAAM0U,SACN1U,EAAMwI,kBA7QK,EAiRnB6uB,kBAjRmB,qBAiRC,gDAAA9uB,EAAA,0DACmB,EAAKrK,MAAhCie,EADQ,EACRA,QAAS7N,EADD,EACCA,cAEXqG,EAAU,EAAK2iB,UAAU5kB,QAHf,oDAOE,UADVuC,EAAcN,EAAdM,YACkC,oBAAdA,IACxBN,EAAQM,UAAY,MAGlBL,EAAY,EAAKohB,aAAarhB,GAAShF,OAX7B,wBAaZ,EAAK/Q,SAAS,CAAEsP,WAAY,KAAMqpB,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBV7oB,EAAYhK,GAAciQ,GAC1B/F,EAAe9K,GAAiB6Q,GAEhC6iB,EAAcnpB,EACd,CAACA,EAAchS,IAAI8W,OAAO+I,EAAQ1L,OAAO,SAAA1T,GAAC,OAAIA,IAAMuR,EAAchS,IAAMo7B,aAAgB36B,MACxFof,EAEAob,EAAgBE,EAAYhnB,OAC9B,SAAA1T,GAAC,OACG,EAAK46B,cAAc56B,EAAG6X,IACrBjG,GAAa,EAAKgpB,cAAc56B,EAAG4R,IACnCE,GAAgB,EAAK8oB,cAAc56B,EAAG8R,KAG/C,EAAKjQ,SAAS,CAAEsP,WAAY0G,EAAW2iB,kBA/BvB,UAiCKh5B,KAAgBC,KAAK,CACtC,QAAS,sBACTiQ,MAAOmG,EACPlG,MAAO,MApCK,WAiCVhQ,EAjCU,OAuCZ,EAAKR,MAAMgQ,aAAe0G,EAvCd,mDA2ChB,EAAKhW,SAAS,CACV44B,oBAAqB94B,EAAOgP,WA5ChB,0CAjRD,EAiUnBkqB,kBAAoB,SAAA53B,GAChB,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,KArU/B,EAyUnB0iB,mBAAqB,WACjB,IAAMljB,EAAU,EAAKshB,WAAWvjB,QAChC,GAAKiC,EAAL,CAFuB,IAIfM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,QA/UT,EAmVnB6iB,mBAAqB,SAAA93B,GACjB,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,KAvV/B,EA2VnBwiB,cAAgB,SAAC1yB,EAAQiJ,GAAgB,IAC7B5M,EAAM,EAAK3C,MAAX2C,EACAgN,EAAkB,EAAKpQ,MAAvBoQ,cAER,GAAIA,GAAiBrJ,IAAWqJ,EAAchS,KAE2B,KADvDsJ,aAAaX,GAAQ,EAAM3D,IAAM,IACrCy2B,oBAAoBC,QAAQ9pB,EAAW+pB,eAC7C,OAAO,EAKf,OAAsE,KADvDryB,aAAaX,GAAQ,EAAO3D,IAAM,IACtCy2B,oBAAoBC,QAAQ9pB,EAAW+pB,iBAKsB,KADvDtD,aAAgB1vB,IAAW,IAC/B8yB,oBAAoBC,QAAQ9pB,EAAW+pB,gBA5WrC,EAmXnBC,eAAiB,WACb/d,WAAW,WACH,EAAKmd,UAAU5kB,SACC,EAAK4kB,UAAU5kB,QAEvBqF,SAEb,MAvXH,EAAK7Z,MAAQ,CACTie,QAAS,GACT7N,cAAe,MAGnB,EAAKgpB,UAAY93B,IAAMoU,YACvB,EAAKqiB,WAAaz2B,IAAMoU,YAExB,EAAKsiB,YAAc,IAAI5xB,IAXR,E,iFAefzG,KAAK8T,cAEL9T,KAAKq6B,mB,+BA4WC,IAAD,OACG52B,EAAMzD,KAAKc,MAAX2C,EADH,EASDzD,KAAKK,MANLie,EAHC,EAGDA,QACAjO,EAJC,EAIDA,WACAqpB,EALC,EAKDA,cACAC,EANC,EAMDA,oBACAlpB,EAPC,EAODA,cACAwmB,EARC,EAQDA,kBAOExjB,GAJchD,EACd,CAACA,EAAchS,IAAI8W,OAAO+I,EAAQ1L,OAAO,SAAA1T,GAAC,OAAIA,IAAMuR,EAAchS,IAAMo7B,aAAgB36B,MACxFof,GAEoB1O,IAAI,SAAA1Q,GAAC,OAC3B,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACRq2B,SAAU,EAAK8C,YAAYzxB,IAAI1H,GAC/B4K,SAAU,kBAAM,EAAKwvB,sBAAsBp6B,QAI7Co7B,EAAmB,IAAI7zB,KAAKizB,GAAiB,IAAI9pB,IAAI,SAAA1Q,GAAC,MAAI,CAACA,EAAGA,MAC9Dq7B,GAAmBZ,GAAuB,IAAI/mB,OAChD,SAAA1T,GAAC,OAAIA,IAAMuR,EAAchS,IAAMo7B,aAAgB36B,KAAOo7B,EAAiB1zB,IAAI1H,KAGzEs7B,GAAcd,GAAiB,IAChCnkB,OAAOglB,GACP3qB,IAAI,SAAA1Q,GAAC,OACF,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACRq2B,SAAU,EAAK8C,YAAYzxB,IAAI1H,GAC/B4K,SAAU,kBAAM,EAAKwvB,sBAAsBp6B,QAIvD,OACI,kBAAC,IAAD,CACIoE,MAAM,EACNI,QAASC,IACTC,mBAAoB,EACpBC,QAAS7D,KAAKqD,YACdS,kBAAgB,uBAChBC,mBAAiB,6BACjB1C,UAAU,kBACV,kBAAC,IAAD,CAAa5C,GAAG,wBAAwBgF,EAAE,gBAC1C,yBACI+S,IAAKxW,KAAKy5B,UACVh7B,GAAG,wBACH4C,UAAU,oBACV4W,iBAAe,EACfC,gCAA8B,EAC9BF,YAAavU,EAAE,UACf0U,UAAWnY,KAAKu5B,oBAChBnhB,QAASpY,KAAKw5B,kBACdnhB,QAASrY,KAAK+5B,oBAElB,yBAAK14B,UAAU,0BACX,yBAAKA,UAAU,uBAAuBoS,GACrCpD,GAAc,yBAAKhP,UAAU,8BAA8Bm5B,IAE/Dx6B,KAAKq4B,YAAY1qB,KAAO,GACrB,yBACI6I,IAAKxW,KAAKo4B,WACV35B,GAAG,yBACHwZ,iBAAe,EACfC,gCAA8B,EAC9BF,YAAavU,EAAE,gBACf2U,QAASpY,KAAKg6B,mBACd3hB,QAASrY,KAAKi6B,qBAGtB,kBAACQ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKqD,YAAaV,MAAM,WACpCc,EAAE,WAENzD,KAAKq4B,YAAY1qB,KAAO,GACrB,kBAAC+sB,GAAA,EAAD,CAAQn1B,QAASvF,KAAKg4B,WAAYr1B,MAAM,UAAUg4B,WAAS,GACtDl3B,EAAE,UAGTzD,KAAKq4B,YAAY1qB,MAAQspB,GACvB,kBAACyD,GAAA,EAAD,CAAQn1B,QAASvF,KAAKm3B,eAAgBx0B,MAAM,WACvCc,EAAE,mB,GArdH9B,IAAMC,WAyenBkD,GALCC,YACZG,cACA01B,gBAGW91B,CAAQ2xB,I,+DChgBR50B,gBACX,0BAAMC,EAAE,ulBACR,a,UCFWD,gBACX,0BAAMC,EAAE,2zCACR,e,oBCIE+4B,I,mBACF,WAAY/5B,GAAQ,qEACVA,I,sEAGA,IAAD,EAC+Cd,KAAKc,MAAjDsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAAGq3B,EADd,EACcA,WAAYv1B,EAD1B,EAC0BA,QAAS1B,EADnC,EACmCA,QAEpCk3B,EAAOt3B,EAAE,YAOb,OANIu3B,cAAc5zB,GACd2zB,EAAOt3B,EAAE,QACFw3B,aAAc7zB,KACrB2zB,EAAOt3B,EAAE,gBAIT,yBAAKpC,UAAU,iBACVy5B,GACG,kBAACpkB,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAGR,yBAAKxC,UAAU,oCAAoCkE,QAASA,GACxD,0BAAMlE,UAAU,yBAAyB05B,KAE3CD,GACE,kBAACpkB,EAAA,EAAD,CAAYrV,UAAU,sBAAsBkE,QAAS1B,GACjD,kBAAC8S,EAAA,EAAD,Y,GA3BQhV,IAAMC,YAmCvBsD,iBAAkB21B,I,oBC+ClBK,G,YAjFX,WAAYp6B,GAAQ,IAAD,uBACf,4CAAMA,KAqCVq6B,iCAAmC,SAAAl0B,GAAW,IAClCI,EAAYJ,EAAZI,QACAD,EAAW,EAAKtG,MAAhBsG,OAEHC,GACDA,IAAYD,GAEhB,EAAKrG,SAAS,CAAEq6B,QAASC,aAAYj0B,MA7CtB,EAgDnBk0B,kCAAoC,SAAAr0B,GAAW,IACnCG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAE3B,OAAQH,EAAOs0B,MAAM,UACjB,IAAK,sCAC0B,uBAAvBpzB,EAAK/F,KAAK,UAA4D,uBAAvB+F,EAAK/F,KAAK,UACzD,EAAKrB,SAAS,CAAEq6B,QAASC,aAAYj0B,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBe,EAAK/F,KAAK,UAAyD,mBAAvB+F,EAAK/F,KAAK,UACtD,EAAKrB,SAAS,CAAEq6B,QAASC,aAAYj0B,OA7DlC,EAoEnBo0B,2BAA6B,WACzB,EAAKz6B,SAAS,CAAEq6B,SAAU,EAAK/6B,MAAM+6B,UACrC,EAAKK,wCAtEU,EAyEnBC,4BAA8B,WAAO,IACzBt0B,EAAW,EAAKtG,MAAhBsG,OACAg0B,EAAY,EAAK/6B,MAAjB+6B,QAERO,aAA+Bv0B,EAAQg0B,IA7ExB,IAGPh0B,EAAWtG,EAAXsG,OAHO,OAKf,EAAK/G,MAAQ,CACTmJ,WAAYpC,EACZg0B,QAASC,aAAYj0B,IAGzB,EAAKq0B,qCAAuC9Z,aACxC,EAAK+Z,4BACLE,MAZW,E,iFA6Bfp0B,KAAUC,GAAG,iCAAkCzH,KAAKm7B,kCACpDU,KAAkBp0B,GAAG,kCAAmCzH,KAAKs7B,qC,6CAI7D9zB,KAAUE,IAAI,iCAAkC1H,KAAKm7B,kCACrDU,KAAkBn0B,IAAI,kCAAmC1H,KAAKs7B,sC,gDAnBlCx6B,EAAOT,GACnC,GAAIS,EAAMsG,SAAW/G,EAAMmJ,WAAY,CAAC,IAC5BpC,EAAWtG,EAAXsG,OAER,MAAO,CACHoC,WAAYpC,EACZg0B,QAASC,aAAYj0B,IAG7B,OAAO,S,GA1BazF,IAAMC,WCE5Bk6B,I,wLACQ,IACEr4B,EAAMzD,KAAKc,MAAX2C,EACA23B,EAAYp7B,KAAKK,MAAjB+6B,QAER,OACI,kBAAClwB,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,oBAAoB06B,WAAW,aAAax2B,QAASvF,KAAKw7B,4BACjF,kBAACxvB,GAAA,EAAD,KACI,kBAACgwB,GAAA,EAAD,CACI36B,UAAU,yBACV46B,KAAK,QACLC,SAAUd,EACVz4B,MAAM,UACNyxB,UAAW,EACX+H,eAAa,EACb53B,SAAUvE,KAAKw7B,8BAGvB,kBAACtvB,GAAA,EAAD,CACIzJ,QACI,kBAAC25B,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B74B,EAAE,kBAGX84B,UAA6C94B,EAAjC23B,EAAmC,mBAAvB,0B,GAxBRF,KA+BrBh2B,iBAAkB42B,I,UC/B3BU,I,mBACF,WAAY17B,GAAQ,IAAD,8BACf,4CAAMA,KAoFV27B,uBAAyB,SAAAx1B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZI,QACR,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KA9FX,EAiGnBI,uBAAyB,SAAA71B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZI,QACR,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KA1GX,EA6GnBK,mBAAqB,SAAA91B,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZqM,QACejM,QAAvB,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KAtHX,EAyHnBM,YAAc,WACV,MAAO,mBAAoBljB,QA1HZ,EAmJnBoT,eAAiB,WACb,EAAK+P,cAAa,IApJH,EAuJnBJ,cAAgB,SAACF,EAAOD,GAAmB,IAC/Bt1B,EAAW,EAAKtG,MAAhBsG,OAEFqB,EAAUk0B,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAak0B,EAAMt0B,UAAYs0B,EAAMt0B,SAASI,UAAiB,GACrI00B,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9C1lB,EAAWklB,EAAQA,EAAMllB,SAAW,GACpC2lB,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BhqB,EAAMupB,EAAQA,EAAMvpB,IAAM,GAC1BiqB,EAAYV,EAAQA,EAAMU,UAAY,GACtCC,EAAiBX,EAAQA,EAAMW,eAAiB,GAEhDC,EAAa90B,EAAQrC,OAAS,EAC9Bo3B,EAAmBL,EAAc/2B,OAAS,EAC1Cq3B,EAAchmB,EAASrR,OAAS,EAChCs3B,EAAWN,EAAMh3B,OAAS,EAC1Bu3B,EAASvqB,EAAIhN,OAAS,EACtBw3B,EAAeP,EAAUj3B,OAAS,EAClCy3B,EAAoBP,EAAel3B,OAAS,IAG3B,IAAnBs2B,GACqB,IAAlBA,IAAwBa,GACN,IAAlBb,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,KAEvBN,EACAb,EAAgB,EACTc,EACPd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,IACPnB,EAAgB,GAGpBh8B,KAAgBsf,aAAa,CACzB,QAAS,uBACT5Y,SACAmT,MAAOmiB,KAIf,EAAK37B,SAAS,CACV27B,gBACAj0B,UACA00B,gBACA1lB,WACA2lB,QACAhqB,MACAiqB,YACAC,kBACD,WACM,EAAKN,eAAe,EAAKC,kBArNnB,EAyNnBa,wBAA0B,SAAA72B,GAAW,IACjB82B,EAAkB,EAAKj9B,MAA/BsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cACAt1B,EAAkBH,EAAlBG,OAAQu1B,EAAU11B,EAAV01B,MACZv1B,IAAW22B,GAEf,EAAKlB,cAAcF,EAAOD,IA/NX,EAkOnBsB,uBAAyB,SAAA/2B,GAAW,IACxBG,EAAkBH,EAAlBG,OAAQmT,EAAUtT,EAAVsT,MACZnT,IAAW,EAAKtG,MAAMsG,QAE1B,EAAKrG,SAAS,CACV27B,cAAeniB,GAChB,WACM,EAAKyiB,eAAe,EAAKC,kBAzOnB,EA6OnBA,aAAe,WAAwB,IAAvBgB,IAAsB,2DACM,EAAK59B,MAArCq8B,EAD0B,EAC1BA,cAD0B,EACXpY,aACvB,IAAuB,IAAnBoY,EAAJ,CAEA,IAAMwB,EAAU,EAEVC,EAAS,EAAKC,WAAWvpB,QAE3B+G,EAAO,KACPpR,EAAO,EACL6zB,EAAgB,EAAKC,UAAU/3B,IAAI,WACnB,IAAlBm2B,GAAuB2B,IAEvB7zB,GADAoR,EAAOyiB,EAAcE,YACTC,YAGhB,IAAMC,EAAsB,EAAKH,UAAU/3B,IAAI,iBACzB,IAAlBm2B,GAAuB+B,IAEvBj0B,GADAoR,EAAO6iB,EAAoBF,YACfC,YAGhB,IAAME,EAAiB,EAAKJ,UAAU/3B,IAAI,YACpB,IAAlBm2B,GAAuBgC,IAEvBl0B,GADAoR,EAAO8iB,EAAeH,YACVC,YAGhB,IAAMG,EAAc,EAAKL,UAAU/3B,IAAI,SACjB,IAAlBm2B,GAAuBiC,IAEvBn0B,GADAoR,EAAO+iB,EAAYJ,YACPC,YAGhB,IAAMI,EAAY,EAAKN,UAAU/3B,IAAI,OACf,IAAlBm2B,GAAuBkC,IAEvBp0B,GADAoR,EAAOgjB,EAAUL,YACLC,YAGhB,IAAMK,EAAkB,EAAKP,UAAU/3B,IAAI,aACrB,IAAlBm2B,GAAuBmC,IAEvBr0B,GADAoR,EAAOijB,EAAgBN,YACXC,YAGhB,IAAMM,EAAuB,EAAKR,UAAU/3B,IAAI,kBAMhD,GALsB,IAAlBm2B,GAAuBoC,IAEvBt0B,GADAoR,EAAOkjB,EAAqBP,YAChBC,YAGX5iB,EAAL,CAEA,IAAMmjB,EAAkB,EAAKC,mBAAmBnqB,QAChD,GAAIkqB,EAAiB,CACjB,IAAME,EAAkBhB,EAAa,gDAAkD,KACvFc,EAAgBnxB,MAAMsxB,QAAtB,gBAAyC10B,EAAO0zB,EAAhD,sBAAqEtiB,EAAKujB,YAAc,EAAIjB,EAA5F,eAA0Ge,GAG9G,GAAIrjB,GAAQqiB,EAAW,CAAC,IAAD,kBACXmB,EADW,EACXA,SAEJA,GACAA,EAASt/B,OAGb,EAAKs/B,SAAW,IAAIhhC,KAAS,IAAK,CAC9B,CACIwB,KAAMu+B,EAAOkB,WACblgC,GAAIitB,aAAM5hB,EAAO2zB,EAAOmB,YAAc,EAAI1jB,EAAK0jB,YAAc,EAAG,EAAGnB,EAAOgB,YAAchB,EAAOmB,aAC/Fz/B,KAAM,SAAA2K,GAAI,OAAK2zB,EAAOkB,WAAa70B,MAI3C8R,WAAW,WACF,EAAK8iB,UAEV,EAAKA,SAAS7gC,SACf,OA5TQ,EAmUnBghC,kBAAoB,SAACp9B,EAAO1D,GACxB,IAAI0D,GAA0B,IAAjBA,EAAMgJ,OAAnB,CAD+B,MAEH,EAAKrK,MAAzBsG,EAFuB,EAEvBA,OAAQ7B,EAFe,EAEfA,QAEhBA,GAAWA,EAAQpD,GAEnBzB,KAAgBsf,aAAa,CACzB,QAAS,uBACT5Y,SACAmT,MAAO9b,MAzUX,EAAK6/B,UAAY,IAAI73B,IACrB,EAAK23B,WAAaz8B,IAAMoU,YACxB,EAAKipB,mBAAqBr9B,IAAMoU,YAEhC,EAAK1V,MAAQ,GAEb,EAAK6sB,eAAiBsS,aAAS,EAAKtS,eAAgB,KATrC,E,iFA6DfltB,KAAKy/B,gBACLz/B,KAAKi9B,eAELhqB,KAAaxL,GAAG,uBAAwBzH,KAAKg+B,wBAC7C/qB,KAAaxL,GAAG,wBAAyBzH,KAAK89B,yBAC9C7qB,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,oBACzC9pB,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,yCAG9Bv7B,EAAWC,EAAWC,GACrCpB,KAAK0/B,kBACL1/B,KAAKy/B,kB,6CAILz/B,KAAK0/B,kBACLzsB,KAAavL,IAAI,uBAAwB1H,KAAKg+B,wBAC9C/qB,KAAavL,IAAI,wBAAyB1H,KAAK89B,yBAC/C7qB,KAAavL,IAAI,mBAAoB1H,KAAK+8B,oBAC1C9pB,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,sCA4C9C,GAAKz8B,KAAKg9B,cAAV,CACA,IAAMtgB,EAAU1c,KAAKo+B,WAAWvpB,QAChC,GAAK6H,EAAL,CAEA,IAAMijB,EAAW,IAAIC,eAAe5/B,KAAKktB,gBACzCyS,EAASE,QAAQnjB,GAEjB1c,KAAK8/B,eAAiB,CAAEH,WAAUjjB,e,wCAIlC,GAAK1c,KAAKg9B,eACLh9B,KAAK8/B,eAAV,CAFc,MAIgB9/B,KAAK8/B,eAA3BH,EAJM,EAINA,SAAUjjB,EAJJ,EAIIA,QACbijB,GACAjjB,GAELijB,EAASI,UAAUrjB,M,+BAgMb,IAAD,OACGjZ,EAAMzD,KAAKc,MAAX2C,EADH,EAE8FzD,KAAKK,MAAhGq8B,EAFH,EAEGA,cAAej0B,EAFlB,EAEkBA,QAAS00B,EAF3B,EAE2BA,cAAe1lB,EAF1C,EAE0CA,SAAU2lB,EAFpD,EAEoDA,MAAOhqB,EAF3D,EAE2DA,IAAKiqB,EAFhE,EAEgEA,UAAWC,EAF3E,EAE2EA,eAE1E0C,GACDv3B,EAAQrC,OAAS,EAAI,EAAI,IACzB+2B,EAAc/2B,OAAS,EAAI,EAAI,IAC/BqR,EAASrR,OAAS,EAAI,EAAI,IAC1Bg3B,EAAMh3B,OAAS,EAAI,EAAI,IACvBgN,EAAIhN,OAAS,EAAI,EAAI,IACrBi3B,EAAUj3B,OAAS,EAAI,EAAI,IAC3Bk3B,EAAel3B,OAAS,EAAI,EAAI,GAWrC,OARIqC,EAAQrC,OAAS,GACd+2B,EAAc/2B,OAAS,GACvBqR,EAASrR,OAAS,GAClBg3B,EAAMh3B,OAAS,GACfgN,EAAIhN,OAAS,GACbi3B,EAAUj3B,OAAS,GACnBk3B,EAAel3B,OAAS,GAM/BpG,KAAKs+B,UAAY,IAAI73B,IAEjB,yBAAKpF,UAAWoE,IAAW,OAAQ,sBAC/B,yBAAKpE,UAAU,uBACf,yBAAKmV,IAAKxW,KAAKo+B,WAAY/8B,UAAWoE,IAAW,UAAW,CAAC,8BAA+Bu6B,EAAY,KACnGv3B,EAAQrC,OAAS,GACd,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,UAAWkwB,IACxC5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,kBAGhB05B,EAAc/2B,OAAS,GACpB,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,gBAAiBkwB,IAC9C5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,qBAGhBgU,EAASrR,OAAS,GACf,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,WAAYkwB,IACzC5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,qBAGhB25B,EAAMh3B,OAAS,GACZ,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,QAASkwB,IACtC5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,qBAGhB2P,EAAIhN,OAAS,GACV,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,MAAOkwB,IACpC5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,qBAGhB45B,EAAUj3B,OAAS,GAChB,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,YAAakwB,IAC1C5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,qBAGhB65B,EAAel3B,OAAS,GACrB,yBACIoQ,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,iBAAkBkwB,IAC/C5+B,UAAWoE,IAAW,SAAU,CAAC,mBAAoBu6B,EAAY,GAAI,CAAE,gBAAmC,IAAlBtD,IACxF9wB,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG,KAC5C,8BAAOpI,EAAE,sBAGjB,yBAAK+S,IAAKxW,KAAKg/B,mBAAoB39B,UAAU,wBAhE9C,Q,gDA3ViBP,EAAOT,GAGnC,GAFmBS,EAAXsG,SAEO/G,EAAMmJ,WAAY,CAC7B,IAAMmzB,EAAQ1pB,KAAa2pB,SAAS97B,EAAMsG,QAEpCqB,EAAUk0B,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAak0B,EAAMt0B,UAAYs0B,EAAMt0B,SAASI,UAAiB,GACrI00B,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9C1lB,EAAWklB,EAAQA,EAAMllB,SAAW,GACpC2lB,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BhqB,EAAMupB,EAAQA,EAAMvpB,IAAM,GAC1BiqB,EAAYV,EAAQA,EAAMU,UAAY,GACtCC,EAAiBX,EAAQA,EAAMW,eAAiB,GAElDZ,GAAiB,EAiBrB,OAhBIj0B,EAAQrC,OAAS,EACjBs2B,EAAgB,EACTS,EAAc/2B,OAAS,EAC9Bs2B,EAAgB,EACTjlB,EAASrR,OAAS,EACzBs2B,EAAgB,EACTU,EAAMh3B,OAAS,EACtBs2B,EAAgB,EACTtpB,EAAIhN,OAAS,EACpBs2B,EAAgB,EACTW,EAAUj3B,OAAS,EAC1Bs2B,EAAgB,EACTY,EAAel3B,OAAS,IAC/Bs2B,EAAgB,GAGb,CACHlzB,WAAY1I,EAAMsG,OAClBs1B,gBACAj0B,UACA00B,gBACA1lB,WACA2lB,QACAhqB,MACAiqB,YACAC,iBACAhZ,cAAc,GAItB,OAAO,S,GA1De3iB,IAAMC,YAqbrBsD,iBAAkBs3B,I,qBC7blB36B,gBACX,0BAAMC,EAAE,gmCACR,SCWEo+B,I,kNACFC,kBAAoB,SAAAh+B,GAAU,IAAD,EACc,EAAKrB,MAApCsG,EADiB,EACjBA,OAAQqH,EADS,EACTA,WAEhB5K,EAHyB,EACEA,SAEnB1B,GAERi+B,aAASh5B,EAAQqH,I,EAGrB4xB,cAAgB,SAAAl+B,GAAU,IAAD,EACkB,EAAKrB,MAApCsG,EADa,EACbA,OAAQqH,EADK,EACLA,WAEhB5K,EAHqB,EACMA,SAEnB1B,GAERm+B,aAAgBl5B,EAAQ,CAACqH,K,EAG7BzD,aAAe,SAAA7I,GAAU,IAAD,EACmB,EAAKrB,MAApCsG,EADY,EACZA,OAAQqH,EADI,EACJA,WAEhB5K,EAHoB,EACOA,SAEnB1B,GAERo+B,aAAen5B,EAAQ,CAACqH,K,wEAGlB,IAAD,EAC4EzO,KAAKc,MAA9E2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQqH,EADd,EACcA,UAAWnL,EADzB,EACyBA,KAAMO,EAD/B,EAC+BA,QAAS0H,EADxC,EACwCA,eAAgBi1B,EADxD,EACwDA,gBAEvDltB,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAJhB,IAMGwkB,EAAiFxkB,EAAjFwkB,iBAAkB2I,EAA+DntB,EAA/DmtB,6BAA8BC,EAAiCptB,EAAjCotB,6BAExD,OACI,kBAACr1B,GAAA,EAAD,CACI/H,KAAMA,EACNO,QAASA,EACTyH,gBAAgB,iBAChBC,eAAgBA,EAChBC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,mBACpBrF,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBAChB,kBAACkB,GAAA,EAAD,KACK00B,GACG,kBAACz0B,GAAA,EAAD,CAAUxG,QAASvF,KAAKmgC,mBACpB,kBAACn0B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,kBAGhCq0B,GACG,kBAAC/rB,GAAA,EAAD,CAAUxG,QAASvF,KAAKqgC,eACpB,kBAACr0B,GAAA,EAAD,KACI,kBAAC20B,GAAD,OAEJ,kBAACz0B,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAG/Bg9B,GAAgCC,IAC9B,kBAAC30B,GAAA,EAAD,CAAUpJ,MAAM,YAAY4C,QAASvF,KAAKgL,cACtC,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mB,GAvE3B9B,IAAMC,YA0FjBsD,iBAAkBg7B,I,SC/F3BU,I,kNACFvgC,MAAQ,G,EAiERwgC,wBAA0B,SAAA55B,GAAW,IAAD,EACC,EAAK5G,MAA9BygC,EADwB,EACxBA,UAAWC,EADa,EACbA,UACXp0B,EAAW1F,EAAX0F,OAEJm0B,GAAaA,EAAUj0B,OAASi0B,EAAUj0B,MAAMpO,KAAOkO,EACvD,EAAKzF,cACE65B,GAAaA,EAAUl0B,OAASk0B,EAAUl0B,MAAMpO,KAAOkO,GAC9D,EAAKzF,e,EAIb85B,sB,sCAAwB,WAAM7+B,GAAN,iBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBY,yC,wDAqBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,qFAhFXhD,EAAWC,EAAWmU,GAAc,IAAD,EACC1b,KAAKc,MAAnDsG,EAD6C,EAC7CA,OAAQqH,EADqC,EACrCA,UAAW5B,EAD0B,EAC1BA,MAAO2zB,EADmB,EACnBA,gBADmB,EAElBxgC,KAAKK,MAAhCiK,EAF6C,EAE7CA,YAAaE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,IAE3B,OAAInD,IAAWE,EAAUF,SAIrBqH,IAAcnH,EAAUmH,YAIxB5B,IAAUvF,EAAUuF,QAIpB2zB,IAAoBl5B,EAAUk5B,kBAI9Bl2B,IAAgB/C,EAAU+C,cAI1BE,IAASjD,EAAUiD,MAInBD,IAAQhD,EAAUgD,W,0CAQtB6C,KAAU3F,GAAG,wBAAyBzH,KAAK6gC,2B,6CAI3CzzB,KAAU1F,IAAI,wBAAyB1H,KAAK6gC,2B,+BA2CtC,IAAD,EAC4D7gC,KAAKc,MAA9DsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWwyB,EADtB,EACsBA,UAAWT,EADjC,EACiCA,gBAAiB5yB,EADlD,EACkDA,MADlD,EAEmE5N,KAAKK,MAArE6gC,EAFH,EAEGA,cAAeH,EAFlB,EAEkBA,UAAWD,EAF7B,EAE6BA,UAAWx2B,EAFxC,EAEwCA,YAAaE,EAFrD,EAEqDA,KAAMD,EAF3D,EAE2DA,IAEhE,IAAKu2B,EAAW,OAAO,KAEvB,IAAMK,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWt0B,YAAOg0B,EAAYA,EAAUl0B,MAAQ,MAChDC,EAAMC,YAAO+zB,EAAUj0B,OACXs0B,GAAWG,aAAmBP,GAEhD,OACI,oCACI,yBAAK1/B,UAAU,eAAeuM,MAAOA,EAAOrI,QAAS07B,EAAW71B,cAAepL,KAAKghC,uBAChF,yBAAK3/B,UAAU,uBAAuBuM,MAAO,CAAE2zB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,UAC1G10B,IAAQu0B,GACL,yBAAKhgC,UAAU,4BAA4BuM,MAAO,CAAE2zB,gBAAgB,OAAD,OAASz0B,EAAT,UAI/E,kBAAC,GAAD,CACI1F,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNk2B,gBAAiBA,EACjB38B,QAAS7D,KAAK+K,6B,gDAjIEjK,EAAOT,GAAQ,IACnCwM,EAA+B/L,EAA/B+L,MAAOc,EAAwB7M,EAAxB6M,KAAM8zB,EAAkB3gC,EAAlB2gC,cAErB,OAAI50B,IADkBxM,EAAdqhC,UAEG,CACHA,UAAW70B,EAEXvC,aAAa,EACbE,KAAM,EACND,IAAK,EAELu2B,UAAWa,aAAQ90B,EAAMkrB,MAAOpqB,GAChCozB,UAAWY,aAAQ90B,EAAMkrB,MAAO0J,GAChCP,cAAer0B,EAAMq0B,eAItB,S,GApBWv/B,IAAMC,YAuJhCg/B,GAAY54B,aAAe,CACvB2F,KAAMi0B,KACNH,cAAeI,MAGJjB,UC7JTkB,I,kNACFzhC,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EAkCTy2B,sB,sCAAwB,WAAM7+B,GAAN,iBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBY,yC,wDAqBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,qFAzDXhD,EAAWC,EAAWmU,GAAc,IAAD,EACN1b,KAAKc,MAA5CsG,EAD6C,EAC7CA,OAAQqH,EADqC,EACrCA,UAAW+xB,EAD0B,EAC1BA,gBAD0B,EAElBxgC,KAAKK,MAAhCiK,EAF6C,EAE7CA,YAAaE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,IAE3B,OAAInD,IAAWE,EAAUF,SAIrBqH,IAAcnH,EAAUmH,YAIxB+xB,IAAoBl5B,EAAUk5B,kBAI9Bl2B,IAAgB/C,EAAU+C,cAI1BE,IAASjD,EAAUiD,MAInBD,IAAQhD,EAAUgD,U,+BAoChB,IAAD,EACgDvK,KAAKc,MAAlDsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAW+xB,EADtB,EACsBA,gBAAiBuB,EADvC,EACuCA,KADvC,EAE8B/hC,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAErB+I,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KALhB,IAOG8B,EAAS9B,EAAT8B,KAEF4sB,EAAa,IAAIxxB,KAAY,IAAP4E,GAAa6sB,mBAAmB,CAACF,EAAKG,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGZ,OACI,oCACI,yBAAKnhC,UAAU,kBAAkB+J,cAAepL,KAAKghC,uBAChDpE,aAAStpB,EAAS,kBAAM2tB,aAAU75B,EAAQqH,GAAW,IAAO,CAAE2G,KAAM4sB,KAEzE,kBAAC,GAAD,CACI56B,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNk2B,gBAAiBA,EACjB38B,QAAS7D,KAAK+K,8B,GAhGLpJ,IAAMC,YA6GpBsD,iBAAkB48B,I,SClClBW,I,kNArDX5B,wBAA0B,SAAA55B,GAAW,IACzB+xB,EAAc,EAAKl4B,MAAnBk4B,UACR,GAAKA,EAAL,CAEA,IAAM9rB,EAAO8rB,EAAU9rB,MAAQ8rB,EAAUnsB,MACpCK,GAEDjG,EAAO0F,SAAWO,EAAKzO,IACvB,EAAKyI,gB,mFA3BTkG,KAAU3F,GAAG,qCAAsCzH,KAAK6gC,yBACxDzzB,KAAU3F,GAAG,iCAAkCzH,KAAK6gC,yBACpDzzB,KAAU3F,GAAG,oCAAqCzH,KAAK6gC,yBACvDzzB,KAAU3F,GAAG,wBAAyBzH,KAAK6gC,yBAC3CzzB,KAAU3F,GAAG,mCAAoCzH,KAAK6gC,yBACtDzzB,KAAU3F,GAAG,iCAAkCzH,KAAK6gC,yBACpDzzB,KAAU3F,GAAG,qCAAsCzH,KAAK6gC,2B,6CAIxDzzB,KAAU1F,IAAI,qCAAsC1H,KAAK6gC,yBACzDzzB,KAAU1F,IAAI,iCAAkC1H,KAAK6gC,yBACrDzzB,KAAU1F,IAAI,oCAAqC1H,KAAK6gC,yBACxDzzB,KAAU1F,IAAI,wBAAyB1H,KAAK6gC,yBAC5CzzB,KAAU1F,IAAI,mCAAoC1H,KAAK6gC,yBACvDzzB,KAAU1F,IAAI,iCAAkC1H,KAAK6gC,yBACrDzzB,KAAU1F,IAAI,qCAAsC1H,KAAK6gC,2B,+BAenD,IAAD,EAC0D7gC,KAAKc,MAA5DsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWuqB,EADtB,EACsBA,UAAWkI,EADjC,EACiCA,cAAep5B,EADhD,EACgDA,MAE/Cq5B,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Et0B,EAAMC,YAAOisB,EAAYA,EAAU9rB,MAAQ8rB,EAAUnsB,MAAQ,MAC7D61B,GAAc51B,GAAOq0B,GAAYG,aAAmBtI,EAAW2J,OAC/DC,EAAcC,aAAaz7B,EAAQqH,GACnCq0B,EAASp9B,QAAQoH,GAAOq0B,GAExBjzB,EAAS,qBAAkB5O,KAAK6O,IAAIrG,EAAMi7B,WAAW,IAAM,EAAK,GAEtE,OACI,yBAAK1hC,UAAWoE,IAAW,mBAAD,eAAwByI,GAAa40B,KAC1DA,EACG,yBACIzhC,UAAWoE,IACP,yBACA,CAAE,+BAAgCm9B,GAClC,CAAE,gBAAiB91B,GAAO41B,GAC1B,CAAE,sBAAuB51B,GAAOq0B,GAAWuB,IAE/Cp0B,WAAW,EACXxB,IAAKA,GAAOq0B,EACZ5yB,IAAI,KAGR,8BAAOzG,Q,GA3DEnG,IAAMC,Y,UC2QpBohC,I,kNAxQX3iC,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EA0CTy2B,sB,sCAAwB,WAAM7+B,GAAN,iBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBY,yC,wDAqBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,qFAjEXhD,EAAWC,EAAWmU,GAAc,IAAD,EACY1b,KAAKc,MAA9DsG,EAD6C,EAC7CA,OAAQqH,EADqC,EACrCA,UAAWw0B,EAD0B,EAC1BA,QAAS1K,EADiB,EACjBA,QAASiI,EADQ,EACRA,gBADQ,EAElBxgC,KAAKK,MAAhCiK,EAF6C,EAE7CA,YAAaE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,IAE3B,OAAInD,IAAWE,EAAUF,SAIrBqH,IAAcnH,EAAUmH,YAIxBw0B,IAAY37B,EAAU27B,UAItB1K,IAAYjxB,EAAUixB,UAItBiI,IAAoBl5B,EAAUk5B,kBAI9Bl2B,IAAgB/C,EAAU+C,cAI1BE,IAASjD,EAAUiD,MAInBD,IAAQhD,EAAUgD,Y,sCAiDV6I,GACZ,IACIA,EAAMA,EAAIrB,WAAW,QAAUqB,EAAM,UAAYA,EACjD,IAAM8vB,EAAaC,UAAU/vB,GAEvBgwB,EAAW,IAAIC,IAAIH,GAAYE,SAASE,MAAM,KAC9CC,EAASH,EAASh9B,QAAU,EAAIg9B,EAASA,EAASh9B,OAAS,GAAK,IAAIi9B,IAAIH,GAAYE,SAE1F,OAAOI,KAASC,UAAUF,GAC5B,MAAOlvB,GACLd,QAAQc,MAAM,QAAUjB,EAAM,KAAOiB,GAGzC,OAAO,O,+BAGD,IAAD,SACmDrU,KAAKc,MAArDsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWw0B,EADtB,EACsBA,QAASzC,EAD/B,EAC+BA,gBAD/B,EAE8BxgC,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAErB+I,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAErB,IAAI0lB,EAAY,KACZkI,EAAgB,KAChB7mB,EAAU,KATT,EAUoH4oB,GAAW,CAChIn7B,MAAO,GACP47B,YAAa,CACT,QAAS,gBACTpzB,KAAM,GACNkoB,SAAU,IAEd3rB,MAAO,KACP82B,UAAW,KACXvG,MAAO,KACP3lB,SAAU,KACVhX,QAAS,KACT0qB,MAAO,KACPyY,WAAY,KACZxwB,IAAK,IAdUswB,GAVd,EAUCG,YAVD,EAUcH,aAAa72B,EAV3B,EAU2BA,MAAO/E,EAVlC,EAUkCA,MAAOsL,EAVzC,EAUyCA,IAAKuwB,EAV9C,EAU8CA,UAAWvG,EAVzD,EAUyDA,MAAO3lB,EAVhE,EAUgEA,SAAUhX,EAV1E,EAU0EA,QAAS0qB,EAVnF,EAUmFA,MAAmB2Y,EAVtG,EAU0FF,WAiB3FD,GACAzC,EAAgByC,EAAUzC,cAC1BlI,EAAY2K,EAAU3K,WACfoE,GACP8D,EAAgB9D,EAAM2G,0BACtB/K,EAAYoE,EAAM4G,uBACXvsB,GACPypB,EAAgBzpB,EAASypB,cACzBlI,EAAYvhB,EAASuhB,WACdv4B,GACPygC,EAAgBzgC,EAAQygC,cACxBlI,EAAYv4B,EAAQu4B,WACb7N,GACP+V,EAAgB/V,EAAM+V,cACtBlI,EAAY7N,EAAM6N,WACX8K,IACP5C,EAAgB4C,EAAU5C,cAC1BlI,EAAY8K,EAAU9K,WAGrBA,GAAckI,IAAiBr0B,IAChCq0B,EAAgBr0B,EAAMq0B,cACtBlI,EAAYiL,aAAap3B,EAAMkrB,MAAO6J,OAjDrC,MAoDmBtuB,EAAQ+G,QAA1B/J,EApDD,EAoDCA,KAAMioB,EApDP,EAoDOA,QAEZ,GADAjoB,EAAOA,GAAQioB,EACL,CAAC,IACCC,EAAaloB,EAAbkoB,SACR,GAAIA,GAAYA,EAASpyB,OAAS,EAAG,CACjC,IACM89B,EAAc1L,EAAS5lB,OAAOowB,EAAWmB,eACzCC,EAAYF,EAAY99B,OAAS,GAAKkK,EAAKA,KAAKlK,OAF5B,GAGpBi+B,EAAkC,IAApB7L,EAASpyB,QAAuC,IAAvBoyB,EAAS,GAAG7lB,QAAgB6lB,EAAS,GAAGpyB,SAAWkK,EAAKA,KAAKlK,OAEpGk+B,EAAsBJ,EACvBtxB,OAAO,SAAA1T,GACJ,IAAIqlC,EAAaC,aAAUl0B,EAAKA,KAAMpR,EAAEyT,OAAQzT,EAAEyT,OAASzT,EAAEkH,QAAQ0L,OAGrE,OAFAyyB,EAAaA,EAAW7kB,QAAQ,UAAU,KAExBtZ,OAAS,IAG7Bq+B,EAAQH,EAAoB10B,IAAI,SAAC1Q,EAAGyH,GAClC,IAAM49B,EAAaC,aAAUl0B,EAAKA,KAAMpR,EAAEyT,OAAQzT,EAAEyT,OAASzT,EAAEkH,QAC/DgN,EAAMmxB,EACN,IAAIG,GAAO,EAEX,OAAQxlC,EAAEkD,KAAK,UACX,IAAK,wBAA0B,IACduiC,EAAYzlC,EAAEkD,KAAnBgR,IACJuxB,IACAvxB,EAAMuxB,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDD,GAAO,EAMf,OAFA58B,EAAQA,GAAS,EAAK88B,gBAAgBxxB,IAAQ,IAG1C,kBAACyxB,GAAA,EAAD,CAAUj/B,IAAKe,EAAGtF,UAAU,kBAAkB+R,IAAKA,EAAKsxB,KAAMA,GACzDH,KAKjB,GAAIH,EAAW,CACX,IAAItiC,GAAKwiC,EAAoBl+B,OAAS,GAAKk+B,EAAoB,GAAG3xB,OAAS,EAAIrC,EAAKA,KAAKk0B,UAAU,EAAGF,EAAoB,GAAG3xB,QAAUrC,EAAKA,OAASozB,EAAYpzB,MAAQ,GACzKxO,EAAIA,EAAEgQ,OACNuI,EACI,oCACKvY,IAAMuiC,GAAe,yBAAKhjC,UAAU,wBAAwBS,GAC7D,6BAAM2iC,QAEX,CACH,IAAI3iC,EAAI4hC,EAAYpzB,MAAQ,GAC5BxO,EAAIA,EAAEgQ,OACNuI,EACI,oCACKvY,GAAK,yBAAKT,UAAU,wBAAwBS,GAC7C,yBAAKT,UAAU,oBAAoByjC,aAAiBx0B,EAAM,SAAApR,GAAC,OAAIA,GAAG,CAAEilC,cAAenB,EAAWmB,kBAItGlB,IACAn7B,EAAQA,GAAS9H,KAAK4kC,gBAAgBxxB,KAKlD,OACI,oCACI,yBAAK/R,UAAU,cAAc+J,cAAepL,KAAKghC,uBAC7C,kBAAC,GAAD,CACI55B,OAAQA,EACRqH,UAAWA,EACXyyB,cAAeA,EACflI,UAAWA,EACXlxB,MAAOi9B,aAAe/kC,KAAK4kC,gBAAgBxxB,MAE/C,yBAAK/R,UAAU,uBACVyG,GAAS,yBAAKzG,UAAU,kBAAkByG,GAC1CuS,IAGT,kBAAC,GAAD,CACIjT,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNk2B,gBAAiBA,EACjB38B,QAAS7D,KAAK+K,6B,qCA9KTi6B,GACjB,IAAKA,EAAQ,OAAO,EADK,IAGjB5iC,EAAS4iC,EAAT5iC,KACR,QAAKA,IAGiB,sBAAlBA,EAAK,UACa,0BAAlBA,EAAK,UACa,+BAAlBA,EAAK,c,GApFQT,IAAMC,Y,uCCDzBqjC,I,kNACF5kC,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EAsCTy2B,sB,sCAAwB,WAAM7+B,GAAN,iBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBY,yC,wDAqBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,qFA7DXhD,EAAWC,EAAWmU,GAAc,IAAD,EACK1b,KAAKc,MAAvDsG,EAD6C,EAC7CA,OAAQqH,EADqC,EACrCA,UAAW4uB,EAD0B,EAC1BA,UAAWmD,EADe,EACfA,gBADe,EAElBxgC,KAAKK,MAAhCiK,EAF6C,EAE7CA,YAAaE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,IAE3B,OAAInD,IAAWE,EAAUF,SAIrBqH,IAAcnH,EAAUmH,YAIxB4uB,IAAc/1B,EAAU+1B,YAIxBmD,IAAoBl5B,EAAUk5B,kBAI9Bl2B,IAAgB/C,EAAU+C,cAI1BE,IAASjD,EAAUiD,MAInBD,IAAQhD,EAAUgD,W,+BAoChB,IAAD,EACsEvK,KAAKc,MAAxEsG,EADH,EACGA,OAAQ26B,EADX,EACWA,KAAMtzB,EADjB,EACiBA,UAAW4uB,EAD5B,EAC4BA,UAAW4D,EADvC,EACuCA,UAAWT,EADlD,EACkDA,gBADlD,EAE8BxgC,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAErB+I,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAErB,IAAK+pB,EAAW,OAAO,KAPlB,IASGjoB,EAAiB9B,EAAjB8B,KAAMzB,EAAWL,EAAXK,OACRquB,EAAa,IAAIxxB,KAAY,IAAP4E,GAAa6sB,mBAAmB,CAACF,EAAKG,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJnkC,EAA0Bg/B,EAA1Bh/B,SAAiB6O,EAASmwB,EAAhB6H,MAElB,OACI,oCACI,yBAAK7jC,UAAU,oBAAoB+J,cAAepL,KAAKghC,uBACnD,kBAACmE,GAAA,EAAD,CAAe/9B,OAAQA,EAAQqH,UAAWA,EAAWvB,KAAMA,EAAM+zB,UAAWA,IAC5E,yBAAK5/B,UAAU,sBACX,yBAAKA,UAAU,kBAAiB,kBAAC+jC,GAAA,EAAD,CAAezxB,OAAQA,EAAQlF,UAAWA,KAC1E,yBAAKpN,UAAU,mBACX,kBAACgkC,GAAA,EAAD,CACIj+B,OAAQA,EACRqH,UAAWA,EACXpQ,SAAUA,EACV6O,KAAMA,EACNkI,KAAM4sB,IAEV,kBAACsD,GAAA,EAAD,CAAal+B,OAAQA,EAAQqH,UAAWA,EAAW82B,KAAM,kBAIrE,kBAAC,GAAD,CACIn+B,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNk2B,gBAAiBA,EACjB38B,QAAS7D,KAAK+K,8B,GApHJpJ,IAAMC,YAoIrBsD,iBAAkB+/B,ICpI3BO,I,kNACFnlC,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EA8CTk7B,iCAAmC,SAAAx+B,GAAW,IAClC+xB,EAAc,EAAKl4B,MAAMqqB,MAAzB6N,UACArsB,EAAW1F,EAAX0F,OAER,GAAKqsB,EAAL,CAJyC,IAMjC9rB,EAAS8rB,EAAT9rB,KACJA,GAAQA,EAAKzO,KAAOkO,GACpB,EAAKzF,gB,EAIb85B,sB,sCAAwB,WAAM7+B,GAAN,iBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAEc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,SAhBY,yC,wDAqBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,mFAhF7B8C,KAAU3F,GAAG,iCAAkCzH,KAAKylC,oC,6CAIpDr4B,KAAU1F,IAAI,iCAAkC1H,KAAKylC,oC,4CAGnCn+B,EAAWC,EAAWmU,GAAc,IAAD,EACC1b,KAAKc,MAAnDsG,EAD6C,EAC7CA,OAAQqH,EADqC,EACrCA,UAAW0c,EAD0B,EAC1BA,MAAOqV,EADmB,EACnBA,gBADmB,EAElBxgC,KAAKK,MAAhCiK,EAF6C,EAE7CA,YAAaE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,IAE3B,OAAInD,IAAWE,EAAUF,SAIrBqH,IAAcnH,EAAUmH,YAIxB0c,IAAU7jB,EAAU6jB,QAIpBqV,IAAoBl5B,EAAUk5B,kBAI9Bl2B,IAAgB/C,EAAU+C,cAI1BE,IAASjD,EAAUiD,MAInBD,IAAQhD,EAAUgD,W,+BAgDhB,IAAD,EAC4DvK,KAAKc,MAA9DsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWwyB,EADtB,EACsBA,UAAWrzB,EADjC,EACiCA,MAAO4yB,EADxC,EACwCA,gBADxC,EAE0CxgC,KAAKc,MAAMqqB,MAAlD+V,EAFH,EAEGA,cAAelI,EAFlB,EAEkBA,UAAW36B,EAF7B,EAE6BA,SAF7B,EAG8B2B,KAAKK,MAAhCiK,EAHH,EAGGA,YAAaE,EAHhB,EAGgBA,KAAMD,EAHtB,EAGsBA,IAErB42B,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWt0B,YAAOisB,EAAYA,EAAU9rB,KAAO,MAC/Cw1B,EAAYrB,EAAWC,aAAmBtI,GAAatzB,QAAQy7B,GAErE,OACI,oCACI,yBAAK9/B,UAAU,eAAeuM,MAAOA,EAAOrI,QAAS07B,EAAW71B,cAAepL,KAAKghC,uBAChF,yBAAK3/B,UAAU,wBACX,yBACIA,UAAWoE,IAAW,uBAAwB,CAC1C,gBAAiBi9B,EACjB,sBAAuBrB,GAAYqB,IAEvC90B,MAAO,CAAE2zB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,QAE5B,yBAAK9/B,UAAU,qBAAqBsyB,aAAkBt1B,MAG9D,kBAAC,GAAD,CACI+I,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNk2B,gBAAiBA,EACjB38B,QAAS7D,KAAK+K,8B,GAxHRpJ,IAAMC,YA2IhC4jC,GAAYx9B,aAAe,CACvB2F,KAAMi0B,KACNH,cAAeI,MAGJ2D,U,8jBCvIf,IAAMhqB,GAAgB,EAEhBkqB,G,YACF,WAAY5kC,GAAQ,IAAD,8BACf,4CAAMA,KA0YV27B,uBAAyB,SAAAx1B,GAAW,IACxBI,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WACTtH,EAAW,EAAKtG,MAAhBsG,OAER,GAAIA,IAAWC,EAAf,CAJ+B,MAME,EAAKhH,MAA9B0b,EANuB,EAMvBA,MAAO2gB,EANgB,EAMhBA,cACf,GAAK3gB,EAAMvK,KAAK,SAAAtS,GAAC,OAAIA,EAAET,KAAOiQ,IAA9B,CAEA,IAAMiuB,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,MArZX,EAwZnBxP,eAAiB,SAAA/qB,GAAU,IAAD,EACO,EAAK9B,MAA1B0b,EADc,EACdA,MAAOjH,EADO,EACPA,UAEE/F,EAAS,EAAK6F,QAAvBC,QACR,GAAK9F,EAAL,CAEA,IAAM42B,EAAY52B,EAAK42B,UACjB5qB,EAAiBhM,EAAK62B,aAAa7wB,aAEnCoG,EAAY,EAAKC,aAAaW,EAAOhB,EAAgBjG,EAAY6wB,GAEvE,EAAK5kC,SAAL,MAAmBoa,MAnaJ,EAsanB0qB,oBAAsB,SAAA5+B,GAAW,IACrBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZqM,QACejM,QAAvB,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KA/aX,EAkbnBK,mBAAqB,SAAA91B,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZqM,QACejM,QAAvB,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KA3bX,EA8bnBI,uBAAyB,SAAA71B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAER,GAAIt1B,IADgBH,EAAZI,QACR,CAIA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KAvcX,EA0cnBG,cAAgB,SAACF,EAAOD,GAAmB,IAC/B5nB,EAAc,EAAKzU,MAAnByU,UAEFrM,EAAUk0B,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAYk0B,EAAMt0B,SAASI,UAAgB,GACjH00B,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9C1lB,EAAWklB,EAAQA,EAAMllB,SAAW,GACpC2lB,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BhqB,EAAMupB,EAAQA,EAAMvpB,IAAM,GAC1BiqB,EAAYV,EAAQA,EAAMU,UAAY,GACtCC,EAAiBX,EAAQA,EAAMW,eAAiB,GAEhDC,EAAa90B,EAAQrC,OAAS,EAC9Bo3B,EAAmBL,EAAc/2B,OAAS,EAC1Cq3B,EAAchmB,EAASrR,OAAS,EAChCs3B,EAAWN,EAAMh3B,OAAS,EAC1Bu3B,EAASvqB,EAAIhN,OAAS,EACtBw3B,EAAeP,EAAUj3B,OAAS,EAClCy3B,EAAoBP,EAAel3B,OAAS,IAG3B,IAAnBs2B,GACqB,IAAlBA,IAAwBa,GACN,IAAlBb,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,KAEvBN,EACAb,EAAgB,EACTc,EACPd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,IACPnB,EAAgB,IAIxB,IACM3gB,EADS2pB,EAAmBI,UAAUpJ,EAAeC,GAAO/pB,OAAO,SAAA1T,GAAC,OAAIwmC,EAAmBK,eAAerJ,EAAex9B,EAAEmb,WAC5G2rB,MAAM,EAAGC,OAEbl3B,EAAS,EAAK6F,QAAvBC,QACR,GAAK9F,EAAL,CAEA,IAAM42B,EAAY52B,EAAK42B,UACjB5qB,EAAiBhM,EAAK62B,aAAa7wB,aAEzC,EAAKhU,SAAS,CACV27B,gBACAvhB,UAAW,EAAKC,aAAaW,EAAOhB,EAAgBjG,EAAY6wB,GAChErqB,UAAWoqB,EAAmBQ,aAAaxJ,GAC3C3gB,QACAqB,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,EACX8oB,kBAAkB,EAClBvzB,OAAQ8yB,EAAmBU,UAAU1J,IAEzCj0B,UACA00B,gBACA1lB,WACA2lB,QACAhqB,MACAiqB,YACAC,qBAlhBW,EAmjBnBU,uBAAyB,SAAA/2B,GAAW,IAChB82B,EAAkB,EAAKj9B,MAA/BsG,OACAA,EAAiCH,EAAjCG,OAAes1B,EAAkBz1B,EAAzBsT,MAChB,GAAInT,IAAW22B,EAAf,CAEA,IAAMpB,EAAQ1pB,KAAa2pB,SAASmB,GAE9Bt1B,EAAUk0B,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAYk0B,EAAMt0B,SAASI,UAAgB,GACjH00B,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9C1lB,EAAWklB,EAAQA,EAAMllB,SAAW,GACpC2lB,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BhqB,EAAMupB,EAAQA,EAAMvpB,IAAM,GAC1BiqB,EAAYV,EAAQA,EAAMU,UAAY,GACtCC,EAAiBX,EAAQA,EAAMW,eAAiB,GAElD97B,EAAS,GACS,IAAlBk7B,EACAl7B,EAASiH,EACgB,IAAlBi0B,EACPl7B,EAAS27B,EACgB,IAAlBT,EACPl7B,EAASiW,EACgB,IAAlBilB,EACPl7B,EAAS47B,EACgB,IAAlBV,EACPl7B,EAAS4R,EACgB,IAAlBspB,EACPl7B,EAAS67B,EACgB,IAAlBX,IACPl7B,EAAS87B,GAEb97B,EAASA,EAAOoR,OAAO,SAAA1T,GAAC,OAAIwmC,EAAmBK,eAAerJ,EAAex9B,EAAEmb,WAE/E,EAAKtZ,SAAS,CACV27B,gBACAvhB,UAAW,IAAI1U,IACf6U,UAAWoqB,EAAmBQ,aAAaxJ,GAC3C3gB,MAAOva,EAAOwkC,MAAM,EAAGC,OACvBx9B,UACA00B,gBACA1lB,WACA2lB,QACAhqB,MACAiqB,YACAC,iBACAlgB,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,EACX8oB,kBAAkB,EAClBvzB,OAAQ8yB,EAAmBU,UAAU1J,QApmB9B,EAymBnBoB,wBAA0B,SAAA72B,GAAW,IACjB82B,EAAkB,EAAKj9B,MAA/BsG,OACAs1B,EAAkB,EAAKr8B,MAAvBq8B,cAEAt1B,EAAWH,EAAXG,OACR,GAAIA,IAAW22B,EAAf,CAEA,IAAMpB,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,EAAKy1B,cAAcF,EAAOD,KAjnBX,EAonBnB/nB,aAAe,SAACxS,EAAOovB,GAAe,IAC1BnU,EAAW,EAAK/c,MAAhB+c,OAEJA,IAAWA,EAAOC,WAClB,EAAKM,WAAWP,IAxnBL,EA8nBnBipB,iBAAmB,SAAClkC,EAAOovB,GACG,EAAK3c,QAAvBC,SAGR,EAAKwG,kBAAkBkW,EAAUzc,YAloBlB,EAqoBnByG,cAAgB,SAAChB,EAAOQ,EAAgBjG,GAAe,IAC3CwG,EAAc,EAAKjb,MAAnBib,UAKR,OAHgBf,EAAQe,EAIVxG,EAAY0G,GAAgBF,IAHtBf,EAAQ,GAAKe,EAIhBxG,EAAYiG,EAAiBS,GAAgBF,GA7oB/C,EA8pBnBD,kBAAoB,SAAAvG,GAAc,IAAD,EAC0B,EAAKzU,MAApD0b,EADqB,EACrBA,MAAkBuqB,EADG,EACdxxB,UAA0BwG,EADZ,EACYA,UAExBvM,EAAS,EAAK6F,QAAvBC,QACR,GAAK9F,EAAL,CAEA,IAAM42B,EAAY52B,EAAK42B,UACjB5qB,EAAiBhM,EAAK62B,aAAa7wB,aAEzC,GAAIzV,KAAK6O,IAAI2G,EAAYwxB,IAAkBhrB,EAAW,CAClD,IAAMH,EAAY,EAAKC,aAAaW,EAAOhB,EAAgBjG,EAAY6wB,GAEvE,EAAK5kC,SAAL,IACI+T,aACGqG,OA5qBI,EAirBnBwC,WAjrBmB,sCAirBN,WAAOP,GAAP,uDAAA1S,EAAA,wDAAe67B,IAAf,iCACDn/B,EAAW,EAAKtG,MAAhBsG,OADC,EAEwB,EAAK/G,MAA9B0b,EAFC,EAEDA,MAAO2gB,EAFN,EAEMA,cACPrf,EAAuDD,EAAvDC,UAAWzK,EAA4CwK,EAA5CxK,OAAQ4C,EAAoC4H,EAApC5H,QAAmBgxB,EAAiBppB,EAA3B5K,SAEd,IAAlBkqB,EALK,oDAMa,IAAlBA,EANK,oDAOJ9pB,EAPI,uDAQL4C,EARK,uDASL6H,EATK,0DAWLopB,EAAgB1qB,EAAM3V,OAAS,EAAI2V,EAAMA,EAAM3V,OAAS,GAAG3H,GAAK,EAChE+nC,IACAC,EAAgBD,EAAapgC,OAAS,EAAIogC,EAAaA,EAAapgC,OAAS,GAAG3H,GAAK,GAEzF2e,EAAO5H,SAAU,EACjB4H,EAAOspB,UAAY,IAAIl2B,KAhBd,UAkBY9P,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAOo1B,MACPrzB,WACDmN,QAAQ,WACP3C,EAAO5H,SAAU,IA5BZ,WAkBH3U,EAlBG,OA+BTH,KAAgBC,KAAK,CACjB,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAoC,EAA7Bo1B,MACPrzB,YAGY+zB,EAAkB,EAAKtmC,MAA/B+c,SACcupB,EAAcD,YAActpB,EAAOspB,UA3ChD,mDA+CDl0B,EAAa3R,EAAb2R,SACR4K,EAAO5K,SAAWA,EAClB4K,EAAOC,UAAgC,IAApB7K,EAASpM,QAAyC,IAAzBoM,EAAS8C,YACrD8H,EAAOrB,MAAQA,EAAMxG,OAAO/C,EAASI,OAAO,SAAA1T,GAAC,OAAIwmC,EAAmBkB,eAAelK,EAAex9B,MAC5F2nC,EAAoBN,GAAkB/zB,EAASpM,OAAS,GAAKoM,EAASpM,OAAS6/B,MAErFhzB,KAAaC,SAASrS,EAAO2R,UACvBrF,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAElC,EAAKzR,SAAS,CAAEgb,MAAOqB,EAAOrB,QAE1BqB,EAAOC,UACP,EAAK0pB,mBAAmB3pB,GAAQ,GACzBypB,GACP,EAAKlpB,WAAWP,GAAQ,GA9DnB,0CAjrBM,wDAuvBnB4pB,WAAa,SAAAprB,GAAS,IACVxB,EAAU,EAAKtZ,MAAfsZ,MAER,OAAQwB,EAAK,UACT,IAAK,UAAY,IACLvU,EAAgBuU,EAAhBvU,QAAS5I,EAAOmd,EAAPnd,GAEjBwiC,aAAU55B,EAAS5I,GAAI,GACvB,MAEJ,IAAK,OAAS,IACFA,EAAOmd,EAAPnd,GACR2hC,aAAS3hC,GAEL2b,GACA1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,IAGhB,MAEJ,IAAK,aAAe,IACRuB,EAAYiT,EAAZjT,QACRs+B,aAASt+B,GAAS,GAEdyR,GACA1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,MAjxBxB,EAAKwN,QAAUjT,IAAMoU,YAErB,EAAK1V,MAAQ,CACTyU,UAAW,GANA,E,iFAoXfgF,OAAO6B,iBAAiB,SAAU3b,KAAKktB,gBAEvCja,KAAaxL,GAAG,uBAAwBzH,KAAKg+B,wBAC7C/qB,KAAaxL,GAAG,wBAAyBzH,KAAK89B,yBAC9C7qB,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,oBACzC9pB,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,wBAC7CxpB,KAAaxL,GAAG,6BAA8BzH,KAAK6lC,qBACnD5yB,KAAaxL,GAAG,0BAA2BzH,KAAK6lC,uB,6CAIhD/rB,OAAO+B,oBAAoB,SAAU7b,KAAKktB,gBAE1Cja,KAAavL,IAAI,uBAAwB1H,KAAKg+B,wBAC9C/qB,KAAavL,IAAI,wBAAyB1H,KAAK89B,yBAC/C7qB,KAAavL,IAAI,mBAAoB1H,KAAK+8B,oBAC1C9pB,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,wBAC9CxpB,KAAavL,IAAI,6BAA8B1H,KAAK6lC,qBACpD5yB,KAAavL,IAAI,0BAA2B1H,KAAK6lC,uB,yCA8IlC3kC,EAAWC,EAAWC,GACrC,GAAIF,EAAU6a,QAAU/b,KAAKc,MAAMsG,QAAUjG,EAAUu7B,gBAAkB18B,KAAKK,MAAMq8B,cAAe,CAAC,IACxF3gB,EAAU/b,KAAKK,MAAf0b,MAEF5O,EAAQC,KAAUC,WACxB,OAAQrN,KAAKK,MAAMq8B,eACf,KAAK,EACD7oB,YAAiB1G,EAAO4O,EAAMnM,IAAI,SAAA1Q,GAAC,OAAIA,EAAEyJ,WACzC,MAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDm+B,YAAoB35B,EAAO4O,GAC3B,MAEJ,KAAK,EACDnK,YAAiBzE,EAAO4O,O,mCAwG3Bva,EAAQuZ,EAAgBjG,GAAY,IAAD,OACtCqG,EAAY,IAAI1U,IAChBgV,EAAgB,GAQtB,OAPAja,EAAO7B,QAAQ,SAACic,EAAMrB,GACd,EAAKgB,cAAchB,EAAOQ,EAAgBjG,KAC1CqG,EAAUpL,IAAIwK,EAAOA,GACrBkB,EAAczL,KAAKuK,MAIpB,CAAEY,YAAWM,mB,yCAwFL2B,EAAQmpB,M,+BAwCjB,IAAD,SAYDvmC,KAAKK,MAVLq8B,EAFC,EAEDA,cAFC,IAGD3gB,aAHC,MAGO,GAHP,EAIDZ,EAJC,EAIDA,UACA1S,EALC,EAKDA,QACA00B,EANC,EAMDA,cACA1lB,EAPC,EAODA,SACA2lB,EARC,EAQDA,MACAhqB,EATC,EASDA,IACAiqB,EAVC,EAUDA,UACAC,EAXC,EAWDA,eAYJ,KAPiB70B,GAAWA,EAAQrC,OAAS,GACtC+2B,GAAiBA,EAAc/2B,OAAS,GACxCqR,GAAYA,EAASrR,OAAS,GAC9Bg3B,GAASA,EAAMh3B,OAAS,GACxBgN,GAAOA,EAAIhN,OAAS,GACpBi3B,GAAaA,EAAUj3B,OAAS,GAChCk3B,GAAkBA,EAAel3B,OAAS,GAE7C,OAAQ,yBAAKoQ,IAAKxW,KAAK4U,UAG3B,GAAsB,IAAlB8nB,GAAyC,IAAlBA,GAAyC,IAAlBA,EAAqB,CACnE,IAAIwK,EAAgB,EACdC,EAAWprB,EAAMnM,IAAI,SAAC1Q,EAAGqb,GAAW,IAC9BlT,EAAgBnI,EAAhBmI,QAAS5I,EAAOS,EAAPT,GACX2oC,EAAa1B,EAAmB2B,cAAcnoC,GACpD,OAAKkoC,GAGLF,GAAiBE,IAEPjsB,EAAUxN,MAAQwN,EAAUvU,IAAI2T,KACtC,yBAAK3U,IAAG,kBAAayB,EAAb,uBAAmC5I,GAAM4C,UAAU,yBAAyBuM,MAAO,CAAErD,IAAK28B,EAAgBE,IAC7G1B,EAAmB4B,gBAAgB5K,EAAex9B,EAAG,kBAAM,EAAK8nC,WAAW9nC,OANzE,OAWf,OACI,yBAAKsX,IAAKxW,KAAK4U,QAASvT,UAAU,4BAA4BuM,MAAO,CAAEE,OAAQo5B,IAC1EC,GAKb,OACI,yBAAK3wB,IAAKxW,KAAK4U,QAASvT,UAAWoE,IAAW,uBAAwB,CAAE,qBAAwC,IAAlBi3B,KACzF3gB,EAAMnM,IAAI,SAAA1Q,GAAC,OAAIwmC,EAAmB4B,gBAAgB5K,EAAex9B,EAAG,kBAAM,EAAK8nC,WAAW9nC,W,qCAp0BlF0c,GACjB,GAAKA,EAEL,OAAQA,EAAK,UACT,IAAK,UAED,OADoBA,EAAZvB,QACQ,UACZ,IAAK,eAGL,IAAK,eACD,OAEJ,IAAK,kBACD,OAAO,GAEX,IAAK,eACD,OAAO,GAEX,IAAK,mBACD,OAAO,GAEX,QACI,OAIZ,IAAK,OAGL,IAAK,OACD,OAAO,GAEX,QACI,U,mCAKQqiB,GAChB,OAAQA,GACJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EAGL,KAAK,EACD,OAAO,M,qCAiHGA,EAAeppB,GACjC,QAAKA,GAEEoyB,EAAmBK,eAAerJ,EAAeppB,EAAQ+G,W,qCAG9CqiB,EAAeriB,GACjC,OAAQqiB,GACJ,KAAK,EACD,OAAO,EAEX,KAAK,EACD,OAAOgJ,EAAmB6B,4BAA4BltB,GAE1D,KAAK,EACD,OAAOqrB,EAAmB8B,uBAAuBntB,GAErD,KAAK,EACD,OAAOqrB,EAAmB+B,oBAAoBptB,GAElD,KAAK,EACD,OAAOqrB,EAAmBgC,kBAAkBrtB,GAEhD,KAAK,EACD,OAAOqrB,EAAmBiC,wBAAwBttB,GAEtD,KAAK,EACD,OAAO,EAIf,OAAO,I,kDAGwBA,GAC/B,OAAOA,IAAiC,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,Y,0CAG3CA,GACvB,OAAOA,GAAgC,iBAArBA,EAAQ,W,6CAGAA,GAC1B,OAAOA,IAAiC,oBAArBA,EAAQ,UAAuD,iBAArBA,EAAQ,Y,wCAGhDA,GACrB,IAAKA,EAAS,OAAO,EADS,IAGtButB,EAA4BvtB,EAA5ButB,SAAUt3B,EAAkB+J,EAAlB/J,KAAMioB,EAAYle,EAAZke,QACxB,GAAIqP,EAAU,OAAO,EACrB,IAAKt3B,IAASioB,EAAS,OAAO,EALA,IAOtBC,GAAaloB,GAAQioB,GAArBC,SACR,QAAKA,GAEEA,EAAS9vB,KACZ,SAAAxJ,GAAC,MACuB,sBAApBA,EAAEkD,KAAK,UACa,0BAApBlD,EAAEkD,KAAK,UACa,+BAApBlD,EAAEkD,KAAK,a,8CAIYiY,GAC3B,OAAOA,GAAgC,qBAArBA,EAAQ,W,gCAGbqiB,GACb,OAAQA,GACJ,KAAK,EACD,OAAO,KAEX,KAAK,EACD,MAAO,CAAE,QAAS,qCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,gCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,6BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,2BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,iCAEtB,KAAK,EACD,OAAO,KAIf,OAAO,O,gCAGMA,EAAeC,GAC5B,IAAKA,EACD,MAAO,GAGX,OAAQD,GACJ,KAAK,EACD,OAAQC,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAYk0B,EAAMt0B,SAASI,SAAW,GAErG,KAAK,EACD,OAAOk0B,EAAMQ,eAAiB,GAElC,KAAK,EACD,OAAOR,EAAMllB,UAAY,GAE7B,KAAK,EACD,OAAOklB,EAAMS,OAAS,GAE1B,KAAK,EACD,OAAOT,EAAMvpB,KAAO,GAExB,KAAK,EACD,OAAOupB,EAAMU,WAAa,GAE9B,KAAK,EACD,OAAOV,EAAMW,gBAAkB,GAIvC,MAAO,K,+CAGqBx8B,EAAOT,GAGnC,GAFmBS,EAAXsG,SAEO/G,EAAMmJ,WAAY,CAC7B,IAAMmzB,EAAQ1pB,KAAa2pB,SAAS97B,EAAMsG,QAEpCqB,EAAUk0B,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBz0B,SAAYk0B,EAAMt0B,SAASI,UAAgB,GACjH00B,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9C1lB,EAAWklB,EAAQA,EAAMllB,SAAW,GACpC2lB,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BhqB,EAAMupB,EAAQA,EAAMvpB,IAAM,GAC1BiqB,EAAYV,EAAQA,EAAMU,UAAY,GACtCC,EAAiBX,EAAQA,EAAMW,eAAiB,GAElDZ,GAAiB,EACjBj0B,EAAQrC,OAAS,EACjBs2B,EAAgB,EACTS,EAAc/2B,OAAS,EAC9Bs2B,EAAgB,EACTjlB,EAASrR,OAAS,EACzBs2B,EAAgB,EACTU,EAAMh3B,OAAS,EACtBs2B,EAAgB,EACTtpB,EAAIhN,OAAS,EACpBs2B,EAAgB,EACTW,EAAUj3B,OAAS,EAC1Bs2B,EAAgB,EACTY,EAAel3B,OAAS,IAC/Bs2B,EAAgB,GAEpB,IAAMl7B,EAASkkC,EAAmBI,UAAUpJ,EAAeC,GAAO/pB,OAAO,SAAA1T,GAAC,OAAIwmC,EAAmBK,eAAerJ,EAAex9B,EAAEmb,WAEjI,MAAO,CACH7Q,WAAY1I,EAAMsG,OAClBs1B,gBACAvhB,UAAW,IAAI1U,IACf6U,UAAWoqB,EAAmBQ,aAAaxJ,GAC3C3gB,MAAOva,EAAOwkC,MAAM,EAAGC,OACvBx9B,UACA00B,gBACA1lB,WACA2lB,QACAhqB,MACAiqB,YACAC,iBACAhZ,cAAc,EACdlH,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,EACX8oB,kBAAkB,EAClBvzB,OAAQ8yB,EAAmBU,UAAU1J,KAKjD,OAAO,S,GAjXkB/6B,IAAMC,WAAjC8jC,GAgFK4B,gBAAkB,SAAC5K,EAAe9gB,EAAMisB,GAG3C,OAAQnL,GACJ,KAAK,EAAI,IACYj+B,EAAOmd,EAAhBjT,QACR,OACI,kBAACuC,GAAA,EAAD,CACIC,QAAM,EACNvF,IAAG,kBAAanH,GAChB4C,UAAU,yBACV,kBAACymC,GAAA,EAAD,CAAMC,OAAQtpC,EAAIqL,SAAU+9B,KAIxC,KAAK,EAAI,IACGxgC,EAAyBuU,EAAzBvU,QAAS5I,EAAgBmd,EAAhBnd,GAAI4b,EAAYuB,EAAZvB,QACrB,MAAyB,iBAArBA,EAAQ,SAEJ,kBAAC,GAAD,CACIzU,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX0sB,MAAO9Q,EAAQ8Q,MACf8V,UAAW4G,EACXrH,iBAxBG,IAwBcn5B,IAMzB,kBAAC,GAAD,CACIzB,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACXoO,MAAOwN,EAAQxN,MACfo0B,UAAW4G,EACXrH,iBApCO,IAoCUn5B,IAI7B,KAAK,EAAI,IACGA,EAAgBuU,EAAhBvU,QAAS5I,EAAOmd,EAAPnd,GACjB,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX+hC,iBA/CO,IA+CUn5B,IAI7B,KAAK,EAAI,IACGA,EAAyBuU,EAAzBvU,QAAS5I,EAAgBmd,EAAhBnd,GAAgBmd,EAAZvB,QACrB,OACI,kBAAC,GAAD,CACIzU,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX+hC,iBA1DO,IA0DUn5B,IAI7B,KAAK,EAAI,IACGA,EAAyBuU,EAAzBvU,QAAS5I,EAAgBmd,EAAhBnd,GAAI4b,EAAYuB,EAAZvB,QACrB,OACI,kBAAC,GAAD,CACIzU,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACXwkC,QAAS5oB,EAAQutB,SACjBrP,QAASle,EAAQke,QACjB0I,UAAW4G,EACXrH,iBAxEO,IAwEUn5B,IAI7B,KAAK,EAAI,IACGA,EAAyBuU,EAAzBvU,QAAS5I,EAAgBmd,EAAhBnd,GAAI4b,EAAYuB,EAAZvB,QACrB,OACI,kBAAC,GAAD,CACIzU,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX4+B,UAAWhjB,EAAQ2tB,WACnB/G,UAAW4G,EACXrH,iBArFO,IAqFUn5B,IAI7B,KAAK,EAAI,IACG5I,EAAOmd,EAAPnd,GACR,OACI,kBAACyM,GAAA,EAAD,CACIC,QAAM,EACNvF,IAAG,kBAAanH,GAChB4C,UAAU,yBACV,kBAAC,GAAD,CAAM+F,OAAQ3I,EAAIqL,SAAU+9B,KAM5C,OAAO,MAoqBAnC,U,kBCtzBTuC,I,0BACF,WAAYnnC,GAAQ,IAAD,uBACf,4CAAMA,KA+FVmI,2BAA6B,SAAAhC,GACzB,IAAMkB,EAAOX,KAAUjB,IAAI,EAAKzF,MAAMsG,QACjCe,GAGDA,EAAK/F,MACkB,uBAAvB+F,EAAK/F,KAAK,UACV+F,EAAK/F,KAAKoG,iBAAmBvB,EAAOuB,gBAEpC,EAAKtB,eAzGM,EA6GnBgC,2BAA6B,SAAAjC,GACzB,IAAMkB,EAAOX,KAAUjB,IAAI,EAAKzF,MAAMsG,QACjCe,GAGDA,EAAK/F,MACkB,uBAAvB+F,EAAK/F,KAAK,UACV+F,EAAK/F,KAAK+G,gBAAkBlC,EAAOkC,eAEnC,EAAKjC,eAtHM,EA0HnB8B,qBAAuB,SAAA/B,GACnB,IAAMkB,EAAOX,KAAUjB,IAAI,EAAKzF,MAAMsG,QACjCe,KAGDA,EAAK/F,MACmB,oBAAvB+F,EAAK/F,KAAK,UAAyD,mBAAvB+F,EAAK/F,KAAK,UACvD+F,EAAK/F,KAAKuG,UAAY1B,EAAO0B,SAE7B,EAAKzB,gBAnIM,EAuInBgB,mBAAqB,SAAAjB,GACb,EAAKwB,QAAQ7B,IAAIK,EAAO0B,UACxB,EAAKzB,eAzIM,EA6InB4M,YAAc,WACV,EAAKgL,oBA9IU,EAiJnBA,iBAAmB,WAAO,IAAD,EACK,EAAKhe,MAAvBsG,EADa,EACbA,OAAQgT,EADK,EACLA,MAEVjN,EAAQC,KAAUC,WAExBuE,YAAiBzE,EAAO,CAAC/F,IACzB,IAAMqB,EAAUy/B,aAAoB9gC,GAAQwI,IAAI,SAAA1Q,GAAC,OAAIA,EAAEyJ,UACvDkL,YAAiB1G,EAAO1E,GAEpB2R,GACA+tB,aAAgB/gC,IA3JL,EA+JnBghC,mBAAqB,WAAO,IAAD,EACD,EAAKtnC,MAAnB2C,EADe,EACfA,EAAG2D,EADY,EACZA,OACLihC,EAAWvR,aAAgB1vB,GACjC,GAAKihC,EAAL,CAEA,IAAMC,EAAoBhiC,KAAYC,IAAI,YAG1CivB,IAFqB8S,EAAoBA,EAAkBhmC,MAAQ,yBAE/C+lC,GAEpB,EAAKhR,sBAAsB5zB,EAAE,iBAzKd,EA4KnB4zB,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,WACLgyB,EAAcC,KAElB,kBAAC7gB,EAAA,EAAD,WA3LG,EAiMnB4xB,gBAAkB,WAAO,IAAD,EACE,EAAKznC,MAAnB2C,EADY,EACZA,EAAG2D,EADS,EACTA,OACLohC,EAAcC,aAAmBrhC,GAClCohC,IAELhT,GAAKkT,aAAkBF,IAEvB,EAAKnR,sBAAsB5zB,EAAE,kBAxMd,EA2MnB4hB,kBAAoB,WAChB,EAAKzQ,QAAQC,QAAQC,UAAY,GA5MlB,EA+MnB6zB,iBAAmB,WAAO,IAAD,EACK,EAAK7nC,MAAvBsG,EADa,EACbA,OAAQgT,EADK,EACLA,MACVjS,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK0E,QAEV+7B,aAA6B,CAAExhC,WAE3BgT,GACA1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,MA1ND,EA+NnByhC,eAAiB,WAAO,IAAD,EACO,EAAK/nC,MAAvBsG,EADW,EACXA,OAAQgT,EADG,EACHA,MAEhBgmB,aAASh5B,EAAQ,MAAM,GAEnBgT,GACA1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,KAvOD,EA4OnB0hC,eAAiB,SAAAf,GACbd,aAASc,GAAQ,IA7OF,EAgPnBgB,iBAAmB,WACf,OAAK,EAAKn0B,QAEH,EAAKA,QAAQC,QAAQ0d,aAFF,GAjPX,EAsPnByW,eAAiB,SAAA7mC,GAAU,IACN4M,EAAS,EAAK6F,QAAvBC,QACR,GAAK9F,EAAL,CAFsB,IAILk6B,EAAY,EAAKC,WAA1Br0B,QACHo0B,GACDA,EAAQtD,YAAc52B,EAAK+F,YAE3B/F,EAAK+F,UAAYm0B,EAAQtD,UACzB52B,EAAKwN,SAAS,CACVhS,IAAK0+B,EAAQtD,UACbtpB,SAAU,YAGdtN,EAAK+F,UAAYm0B,EAAQtD,UAAY,GACrCrpB,WAAW,WACPvN,EAAKwN,SAAS,CACVhS,IAAK0+B,EAAQtD,UACbtpB,SAAU,YAEf,OA1QQ,EAoRnB1H,aAAe,SAAAxS,GACX,GAAK,EAAKyS,SACL,EAAKu0B,SAAV,CAFoB,IAIHp6B,EAAS,EAAK6F,QAAvBC,QACR,GAAK9F,EAAL,CALoB,IAOH4tB,EAAU,EAAKwM,SAAxBt0B,QACH8nB,IAED5tB,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,OAC1D0nB,EAAMhoB,aAAaxS,GAGvBw6B,EAAM0J,iBAAiBlkC,EAAO4M,OA/R9B,EAAK6F,QAAUjT,IAAMoU,YACrB,EAAKmzB,WAAavnC,IAAMoU,YACxB,EAAKozB,SAAWxnC,IAAMoU,YALP,IAOP3O,EAAW,EAAKtG,MAAhBsG,OAPO,OASf,EAAKqB,QAAU,IAAIhC,IACnB,EAAKpG,MAAQ,CACTmJ,WAAYpC,GAXD,E,qFAyBKlG,EAAWC,GACZnB,KAAKc,MAAhBsG,OADmC,IAG1B2H,EAAS/O,KAAK4U,QAAvBC,QAYR,MAViB,CACbC,UAF8C/F,EAA1C+F,UAGJE,aAH8CjG,EAA/BiG,aAIfD,aAJ8ChG,EAAjBgG,gB,4CAcfzN,EAAWC,GAAY,IAAD,EACcvH,KAAKc,MAAnDsG,EADgC,EAChCA,OAAQ7D,EADwB,EACxBA,MAAO6lC,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAI/hC,EAAUF,SAAWA,IAIrBE,EAAU8hC,WAAaA,IAIvB9hC,EAAU+hC,mBAAqBA,GAI/B/hC,EAAU/D,QAAUA,M,yCAOTrC,EAAWC,EAAWC,GAAW,IACxCgG,EAAWpH,KAAKc,MAAhBsG,OACJlG,EAAUkG,SAAWA,GACrBpH,KAAK8T,cAHsC,IAM9B/E,EAAS/O,KAAK4U,QAAvBC,QACAC,EAA0C1T,EAA1C0T,UAA0C1T,EAA/B4T,aAA+B5T,EAAjB2T,aAC7B7T,EAAUkG,SAAWA,EACrB2H,EAAK+F,UAAYA,EAEjB/F,EAAK+F,UAAY,I,0CAKrB9U,KAAK8T,cAELrK,KAAUhC,GAAG,mBAAoBzH,KAAKkI,oBACtCuB,KAAUhC,GAAG,qBAAsBzH,KAAKgJ,sBACxCV,KAAgBb,GAAG,2BAA4BzH,KAAKiJ,4BACpDS,KAAgBjC,GAAG,2BAA4BzH,KAAKkJ,8B,6CAIpDO,KAAU/B,IAAI,mBAAoB1H,KAAKkI,oBACvCuB,KAAU/B,IAAI,qBAAsB1H,KAAKgJ,sBACzCV,KAAgBZ,IAAI,2BAA4B1H,KAAKiJ,4BACrDS,KAAgBhC,IAAI,2BAA4B1H,KAAKkJ,8B,+BAwM/C,IAAD,SAQDlJ,KAAKc,MANLg6B,EAFC,EAEDA,WACAz5B,EAHC,EAGDA,UACA+F,EAJC,EAIDA,OACAvD,EALC,EAKDA,QACAuW,EANC,EAMDA,MACA3W,EAPC,EAODA,EAPC,EAUgCzD,KAAKc,MAApCsoC,EAVD,EAUCA,SAAUC,EAVX,EAUWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAZlD,OAWLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgEx5B,IACnG,SAAC6B,EAAI9K,GAAL,OAAW8K,EAAK43B,EAAiB1iC,KAfhC,mBAkBCwB,GAlBD,8BAkBQX,KAAUjB,IAAIa,IAC3B,IAAKe,EACD,OACI,yBAAK9G,UAAU,gBACX,kBAAC,GAAD,CAAmBwC,QAASA,IAC5B,yBAAK2S,IAAKxW,KAAK4U,QAASvT,UAAWoE,IAAW,oBAAqB,wBAK/E,IAAI6jC,EAAqB,EACzB,GAAItO,cAAc5zB,GAAS,CACvB,IAAMiB,EAAWoB,KAAUlB,YAAYJ,EAAK/F,KAAKuG,SACjD2gC,EAAqBjhC,EAAWA,EAASkhC,sBAAwBD,EAGrE,IAAMjB,EAAWvR,aAAgB1vB,GAC3BohC,EAAcC,aAAmBrhC,GACnCoiC,EAAMC,aAAWriC,GAEfsiC,GADUC,cAAYviC,GACfgD,cAAShD,IAEhBqB,EAAUy/B,aAAoB9gC,GAC9BsM,EAAQ,GACd1T,KAAKyI,QAAU,IAAIhC,IACnBgC,EAAQ9I,QAAQ,SAAAiqC,GACZ,IAAM5mB,EAAOvZ,KAAUlD,IAAIqjC,EAAOjhC,SAC9Bqa,IACA,EAAKva,QAAQsH,IAAIiT,EAAKvkB,GAAIukB,EAAKvkB,IAC/BiV,EAAM1D,KAAKgT,MAICtP,EAAMzD,KAAK,SAAC/Q,EAAG2qC,GAC/B,OAAOC,aAAmBD,GAAKC,aAAmB5qC,KAE5B0Q,IAAI,SAAAoT,GAAI,OAC9B,kBAAC9X,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,YAAYuE,IAAKod,EAAKvkB,IAC7C,kBAACqpC,GAAA,EAAD,CAAMC,OAAQ/kB,EAAKvkB,GAAIqL,SAAU,EAAKg/B,oBAL9C,IASQj8B,EAAU1E,EAAV0E,MAER,GAAI88B,cAAYviC,IAAW6zB,aAAc7zB,GAAS,CAAC,IAAD,EACG2iC,aAA6BP,EAAK,IAArEQ,EADgC,EACtC15B,KAAyB25B,EADa,EACvBzR,SACnByR,EAAY7jC,OAAS,IACrBojC,EAAM1E,aAAiB,CAAE,QAAS,gBAAiBx0B,KAAM05B,EAASxR,SAAUyR,KAIpF,IAAIC,EAAgBzmC,EAAE,eAClBw3B,aAAc7zB,GACd8iC,EAAgBzmC,EAAE,eACXkmC,cAAYviC,KACnB8iC,EAAgBzmC,EAAE,cAGtB,IAAI0mC,EAAU,GACV9B,IAEI8B,EADAnP,cAAc5zB,GACJihC,EAEK/hC,KAAYC,IAAI,YAC1BjE,MACA83B,cACA1a,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IAEL2oB,GAI3B,IAAMhuB,EACF,oCACI,kBAAC,GAAD,CACIjT,OAAQA,EACR0zB,WAAYA,EACZj3B,QAASA,EACT0B,QAASvF,KAAKqlB,oBAElB,yBACI7O,IAAKxW,KAAK4U,QACVvT,UAAWoE,IAAW,oBAAqB,qBAC3CgR,SAAUzW,KAAK2U,cACf,yBAAKtT,UAAU,qBACX,kBAAC,GAAD,CACI+F,OAAQA,EACR6C,KAAK,EACLD,YAAY,EACZrC,mBAAoByS,EACpBrQ,aAAc8C,EAAQ7M,KAAK2oC,iBAAmB,QAEhDe,GACE,kBAAC,KAAD,CAAMroC,UAAU,sBACXmoC,GACG,kBAACt+B,GAAA,EAAD,CAAU7J,UAAU,oBAAoB06B,WAAW,cAC/C,kBAAC/vB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkB3K,UAAU,4BAEhC,kBAAC6K,GAAA,EAAD,CACIzJ,QAAS+mC,EACTjN,UAAWvB,cAAc5zB,GAAU3D,EAAE,OAASA,EAAE,0BAChDmK,MAAO,CAAEooB,WAAY,WAAYoU,SAAU,iBAItD/B,GACG,kBAACn9B,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,oBAAoB06B,WAAW,aAAax2B,QAASvF,KAAKooC,oBACjF,kBAACp8B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CACIzJ,QACI,kBAAC25B,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B6N,GAGT5N,UAAWvB,cAAc5zB,GAAU3D,EAAE,YAAcA,EAAE,iBAIhE+kC,GACG,oCACI,kBAACt9B,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,oBAAoB06B,WAAW,aAAax2B,QAASvF,KAAKuoC,iBACjF,kBAACv8B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CACIzJ,QACI,kBAAC25B,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BoM,aAAkBF,IAG3BjM,UAAW94B,EAAE,aAK7B,kBAAC,GAAD,CAAuB2D,OAAQA,IAC9BgT,GACG,kBAAClP,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAU,oBAAoB06B,WAAW,aAAax2B,QAASvF,KAAK6oC,gBACjF,kBAAC38B,GAAA,EAAD,CACIzJ,QACI,kBAAC25B,GAAA,EAAD,CAAYz5B,MAAM,UAAU05B,QAAQ,UAAUC,QAAM,GAC/C4N,EAAc54B,eAGvB1D,MAAO,CAAEy8B,YAAa,SAQ9C,yBAAK7zB,IAAKxW,KAAKkpC,aACf,kBAAC,GAAD,CAAiB9hC,OAAQA,EAAQ7B,QAASvF,KAAKgpC,iBAC/C,kBAAC,GAAD,CAAoBxyB,IAAKxW,KAAKmpC,SAAU/hC,OAAQA,EAAQgT,MAAOA,MAK3E,OAAOA,EAAQ,oCAAGC,GAAc,yBAAKhZ,UAAWoE,IAAW,eAAgBpE,IAAagZ,M,gDA3c5DvZ,EAAOT,GACnC,OAAIS,EAAMsG,SAAW/G,EAAMmJ,WAChB,CACHA,WAAY1I,EAAMsG,QAInB,S,GAvBWzF,IAAMC,YAmfjBkD,GAPCC,YACZC,cACAE,cACA01B,gBACAz1B,cAGWL,CAAQmjC,ICnhBRqC,I,wLApBD,IACEzmC,EAAY7D,KAAKc,MAAjB+C,QAER,OACI,yBAAKxC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,0B,GAVeM,IAAMC,YCMnC2oC,I,mBACF,WAAYzpC,GAAQ,IAAD,8BACf,4CAAMA,KA0BV2M,aAAe,SAAArG,GAAW,IACdgT,EAAU,EAAKtZ,MAAfsZ,MAERgmB,aAASh5B,GAELgT,GACA1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,KAhChB,EAAK/G,MAAQ,CACTie,QAAS,IAJE,E,iFAQE,IAAD,OACRlX,EAAWpH,KAAKc,MAAhBsG,OAEF2gC,EAASyC,aAAcpjC,GACxB2gC,GAELrnC,KAAgBC,KAAK,CACjB,QAAS,oBACTgI,QAASo/B,EACTh1B,eAAgB,EAChBlC,MAAO,MACRjQ,KAAK,SAAAC,GACJ,IAAMsM,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOtM,EAAOgP,UAE/B,EAAK9O,SAAS,CAAEud,QAASzd,EAAOgP,e,+BAiB9B,IAAD,SACiC7P,KAAKc,MAAnC2pC,EADH,EACGA,UAAW5mC,EADd,EACcA,QAASuW,EADvB,EACuBA,MAGtB3G,EAFczT,KAAKK,MAAjBie,QAEc1O,IAAI,SAAA1Q,GAAC,OACvB,kBAACgM,GAAA,EAAD,CAAUC,QAAM,EAACvF,IAAK1G,GAClB,kBAAC,GAAD,CAAMkI,OAAQlI,EAAG4K,SAAU,EAAK2D,kBAIlC4M,EACF,oCACI,kBAAC,GAAD,CAAsBxW,QAASA,IAC/B,yBAAKxC,UAAU,wBAAwBuM,MAAO,CAAE68B,cAC3Ch3B,IAKb,OAAO2G,EAAQ,oCAAGC,GAAc,yBAAKhZ,UAAU,oBAAoBgZ,O,GA5D9C1Y,IAAMC,YAuEnC2oC,GAAeviC,aAAe,CAC1BoS,OAAO,EACPqwB,UAAW,GAGAF,U,8BC7ETG,I,mBACF,WAAY5pC,GAAQ,IAAD,8BACf,4CAAMA,KAqBV6X,aAAe,WACX,GAAI,EAAKM,eAAepE,SACF,EAAKoE,eAAepE,QAAQkC,UAC/B,CACX,EAAKkC,eAAepE,QAAQkC,UAAY,GAD7B,IAGH6B,EAAa,EAAK9X,MAAlB8X,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTO,EAAkB,EAAKrY,MAAvBqY,cACAN,EAAe,EAAKxY,MAApBwY,WAER,EAAK9X,SAAS,CAAE8X,YAAaA,IAEzBM,GACAA,KA1CW,EA8CnB9J,cAAgB,SAAAlN,GACU,KAAlBA,EAAM0U,SACN1U,EAAMwI,kBAhDK,EAoDnBwM,YAAc,WACV,IAAML,EAAU,EAAKmC,eAAepE,QACpC,GAAKiC,EAAL,CAFgB,IAIRM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,MANR,IAQRL,EAAcD,EAAdC,UAEA6B,EAAa,EAAK9X,MAAlB8X,SACHA,GAELA,EAAS7B,KAjEM,EAoEnBM,YAAc,SAAAlV,GACV,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,KArE9C,EAAK2B,eAAiBtX,IAAMoU,YAE5B,EAAK1V,MAAQ,CACTwY,YAAY,GAND,E,gFAUA3X,EAAWC,EAAWC,GAAW,IAAD,OACvCyX,EAAe7Y,KAAKK,MAApBwY,WAEJA,GAAcA,IAAe3X,EAAU2X,YACvCyD,WAAW,WACH,EAAKrD,eAAepE,SACpB,EAAKoE,eAAepE,QAAQqF,SAEjCywB,Q,+BA0DD,IAAD,EAC4C3qC,KAAKc,MAA9C2C,EADH,EACGA,EAAGqE,EADN,EACMA,MAAOvC,EADb,EACaA,QAAS1B,EADtB,EACsBA,QAAS+U,EAD/B,EAC+BA,SAC5BC,EAAe7Y,KAAKK,MAApBwY,WAER,OACI,yBAAKxX,UAAU,iBACTwX,EAUE,oCACI,yBAAKxX,UAAU,4BACX,yBACI5C,GAAG,yBACH+X,IAAKxW,KAAKiZ,eACVjB,YAAavU,EAAE,UACfwU,iBAAe,EACfC,gCAA8B,EAC9BC,UAAWnY,KAAKqP,cAChB+I,QAASpY,KAAKmX,YACdkB,QAASrY,KAAKqX,gBAnB1B,oCACI,kBAACX,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,oCAAoCkE,QAASA,GACxD,0BAAMlE,UAAU,yBAAyByG,KAmBpDpC,QAAQkT,IACL,kBAAClC,EAAA,EAAD,CAAYrV,UAAU,sBAAsBuK,YAAa5L,KAAK2Y,cAC1D,kBAACiyB,GAAA,EAAD,CAAetnC,KAAMuV,EAAY0sB,KAAM,kBAAC,GAAD,MAAgBsF,SAAU,kBAACl0B,EAAA,EAAD,c,GA9GzDhV,IAAMC,YA8HvBsD,iBAAkBwlC,IC8VlBI,I,mBAjdX,WAAYhqC,GAAQ,IAAD,EACf,GADe,qBACX,6CAAegqC,EACf,MAAM,IAAIC,UAAU,uDAFT,OAOf,4CAAMjqC,KAyDV27B,uBAAyB,SAAAx1B,GAAW,IAAD,EACI,EAAKnG,MAAhCsG,EADuB,EACvBA,OAAQ4jC,EADe,EACfA,eADe,EAEE,EAAK3qC,MAA9B0b,EAFuB,EAEvBA,MAAOkvB,EAFgB,EAEhBA,cAEP5jC,EAAkDJ,EAAlDI,QAASqH,EAAyCzH,EAAzCyH,WAAyBw8B,GAAgBjkC,EAA7BkkC,YAA6BlkC,EAAhBikC,aAEpC53B,EAAUL,KAAa1M,IAAIc,EAASqH,GAG1C,GAAIrH,IAAYD,EAAQ,CACpB,IAAK2U,EAAM3V,OAAQ,OACnB,IAAKglC,aAAQ18B,EAAYqN,EAAM,GAAGtd,GAAIsd,EAAMA,EAAM3V,OAAS,GAAG3H,IAAI,GAAO,OAEzE,IAAM8b,EAAQwB,EAAMsC,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOiQ,IACxC,EAAKq3B,eAAemF,IACL,IAAX3wB,EAEA,EAAKxZ,SAAS,CAAEgb,MAAOsvB,aAActvB,EAAOzI,EAASg4B,QAGrD,EAAKvqC,SAAS,CAAEgb,MAAM,GAAD,mBAAMA,EAAMiqB,MAAM,EAAGzrB,IAArB,CAA6BjH,GAA7B,YAAyCyI,EAAMiqB,MAAMzrB,EAAQ,QAGvE,IAAXA,GAGA,EAAKxZ,SAAS,CAAEgb,MAAOA,EAAMnJ,OAAO,SAAA1T,GAAC,OAAIA,EAAET,KAAOiQ,WAGvD,GAAIrH,IAAY2jC,EAAgB,CACnC,IAAKC,EAAc7kC,OAAQ,OAC3B,IAAKglC,aAAQ18B,EAAYu8B,EAAc,GAAGxsC,GAAIwsC,EAAcA,EAAc7kC,OAAS,GAAG3H,IAAI,GAAO,OAEjG,IAAM8b,EAAQ0wB,EAAc5sB,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOiQ,IAChD,EAAKq3B,eAAemF,IACL,IAAX3wB,EAEA,EAAKxZ,SAAS,CACVkqC,cAAeI,aAAcJ,EAAe33B,EAASg4B,QAIzD,EAAKvqC,SAAS,CACVkqC,cAAc,GAAD,mBAAMA,EAAcjF,MAAM,EAAGzrB,IAA7B,CAAqCjH,GAArC,YAAiD23B,EAAcjF,MAAMzrB,EAAQ,QAInF,IAAXA,GAGA,EAAKxZ,SAAS,CAAEkqC,cAAeA,EAAcr4B,OAAO,SAAA1T,GAAC,OAAIA,EAAET,KAAOiQ,QAlH/D,EAwHnBquB,mBAAqB,SAAA91B,GAAW,IAAD,EACQ,EAAKnG,MAAhCsG,EADmB,EACnBA,OAAQ4jC,EADW,EACXA,eADW,EAEM,EAAK3qC,MAA9B0b,EAFmB,EAEnBA,MAAOkvB,EAFY,EAEZA,cAEP33B,EAAYrM,EAAZqM,QACAjM,EAAYiM,EAAZjM,QAER,GAAIA,IAAYD,GACX,EAAKw/B,eAAetzB,GAAzB,CAEA,IAAMnG,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAO,CAACmG,IAExBjM,IAAYD,EACZ,EAAKrG,SAAS,CAAEgb,MAAO,CAACzI,GAASiC,OAAOwG,KACjC1U,IAAY2jC,GACnB,EAAKjqC,SAAS,CAAEkqC,cAAe,CAAC33B,GAASiC,OAAO01B,OAxIrC,EA4InBnO,uBAAyB,SAAA71B,GAAW,IAAD,EACI,EAAKnG,MAAhCsG,EADuB,EACvBA,OAAQ4jC,EADe,EACfA,eADe,EAEE,EAAK3qC,MAA9B0b,EAFuB,EAEvBA,MAAOkvB,EAFgB,EAEhBA,cAEP5jC,EAAyBJ,EAAzBI,QAAS+xB,EAAgBnyB,EAAhBmyB,YAEXxpB,EAAM,IAAInJ,IAAI2yB,EAAYxpB,IAAI,SAAA1Q,GAAC,MAAI,CAACA,EAAGA,MACvCqgB,EAAW,WACT,EAAKlf,MAAM0b,MAAM3V,OAAS,EAAK/F,MAAM4qC,cAAc7kC,OAAS6/B,OAC5D,EAAKtoB,WAAW,EAAKP,SAIzB/V,IAAYD,EACZ,EAAKrG,SAAS,CAAEgb,MAAOA,EAAMnJ,OAAO,SAAA1T,GAAC,OAAK0Q,EAAIhJ,IAAI1H,EAAET,OAAQ8gB,GACrDlY,IAAY2jC,GACnB,EAAKjqC,SAAS,CAAEkqC,cAAeA,EAAcr4B,OAAO,SAAA1T,GAAC,OAAK0Q,EAAIhJ,IAAI1H,EAAET,OAAQ8gB,IA5JjE,EAgKnBzL,YAAc,WACV,EAAKsJ,OAAS,CACV5H,SAAS,EACT6H,WAAW,EACX8oB,kBAAkB,EAClBpqB,MAAO,GACPkvB,cAAe,GACfr4B,OAAQ,EAAK24B,mBAEjB,EAAK5tB,WAAW,EAAKP,SAzKN,EA4KnBO,WA5KmB,sCA4KN,WAAOP,GAAP,6CAAA1S,EAAA,wDAAe67B,IAAf,iCACDn/B,EAAW,EAAKtG,MAAhBsG,OACAiW,EAAsCD,EAAtCC,UAAWzK,EAA2BwK,EAA3BxK,OAAQmJ,EAAmBqB,EAAnBrB,OAAmBqB,EAAZ5H,QAFzB,qDAOL6H,EAPK,wDASHopB,EAAgB1qB,EAAM3V,OAAS,EAAI2V,EAAMA,EAAM3V,OAAS,GAAG3H,GAAK,EACtE2e,EAAO5H,SAAU,EAVR,UAWY9U,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAOo1B,MACPrzB,WACDmN,QAAQ,WACP3C,EAAO5H,SAAU,IArBZ,QAWH3U,EAXG,OAwBTH,KAAgBC,KAAK,CACjB,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAoC,EAA7Bo1B,MACPrzB,WAGIJ,EAAa3R,EAAb2R,SACR4K,EAAOC,UAAgC,IAApB7K,EAASpM,QAAyC,IAAzBoM,EAAS8C,YACrD8H,EAAOrB,MAAQA,EAAMxG,OAAO/C,EAASI,OAAO,EAAKg0B,iBAC3CC,EAAoBN,GAAkB/zB,EAASpM,OAAS,GAAKoM,EAASpM,OAAS6/B,MAErFhzB,KAAaC,SAASrS,EAAO2R,UACvBrF,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAElC,EAAKzR,SAAS,CAAEgb,MAAOqB,EAAOrB,QAE1BqB,EAAOC,UACP,EAAK0pB,mBAAmB3pB,GAAQ,GACzBypB,GACP,EAAKlpB,WAAWP,GAAQ,GAjDnB,0CA5KM,wDAiOnB2pB,mBAjOmB,sCAiOE,WAAO3pB,GAAP,+CAAA1S,EAAA,wDAAe67B,IAAf,iCACTyE,EAAmB,EAAKlqC,MAAxBkqC,eACAp4B,EAA4DwK,EAA5DxK,OAAQ4C,EAAoD4H,EAApD5H,QAAS2wB,EAA2C/oB,EAA3C+oB,iBAAiCpqB,EAAUqB,EAAzB6tB,cAItCD,EANY,qDAObx1B,EAPa,qDAQb2wB,EARa,wDAUXM,EAAgB1qB,EAAM3V,OAAS,EAAI2V,EAAMA,EAAM3V,OAAS,GAAG3H,GAAK,EACtE2e,EAAO5H,SAAU,EAXA,UAYI9U,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAAS2jC,EACTp6B,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAOo1B,MACPrzB,WACDmN,QAAQ,WACP3C,EAAO5H,SAAU,IAtBJ,WAYX3U,EAZW,OAyBT2R,EAAa3R,EAAb2R,SACR4K,EAAO6tB,cAAgBlvB,EAAMxG,OAAO/C,EAASI,OAAO,EAAKg0B,iBACzDxpB,EAAO+oB,iBAAuC,IAApB3zB,EAASpM,QAAyC,IAAzBoM,EAAS8C,YACtDuxB,EAAoBN,GAAkB/zB,EAASpM,OAAS,GAAKoM,EAASpM,OAAS6/B,OAEjF7oB,EAAO+oB,iBA9BM,mDAgCjBlzB,KAAaC,SAASV,GAChBrF,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOqF,GAE3B,EAAKzR,SAAS,CAAEkqC,cAAe7tB,EAAO6tB,gBAElCpE,GACA,EAAKE,mBAAmB3pB,GAAQ,GAvCnB,0CAjOF,wDA4QnBzI,aAAe,WACX,GAAK,EAAKC,QAAV,CAEA,IAAM7F,EAAO,EAAK6F,QAAQC,QAC1B,GAAK9F,EAAL,CAJiB,IAMTqO,EANS,gBAMTA,OAEJrO,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,QACtDmI,IAAWA,EAAOC,UAClB,EAAKM,WAAWP,GAEhB,EAAK2pB,mBAAmB3pB,OAxRjB,EA6RnBiI,kBAAoB,WAChB,IAAMtW,EAAO,EAAK6F,QAAQC,QACrB9F,IAELA,EAAK+F,UAAY,IAjSF,EAoSnB02B,mBAAqB,WACjB,GAAK,EAAKC,cAAV,CAEA,IAAM18B,EAAO,EAAK08B,cAAc52B,QAChC,GAAK9F,EAAL,CAJuB,IAMf28B,EANe,gBAMfA,aACHA,GAED38B,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,QACrDy2B,EAAaruB,UAGd,EAAKsuB,qBAAqBD,GAF1B,EAAKE,aAAaF,OA/SX,EAsTnBE,aAtTmB,sCAsTJ,WAAOxuB,GAAP,iDAAA1S,EAAA,wDAAe67B,IAAf,iCACHn/B,EAAW,EAAKtG,MAAhBsG,OACAiW,EAA6CD,EAA7CC,UAAWzK,EAAkCwK,EAAlCxK,OAAQmJ,EAA0BqB,EAA1BrB,MAAOvG,EAAmB4H,EAAnB5H,QAAS5E,EAAUwM,EAAVxM,OAIvCyM,EANO,qDAOP7H,EAPO,wDASLixB,EAAgB1qB,EAAM3V,OAAS,EAAI2V,EAAMA,EAAM3V,OAAS,GAAG3H,GAAK,EACtE2e,EAAO5H,SAAU,EAVN,UAWU9U,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAASD,EACTwJ,QACA6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAOo1B,MACPrzB,WACDmN,QAAQ,WACP3C,EAAO5H,SAAU,IArBV,WAWL3U,EAXK,OAwBH2R,EAAa3R,EAAb2R,SACR4K,EAAOrB,MAAQA,EAAMxG,OAAO/C,EAASI,OAAO,EAAKg0B,iBACjDxpB,EAAOC,UAAgC,IAApB7K,EAASpM,QAAyC,IAAzBoM,EAAS8C,YAC/CuxB,EAAoBN,GAAkB/zB,EAASpM,OAAS,GAAKoM,EAASpM,OAAS6/B,MAEjF,EAAKyF,eAAiBtuB,EA7Bf,mDA+BXnK,KAAaC,SAASV,GAChBrF,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOqF,GAE3B,EAAKzR,SAAS,CAAE8qC,YAAazuB,EAAOrB,MAAO+vB,oBAAqB1uB,EAAO6tB,gBAEnE7tB,EAAOC,UACP,EAAKsuB,qBAAqBvuB,GAAQ,GAC3BypB,GACP,EAAK+E,aAAaxuB,GAAQ,GAxCnB,0CAtTI,wDAkWnBuuB,qBAlWmB,sCAkWI,WAAOvuB,GAAP,iDAAA1S,EAAA,wDAAe67B,IAAf,iCACXyE,EAAmB,EAAKlqC,MAAxBkqC,eACAp4B,EAAmEwK,EAAnExK,OAAQ4C,EAA2D4H,EAA3D5H,QAAwBuG,EAAmCqB,EAAlD6tB,cAAsB9E,EAA4B/oB,EAA5B+oB,iBAAkBv1B,EAAUwM,EAAVxM,MAI5Do6B,EANc,qDAOfx1B,EAPe,qDAQf2wB,EARe,wDAUbM,EAAgB1qB,EAAM3V,OAAS,EAAI2V,EAAMA,EAAM3V,OAAS,GAAG3H,GAAK,EACtE2e,EAAO5H,SAAU,EAXE,UAYE9U,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAAS2jC,EACTp6B,QACA6B,eAAgB,EAChBC,gBAAiB+zB,EACjB9zB,OAAQ,EACR9B,MAAOo1B,MACPrzB,WACDmN,QAAQ,WACP3C,EAAO5H,SAAU,IAtBF,WAYb3U,EAZa,OAyBX2R,EAAa3R,EAAb2R,SACR4K,EAAO6tB,cAAgBlvB,EAAMxG,OAAO/C,EAASI,OAAO,EAAKg0B,iBACzDxpB,EAAO+oB,iBAAuC,IAApB3zB,EAASpM,QAAyC,IAAzBoM,EAAS8C,YACtDuxB,EAAoBN,GAAkB/zB,EAASpM,OAAS,GAAKoM,EAASpM,OAAS6/B,MAEjF,EAAKyF,eAAiBtuB,EA9BP,mDAgCnBnK,KAAaC,SAASV,GAChBrF,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOqF,GAE3B,EAAKzR,SAAS,CAAE8qC,YAAazuB,EAAOrB,MAAO+vB,oBAAqB1uB,EAAO6tB,gBAEnEpE,GACA,EAAK8E,qBAAqBvuB,GAAQ,GAvCnB,0CAlWJ,wDA6YnBzE,aA7YmB,sCA6YJ,WAAMrI,GAAN,eAAA5F,EAAA,wDACLkG,EAAQN,EAAOA,EAAKwB,OAAS,GADxB,uBAGP,EAAKoH,oBAHE,0BAOX,EAAKwyB,aAAe,CAChB96B,QACAyM,WAAW,EACX8oB,kBAAkB,EAClBpqB,MAAO,GACPkvB,cAAe,GACfr4B,OAAQ,EAAK24B,mBAEjB,EAAKK,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,wDA+ZnBxyB,kBAAoB,WAChB,EAAKwyB,aAAe,KACpB,EAAK3qC,SAAS,CAAE8qC,YAAa,GAAIC,oBAAqB,MAjavC,EAoanBlF,eAAiB,SAAAtzB,GACb,QAAKA,GAEE,EAAKyyB,eAAezyB,EAAQ+G,UA9ZnC,EAAKzF,QAAUjT,IAAMoU,YACrB,EAAK01B,cAAgB9pC,IAAMoU,YAE3B,EAAK1V,MAAQ,CACT0b,MAAO,GACPkvB,cAAe,GACfY,YAAa,GACbC,oBAAqB,IAhBV,E,gFAPf,OAAO,O,+CAIP,OAAO,S,iDAwBP,OAAO,I,qCAGIzxB,GACX,MAAM,IAAIkc,MAAM,sD,sCAGJjjB,GAAU,IACd03B,EAAmBhrC,KAAKc,MAAxBkqC,eACA3jC,EAAgBiM,EAAhBjM,QAAS5I,EAAO6U,EAAP7U,GAEjB,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX+hC,gBAAiBn5B,IAAY2jC,M,wCAMrC,MAAM,IAAIzU,MAAM,uD,kCAIhB,MAAM,IAAIA,MAAM,iD,0CAIhBv2B,KAAK8T,cAELb,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,wBAC7CxpB,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,sB,6CAIzC9pB,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,wBAC9CxpB,KAAavL,IAAI,mBAAoB1H,KAAK+8B,sB,+BA6WpC,IAAD,SACiC/8B,KAAKc,MAAnC2pC,EADH,EACGA,UAAW5mC,EADd,EACcA,QAASuW,EADvB,EACuBA,MADvB,EAE8Dpa,KAAKK,MAAhE0b,EAFH,EAEGA,MAAOkvB,EAFV,EAEUA,cAAeY,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiB1rC,KAAjB0rC,aAEFl5B,EAAWuJ,EAAMxG,OAAO01B,GAAer7B,IAAI,SAAA1Q,GAAC,OAAI,EAAKooC,gBAAgBpoC,KACrE6sC,EAAiBF,EAAYt2B,OAAOu2B,GAAqBl8B,IAAI,SAAA1Q,GAAC,OAAI,EAAKooC,gBAAgBpoC,KAE7F,OACI,oCACI,kBAAC,GAAD,CACI4I,MAAO9H,KAAKgsC,YACZzmC,QAASvF,KAAKqlB,kBACdxhB,QAASA,EACT+U,SAAU5Y,KAAKisC,YAAcjsC,KAAK2Y,aAAe,KACjDQ,cAAenZ,KAAKkZ,oBAExB,yBACI1C,IAAKxW,KAAK4U,QACVvT,UAAWoE,IAAW,oBAAqBzF,KAAKksC,oBAChDz1B,SAAUzW,KAAK2U,aACf/G,MAAO,CAAE68B,UAAWrwB,EAAQqwB,EAAY,OACvCj4B,GAEJ9M,QAAQgmC,IACL,yBACIl1B,IAAKxW,KAAKyrC,cACVpqC,UAAWoE,IAAW,2BAA4BzF,KAAKmsC,0BACvD11B,SAAUzW,KAAKwrC,oBACdO,Q,GAhdKpqC,IAAMC,YCP9BwqC,I,8LACa/xB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAO5W,EAFOzD,KAAKc,MAAX2C,GAEC,kB,GAZUqnC,KAgB3BsB,GAAaC,UAAY,CACrBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBgjB,GAAapkC,aAAe,CACxBoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBknC,IC7B3BK,I,8LACapyB,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,kC,kCAMlB,OAAO5W,EAFOzD,KAAKc,MAAX2C,GAEC,sB,GAZaqnC,KAgB9B2B,GAAgBJ,UAAY,CACxBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBqjB,GAAgBzkC,aAAe,CAC3BoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBunC,IC3B3BC,I,8LACaryB,GACX,IAAKA,EAAS,OAAO,EADD,IAGZutB,EAAmBvtB,EAAnButB,SAAUt3B,EAAS+J,EAAT/J,KAClB,GAAIs3B,EAAU,OAAO,EACrB,IAAKt3B,EAAM,OAAO,EALE,IAOZkoB,EAAaloB,EAAbkoB,SACR,QAAKA,GAEEA,EAAS9vB,KACZ,SAAAxJ,GAAC,MACuB,sBAApBA,EAAEkD,KAAK,UACa,0BAApBlD,EAAEkD,KAAK,UACa,+BAApBlD,EAAEkD,KAAK,a,wCAKf,MAAO,CAAE,QAAS,6B,kCAMlB,OAAOqB,EAFOzD,KAAKc,MAAX2C,GAEC,gB,sCAGG6P,GAAU,IACd03B,EAAmBhrC,KAAKc,MAAxBkqC,eACA3jC,EAAyBiM,EAAzBjM,QAASgT,EAAgB/G,EAAhB+G,QAAS5b,EAAO6U,EAAP7U,GAE1B,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACXwkC,QAAS5oB,EAAQutB,SACjB3G,UAAW,kBAAMA,aAAU55B,EAAS5I,GAAI,IACxC+hC,gBAAiBn5B,IAAY2jC,Q,GAxCnBF,KA8C1B4B,GAAYL,UAAY,CACpBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBsjB,GAAY1kC,aAAe,CACvBoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBwnC,I,oBCzClBhC,I,mBApBX,WAAY5pC,GAAQ,qEACVA,I,sEAGA,IACE6rC,EAAU3sC,KAAKc,MAAf6rC,MAER,OACI,yBAAKtrC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASonC,GAChD,kBAAC,GAAD,OAEJ,yBAAKtrC,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,sB,GAdYM,IAAMC,YCEhCgrC,I,kNACFvsC,MAAQ,CACJiC,MAAO,G,EAGXJ,aAAe,SAACC,EAAOG,GACnB,EAAKvB,SAAS,CAAEuB,W,wEAGV,IAAD,EACsBtC,KAAKc,MAAxB+C,EADH,EACGA,QAASuW,EADZ,EACYA,MACT9X,EAAUtC,KAAKK,MAAfiC,MAEF+X,EACF,oCACI,kBAAC,GAAD,CAAmBsyB,MAAO9oC,IAC1B,kBAACgpC,GAAA,EAAD,CACIvqC,MAAOA,EACPiC,SAAUvE,KAAKkC,aACf4qC,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT,kBAACC,GAAA,EAAD,CAAKxoC,MAAM,QAAQiJ,MAAO,CAAEw/B,SAAU,UACtC,kBAACD,GAAA,EAAD,CAAKxoC,MAAM,OAAOiJ,MAAO,CAAEw/B,SAAU,UACrC,kBAACD,GAAA,EAAD,CAAKxoC,MAAM,QAAQiJ,MAAO,CAAEw/B,SAAU,UACtC,kBAACD,GAAA,EAAD,CAAKxoC,MAAM,QAAQiJ,MAAO,CAAEw/B,SAAU,YAKlD,OAAOhzB,EAAQ,oCAAGC,GAAc,yBAAKhZ,UAAU,gBAAgBgZ,O,GAhC7C1Y,IAAMC,YA2ChCgrC,GAAY5kC,aAAe,CACvBoS,OAAO,EACPqwB,UAAW,GAGAmC,UC/CTS,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGIhzB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAO5W,EAFOzD,KAAKc,MAAX2C,GAEC,iB,sCAGG6P,GAAU,IACd03B,EAAmBhrC,KAAKc,MAAxBkqC,eACA3jC,EAAyBiM,EAAzBjM,QAASgT,EAAgB/G,EAAhB+G,QAAS5b,EAAO6U,EAAP7U,GAE1B,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACXoO,MAAOwN,EAAQxN,MACfo0B,UAAW,kBAAMA,aAAU55B,EAAS5I,GAAI,IACxC+hC,gBAAiBn5B,IAAY2jC,Q,GAlClBF,KAwC3BuC,GAAahB,UAAY,CACrBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBikB,GAAarlC,aAAe,CACxBoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBmoC,ICrD3BC,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGIjzB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAO5W,EAFOzD,KAAKc,MAAX2C,GAEC,iB,sCAGG6P,GAAU,IACd03B,EAAmBhrC,KAAKc,MAAxBkqC,eACA3jC,EAAyBiM,EAAzBjM,QAASgT,EAAgB/G,EAAhB+G,QAAS5b,EAAO6U,EAAP7U,GAE1B,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX0sB,MAAO9Q,EAAQ8Q,MACf8V,UAAW,kBAAMA,aAAU55B,EAAS5I,GAAI,IACxC+hC,gBAAiBn5B,IAAY2jC,Q,GAlClBF,KAwC3BwC,GAAajB,UAAY,CACrBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBkkB,GAAatlC,aAAe,CACxBoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBooC,ICrD3BC,I,8LACalzB,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,mC,kCAMlB,OAAO5W,EAFOzD,KAAKc,MAAX2C,GAEC,gB,kCAIT,OAAO,I,sCAGK6P,GAAU,IACd03B,EAAmBhrC,KAAKc,MAAxBkqC,eACA3jC,EAAyBiM,EAAzBjM,QAASgT,EAAgB/G,EAAhB+G,QAAS5b,EAAO6U,EAAP7U,GAE1B,OACI,kBAAC,GAAD,CACImH,IAAG,kBAAayB,EAAb,uBAAmC5I,GACtC2I,OAAQC,EACRoH,UAAWhQ,EACX4+B,UAAWhjB,EAAQ2tB,WACnB/G,UAAW,kBAAMA,aAAU55B,EAAS5I,GAAI,IACxC+hC,gBAAiBn5B,IAAY2jC,Q,GA9BdF,KAoC/ByC,GAAiBlB,UAAY,CACzBjlC,OAAQklC,KAAUljB,OAAOmjB,WACzBvB,eAAgBsB,KAAUljB,OAC1BvlB,QAASyoC,KAAUzsC,KAAK0sC,WACxBnyB,MAAOkyB,KAAUE,KACjB/B,UAAW6B,KAAUljB,QAGzBmkB,GAAiBvlC,aAAe,CAC5BoS,OAAO,EACPqwB,UAAW,GAGAvlC,qBAAkBqoC,ICpC3BC,I,mBACF,WAAY1sC,GAAQ,IAAD,uBACf,4CAAMA,KA2CVujB,wBAA0B,SAAApd,GACGA,EAAjBqd,eAGU,EAAKxjB,MAAfsZ,OAGR,EAAKqzB,2BAnDU,EAsDnBC,qBAAuB,SAAAzmC,GAAW,IACtBmT,EAAU,EAAKtZ,MAAfsZ,MACAhT,EAAW,EAAK/G,MAAhB+G,OAEJgT,GACAhT,IAAWH,EAAO0mC,aAEtB,EAAKC,aAAe,KACpB,EAAKC,gBAAkB,KACvB,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,aAAe,KACpB,EAAKC,iBAAmB,KAExB,EAAKltC,SAAS,CACVqG,OAAQH,EAAO0mC,WACf3C,eAAgB,EAChBkD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBtF,SAAU5hC,KAAUmnC,YAAY1nC,EAAO0mC,YACvCtE,iBAAkB,OAGjBpiC,EAAO0mC,YACR,EAAKF,2BArFM,EAyFnB35B,YAAc,SAAA1M,GACV,EAAKwnC,iBAAiBxnC,GACtB,EAAKynC,qBAAqBznC,GAE1B,IAAMyF,EAAQiiC,aAAiB1nC,GAC1ByF,GACLkiC,YAA8B3nC,EAAQ,CAACyF,KA/FxB,EAkGnB+hC,iBAlGmB,sCAkGA,WAAMxnC,GAAN,eAAAsD,EAAA,qEACQskC,aAAgB5nC,GADxB,UACTgiC,EADS,OAEf5hC,KAAUynC,YAAY7nC,EAAQgiC,GAE1BhiC,IAAW,EAAK/G,MAAM+G,OAJX,iDAMf,EAAKrG,SAAS,CAAEqoC,aAND,yCAlGA,wDA2GnByF,qBA3GmB,sCA2GI,WAAMznC,GAAN,qBAAAsD,EAAA,wDACdmsB,cAAazvB,GADC,oDAGbiB,EAAWqB,KAAgBnB,YAAY2mC,aAAgB9nC,IAH1C,oDAMmBoB,EAAmBH,EAAjD8mC,6BANW,kEASAzuC,KAAgBC,KAAK,CACpC,QAAS,uBACT6H,iBACA4L,OAAO,IAZQ,WASbjM,EATa,2EAiBI6mC,aAAgB7mC,EAAK1J,IAjBzB,WAiBb2qC,EAjBa,OAkBnB5hC,KAAUynC,YAAY9mC,EAAK1J,GAAI2qC,GAE3B,EAAK/oC,MAAM+G,SAAWA,EApBP,mDAsBnB,EAAKrG,SAAS,CAAEiqC,eAAgB7iC,EAAK1J,GAAI4qC,iBAAkB7hC,KAAUmnC,YAAYxmC,EAAK1J,MAtBnE,0CA3GJ,wDAoInB2wC,sBAAwB,WACpB,EAAKruC,SAAS,CAAEwtC,iBAAiB,KArIlB,EAwInBc,uBAAyB,WACrB,EAAKtuC,SAAS,CAAEwtC,iBAAiB,KAzIlB,EA4InBe,wBAA0B,WACtB,EAAKvuC,SAAS,CAAEotC,mBAAmB,KA7IpB,EAgJnBoB,0BAA4B,WACxB,EAAKxuC,SAAS,CAAEotC,mBAAmB,KAjJpB,EAoJnBV,uBAAyB,WAAO,IACpBrzB,EAAU,EAAKtZ,MAAfsZ,MACe,EAAK/Z,MAApB6tC,WAGJ,EAAKntC,SAAS,CAAEmtC,WAAY,OACrB9zB,EACP1Z,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,IAGZwX,cAA4B,IAhKjB,EAoKnB4wB,0BAA4B,WACxB,EAAKzuC,SAAS,CAAEstC,qBAAqB,KArKtB,EAwKnBoB,2BAA6B,WACzB,EAAK1uC,SAAS,CAAEstC,qBAAqB,KAzKtB,EA4KnBqB,uBAAyB,WACrB,EAAK3uC,SAAS,CAAEqtC,kBAAkB,KA7KnB,EAgLnBuB,wBAA0B,WACtB,EAAK5uC,SAAS,CAAEqtC,kBAAkB,KAjLnB,EAoLnBwB,2BAA6B,WACzB,EAAK7uC,SAAS,CAAE2tC,sBAAsB,KArLvB,EAwLnBmB,4BAA8B,WAC1B,EAAK9uC,SAAS,CAAE2tC,sBAAsB,KAzLvB,EA4LnBoB,sBAAwB,WACpB,EAAK/uC,SAAS,CAAEutC,iBAAiB,KA7LlB,EAgMnByB,uBAAyB,WACrB,EAAKhvC,SAAS,CAAEutC,iBAAiB,KAjMlB,EAoMnB0B,uBAAyB,WACrB,EAAKjvC,SAAS,CAAEytC,kBAAkB,KArMnB,EAwMnByB,wBAA0B,WACtB,EAAKlvC,SAAS,CAAEytC,kBAAkB,KAzMnB,EA4MnB0B,uBAAyB,WACrB,EAAKnvC,SAAS,CAAE0tC,kBAAkB,KA7MnB,EAgNnB0B,wBAA0B,WACtB,EAAKpvC,SAAS,CAAE0tC,kBAAkB,KA9MlC,EAAK2B,WAAazuC,IAAMoU,YAHT,IAKPqE,EAAUtZ,EAAVsZ,MACAhT,EAAyBiS,IAAzBjS,OAAQipC,EAAiBh3B,IAAjBg3B,aAND,OAQf,EAAKhwC,MAAQ,CACT+G,OAAQgT,EAAQi2B,EAAejpC,EAC/B4jC,eAAgB,EAChBkD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBtF,SAAU,KACVC,iBAAkB,MArBP,E,iFA0BfrpC,KAAK8T,YAAY9T,KAAKK,MAAM+G,QAE5BiS,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvCr0B,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,2B,6CAI1ChL,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxCr0B,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,2B,yCAG5BnjB,EAAWC,EAAWC,GAAW,IACxCgG,EAAWpH,KAAKK,MAAhB+G,OACJA,IAAWjG,EAAUiG,QACrBpH,KAAK8T,YAAY1M,K,+BA4Kf,IAAD,EACwBpH,KAAKc,MAA1BO,EADH,EACGA,UAAW+Y,EADd,EACcA,MADd,EAgBDpa,KAAKK,MAbL+G,EAHC,EAGDA,OACAgiC,EAJC,EAIDA,SACA4B,EALC,EAKDA,eACA3B,EANC,EAMDA,iBACA6E,EAPC,EAODA,WACAE,EARC,EAQDA,iBACAC,EATC,EASDA,oBACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,qBACAP,EAfC,EAeDA,kBAGEpQ,EAAgB32B,GAAU8mC,EAC1BzD,EAAYzqC,KAAKowC,YAAcpwC,KAAKowC,WAAWv7B,QAAU7U,KAAKowC,WAAWv7B,QAAQk0B,mBAAqB,EAExG1uB,EAAU,KAiHd,OAhHIk0B,EACAl0B,EACI,kBAAC,GAAD,CACIjT,OAAQ22B,EACR3jB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAKqvC,yBAGfjB,GACPpuC,KAAK4tC,aAAe5tC,KAAK4tC,cACrB,kBAAC,GAAD,CACIxmC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAK2vC,0BAItBt1B,EAAUra,KAAK4tC,cACRS,GACPruC,KAAK6tC,gBAAkB7tC,KAAK6tC,iBACxB,kBAAC,GAAD,CACIzmC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAKyvC,6BAItBp1B,EAAUra,KAAK6tC,iBACRS,GACPtuC,KAAK8tC,YAAc9tC,KAAK8tC,aACpB,kBAAC,GAAD,CACI1mC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAK+vC,yBAItB11B,EAAUra,KAAK8tC,aACRU,GACPxuC,KAAK+tC,aAAe/tC,KAAK+tC,cACrB,kBAAC,GAAD,CACI3mC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAKiwC,0BAItB51B,EAAUra,KAAK+tC,cACRU,GACPzuC,KAAKguC,aAAehuC,KAAKguC,cACrB,kBAAC,GAAD,CACI5mC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAKmwC,0BAItB91B,EAAUra,KAAKguC,cACRU,GACP1uC,KAAKiuC,iBAAmBjuC,KAAKiuC,kBACzB,kBAAC,GAAD,CACI7mC,OAAQ22B,EACRiN,eAAgBA,EAChB5wB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAK6vC,8BAItBx1B,EAAUra,KAAKiuC,kBAEf5zB,EADO8zB,EAEH,kBAAC,GAAD,CACI/mC,OAAQ22B,EACR3jB,MAAOA,EACPqwB,UAAWA,EACX5mC,QAAS7D,KAAKuvC,4BAKlB,kBAAC,GAAD,CACI/4B,IAAKxW,KAAKowC,WACVhpC,OAAQ22B,EACR3jB,MAAOA,EACP0gB,WAAYoT,IAAe9mC,EAC3BgiC,SAAUA,EACVC,iBAAkBA,EAClBiH,oBAAqBtwC,KAAKsvC,wBAC1BiB,mBAAoBvwC,KAAK0vC,uBACzBc,sBAAuBxwC,KAAKwvC,0BAC5BiB,kBAAmBzwC,KAAKovC,sBACxBsB,kBAAmB1wC,KAAK8vC,sBACxBa,mBAAoB3wC,KAAKgwC,uBACzBY,mBAAoB5wC,KAAKkwC,uBACzBW,uBAAwB7wC,KAAK4vC,2BAC7B/rC,QAAS7D,KAAKytC,yBAKnBrzB,EACH,oCAAGC,GAEH,yBAAKhZ,UAAWoE,IAAW,YAAa,CAAE,gBAAiB2U,GAAS/Y,IAAagZ,O,GA9VtE1Y,IAAMC,YAyW7B4rC,GAASxlC,aAAe,CACpB3G,UAAW,KACXuD,QAAS,KACTwV,OAAO,GAGIozB,UCvXTsD,I,kNAkCFC,2BAA6B,SAAA9pC,GACN,EAAKnG,MAAhBsG,SAEOH,EAAOG,SAClB,EAAK4pC,aAAe/pC,EAAOuW,WAC3B,EAAKtW,gB,EAIbF,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGT+pC,aAAe,SAAAhqC,GAAW,IACdG,EAAW,EAAKtG,MAAhBsG,OACA4b,EAAS/b,EAAT+b,KAEF7a,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,IACD6yB,cAAc5zB,GAAlB,CANqB,IAQbsX,EAAiBvW,EAAjBuW,aACR,GAAKA,EAEcA,EAAX/K,OACGhL,UAAYqa,EAAKvkB,IAE5B,EAAKyI,gB,EAGTyV,SAAW,SAAA1V,GACY,EAAKnG,MAAhBsG,SAEOH,EAAOI,SAEtB,EAAKH,e,qFApEaI,EAAWC,GAAY,IAAD,EAClBvH,KAAKc,MAAnBsG,EADgC,EAChCA,OAAQ3D,EADwB,EACxBA,EAEhB,OAAI6D,EAAUF,SAAWA,GAIrBE,EAAU7D,IAAMA,I,0CAQpB+D,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,2BAA4BzH,KAAK+wC,4BAC9CvpC,KAAUC,GAAG,yBAA0BzH,KAAK2c,UAC5CnV,KAAUC,GAAG,wBAAyBzH,KAAK2c,UAC3CnV,KAAUC,GAAG,sBAAuBzH,KAAK2c,UACzCnV,KAAUC,GAAG,uBAAwBzH,KAAK2c,UAC1ClT,KAAUhC,GAAG,aAAczH,KAAKixC,gB,6CAIhCzpC,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,2BAA4B1H,KAAK+wC,4BAC/CvpC,KAAUE,IAAI,yBAA0B1H,KAAK2c,UAC7CnV,KAAUE,IAAI,wBAAyB1H,KAAK2c,UAC5CnV,KAAUE,IAAI,sBAAuB1H,KAAK2c,UAC1CnV,KAAUE,IAAI,uBAAwB1H,KAAK2c,Y,+BAyCrC,IAAD,EACiB3c,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAEhB,GAAIzD,KAAKgxC,aAAc,OAAO,yBAAK3vC,UAAU,kBAAkB,QAE/D,IAAM8G,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,yBAAK9G,UAAU,kBAAkB,QAEnD,IAAI6vC,EAAiB,KACfC,EAAeC,aAAoBhqC,GAKzC,GAJI+pC,IACAD,EAAiB,0BAAM7vC,UAAU,yBAAyB8vC,KAGzDD,EAAgB,CACjB,IAAMG,EAAQC,aAAalqC,GAC3B,GAAImqC,cAAcnqC,GAAS,CACvB,IAAMkJ,EAAO+gC,EAAM/gC,MAAQ,OAE3B4gC,EACI,oCACI,0BAAM7vC,UAAU,wBAAwBoC,EAAE,SAAW,MACpD6M,IAMjB,IAAK4gC,EAAgB,CACjB,IAAM72B,EAAUm3B,aAAsBrpC,EAAM1E,IAAM,OAC5CguC,EAAaC,aAAyBvpC,EAAM1E,GAClDytC,EACI,oCACKO,GAAc,0BAAMpwC,UAAU,yBAAyBowC,EAAzC,MACdp3B,GAKb,OAAO,yBAAKhZ,UAAU,kBAAkB6vC,O,GA/GpBvvC,IAAMC,YAmHnBsD,iBAAkB4rC,IC9HlBjvC,gBACX,uBAAG8vC,YAAY,IAAIlqB,KAAK,OAAOmqB,SAAS,WACpC,0BAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKvzC,GAAG,UAAUkzC,YAAY,OAAOM,cAAc,UACvF,0BACInwC,EAAE,yfACF6vC,YAAY,OACZM,cAAc,QACdC,eAAe,WAGvB,OC8HWC,I,kNAhFXpB,2BAA6B,SAAA9pC,GACN,EAAKnG,MAAhBsG,SAEOH,EAAOG,SAClB,EAAK4pC,aAAe/pC,EAAOuW,WAC3B,EAAKtW,gB,EAIbF,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGTyV,SAAW,SAAA1V,GAAW,IACVG,EAAW,EAAKtG,MAAhBsG,OAEJH,EAAOI,UAAYD,GAEvB,EAAKF,e,EAGTo0B,kCAAoC,SAAAr0B,GAAW,IACnCG,EAAW,EAAKtG,MAAhBsG,OAEFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAEL,OAAQlB,EAAOs0B,MAAM,UACjB,IAAK,sCAC0B,uBAAvBpzB,EAAK/F,KAAK,UAA4D,uBAAvB+F,EAAK/F,KAAK,UACzD,EAAK8E,cAET,MAEJ,IAAK,wCAC0B,oBAAvBiB,EAAK/F,KAAK,UAAyD,mBAAvB+F,EAAK/F,KAAK,UACtD,EAAK8E,gB,qFAhFCI,EAAWC,GAAY,IAAD,EACXvH,KAAKc,MAA1BsG,EADgC,EAChCA,OAAQqV,EADwB,EACxBA,SAEhB,OAAInV,EAAUF,SAAWA,GAIrBE,EAAUmV,WAAaA,I,0CAQ3BjV,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,2BAA4BzH,KAAK+wC,4BAC9CvpC,KAAUC,GAAG,yBAA0BzH,KAAK2c,UAC5CnV,KAAUC,GAAG,6BAA8BzH,KAAK2c,UAChDnV,KAAUC,GAAG,qBAAsBzH,KAAK2c,UACxCnV,KAAUC,GAAG,iCAAkCzH,KAAK2c,UACpDnV,KAAUC,GAAG,sBAAuBzH,KAAK2c,UACzCnV,KAAUC,GAAG,wBAAyBzH,KAAK2c,UAC3CnV,KAAUC,GAAG,uBAAwBzH,KAAK2c,UAC1CnV,KAAUC,GAAG,+BAAgCzH,KAAK2c,UAClDnV,KAAUC,GAAG,2BAA4BzH,KAAK2c,UAC9Ckf,KAAkBp0B,GAAG,kCAAmCzH,KAAKs7B,qC,6CAI7D9zB,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,2BAA4B1H,KAAK+wC,4BAC/CvpC,KAAUE,IAAI,yBAA0B1H,KAAK2c,UAC7CnV,KAAUE,IAAI,6BAA8B1H,KAAK2c,UACjDnV,KAAUE,IAAI,qBAAsB1H,KAAK2c,UACzCnV,KAAUE,IAAI,iCAAkC1H,KAAK2c,UACrDnV,KAAUE,IAAI,sBAAuB1H,KAAK2c,UAC1CnV,KAAUE,IAAI,wBAAyB1H,KAAK2c,UAC5CnV,KAAUE,IAAI,uBAAwB1H,KAAK2c,UAC3CnV,KAAUE,IAAI,+BAAgC1H,KAAK2c,UACnDnV,KAAUE,IAAI,2BAA4B1H,KAAK2c,UAC/Ckf,KAAkBn0B,IAAI,kCAAmC1H,KAAKs7B,qC,+BA+C9D,GAAIt7B,KAAKgxC,aAAc,OAAO,KADzB,MAGwBhxC,KAAKc,MAA1BsG,EAHH,EAGGA,OAAQqV,EAHX,EAGWA,SAEVtU,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KANb,IAQGiqC,EAAiBjqC,EAAjBiqC,aACFC,EAAWhyB,aAAajZ,EAAQqV,GAEhC61B,EAAyBC,cAA2BnrC,GACpDorC,EAAkBC,cAAoBrrC,GACtCg0B,EAAUC,aAAYj0B,GAE5B,OACI,oCACKkrC,GACG,yBAAKjxC,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGPmxC,GACG,yBAAKnxC,UAAWoE,IAAW,CAAE,qBAAsB21B,GAAW,iBAC1D,0BAAM/5B,UAAU,qBAAqB+wC,EAAe,EAAIA,EAAe,KAG9EC,IAAaG,IAAoBF,GAC9B,yBAAKjxC,UAAU,uBACX,kBAAC,GAAD,CAASA,UAAU,mC,GArHjBM,IAAMC,YCXjBC,gBACX,uBAAG6wC,OAAO,OAAOf,YAAY,IAAIlqB,KAAK,OAAOmqB,SAAS,WAClD,uBAAGe,UAAU,iCAAiClrB,KAAK,UAAUmqB,SAAS,WAClE,0BAAM9vC,EAAE,0iBAGhB,SCLWD,gBACX,uBAAG8vC,YAAY,IAAIlqB,KAAK,OAAOmqB,SAAS,UAAUK,cAAc,QAAQC,eAAe,SACnF,uBAAGS,UAAU,kCACT,4BAAQhB,YAAY,MAAMiB,GAAG,KAAKC,GAAG,IAAI5S,EAAE,MAC3C,0BAAM4R,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAIL,YAAY,QAClD,0BAAME,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIL,YAAY,UAGxD,WCTW9vC,gBACX,0BACI8wC,UAAU,kCACV7wC,EAAE,8iBAEN,QCLWD,gBACX,0BACI8wC,UAAU,kCACV7wC,EAAE,ylCAEN,aCgGWgxC,I,kNA3FXzyC,MAAQ,G,EAkCRwlC,oBAAsB,SAAA5+B,GAAW,IAAD,EACE,EAAKnG,MAA3BsG,EADoB,EACpBA,OAAQqH,EADY,EACZA,UACRskC,EAA4B9rC,EAA5B8rC,eAAgBz/B,EAAYrM,EAAZqM,QAExB,GAAI7E,IAAcskC,GACbz/B,EAAL,CAL4B,IAOpBjM,EAA+BiM,EAA/BjM,QAAS5I,EAAsB6U,EAAtB7U,GAAIu0C,EAAkB1/B,EAAlB0/B,cACjB5rC,IAAWC,IAEf,EAAK4rC,aAAex0C,EACpB,EAAKsC,SAAS,CAAEmyC,aAAcF,O,EAGlCG,uBAAyB,SAAAlsC,GAAW,IAAD,EACD,EAAKnG,MAA3BsG,EADuB,EACvBA,OAAQqH,EADe,EACfA,UACRpH,EAAyCJ,EAAzCI,QAAS+rC,EAAgCnsC,EAAhCmsC,4BACTH,EAHuB,gBAGvBA,aAEJ7rC,IAAWC,IAEV4rC,GAAgBA,GAAgBG,GAAgC3kC,GAAa2kC,IAC9E,EAAKryC,SAAS,CAAEmyC,aAAc,KAAMG,QAAQ,K,mFAnChD7rC,KAAUC,GAAG,uBAAwBzH,KAAKmzC,wBAE1ClgC,KAAaxL,GAAG,0BAA2BzH,KAAK6lC,qBAChD5yB,KAAaxL,GAAG,6BAA8BzH,KAAK6lC,uB,6CAInDr+B,KAAUE,IAAI,uBAAwB1H,KAAKmzC,wBAE3ClgC,KAAavL,IAAI,0BAA2B1H,KAAK6lC,qBACjD5yB,KAAavL,IAAI,6BAA8B1H,KAAK6lC,uB,+BA6B9C,IAAD,EAC4B7lC,KAAKK,MAA9B6yC,EADH,EACGA,aACR,OAFK,EACiBG,OAKlBH,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACI7xC,UAAU,SACViyC,QAAQ,YACR1lC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAI6kC,UAAW,uBAG/C,kBAACY,GAAD,CACIlyC,UAAU,SACViyC,QAAQ,YACR1lC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAI6kC,UAAW,oBAAqBD,OAAQ,kBAK7E,kBAACc,GAAD,CAAUnyC,UAAU,SAASiyC,QAAQ,YAAY1lC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,KAnBzE,kBAAC2lC,GAAD,CAAepyC,UAAU,SAASiyC,QAAQ,YAAY1lC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,Q,gDA7DjEhN,EAAOT,GAAQ,IACnC+G,EAAsBtG,EAAtBsG,OAAQqH,EAAc3N,EAAd2N,UAEV6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACnCykC,EAAe5/B,EAAUA,EAAQ0/B,cAAgB,KAEvD,OAAI5rC,IAAW/G,EAAMmJ,YAAciF,IAAcpO,EAAMqzC,cAC5C,CACHlqC,WAAYpC,EACZssC,cAAejlC,EACfykC,eACAG,OAAQM,aAAgBvsC,EAAQqH,IAIjC,S,GAlBM9M,IAAMC,YCJrBgyC,I,kNAmCF7C,2BAA6B,SAAA9pC,GACN,EAAKnG,MAAhBsG,SAEOH,EAAOG,SAClB,EAAK4pC,aAAe/pC,EAAOuW,WAC3B,EAAKtW,gB,EAIbF,uBAAyB,SAAAC,GACrB,EAAKC,e,EAGTyV,SAAW,SAAA1V,GACY,EAAKnG,MAAhBsG,SAEOH,EAAOI,SAEtB,EAAKH,e,qFApDaI,EAAWC,GAAY,IAAD,EAClBvH,KAAKc,MAAnBsG,EADgC,EAChCA,OAAQ3D,EADwB,EACxBA,EAEhB,OAAI6D,EAAUF,SAAWA,GAIrBE,EAAU7D,IAAMA,I,0CAQpB+D,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,2BAA4BzH,KAAK+wC,4BAC9CvpC,KAAUC,GAAG,yBAA0BzH,KAAK2c,UAC5CnV,KAAUC,GAAG,wBAAyBzH,KAAK2c,UAC3CnV,KAAUC,GAAG,sBAAuBzH,KAAK2c,UACzCnV,KAAUC,GAAG,+BAAgCzH,KAAK2c,UAClDnV,KAAUC,GAAG,2BAA4BzH,KAAK2c,Y,6CAI9CnV,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,2BAA4B1H,KAAK+wC,4BAC/CvpC,KAAUE,IAAI,yBAA0B1H,KAAK2c,UAC7CnV,KAAUE,IAAI,wBAAyB1H,KAAK2c,UAC5CnV,KAAUE,IAAI,sBAAuB1H,KAAK2c,UAC1CnV,KAAUE,IAAI,+BAAgC1H,KAAK2c,UACnDnV,KAAUE,IAAI,2BAA4B1H,KAAK2c,Y,+BAyB/C,GAAI3c,KAAKgxC,aAAc,OAAO,KADzB,IAGG5pC,EAAWpH,KAAKc,MAAhBsG,OAEFe,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAElB,IAAMuhC,EAAOt/B,cAAShD,GAEdsX,EAAiBvW,EAAjBuW,aACR,IAAKA,EAAc,OAAO,KAE1B,IAAMtJ,EAAOy+B,aAAmB1rC,GAChC,IAAKiN,EAAM,OAAO,KAdb,IAgBG3W,EAAoBigB,EAApBjgB,GAAIq1C,EAAgBp1B,EAAhBo1B,YAEZ,OACI,yBAAKzyC,UAAU,eACVyyC,IAAgBpK,GACb,oCACI,kBAAC,GAAD,CAAQtiC,OAAQA,EAAQqH,UAAWhQ,IACnC,oCAGP2W,O,GAlFQzT,IAAMC,YAwFhBsD,iBAAkB0uC,IC7FlB/xC,gBACX,0BAAMC,EAAE,s7CACR,WCFWD,gBACX,0BAAMC,EAAE,i3CACR,aCFWD,gBACX,0BAAMC,EAAE,2uCACR,QCFWD,gBACX,uBAAG4lB,KAAK,OAAOirB,OAAO,eAAef,YAAY,IAAIM,cAAc,QAAQC,eAAe,QAAQS,UAAU,iCACxG,0BAAM7wC,EAAE,usBAEZ,UCJWD,gBACX,0BAAMC,EAAE,0+CACR,QCFWD,gBACX,0BAAMC,EAAE,0pBACR,UCFWD,gBACX,0BAAMC,EAAE,27BACR,QCFWD,gBACX,0BAAMC,EAAE,k7DACR,SCFWD,gBACX,0BAAMC,EAAE,qfACR,WCFWD,gBACX,0BAAMC,EAAE,klCACR,UCkDE8M,I,mBAGF,WAAY9N,GAAQ,IAAD,uBACf,4CAAMA,KAgEV4sC,qBAAuB,SAAAzmC,GAAW,IACtBG,EAAW,EAAKtG,MAAhBsG,OAEJA,IAAWH,EAAO8sC,gBAAkB3sC,IAAWH,EAAO0mC,YACtD,EAAKzmC,eArEM,EAyEnBuG,aAAe,SAAAtL,GACU,IAAjBA,EAAMgJ,QACNi1B,aAAS,EAAKt/B,MAAMsG,SA3ET,EA+EnBqD,kBA/EmB,sCA+EC,WAAMtI,GAAN,iCAAAuI,EAAA,wDACZvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAHM,EAKa,EAAK9J,MAA1BsG,EALQ,EAKRA,OAAQqV,EALA,EAKAA,UACQ,EAAKpc,MAArBiK,YANQ,gBASZ,EAAKvJ,SAAS,CAAEuJ,aAAa,IATjB,8BAWN0pC,EAAgB,IAAIxjC,KAC1B5B,EAAOolC,cAAgBA,EAEjBxpC,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QACZunC,EAAWhyB,aAAajZ,EAAQqV,GAhB1B,UAiBgB,EAAKw3B,YAAY7sC,GAjBjC,kDAiB6CirC,EAjB7C,WAiBN6B,EAjBM,KAkBNC,EAAmBC,aAAiBhtC,GACpCitC,GAAWjqC,cAAShD,GAEtBwH,EAAOolC,gBAAkBA,EArBjB,mDAyBZ,EAAKjzC,SAAS,CACVuJ,aAAa,EACb4pC,eACAC,mBACAE,UACA7pC,OACAD,QA/BQ,0CA/ED,wDAmHnBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,KAxHd,EA2HnBshB,WAAa,SAAAzpB,GACT,EAAK4I,uBAAuB5I,GADV,IAGViF,EAAW,EAAKtG,MAAhBsG,OAERu0B,aAA+Bv0B,GAASi0B,aAAYj0B,KAhIrC,EAmInB6sC,YAnImB,sCAmIL,WAAM7sC,GAAN,uBAAAsD,EAAA,wDACF+R,EAAa,EAAK3b,MAAlB2b,SAEF63B,EAAqBC,aAAentC,GACpCd,KAAYC,IAAI,kCAChBD,KAAYC,IAAI,yBALZ,0CAMsB,GANtB,cAQJiuC,EAAWC,aAAartC,GARpB,SASU1G,KAAgBC,KAAK,CACrC,QAAS,WACTkS,UAAW4J,EACXqD,aAAc,sBACd/M,eAAgB,EAChBlC,MAAOyjC,EAAmBhyC,MAAQ,KAd5B,cASJmR,EATI,OAiBJihC,EAAYjhC,EAAM5D,SAAS8kC,OAAO,SAACz1C,EAAGT,GACxC,GAAIg2C,aAAah2C,KAAQ+1C,EAAU,OAAOt1C,EAE1C,IAAMiJ,EAAOX,KAAUjB,IAAI9H,GAE3B,OAAOS,GAAKiJ,GAAQkY,aAAalY,EAAK1J,GAAIge,GAAY,EAAI,IAC3D,GAvBO,kBAyBHi4B,EAAYJ,EAAmBhyC,OAzB5B,0CAnIK,wDA+JnBsyC,UA/JmB,sCA+JP,WAAMzyC,GAAN,qBAAAuI,EAAA,wDACR,EAAKK,uBAAuB5I,GADpB,EAGqB,EAAKrB,MAA1BsG,EAHA,EAGAA,OAAQqV,EAHR,EAGQA,UACV41B,EAAWhyB,aAAajZ,EAAQqV,KAEpB,EAAKw3B,YAAY7sC,GAN3B,iDAQRytC,aAAmBztC,EAAQqV,GAAW41B,GAR9B,yCA/JO,wDA0KnByC,cA1KmB,sCA0KH,WAAM3yC,GAAN,eAAAuI,EAAA,wDACZ,EAAKK,uBAAuB5I,GAEpBiF,EAAW,EAAKtG,MAAhBsG,OACHgtC,aAAiBhtC,GAJV,iDAMZ2tC,aAAc3tC,EAAQ,CAAE,QAASmtC,aAAentC,GAAU,eAAiB,oBAN/D,yCA1KG,wDAmLnB4tC,eAAiB,SAAA7yC,GACb,EAAK4I,uBAAuB5I,GADN,IAGdiF,EAAW,EAAKtG,MAAhBsG,OAERg5B,aAASh5B,EAAQ,MAAM,IAxLR,EA2LnB6tC,WAAa,SAAA9yC,GACT,EAAK4I,uBAAuB5I,GADV,IAGViF,EAAW,EAAKtG,MAAhBsG,OAGR,GADiB8tC,aAAa9tC,GAChB,CACV,IAAMe,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAFD,IAIFgtC,EAAoDhtC,EAApDgtC,oBAAqBz2B,EAA+BvW,EAA/BuW,aAA+BvW,EAAjBiqC,aACxB,GAAK1zB,E9E7P7B,SAAsBtX,EAAQwvB,EAAYwe,GAC7C10C,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASD,EACTgyB,YAAaxC,EACbye,WAAYD,I8EyPJE,CAAaluC,EAAQ,CAACsX,EAAajgB,KAAK,GACjC02C,GACPI,aAA2BnuC,GAAQ,QAGvCmuC,aAA2BnuC,GAAQ,IA5MxB,EAgNnBouC,iBAAmB,SAAArzC,GACf,EAAK4I,uBAAuB5I,GADJ,IAGhBiF,EAAW,EAAKtG,MAAhBsG,OAERquC,aAAUruC,IAlNV,EAAKmF,OAAS5K,IAAMoU,YAEpB,IAAM5N,EAAOX,KAAUjB,IAAI,EAAKzF,MAAMsG,QALvB,OAMf,EAAK/G,MAAQ,CACT8H,OACAmC,aAAa,EACbE,KAAM,EACND,IAAK,GAVM,E,mFAcGjD,EAAWC,GAAY,IAAD,EACqBvH,KAAKc,MAA1DsG,EADgC,EAChCA,OAAQ3D,EADwB,EACxBA,EAAGoL,EADqB,EACrBA,OAAQ6mC,EADa,EACbA,aAAcj5B,EADD,EACCA,SAAU7O,EADX,EACWA,MAC3CtD,EAAgBtK,KAAKK,MAArBiK,YAER,OAAIhD,EAAUF,SAAWA,IAKrBE,EAAU7D,IAAMA,IAKhB6D,EAAUuH,SAAWA,IAKrBvH,EAAUouC,eAAiBA,IAK3BnuC,EAAU+C,cAAgBA,IAK1B/C,EAAUkV,WAAaA,MAKvBnV,EAAUsG,QAASA,GAASA,EAAMrD,MAAQjD,EAAUsG,MAAMrD,Y,0CAU9DhI,IAAiBkF,GAAG,qBAAsBzH,KAAK0tC,wB,6CAI/CnrC,IAAiBmF,IAAI,qBAAsB1H,KAAK0tC,wB,+BA0J1C,IAAD,EAC2E1tC,KAAKc,MAA7EsG,EADH,EACGA,OAAQqV,EADX,EACWA,SAAU9U,EADrB,EACqBA,kBAAmBkH,EADxC,EACwCA,OAAQpL,EADhD,EACgDA,EAAiBmK,GADjE,EACmD8nC,aADnD,EACiE9nC,OADjE,EAEuE5N,KAAKK,MAAzEiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAAK4pC,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAAcG,EAF3D,EAE2DA,QAE1DsB,EAAaC,aAAcxuC,GAC3ByuC,EAAkBC,aAAmB1uC,EAAQ3D,GAE7C4uC,EAAWhyB,aAAajZ,EAAQqV,GAEhCs5B,EADgBxzC,IAAiBkc,cACFrX,EAC/Bg0B,EAAUC,aAAYj0B,GACtB4uC,EAAWd,aAAa9tC,GACxB6uC,EAAa1B,aAAentC,GAClC,OACI,kBAAC8D,GAAA,EAAD,CACIC,QAAM,EACN9J,UAAWoE,IAAW,SAAU,CAAE,gBAAiBswC,GAAc,CAAE,gBAAiBlnC,IACpFjD,YAAa5L,KAAKyN,aAClBrC,cAAepL,KAAKyK,kBACpBmD,MAAOA,GAEH,yBAAKvM,UAAU,kBACX,kBAAC,KAAD,CAAU+F,OAAQA,EAAQmF,QAAM,EAAC5E,kBAAmBA,EAAmB6E,YAAU,IACjF,yBAAKnL,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAa+F,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAK/F,UAAU,mBACX,kBAAC,GAAD,CAAe+F,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,EAAQqV,SAAUA,OAInD,kBAACpR,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACrBupC,GACG,kBAACpoC,GAAA,EAAD,CAAUxG,QAASvF,KAAK80C,eACnBmB,EACG,oCACI,kBAACjqC,GAAA,EAAD,KACI,kBAACkqC,GAAD,OAEJ,kBAAChqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,gBAG7B,oCACI,kBAACuI,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAKxCywC,GACG,kBAACnoC,GAAA,EAAD,CAAUxG,QAASvF,KAAK40C,WACnBvC,EACG,oCACI,kBAACrmC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mBAG7B,oCACI,kBAACuI,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,gBAKzC,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKg1C,gBACpB,kBAAChpC,GAAA,EAAD,KACKgvB,cAAc5zB,GAAU,kBAAC,GAAD,MAAe,kBAAC+uC,GAAD,OAE5C,kBAACjqC,GAAA,EAAD,CAAczJ,QAAS2zC,aAAiBhvC,EAAQ3D,MAElD4wC,GACE,kBAACtoC,GAAA,EAAD,CAAUxG,QAASvF,KAAK4rB,YACnBwP,EACG,oCACI,kBAACpvB,GAAA,EAAD,KACI,kBAACqqC,GAAD,OAEJ,kBAACnqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,kBAG7B,oCACI,kBAACuI,GAAA,EAAD,KACI,kBAACsqC,GAAD,OAEJ,kBAACpqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,iBAKzC,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKi1C,YACnBe,EACG,oCACI,kBAAChqC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,iBAG7B,oCACI,kBAACuI,GAAA,EAAD,KACI,kBAACuqC,GAAD,OAEJ,kBAACrqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oBAYpCkyC,GAAcE,GACX,kBAAC9pC,GAAA,EAAD,CAAUxG,QAASvF,KAAKw1C,kBACpB,kBAACxpC,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASozC,Y,GAzWtCj0C,cA4XrBgN,GAAO5G,aAAe,CAClB6G,QAAQ,EACRlH,mBAAmB,GAGRzC,qBAAkB0J,IC1YlB0L,I,wLAtCD,IAAD,EACgCta,KAAKc,MAAlCsG,EADH,EACGA,OAAQmT,EADX,EACWA,MAAOrQ,EADlB,EACkBA,UAEnBpC,EAAQ,KACRoC,IACApC,EAAQC,aAAaX,GAAQ,IAGjC,IAAMoT,EAAU,UAAM,GAAuB,GAAlBlb,KAAKY,IAAIqa,GAApB,KACVE,EAAY,UAAM,GAAuB,GAAlBnb,KAAKob,IAAIH,GAApB,KAElB,OACI,yBAAKlZ,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACV6I,EACGpC,EAEA,yBAAKzG,UAAU,2BAA2BuM,MAAO,CAAEC,MAAO2M,MAGlE,yBAAKnZ,UAAU,mBACX,yBAAKA,UAAU,6BAA6BuM,MAAO,CAAEC,MAAO4M,a,GAzBxD9Y,IAAMC,Y,mBCJvBC,gBACX,0BAAMC,EAAE,2oCACR,WCFWD,gBACX,0BAAMC,EAAE,ypBACR,QCFWD,gBACX,0BAAMC,EAAE,oiDACR,Q,UCFWD,gBACX,0BAAMC,EAAE,0uIACR,YCuBE00C,I,mBACF,WAAY11C,GAAQ,IAAD,8BACf,4CAAMA,KAmBVujB,wBAA0B,SAAApd,GAAW,IACzBqd,EAAiBrd,EAAjBqd,aAER,EAAKvjB,SAAS,CAAEujB,kBAvBD,EA0BnB9L,2BAA6B,SAAAvR,GACzB,EAAKlG,SAAS,CAAE0X,mBAAoBxR,EAAOyR,uBA3B5B,EA8BnB+9B,eAAiB,SAAAt0C,GAAU,IACfsW,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,IAE1B,EAAK1X,SAAS,CAAE21C,SAAUv0C,EAAMw0C,iBAlCjB,EAqCnBC,gBAAkB,WACd,EAAK71C,SAAS,CAAE21C,SAAU,QAtCX,EAyCnBG,mBAzCmB,qBAyCE,sBAAAnsC,EAAA,qDACjB,EAAKksC,kBADY,yCAzCF,EA+CnBE,iBAAmB,SAAA30C,GACf,EAAKy0C,kBAELl2C,KAAgBsf,aAAa,CACzB,QAAS,yBACT1c,MAAM,KApDK,EAwDnByzC,eAAiB,SAAA50C,GACb,EAAKy0C,kBAELl2C,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KA7DK,EAiEnB0zC,eAAiB,SAAA70C,GACb,EAAKy0C,kBAELl2C,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KAtEK,EA0EnB2zC,eAAiB,SAAA90C,GACb,EAAKy0C,kBAELM,gBA7Ee,EAgFnBC,YAhFmB,sCAgFL,WAAMh1C,GAAN,eAAAuI,EAAA,wDACV,EAAKksC,kBAEDzuC,EAAO+d,GAAW3E,MAAQ2E,GAAW3E,MAAMH,OAAS,KAH9C,gCAKO1gB,KAAgBC,KAAK,CAC9B,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,IARL,OAKNjM,EALM,iBAYLA,EAZK,iDAcVi4B,aAASj4B,EAAK1J,IAdJ,yCAhFK,wDAiGnB24C,eAjGmB,sCAiGF,WAAMj1C,GAAN,eAAAuI,EAAA,wDACb,EAAKksC,kBAEDzuC,EAAO+d,GAAW3E,MAAQ2E,GAAW3E,MAAMH,OAAS,KAH3C,gCAKI1gB,KAAgBC,KAAK,CAC9B,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,IARF,OAKTjM,EALS,iBAYRA,EAZQ,iDAcbzH,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,EACN8D,OAAQe,EAAK1J,KAjBJ,yCAjGE,wDAsHnB44C,WAtHmB,sCAsHN,WAAMl1C,GAAN,SAAAuI,EAAA,qDACT,EAAKksC,kBADI,yCAtHM,wDA2HnBj+B,aAAe,WACX,EAAKi+B,kBAELU,aAAW,IA3HX,EAAKj3C,MAAQ,CACToY,mBAAoBY,IAASC,wBAC7Bo9B,SAAU,KACVpyB,aAAcjL,IAASiL,cANZ,E,iFAWfjL,IAAS5R,GAAG,2BAA4BzH,KAAKwY,4BAC7Ca,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,2B,6CAI1ChL,IAAS3R,IAAI,2BAA4B1H,KAAKwY,4BAC9Ca,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,2B,+BAgHrC,IAAD,EAC6CrkB,KAAKc,MAA/C2C,EADH,EACGA,EAAG8gB,EADN,EACMA,QAASnK,EADf,EACeA,MAAOm9B,EADtB,EACsBA,UAAW1zC,EADjC,EACiCA,QADjC,EAEkD7D,KAAKK,MAApDq2C,EAFH,EAEGA,SAAUj+B,EAFb,EAEaA,mBAAoB6L,EAFjC,EAEiCA,aAEhCkzB,GACDD,GAAaz+B,aAAqBL,GAC/B,kBAACg/B,GAAA,EAAD,CACIh5C,GAAG,YACHi4C,SAAUA,EACVpzC,KAAMoC,QAAQgxC,GACd7yC,QAAS7D,KAAK42C,gBACdc,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBpsC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACK,GAAA,EAAD,CAAUxG,QAASvF,KAAK82C,kBACpB,kBAAC9qC,GAAA,EAAD,KACI,kBAAC6rC,GAAD,OAEJ,kBAAC3rC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,iBAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAK+2C,gBACpB,kBAAC/qC,GAAA,EAAD,KACI,kBAACmqC,GAAD,OAEJ,kBAACjqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE3B6gB,GACE,kBAACvY,GAAA,EAAD,CAAUxG,QAASvF,KAAK2Y,cACpB,kBAAC3M,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,aAGjC,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKg3C,gBACpB,kBAAChrC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKi3C,gBACpB,kBAACjrC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKm3C,aACpB,kBAACnrC,GAAA,EAAD,KACI,kBAAC8rC,GAAA,EAAD,OAEJ,kBAAC5rC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,YAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKo3C,gBACpB,kBAACprC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKq3C,YACpB,kBAACrrC,GAAA,EAAD,KACI,kBAAC+rC,GAAD,OAEJ,kBAAC7rC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oBAGjC,KAEFu0C,EAAY59B,EACZ,kBAACzD,EAAA,EAAD,MACA,kBAAC,GAAD,MAEN,OACI,oCACI,kBAACD,EAAA,EAAD,CACIuhC,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACd72C,UAAU,sCACVgD,aAAW,OACXkB,QAASgyC,EAAY1zC,EAAU7D,KAAKy2C,gBAClClyB,EACK,kBAACqmB,GAAA,EAAD,CAAetnC,KAAMi0C,EAAW1M,SAAU,kBAAC,GAAD,MAAmBtF,KAAM,kBAAC,GAAD,QACnE,oCAAGgS,EAAYS,EAAY,kBAAC,GAAD,QAIrCR,O,GA3NY71C,IAAMC,YAiOpBsD,iBAAkBsxC,ICtP3B5/B,I,kNACFvH,cAAgB,SAAAlN,GACZ,GAAsB,KAAlBA,EAAM0U,QACN1U,EAAMwI,sBACH,GAAsB,KAAlBxI,EAAM0U,QAAgB,CAAC,IAAD,EACC,EAAK/V,MAA3ByD,EADqB,EACrBA,SAAUV,EADW,EACXA,QAEZiT,EAAU3U,EAAME,OACtB,IAAKyU,EAAS,OAEd,GAAIA,EAAQC,UAMR,OALA5U,EAAMyI,kBACNzI,EAAM6U,YAAYC,2BAElBH,EAAQC,UAAY,UAChBxS,GAAUA,EAASuS,EAAQC,YAI/BlT,GACAA,EAAQ1B,QAET,GAAsB,IAAlBA,EAAM0U,QAAe,CAAC,IACrBK,EAAgB,EAAKpW,MAArBoW,YAEFJ,EAAU3U,EAAME,OACtB,IAAKyU,EAAS,OACd,GAAIA,EAAQC,UAAW,OAEnBG,IACA/U,EAAMyI,kBACNsM,O,EAKZC,YAAc,SAAAhV,GACV,IAAM2U,EAAU3U,EAAME,OACtB,GAAKyU,EAAL,CAFmB,IAIXM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,Q,EAI5BC,YAAc,SAAAlV,GACV,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,K,EAIlDK,YAAc,SAAAxV,GAAU,IACZoC,EAAa,EAAKzD,MAAlByD,SAEFuS,EAAU3U,EAAME,OACjByU,GAEDvS,GACAA,EAASuS,EAAQC,Y,wEAIf,IAAD,EAC4C/W,KAAKc,MAA9C8W,EADH,EACGA,SAAUnU,EADb,EACaA,EAAGoU,EADhB,EACgBA,QAASC,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAK1W,UAAU,gBACX,yBACI5C,GAAG,kBACH+X,IAAKoB,EACLI,YAAaF,GAAQrU,EAAE,UACvBwU,iBAAe,EACfC,gCAA8B,EAC9BC,UAAWnY,KAAKqP,cAChB+I,QAASpY,KAAKmX,YACdkB,QAASrY,KAAKqX,YACdiB,QAAStY,KAAK2X,YACdE,QAASA,IAEZE,GAAY,kBAAC,GAAD,CAAY1W,UAAU,2B,GAlFzBM,IAAMC,YAkGhCgV,GAAY5O,aAAe,CACvB+P,UAAU,GAGC7S,qBAAkB0R,ICqClB2B,I,mBAxIX,WAAYzX,GAAQ,IAAD,8BACf,4CAAMA,KAgEV0X,2BAA6B,SAAAvR,GACzB,EAAKlG,SAAS,CAAE0X,mBAAoBxR,EAAOyR,uBAlE5B,EAqEnBC,aAAe,WAAO,IAAD,EACgB,EAAK7X,MAA9B8X,EADS,EACTA,SAAUC,EADD,EACCA,WACVJ,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,IAE1BG,GAAUC,IA1EK,EA6EnBE,uBAAyB,WAAO,IACpBC,EAAuB,EAAKlY,MAA5BkY,mBAEFlC,EAAU,EAAKmC,eAAepE,QACpC,GAAKiC,EAAL,CAJ2B,IAMnBM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,MAIxB4B,EAFsBlC,EAAdC,aAvFO,EA4FnBmC,kBAAoB,WAChB,EAAKP,gBA7FU,EAgGnBS,YAAc,WACV,EAAKT,gBA9FL,EAAKM,eAAiBtX,IAAMoU,YAE5B,EAAK1V,MAAQ,CACToY,mBAAoBY,IAASC,wBAC7BhW,MAAM,GAPK,E,0EAWNsN,GAAQ,IACToI,EAAuBhZ,KAAKc,MAA5BkY,mBAEFO,EAAcvZ,KAAKiZ,eAAepE,QACxC,GAAI0E,EAAa,CAEb,GADAA,EAAYxC,UAAYnG,EACpB2I,EAAYC,WAAWpT,OAAS,EAAG,CACnC,IAAMqT,EAAQhC,SAASiC,cACvBD,EAAME,SAASJ,EAAYC,WAAW,GAAID,EAAYC,WAAW,GAAGpT,QACpEqT,EAAMG,UAAS,GAEf,IAAMC,EAAYC,OAAOC,eACzBF,EAAUG,kBACVH,EAAUI,SAASR,GAEvBF,EAAYW,QACZlB,EAAmBpI,M,yCAIR1P,EAAWC,EAAWC,GAAW,IACxCyX,EAAe7Y,KAAKc,MAApB+X,WAER,GAAIA,IAAe3X,EAAU2X,WACzB,GAAIA,EACA7Y,KAAKma,iBACF,CACH,IAAMZ,EAAcvZ,KAAKiZ,eAAepE,QACpC0E,IACAA,EAAYxC,UAAY,S,mCAOpC,IAAMwC,EAAcvZ,KAAKiZ,eAAepE,QACpC0E,GACAA,EAAYW,U,0CAKZla,KAAKc,MAAMsZ,OACXpa,KAAKma,aAGTd,IAAS5R,GAAG,2BAA4BzH,KAAKwY,8B,6CAI7Ca,IAAS3R,IAAI,2BAA4B1H,KAAKwY,8B,+BAsCxC,IAAD,EACkCxY,KAAKc,MAApC+X,EADH,EACGA,WAAY0L,EADf,EACeA,QAASnK,EADxB,EACwBA,MAEzBC,EAAU,KACV89B,GAAW,EAcf,OAbIt/B,GACAs/B,GAAW,EACX99B,EACI,kBAAC,GAAD,CACIzC,SAAU5X,KAAKiZ,eACf1U,SAAUvE,KAAK+Y,uBACflV,QAAS7D,KAAKkZ,qBAItBmB,EAAU,kBAAC,GAAD,CAAazC,SAAU5X,KAAKiZ,eAAgBpB,QAAS7X,KAAKoZ,cAIpE,yBAAK/X,UAAU,iBACX,kBAAC,GAAD,CAAgBkjB,QAASA,EAASgzB,UAAWY,EAAU/9B,MAAOA,EAAOvW,QAAS7D,KAAKkZ,oBAClFmB,O,GA1HW1Y,IAAMC,Y,QCK5Bw2C,I,mBACF,WAAYt3C,GAAQ,IAAD,uBACf,4CAAMA,KA2CVk8B,YAAc,WACV,MAAO,mBAAoBljB,QA7CZ,EAsEnBu+B,6BAA+B,SAAApxC,GACtB,EAAK+1B,eAAe,EAAKC,cAAa,IAvE5B,EA0EnBqb,0BAA4B,SAAArxC,GAExB,IADoB,EAAK5G,MAAjBqc,QACR,CAFkC,IAIjB67B,EAAkBryB,GAA3BxJ,QACH67B,GAEL,EAAKx3C,SAAS,CACV2b,QAAS67B,GACV,WACM,EAAKvb,eAAe,EAAKC,cAAa,OApFhC,EAwFnB/P,eAAiB,WACb,EAAK+P,cAAa,IAzFH,EA4FnB5Y,wBAA0B,SAAApd,GAAW,IACzBqd,EAAiBjL,IAAjBiL,aACR,EAAKvjB,SAAS,CACVujB,gBACD,WACM,EAAK0Y,eAAe,EAAKC,cAAa,MAjGhC,EAqGnBA,aAAe,WAAwB,IAAvBgB,IAAsB,2DACU,EAAK59B,MAAzCoc,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,QAEZyhB,GAH4B,EACP7Z,aAEZ,EAAK8Z,WAAWvpB,SACzBqpB,EAAU,EAEZtiB,EAAO,KACPpR,EAAO,EACX,GAA0B,iBAAtBiS,EAAS,SAA6B,CACtC,IAAMrZ,EAAO,EAAKk7B,UAAU/3B,IAAI,gBAC5BnD,IAEAoH,GADAoR,EAAOxY,EAAKm7B,YACAC,iBAEb,GAA0B,mBAAtB/hB,EAAS,SAChB,IAAK,IAAI9V,EAAI,EAAGA,EAAI+V,EAAQtW,OAAQO,IAAK,CACrC,IAAMiM,EAAS,EAAK0rB,UAAU/3B,IAAI,qBAAuBmW,EAAQ/V,GAAGlI,IACpE,GAAIie,EAAQ/V,GAAGlI,KAAOge,EAAS+7B,eAAgB,CAE3ChuC,GADAoR,EAAOhJ,EAAO2rB,YACFC,WACZ,OAIZ,GAAK5iB,EAAL,CAEA,IAAMmjB,EAAkB,EAAKC,mBAAmBnqB,QAChD,GAAIkqB,EAAiB,CACjB,IAAME,EAAkBhB,EAAa,gDAAkD,KACvFc,EAAgBnxB,MAAMsxB,QAAtB,gBAAyC10B,EAAO0zB,EAAhD,sBAAqEtiB,EAAKujB,YAAc,EAAIjB,EAA5F,eAA0Ge,GAG9G,GAAIrjB,GAAQqiB,EAAW,CAAC,IAAD,kBACXmB,EADW,EACXA,SAEJA,GACAA,EAASt/B,OAGb,EAAKs/B,SAAW,IAAIhhC,KAAS,IAAK,CAC9B,CACIwB,KAAMu+B,EAAOkB,WACblgC,GAAIitB,aAAM5hB,EAAO2zB,EAAOmB,YAAc,EAAI1jB,EAAK0jB,YAAc,EAAG,EAAGnB,EAAOgB,YAAchB,EAAOmB,aAC/Fz/B,KAAM,SAAA2K,GAAI,OAAK2zB,EAAOkB,WAAa70B,MAI3C8R,WAAW,WACF,EAAK8iB,UAEV,EAAKA,SAAS7gC,SACf,MAxJQ,EA+JnB4lB,oBAAsB,SAAAld,GAAW,IACrBwV,EAAa,EAAKpc,MAAlBoc,SACAC,EAAY4C,GAAZ5C,QAER,EAAK3b,SAAS,CACV2b,WACD,WAC2B,mBAAtBD,EAAS,WAA+F,IAA9DC,EAAQ2B,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOge,EAAS+7B,iBACnF,EAAKC,kBAEA,EAAKzb,eAAe,EAAKC,kBAzKvB,EA8KnB9f,uBAAyB,SAAAlW,GAAW,IACxBwV,EAAa6C,GAAb7C,SAER,EAAK1b,SAAS,CACV0b,YACD,WACM,EAAKugB,eAAe,EAAKC,kBApLnB,EAwLnBwb,gBAAkB,SAAAt2C,GACVA,GAA0B,IAAjBA,EAAMgJ,QAEnBzK,KAAgBsf,aAAa,CACzB,QAAS,uBACTvD,SAAU,CACN,QAAS,mBA9LF,EAmMnB8iB,kBAAoB,SAACp9B,EAAO1D,GACpB0D,GAA0B,IAAjBA,EAAMgJ,QAEnBzK,KAAgBsf,aAAa,CACzB,QAAS,uBACTvD,SAAU,CACN,QAAS,iBACT+7B,eAAgB/5C,MA1MT,EA+MnBi6C,YAAc,SAAAv2C,GACLA,EAAMw2C,SAIXx2C,EAAMw0C,cAActX,YAAcl9B,EAAMw2C,OACxCx2C,EAAMyI,oBAlNN,EAAK0zB,UAAY,IAAI73B,IACrB,EAAK23B,WAAaz8B,IAAMoU,YACxB,EAAKipB,mBAAqBr9B,IAAMoU,YALjB,IAOPuO,EAAiBjL,IAAjBiL,aACA5H,EAAsB4C,GAAtB5C,QAASD,EAAa6C,GAAb7C,SARF,OAUf,EAAKpc,MAAQ,CACTikB,eACA5H,UACAD,YAGJ,EAAKyQ,eAAiBsS,aAAS,EAAKtS,eAAgB,KAhBrC,E,iFAoBfltB,KAAKy/B,gBACLpmB,IAAS5R,GAAG,0BAA2BzH,KAAKs4C,2BAC5Cj/B,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,yBAC1C/E,GAAY7X,GAAG,uBAAwBzH,KAAKmd,wBAC5CmC,GAAY7X,GAAG,oBAAqBzH,KAAKmkB,qBACzCy0B,KAAkBnxC,GAAG,6BAA8BzH,KAAKq4C,8BAExDr4C,KAAKi9B,iB,yCAGU/7B,EAAWC,EAAWC,GACrCpB,KAAK0/B,kBACL1/B,KAAKy/B,kB,6CAILz/B,KAAK0/B,kBACLrmB,IAAS3R,IAAI,0BAA2B1H,KAAKs4C,2BAC7Cj/B,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,yBAC3C/E,GAAY5X,IAAI,uBAAwB1H,KAAKmd,wBAC7CmC,GAAY5X,IAAI,oBAAqB1H,KAAKmkB,qBAC1Cy0B,KAAkBlxC,IAAI,6BAA8B1H,KAAKq4C,gC,sCAQzD,GAAKr4C,KAAKg9B,cAAV,CACA,IAAMtgB,EAAU1c,KAAKo+B,WAAWvpB,QAChC,GAAK6H,EAAL,CAEA,IAAMijB,EAAW,IAAIC,eAAe5/B,KAAKktB,gBACzCyS,EAASE,QAAQnjB,GAEjB1c,KAAK8/B,eAAiB,CAAEH,WAAUjjB,e,wCAIlC,GAAK1c,KAAKg9B,eACLh9B,KAAK8/B,eAAV,CAFc,MAIgB9/B,KAAK8/B,eAA3BH,EAJM,EAINA,SAAUjjB,EAJJ,EAIIA,QACbijB,GACAjjB,GAELijB,EAASI,UAAUrjB,M,+BAqJb,IAAD,OACGjZ,EAAMzD,KAAKc,MAAX2C,EADH,EAEyBzD,KAAKK,MAA3Bqc,EAFH,EAEGA,QAASD,EAFZ,EAEYA,SAGjB,OAAKC,GACAA,EAAQtW,QAEbpG,KAAKs+B,UAAY,IAAI73B,IAEjB,yBAAKpF,UAAU,QACX,yBAAKA,UAAU,uBACf,yBAAKmV,IAAKxW,KAAKo+B,WAAY/8B,UAAU,UAAUw3C,QAAS74C,KAAK04C,aACzD,yBACIliC,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,eAAgBkwB,IAC7C5+B,UAAWoE,IAAW,SAAU,CAAE,gBAAuC,iBAAtBgX,EAAS,WAC5D7Q,YAAa5L,KAAKy4C,gBAClB3wC,MAA4C,MAC5C,8BAA4DrE,EAAE,oBAEjEiZ,EAAQ9M,IAAI,SAAA1Q,GAAC,OACV,yBACI0G,IAAK1G,EAAET,GACP+X,IAAK,SAAAypB,GAAC,OAAI,EAAK3B,UAAUvuB,IAAI,qBAAuB7Q,EAAET,GAAIwhC,IAC1D5+B,UAAWoE,IAAW,SAAU,CAAE,gBAAiBgX,EAAS+7B,iBAAmBt5C,EAAET,KACjFmN,YAAa,SAAAC,GAAC,OAAI,EAAK0zB,kBAAkB1zB,EAAG3M,EAAET,KAC9CqJ,MAAgC,MAChC,8BAAgD5I,EAAE4I,UAE1D,yBAAK0O,IAAKxW,KAAKg/B,mBAAoB39B,UAAU,wBAxBpC,S,GA9NPM,IAAMC,YAiQbsD,iBAAkBkzC,ICzP3Bn7B,G,8LACoB3V,EAAWC,EAAWmU,GAAc,IAAD,EACT1b,KAAKc,MAAzCsG,EAD6C,EAC7CA,OAAQqV,EADqC,EACrCA,SAAU7O,EAD2B,EAC3BA,MAAOiB,EADoB,EACpBA,OACjC,OAAIvH,EAAUF,SAAWA,IAKrBE,EAAUmV,WAAaA,IAKvBnV,EAAUuH,SAAWA,GAKrBvH,EAAUsG,MAAMrD,MAAQqD,EAAMrD,Q,+BAS5B,IAAD,EACuCvK,KAAKc,MAAzCsG,EADH,EACGA,OAAQqV,EADX,EACWA,SAAU5N,EADrB,EACqBA,OAAQjB,EAD7B,EAC6BA,MAElC,OACI,yBAAKvM,UAAU,mBAAmBuM,MAAOA,GACrC,kBAAC,GAAD,CAAQxG,OAAQA,EAAQqV,SAAUA,EAAU5N,OAAQA,S,GAhCvClN,IAAMC,WA4epBsb,G,YArcX,WAAYpc,GAAQ,IAAD,uBACf,4CAAMA,KAoGVqc,uBAAyB,SAAAlW,GAAW,IACxBwV,EAAaxV,EAAbwV,SAER,EAAK1b,SAAS,CACV0b,WACAW,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,IAEhB,WACC,EAAKC,oBA/GM,EAmHnBhU,mBAAqB,SAAArC,KAnHF,EA6HnBsW,wBAA0B,SAAAtW,GAAW,IACzBuW,EAAuBvW,EAAvBuW,WAAYpW,EAAWH,EAAXG,OAEhBoW,EACA,EAAKC,YAAY1N,IAAI3I,EAAQA,GAE7B,EAAKqW,YAAYC,OAAOtW,GAG5B,EAAKF,eAtIU,EAyInBsR,2BAA6B,SAAAvR,GAAW,IACPwR,EAAuBxR,EAA5CyR,oBAER,EAAK3X,SAAS,CAAE0X,sBAAsB,kBAAM,EAAK6E,oBA5IlC,EA+InBtW,uBAAyB,SAAAC,GACrB,EAAK0W,YAAW,IAhJD,EAmJnBL,eAnJmB,qBAmJF,4BAAA5S,EAAA,wDACL+N,EAAuB,EAAKpY,MAA5BoY,mBACHK,aAAqBL,GAFb,iEAIPrL,KAAUwQ,OAAO,kBAAM,EAAKD,YAAW,KAJhC,yCAnJE,EA0JnBE,UAAY,WAAO,IAAD,EACgB,EAAK/c,MAA3Bgd,EADM,EACNA,YAAa1b,EADP,EACOA,KACbqa,EAAa,EAAKpc,MAAlBoc,SACK,iBAATra,GACsB,iBAAtBqa,EAAS,UAETqB,GAAaA,KAhKF,EAmKnBC,qBAAuB,SAAA9W,GAAW,IACtBwV,EAAa,EAAKpc,MAAlBoc,SACA9B,EAAa1T,EAAb0T,SAEHqD,aAAevB,EAAU9B,EAAS5L,OAIvC,EAAKkP,kBAAkBhX,IA3KR,EA8KnBgX,kBAAoB,SAAAhX,GAAW,IAAD,EACU,EAAK5G,MAAjCoT,EADkB,EAClBA,MAAOgJ,EADW,EACXA,SAAUW,EADC,EACDA,OACzB,GAAK3J,EAAL,CAF0B,IAIlB+B,EAAY4H,EAAZ5H,QACR,IAAIA,GAAY/B,EAAMrN,OAAtB,CAL0B,IAOlBiB,EAAYJ,EAAZI,QAEFc,EAAOX,KAAUjB,IAAIc,GAC3B,GAAKc,GAIA+V,aAAY7W,EAASoV,GAA1B,CAIA,IAAM0B,EAAQ/N,aAAa/I,EAASoV,GAC9B2B,EAAe3K,EAAM4K,UAAU,SAAAnf,GAAC,OAAIA,IAAMmI,IAChD,IAAsB,IAAlB+W,GAAiC,MAAVD,EAA3B,CAKA,IADA,IAAMG,EAAU,GACP3X,EAAI,EAAGA,EAAI8M,EAAMrN,OAAQO,IAAK,CACnC,IAAMwB,EAAOX,KAAUjB,IAAIkN,EAAM9M,IAC3B4X,EAAYnO,aAAaqD,EAAM9M,GAAI8V,GACrCtU,GAAsB,MAAdoW,GACRD,EAAQtO,KAAK7H,EAAK1J,IAI1B,IAAM+f,EAAa,GACL,MAAVL,EAEI9W,IAAYgS,IAASoF,aAAgBtW,EAAKuW,eAC1Che,KAAgBie,UAAU,GAC1BC,cAA4B,KAGV,IAAlBR,IACI5I,EACAjC,QAAQc,MAAM,+BAAgCpN,GAG9CuX,EAAWxO,KAAK3I,IAK5B,EAAKwX,aAAaP,EAASE,EAAY,WACnC,EAAKM,iBAAiBN,GACtB,EAAKX,mBAnOM,EAkQnBlJ,aAAe,WAEX,IAAM5F,EAAO,EAAK6F,QAAQC,QAAQkK,aAAalK,QAC1C9F,IAGDA,EAAK+F,WAAakK,MAClB,EAAKC,aACElQ,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAejG,EAAKgG,cAEtE,EAAK4I,eA5QM,EA6XnB7B,WAAa,WAAmBta,GAAY,IAA5B+Y,EAA2B,EAA3BA,MAAO3M,EAAoB,EAApBA,MACX6O,EAAa,EAAKpc,MAAlBoc,SACFvd,EAAIsC,EAAO+Y,GAEjB,OAAO,kBAAC,GAAD,CAAgB3U,IAAK1G,EAAGkI,OAAQlI,EAAGud,SAAUA,EAAU5N,OAAQ,EAAK4O,YAAY7W,IAAI1H,GAAI0O,MAAOA,KA9XtG,EAAK6P,YAAc,IAAIhX,IAEvB,EAAKmO,QAAUjT,IAAMoU,YALN,IAOP0C,EAAuBY,IAAvBZ,mBAPO,OASf,EAAKpY,MAAQ,CACToY,qBACAhF,MAAO,KACPyL,iBAAiB,EACjBzC,SAAyB,iBAAf3b,EAAMsB,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,mBACnFgb,OAAQ,CACJ5H,SAAS,EACT6H,WAAW,IAhBJ,E,mFAqBG/V,EAAWC,GAAY,IAAD,EAC8BvH,KAAKc,MAAnEyC,EADgC,EAChCA,MAAOD,EADyB,EACzBA,KAAM6b,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAcrD,EADR,EACQA,MAAOsD,EADf,EACeA,WADf,EAEZrf,KAAKK,MAAzBoT,EAFgC,EAEhCA,MAFgC,EAEzBgJ,SAEf,OAAInV,EAAU/D,QAAUA,IAIpB+D,EAAUhE,OAASA,IAInBgE,EAAUyU,QAAUA,IAIpBzU,EAAU+X,aAAeA,IAIzB/X,EAAU6X,cAAgBA,IAI1B7X,EAAU8X,eAAiBA,GAI3B7X,EAAUkM,QAAUA,S,8CAWJvS,EAAWC,GAAY,IAC1B4N,EAAS/O,KAAK4U,QAAvBC,QACR,OAAK9F,EAEE,CAAE+F,UAAW/F,EAAK+F,WAFP,CAAEA,UAAW,K,yCAKhB5T,EAAWC,EAAWC,M,0CAKrCpB,KAAKsd,iBAELjE,IAAS5R,GAAG,2BAA4BzH,KAAKwY,4BAE7ChR,KAAUC,GAAG,mCAAoCzH,KAAKgH,wBACtDQ,KAAUC,GAAG,wBAAyBzH,KAAKud,yBAC3C/V,KAAUC,GAAG,yBAA0BzH,KAAKie,mBAC5CzW,KAAUC,GAAG,wBAAyBzH,KAAKie,mBAC3CzW,KAAUC,GAAG,qBAAsBzH,KAAK+d,sBAExCuB,GAAY7X,GAAG,uBAAwBzH,KAAKmd,wBAE5CzT,KAAgBjC,GAAG,kBAAmBzH,KAAKsJ,sB,6CAI3C+P,IAAS3R,IAAI,2BAA4B1H,KAAKwY,4BAE9ChR,KAAUE,IAAI,mCAAoC1H,KAAKgH,wBACvDQ,KAAUE,IAAI,wBAAyB1H,KAAKud,yBAC5C/V,KAAUE,IAAI,yBAA0B1H,KAAKie,mBAC7CzW,KAAUE,IAAI,wBAAyB1H,KAAKie,mBAC5CzW,KAAUE,IAAI,qBAAsB1H,KAAK+d,sBAEzCuB,GAAY5X,IAAI,uBAAwB1H,KAAKmd,wBAE7CzT,KAAgBhC,IAAI,kBAAmB1H,KAAKsJ,sB,mCAqInCgV,GAAqC,IAA5BE,EAA2B,uDAAd,GAAIe,EAAU,uCACrC9C,EAAazc,KAAKK,MAAlBoc,SAEF+C,EAAiBlB,EAAQ/I,OAAOiJ,GAAYvO,KAAK,SAACvF,EAAGwF,GACvD,OAAOC,aAAaC,aAAaF,EAAGuM,GAAWrM,aAAa1F,EAAG+R,MAG9DS,EAAYuC,iBAAiBzf,KAAKK,MAAMoT,MAAO+L,GAKpDxf,KAAKe,SAAS,CAAE0S,MAAO+L,GAAkBD,GAJjCA,GAAUA,M,+NAqCLG,E,gCAAiB7O,E,+BAAQ8O,KACrB3f,KAAKc,MAAdsB,K,EAC4BpC,KAAKK,MAAjCoT,E,EAAAA,MAAOgJ,E,EAAAA,WAAUW,E,EAAAA,QAGd5H,Q,qDAKP4H,EAAOC,U,wDAKPuC,EAAc,sBACdC,EAAe,GACdH,GAAWjM,GAASA,EAAMrN,OAAS,IAC9B+B,EAAOX,KAAUjB,IAAIkN,EAAMA,EAAMrN,OAAS,OAE5CwZ,EAAcxP,aAAajI,EAAK1J,GAAIge,GACpCoD,EAAe1X,EAAK1J,IAK5B2e,EAAO5H,SAAU,E,UACI9U,KAAgBC,KAAK,CACtC,QAAS,WACTkS,UAAW4J,EACX1J,eAAgB8M,EAChBC,aAAcF,EACd/O,MAAO8O,OACRI,QAAQ,WACP3C,EAAO5H,SAAU,EACbkK,GACAhf,KAAgBsf,aAAa,CAAE,QAAS,2BAA4BjR,KAAM0N,M,WAT5E5b,E,OAcFuc,IAAWpd,KAAKK,MAAM+c,O,mDAKtBvc,EAAOgP,SAASzJ,OAAS,GAAKvF,EAAOgP,SAAS,KAAOgQ,GACrDhf,EAAOgP,SAASoQ,QAGpB7C,EAAOC,WAAaxc,EAAOgP,SAASzJ,OAEhCsZ,EACA1f,KAAKkgB,aAAarf,EAAOgP,SAAU,WAC/B,EAAKiP,iBAAiBje,EAAOgP,UAC7B,EAAKgO,YAEDhd,EAAOgP,SAASzJ,OAASuZ,MACzB,EAAKhC,YAAW,EAAOgC,KAAmB9e,EAAOgP,SAASzJ,QAG9D,IAAM2I,EAAO,EAAK6F,QAAQC,QAAQkK,aAAalK,QAC1C9F,IACLA,EAAK+F,UAAY,KAIrB9U,KAAKmgB,YAAYtf,EAAOgP,SAAU,WAE9B,EAAKiP,iBAAiBje,EAAOgP,UAEzBhP,EAAOgP,SAASzJ,QAAUvF,EAAOgP,SAASzJ,OAASyK,GACnD,EAAK8M,YAAW,EAAO9M,EAAQhQ,EAAOgP,SAASzJ,U,4IAM9CkY,GACb,IAAMnR,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOmR,K,kCAGhBA,EAASiB,GACjB,GAAuB,IAAnBjB,EAAQlY,OAAZ,CAD2B,IAQrBga,GAFYpgB,KAAKK,MAAfoT,OAEmB,IAAI8B,OAAO+I,GACtCte,KAAKe,SAAS,CAAE0S,MAAO2M,GAAYb,QAP3BA,GAAUA,M,mCAUT9L,EAAO8L,GAChBvf,KAAKe,SAAS,CAAE0S,SAAS8L,K,oCAMzBzK,GAFa9U,KAAK4U,QAAQC,QAAQkK,aAAalK,W,+BAczC,IAAD,SACmD7U,KAAKc,MAArDwC,EADH,EACGA,KAAM+b,EADT,EACSA,WADT,KACqBF,YADrB,EACkCC,aACXpf,KAAKK,OAAzBoT,EAFH,EAEGA,MAAOgJ,EAFV,EAEUA,SAGf,IAAKnZ,EAAM,OAAO,KAElBtD,KAAKwB,OAAS,GAEd,GAAIiS,EAAO,CAEPA,EAAM9T,QAAQ,SAAAT,GACNmhB,aAAanhB,EAAGud,IACDvd,IAGvBc,KAAKwB,OAASiS,OACX,GAAI4L,EAAY,CAEnBA,EAAW1f,QAAQ,SAAAT,GACXmhB,aAAanhB,EAAGud,IACDvd,IAGvBc,KAAKwB,OAAS6d,EAAWzP,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,SAUV,iBAAtBge,EAAS,UACC6D,MAAM1gB,KAAK0gB,MAAM,KAAK1Q,IAAI,SAAC1Q,EAAGqb,GAAJ,OAAc,kBAAC,GAAD,CAAmB3U,IAAK2U,EAAOA,MAAOA,MAMhG,OACI,kBAAC,GAAD,CACI/D,IAAKxW,KAAK4U,QACVvT,UAAU,eACVG,OAAQxB,KAAKwB,OACb8Z,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG,EAAKsC,SACzCiV,SAAUzW,KAAK2U,kB,wCAjMH4L,EAAY/B,GAChC,GAAI+B,EAAWna,SAAWoY,EAAWpY,OAAQ,CACzC,IAAK,IAAIO,EAAI,EAAGA,EAAI4Z,EAAWna,OAAQO,IACnC,GAAI4Z,EAAW5Z,KAAO6X,EAAW7X,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GAhQWhF,IAAMC,WCpD1Bk3C,G,iLACQ,IAAD,EACmD94C,KAAKc,MAArD2C,EADH,EACGA,EAAGs1C,EADN,EACMA,aAAch9B,EADpB,EACoBA,MAAOsD,EAD3B,EAC2BA,WAAYxb,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAKxC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,sCAAsCkE,QAAS1B,GACjE,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,oBAGnD,yBAAKpC,UAAU,mBACX,kBAAC,GAAD,CACIe,KAAK,kBACLoU,IAAKuiC,EACL15B,WAAYA,EACZ/b,MAAM,EACNyY,MAAOA,U,GApBTpa,IAAMC,WA8BbsD,iBAAkB4zC,ICqClBE,I,mBAhEX,WAAYl4C,GAAQ,IAAD,8BACf,4CAAMA,KA8BV4sC,qBAAuB,SAAAzmC,GAAW,IACtB0mC,EAA+B1mC,EAA/B0mC,WAAYoG,EAAmB9sC,EAAnB8sC,eAEpB,EAAKhzC,SAAS,CACV4sC,WAAYA,EACZoG,eAAgBA,KAjCpB,EAAK1zC,MAAQ,CACTstC,WAAYt0B,IAASoF,YACrBs1B,eAAgB,MALL,E,mFASGzsC,EAAWC,GAAY,IACjCH,EAAWpH,KAAKc,MAAhBsG,OAER,OAAIG,EAAUomC,aAAevmC,GAIzBG,EAAUwsC,iBAAmB3sC,I,0CAQjCiS,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,wB,6CAIvCr0B,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,wB,+BAYlC,IAAD,EACuB1tC,KAAKc,MAAzBsG,EADH,EACGA,OAAQ7B,EADX,EACWA,QACI0zC,EAAmBj5C,KAAKK,MAApCstC,WAEFtF,EAAWvR,aAAgB1vB,GAEjC,OACI,kBAAC8D,GAAA,EAAD,CACIC,QAAM,EACN9J,UAAWoE,IAAW,oBAAqB,CAAE,gBAAiB2B,IAAW6xC,IACzE1zC,QAASA,GACT,yBAAKlE,UAAU,6BACX,kBAAC,GAAD,CAAM+F,OAAQA,EAAQwB,SAAUy/B,EAAW,IAAMA,EAAW,a,GArDlD1mC,IAAMC,Y,iPCK9Bs3C,G,YACF,WAAYp4C,GAAQ,IAAD,8BACf,4CAAMA,KA8BV4sC,qBAAuB,SAAAzmC,GACnB,EAAKlG,S,uVAAL,IACOkG,KA9BP,EAAK5G,MAAQ,CACTstC,WAAYt0B,IAASoF,YACrB06B,cAAe9/B,IAAS+/B,gBALb,E,mFASG9xC,EAAWC,GAAY,IAAD,EACVvH,KAAKc,MAA3BsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UAEhB,OAAIlH,EAAUomC,aAAevmC,GAAUG,EAAU4xC,gBAAkB1qC,GAI/DlH,EAAUwsC,iBAAmB3sC,GAAUG,EAAU8xC,oBAAsB5qC,I,0CAQ3E4K,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,wB,6CAIvCr0B,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,wB,+BASlC,IAAD,EACiD1tC,KAAKc,MAAnDsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAW6qC,EADtB,EACsBA,WAAY/zC,EADlC,EACkCA,QAAS9B,EAD3C,EAC2CA,EAC1Cw1C,EAAiBj5C,KAAKK,MAAMstC,WAC5B4L,EAAoBv5C,KAAKK,MAAM84C,cAC/B7lC,EAAUL,KAAa1M,IAAIa,EAAQqH,GAEjCkF,EAAWL,EAAXK,OAEFyB,EAAOokC,aAAelmC,GACtBm+B,EAAagI,aAAqBnmC,EAAS7P,GAC3Ci2C,EAAiBC,aAAyBrmC,EAAS7P,GACnD4W,EAAUu/B,aAAWtmC,EAAS7P,IAAM,OACpC8xB,EAAWnuB,IAAW6xC,GAAkBxqC,IAAc8qC,EAEtDM,EACFlmC,EAAOhL,SAAW2wC,EACd,kBAACQ,GAAA,EAAD,CAAU/R,OAAQp0B,EAAOhL,QAAS4D,QAAM,IAExC,kBAAC,KAAD,CAAUnF,OAAQA,EAAQmF,QAAM,IAGxC,OACI,kBAACrB,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAWoE,IAAW,gBAAiB,CAAE,gBAAiB8vB,IAAahwB,QAASA,GAC7F,yBAAKlE,UAAU,kBACVw4C,EACD,yBAAKx4C,UAAU,wBACX,yBAAKA,UAAU,kBACVi4C,GAAcI,EACX,yBAAKr4C,UAAU,gBAAgBq4C,GAE/B,kBAAC,GAAD,CAAatyC,OAAQA,IAEzB,yBAAK/F,UAAU,eAAe+T,IAElC,yBAAK/T,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACMi4C,GAAc7H,GACZ,0BAAMpwC,UAAU,yBAAyBowC,EAAzC,MAEHp3B,Y,GA/Ed1Y,IAAMC,WAkGlBsD,iBAAkBg0C,I,kkBCtF3B9pC,G,YACF,WAAYtO,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuO,cAAgB,SAAAlN,GACZ,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAIV,OAAQpN,EAAMyD,KACV,IAAK,SACDzD,EAAMwI,iBACNxI,EAAMyI,kBACNzI,EAAME,OAAOmN,OAEb,EAAKnM,gBAnCE,EA4DnBoM,oBAAsB,SAAAC,GAId,IAHJ,IAAMC,EAAM,GACNC,EAAM,IAAInJ,IAEHE,EAAI,EAAGA,EAAI+I,EAAQtJ,OAAQO,IAAK,CACzC,IAAI9F,EAAS6O,EAAQ/I,IAAM+I,EAAQ/I,GAAGkJ,SACtC,GAAIhP,EACA,IAAK,IAAIiP,EAAI,EAAGA,EAAIjP,EAAOuF,OAAQ0J,IAC1BF,EAAIhJ,IAAI/F,EAAOiP,MAChBF,EAAIG,IAAIlP,EAAOiP,GAAIjP,EAAOiP,IAC1BH,EAAIK,KAAKnP,EAAOiP,KAUhC,OAJAH,EAAIM,KAAK,SAACvF,EAAGwF,GACT,OAAOC,aAAaC,aAAaF,GAAIE,aAAa1F,MAG/CiF,GAhFQ,EAmFnBU,WAnFmB,sCAmFN,WAAMC,GAAN,6EAAA5F,EAAA,wDACT,EAAK6F,UAAY,IAAIC,KACrB,EAAKF,KAAOA,EACNC,EAAY,EAAKA,UACnBpD,EAAQ,KAIJ/F,EAAW,EAAKtG,MAAhBsG,OACAqJ,EAAkB,EAAKpQ,MAAvBoQ,cAEHrJ,EAXI,wBAYCsJ,EAAW,GACXC,EAAejQ,KAAgBC,KAAK,CACtC,QAAS,cACTiQ,MAAON,EACPO,MAAO,MAEXH,EAASV,KAAKW,IAERG,EAAYhK,GAAcwJ,KACfQ,IAAcR,IACrBS,EAAoBrQ,KAAgBC,KAAK,CAC3C,QAAS,cACTiQ,MAAOE,EACPD,MAAO,MAEXH,EAASV,KAAKe,KAGZC,EAAe9K,GAAiBoK,KAClBU,IAAiBV,IAC3BW,EAAuBvQ,KAAgBC,KAAK,CAC9C,QAAS,cACTiQ,MAAOI,EACPH,MAAO,MAEXH,EAASV,KAAKiB,IArCb,UAwCiBC,QAAQC,IAAIT,EAASd,IAAI,SAAA1Q,GAAC,OAAIA,EAAEkS,MAAM,SAAAvF,GAAC,OAAI,UAxC5D,WAwCC6D,EAxCD,OAyCC2B,EAAQ,EAAK5B,oBAAoBC,GAEnCa,IAAc,EAAKA,UA3ClB,sDA+CDE,IACQhN,EAAM,EAAK3C,MAAX2C,EAEF4M,EAAaC,EAAKgB,gBAClBC,EAAuB,CAAC,iBAAkB9N,EAAE,iBAAiB6N,gBAG1CE,KAAK,SAAAC,GAAE,OAAIA,EAAGvC,SAASmB,MAC3CS,GAAaS,EAAqBC,KAAK,SAAAC,GAAE,OAAIA,EAAGvC,SAAS4B,EAAUQ,mBAEpED,EAAMK,OAAO,EAAG,EAAGjB,EAAchS,KAIzC,EAAKsC,SAAS,CACVwJ,IAAK,KACLoH,cAAe,KACfN,MAAOA,IAGXlE,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAOkE,MAGxBQ,GADIA,EAAcvB,EAAKwB,QACGC,WAAW,KAAOF,EAAYG,OAAO,GAAKH,GACpDzL,QAAU6L,OAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgBzR,KAAgBC,KAAK,CACvC,QAAS,oBACTiQ,MAAOiB,IAEXK,EAAelC,KAAKmC,GAEhBrB,IAEAsB,GADIA,EAAmBtB,EAAUgB,QACGC,WAAW,KAAOK,EAAiBJ,OAAO,GAAKI,GAC9DhM,QAAU6L,OAAuBG,IAAqBP,IACjEQ,EAAqB3R,KAAgBC,KAAK,CAC5C,QAAS,oBACTiQ,MAAOwB,IAEXF,EAAelC,KAAKqC,IAzF3B,UA6F2BnB,QAAQC,IAAIe,EAAetC,IAAI,SAAA1Q,GAAC,OAAIA,EAAEkS,MAAM,SAAAvF,GAAC,OAAI,UA7F5E,WA6FKyG,EA7FL,OA8FKC,EAAS,EAAK9C,oBAAoB6C,GAEpC/B,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKxP,SAAS,CACVwR,WAGJpF,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAOoF,GAzGvB,wBA2GD,EAAKxR,SAAS,CACVwR,OAAQ,OA5GX,WAiHLC,EAAW,IACXpL,EAlHK,kCAmHY1G,KAAgBC,KAAK,CAClC,QAAS,qBACT0G,QAASD,EACTwJ,MAAON,EACPmC,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACR9B,MAAO,GACP+B,OAAQ,OA3HP,QAmHLJ,EAnHK,gDA8HY9R,KAAgBC,KAAK,CAClC,QAAS,iBACTkS,UAAW,CAAE,QAAS,gBACtBjC,MAAON,EACPwC,YAAa,EACbC,eAAgB,EAChBC,kBAAmB,EACnBnC,MAAO,KArIN,QA8HL2B,EA9HK,kBAyITS,KAAaC,SAASV,EAASA,UAE3BW,EAAc,KACb/L,EA5II,4CA8I6B1G,KAAgBC,KAAK,CAC/C,QAAS,qBACTyS,IAAK9C,IAhJR,QA8IK+C,EA9IL,OAoJDJ,KAAaC,SAAS,CAACG,EAAgBC,UAEvCH,EAAcE,EAtJb,mDAwJDE,QAAQC,IAAI,mBAAqBlD,EAAO,yBAAxC,MAxJC,WA8JLC,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKxP,SAAS,CACVyR,WACAW,gBAGEM,EAAQ,IAAIhN,IACZiN,EAAQ,IAAIjN,IACTE,EAAI,EAAGA,EAAI6L,EAASA,SAASpM,OAAQO,IAC1C8M,EAAM1D,IAAIyC,EAASA,SAAS7L,GAAGU,QAASmL,EAASA,SAAS7L,GAAGU,SACzDmL,EAASA,SAAS7L,GAAGgN,OAAOhL,SAC5B+K,EAAM3D,IAAIyC,EAASA,SAAS7L,GAAGgN,OAAOhL,QAAS6J,EAASA,SAAS7L,GAAGgN,OAAOhL,SAI/EwK,IACQ9L,GADM,EACe8L,GAArB9L,QAASiM,EADJ,EACIA,QAEjBG,EAAM1D,IAAI1I,EAASA,GACfiM,IACQK,EAAWL,EAAXK,SACMA,EAAOhL,SACjB+K,EAAM3D,IAAI4D,EAAOhL,QAASgL,EAAOhL,UAK7CwE,EAAQC,KAAUC,WAClBuE,YAAiBzE,EAAD,YAAYsG,EAAMG,SAClCC,YAAiB1G,EAAD,YAAYuG,EAAME,SAhMzB,yDAnFM,wDAsRnBE,YAtRmB,qBAsRL,4CAAApJ,EAAA,yDACS,EAAK5J,MAAhBsG,OADE,uBAGN,EAAKrG,SAAS,CACVwJ,IAAK,KACLoH,cAAe,KACfN,MAAO,KACPkB,OAAQ,KACRC,SAAU,KACVW,YAAa,OATX,iCAeJY,EAAarT,KAAgBC,KAAK,CACpC,QAAS,cACTqT,SAAU,CAAE,QAAS,wBACrBnD,MAAO,KACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASvB,SAAU,MAGnCoE,EAAuBvT,KAAgBC,KAAK,CAC9C,QAAS,cACTiQ,MAAO,GACPC,MAAO,MACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASvB,SAAU,MAGnCqE,EAAuBxT,KAAgBC,KAAK,CAC9C,QAAS,oBACTgI,QAASc,KAAU0K,UACnBC,OAAO,IACRhD,MAAM,SAAAiD,MAnCC,SAqCwCnD,QAAQC,IAAI,CAC1D4C,EACAE,EACAC,IAxCM,mCAqCH3J,EArCG,KAqCEoH,EArCF,KAqCiBlB,EArCjB,KA2CV,EAAK1P,SAAS,CACVwJ,MACAoH,gBACAlB,gBACAY,MAAO,KACPkB,OAAQ,KACRC,SAAU,KACVW,YAAa,OAGXhG,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAO5C,EAAIsF,UAC5B+B,YAAiBzE,EAAOwE,EAAc9B,UAvD5B,0CAtRK,EAgVnByE,yBAA2B,SAAAnS,GACvBA,EAAMyI,kBAENlK,KAAgBC,KAAK,CACjB,QAAS,4BAGb,EAAKI,SAAS,CAAE4Q,cAAe,QAvVhB,EA0VnB4C,oBAAsB,SAACnN,EAAQqH,EAAW+F,EAAaC,GAAc,IACzDC,EAAoB,EAAK5T,MAAzB4T,gBAEJF,GACA9T,KAAgBC,KAAK,CACjB,QAAS,uBACT0G,QAASD,IAIjBsN,EAAgBtN,EAAQqH,EAAWgG,IApWpB,EAuWnBE,aAAe,WACX,IAAM5F,EAAO,EAAK6F,QAAQC,QAEtB9F,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,OAC1D,EAAKC,kBA3WM,EA+WnBC,UAAY,SAAA3C,GACR,IAAMpM,EAASoM,EAAWA,EAASA,SAASpM,OAAS,EAMrD,MAAO,CACH0M,YALe1M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAGgP,KAAO,EAMjErC,eALiB3M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAGiB,QAAU,EAMtE2L,kBALoB5M,EAAS,EAAIoM,EAASA,SAASpM,EAAS,GAAG3H,GAAK,IApXzD,EA6XnB4W,eAAiB,SAAC7C,EAAU3R,GACxB,OAAKA,GACAA,EAAO2R,SAASpM,OAEhBoM,GACAA,EAASA,SAASpM,OAEhB,CACHkP,YAAazU,EAAOyU,YACpB9C,SAAUA,EAASA,SAAS+C,OAAO1U,EAAO2R,WALxB3R,EAHF2R,GA9XL,EA0YnB0C,eA1YmB,qBA0YF,4CAAAxK,EAAA,yDACT,EAAK8K,QADI,oDAGLpO,EAAW,EAAKtG,MAAhBsG,OAEFmJ,EAAY,EAAKA,UAEfiC,EAAa,EAAKnS,MAAlBmS,SAEFG,EAAS,EAAKwC,UAAU3C,GAE9B,EAAKgD,SAAU,EACX3U,EAAS,IACTuG,EAbS,kCAcM1G,KAAgBC,KAAK,CAChC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,EAAKN,KACZmC,eAAgB,EAChBC,gBAAiBC,EAAOK,kBACxBnC,MAAO,GACP+B,OAAQ,OArBH,QAcT/R,EAdS,gDAwBMH,KAAgBC,KAAhB,IACX,QAAS,iBACTkS,UAAW,CAAE,QAAS,gBACtBjC,MAAO,EAAKN,MACTqC,EAJQ,CAKX9B,MAAO,MA7BF,QAwBThQ,EAxBS,kBAgCb,EAAK2U,SAAU,EAEfC,aAAwB5U,EAAQ2R,EAAWA,EAASA,SAAW,IAC/DS,KAAaC,SAASrS,EAAO2R,UAEzBjC,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKxP,SAAS,CACVyR,SAAU,EAAK6C,eAAe7C,EAAU3R,KAGtC4S,EAAQ,IAAIhN,IACZiN,EAAQ,IAAIjN,IACTE,EAAI,EAAGA,EAAI9F,EAAO2R,SAASpM,OAAQO,IACxC8M,EAAM1D,IAAIlP,EAAO2R,SAAS7L,GAAGU,QAASxG,EAAO2R,SAAS7L,GAAGU,SACrDxG,EAAO2R,SAAS7L,GAAGgN,OAAOhL,SAC1B+K,EAAM3D,IAAIlP,EAAO2R,SAAS7L,GAAGgN,OAAOhL,QAAS9H,EAAO2R,SAAS7L,GAAGgN,OAAOhL,SAIzEwE,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAD,YAAYsG,EAAMG,SAClCC,YAAiB1G,EAAD,YAAYuG,EAAME,SAxDrB,0CA1YE,EAqcnB8B,qBAAuB,SAAAvT,GACnBA,EAAMyI,mBAtcS,EAycnBvH,YAAc,YAGVQ,EAFoB,EAAK/C,MAAjB+C,YA1cO,EA+cnB8R,8BA/cmB,sCA+ca,WAAMvO,GAAN,eAAAsD,EAAA,wDACvBtD,EADuB,iEAGtB1G,KAAgBC,KAAK,CACvB,QAAS,0BACT0G,QAASD,IALe,UAQpBuK,EAAkB,EAAKtR,MAAvBsR,cARoB,iDAW5B,EAAK5Q,SAAS,CACV4Q,cAAc,MAAMA,EAAP,CAAsB9B,SAAU8B,EAAc9B,SAAS+C,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,QAZ9D,yCA/cb,wDA+dnBwO,oBA/dmB,sCA+dG,WAAMxO,GAAN,eAAAsD,EAAA,wDACbtD,EADa,iEAGZ1G,KAAgBC,KAAK,CACvB,QAAS,gBACT0G,QAASD,EACT4M,SAAU,CACN,QAAS,0BAPC,UAWVzJ,EAAQ,EAAKlK,MAAbkK,IAXU,iDAclB,EAAKxJ,SAAS,CACVwJ,IAAI,MAAMA,EAAP,CAAYsF,SAAUtF,EAAIsF,SAAS+C,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,QAf1C,yCA/dH,sDAGf,EAAKyO,gBAAkB,IAAIC,IAAgB,EAAKzG,eAChD,EAAKuF,QAAUjT,IAAMoU,YACrB,EAAK1V,MAAQ,GALE,E,iFAQE,IACTiQ,EAAStQ,KAAKc,MAAdwP,KAERtQ,KAAKgW,oBAAoB1F,GAEzB2F,IAAgBC,IAAIlW,KAAK6V,mB,6CAIzBI,IAAgBE,OAAOnW,KAAK6V,mB,yCAuBb3U,EAAWC,EAAWC,GAAW,IAAD,EACtBpB,KAAKc,MAAtBsG,EADuC,EACvCA,OAAQkJ,EAD+B,EAC/BA,KAEZpP,EAAUoP,OAASA,EACnBtQ,KAAKgW,oBAAoB1F,GAClBpP,EAAUkG,SAAWA,GAC5BpH,KAAKgW,oBAAoB1F,K,0CAIbA,GAChB,IAAMuB,EAAcvB,EAAOA,EAAKwB,OAAS,GAEpCD,EAGD7R,KAAKqQ,WAAWwB,GAFhB7R,KAAK8T,gB,+BA4bH,IAAD,SACiB9T,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EADX,EAEgEzD,KAAKK,MAAlEkK,EAFH,EAEGA,IAAKoH,EAFR,EAEQA,cAAeN,EAFvB,EAEuBA,MAAOkB,EAF9B,EAE8BA,OAAQC,EAFtC,EAEsCA,SAAUW,EAFhD,EAEgDA,YAE/ChL,EAAOX,KAAUjB,IAAIa,GAErBiP,EACF9L,GAAOA,EAAIsF,SACLtF,EAAIsF,SAASD,IAAI,SAAA1Q,GAAC,OACd,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACR4K,SAAU,kBAAM,EAAKyK,oBAAoBrV,EAAG,MAAM,GAAO,IACzD+L,SAAU,kBAAM,EAAK2K,oBAAoB1W,QAGjD,GAEJoX,EACF3E,GAAiBA,EAAc9B,SACzB8B,EAAc9B,SAASD,IAAI,SAAA1Q,GAAC,OACxB,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACRqG,QAAS,kBAAM,EAAKgP,oBAAoBrV,EAAG,MAAM,GAAM,IACvD+L,SAAU,kBAAM,EAAK0K,8BAA8BzW,QAG3D,GAEJqX,EAAalF,EACbA,EAAMzB,IAAI,SAAA1Q,GAAC,OACP,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACRqG,QAAS,kBAAM,EAAKgP,oBAAoBrV,EAAG,MAAM,GAAM,QAG/D,GAEA66C,EAAiB,IAAItzC,IACrBuzC,EAAcznC,EACdA,EAAO3C,IAAI,SAAA1Q,GAGP,OAFA66C,EAAehqC,IAAI7Q,EAAGA,GAGlB,kBAAC,GAAD,CACI0G,IAAK1G,EACLkI,OAAQlI,EACRqG,QAAS,kBAAM,EAAKgP,oBAAoBrV,EAAG,MAAM,GAAM,QAInE,GAEA+6C,EACF9mC,GAAeA,EAAY9L,UAAY8L,EAAYG,UAAYymC,EAAenzC,IAAIuM,EAAY9L,SAC1F,kBAAC,GAAD,CACIzB,IAAKuN,EAAY9L,QACjBD,OAAQ+L,EAAY9L,QACpB9B,QAAS,kBAAM,EAAKgP,oBAAoBpB,EAAY9L,QAAS,MAAM,GAAM,MAE7E,KAEF6yC,EAAoB,IAAIzzC,IACxB0zC,EACF3nC,GAAYA,EAASA,SACfA,EAASA,SAAS5C,IAAI,SAAA1Q,GAClB,IAAM0G,EAAG,UAAM1G,EAAEmI,QAAR,YAAmBnI,EAAET,IAG9B,OAFAy7C,EAAkBnqC,IAAInK,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACLwB,OAAQlI,EAAEmI,QACVoH,UAAWvP,EAAET,GACb66C,WAAY5zC,QAAQ0B,GACpB7B,QAAS,kBAAM,EAAKgP,oBAAoBrV,EAAEmI,QAASnI,EAAET,IAAI,GAAO,QAI5E,GAEJ27C,EACFjnC,GACAA,EAAYG,UACX4mC,EAAkBtzC,IAAlB,UAAyBuM,EAAYG,QAAQjM,QAA7C,YAAwD8L,EAAYG,QAAQ7U,KACzE,kBAAC,GAAD,CACImH,IAAG,UAAKuN,EAAYG,QAAQjM,QAAzB,YAAoC8L,EAAYG,QAAQ7U,IAC3D2I,OAAQ+L,EAAYG,QAAQjM,QAC5BoH,UAAW0E,EAAYG,QAAQ7U,GAC/B66C,YAAY,EACZ/zC,QAAS,kBACL,EAAKgP,oBAAoBpB,EAAYG,QAAQjM,QAAS8L,EAAYG,QAAQ7U,IAAI,GAAO,MAG7F,KAEJ47C,EAAQ7nC,EAAWA,EAAS8C,YAAc,EAE1CnC,GACAA,EAAYG,UACX4mC,EAAkBtzC,IAAlB,UAAyBuM,EAAYG,QAAQjM,QAA7C,YAAwD8L,EAAYG,QAAQ7U,MAE7E47C,IAGJ,IAAIC,EAAkB72C,EAAE,cAKxB,OAJI42C,IACAC,EAA4B,IAAVD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAK7jC,IAAKxW,KAAK4U,QAASvT,UAAU,SAASoV,SAAUzW,KAAK2U,cACrDxM,GACG,oCACI,yBAAK9G,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,qBAClB,yBAAKpC,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAM+F,OAAQA,EAAQ4C,YAAY,KAEtC,kBAAC0M,EAAA,EAAD,CACIrV,UAAU,sBACVgD,aAAW,SACXuH,YAAa5L,KAAKqD,aAClB,kBAACsT,EAAA,EAAD,SAIZ,yBAAKtV,UAAU,kCAGtBgV,EAASjQ,OAAS,GACf,oCACI,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,cAClB,yBAAKpC,UAAU,wBAAwBoV,SAAUzW,KAAK0V,sBAClD,yBAAKrU,UAAU,iCACdgV,EACD,yBAAKhV,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtBiV,EAAmBlQ,OAAS,GACzB,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,CAAegE,QAAS5B,EAAE,eAAgB8B,QAASvF,KAAKsU,0BACnD7Q,EAAE,WAEN6S,GAGRC,EAAWnQ,OAAS,GACjB,oCACI,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,qBACjB8S,GAEL,yBAAKlV,UAAU,kCAGtB24C,EAAY5zC,OAAS,GAClB,oCACI,yBAAK/E,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,iBACjBw2C,EACAD,GAEL,yBAAK34C,UAAU,mCAGrBmR,GAAaW,GAAeA,EAAYG,UACtC,yBAAKjS,UAAU,wBACX,kBAAC,EAAD,KAAgBi5C,GACfF,EACAD,Q,GApqBJx4C,IAAMC,WAmrBZsD,iBAAkBkK,I,UC3oBlBmrC,I,mBA1DX,WAAYz5C,GAAQ,IAAD,8BACf,4CAAMA,KAKVuO,cAAgB,SAAAlN,GACZ,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAIV,OAAQpN,EAAMyD,KACV,IAAK,SAAL,IACY/B,EAAY,EAAK/C,MAAjB+C,QACJA,IACA1B,EAAMwI,iBACNxI,EAAMyI,kBACNzI,EAAME,OAAOmN,OAEb3L,OApBZ,EAAKgS,gBAAkB,IAAIC,IAAgB,EAAKzG,eAHjC,E,gFA6BAnO,EAAWC,EAAWC,GAAW,IACxCkC,EAAStD,KAAKc,MAAdwC,KAEJpC,EAAUoC,OAASA,IACfA,EACA2S,IAAgBC,IAAIlW,KAAK6V,iBAEzBI,IAAgBE,OAAOnW,KAAK6V,oB,+BAK9B,IAAD,EACwC7V,KAAKc,MAA1C0E,EADH,EACGA,SAAUlC,EADb,EACaA,KAAMihB,EADnB,EACmBA,QAAS1gB,EAD5B,EAC4BA,QAEjC,OACI,kBAAC22C,GAAA,EAAD,CAAOC,UAAU,QAAQn0B,GAAIhjB,EAAMihB,QAASA,EAASgC,cAAY,EAACC,eAAa,GAC3E,yBAAKnlB,UAAU,gBAAgBwC,EAAUlC,IAAM+4C,aAAal1C,EAAU,CAAE3B,YAAa2B,Q,GA/C3E7D,IAAMC,YCLjBC,gBACX,0BAAMC,EAAE,yrCACR,UCFWD,gBACX,0BAAMC,EAAE,kiBACR,QCFWD,gBACX,0BAAMC,EAAE,ssFACR,UCFWD,gBACX,0BAAMC,EAAE,sbACR,Q,UCSE64C,G,2MACFt6C,MAAQ,CACJq2C,SAAU,KACVpzC,MAAM,G,EAGVmzC,eAAiB,SAAAt0C,GACb,EAAKpB,SAAS,CAAE21C,SAAUv0C,EAAMw0C,iB,EAGpCC,gBAAkB,WACd,EAAK71C,SAAS,CAAE21C,SAAU,Q,EAG9BkE,aAAe,WACX,EAAKhE,kBAEL,EAAK71C,SAAS,CAAEuC,MAAM,K,EAG1Bu3C,WAAa,WACT,EAAKx3C,cACL3C,KAAgBo6C,U,EAGpBz3C,YAAc,WACV,EAAKtC,SAAS,CAAEuC,MAAM,K,wEAGhB,IACEG,EAAMzD,KAAKc,MAAX2C,EADH,EAEsBzD,KAAKK,MAAxBq2C,EAFH,EAEGA,SAAUpzC,EAFb,EAEaA,KAElB,OACI,oCACI,kBAACoT,EAAA,EAAD,CACIuhC,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACd72C,UAAU,sBACVgD,aAAW,OACXkB,QAASvF,KAAKy2C,gBACd,kBAACsE,GAAD,OAEJ,kBAACtD,GAAA,EAAD,CACIh5C,GAAG,YACHi4C,SAAUA,EACVpzC,KAAMoC,QAAQgxC,GACd7yC,QAAS7D,KAAK42C,gBACdc,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBpsC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACK,GAAA,EAAD,CAAUxG,QAASvF,KAAK46C,cACpB,kBAAC5uC,GAAA,EAAD,KACI,kBAACgvC,GAAD,OAEJ,kBAAC9uC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,cAGjC,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBN,KAAMA,EACNO,QAAS7D,KAAKqD,YACdS,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,YACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,CAAmBrtC,MAAO,CAAEooB,WAAY,aACnCvyB,EAAE,sBAGX,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKqD,YAAaV,MAAM,WACpCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK66C,WAAYl4C,MAAM,WACnCc,EAAE,c,GAnFE9B,IAAMC,WA8FxBsD,iBAAkBy1C,ICzGlB94C,gBACX,0BAAMC,EAAE,8yBACR,QCFWD,gBACX,0BAAMC,EAAE,q7DACR,Y,UCkBEo5C,I,kNAEFvS,iBAAmB,WAAO,IACdvhC,EAAW,EAAKtG,MAAhBsG,OAEFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK0E,OAEV+7B,aAA6B,CAAExhC,Y,wEAGzB,IAAD,EAYDpH,KAAKc,MAVLsG,EAFC,EAEDA,OACAgT,EAHC,EAGDA,MACA3W,EAJC,EAIDA,EACAI,EALC,EAKDA,QACAs3C,EANC,EAMDA,cACAC,EAPC,EAODA,UACAC,EARC,EAQDA,gBACAC,EATC,EASDA,kBACAC,EAVC,EAUDA,WACAC,EAXC,EAWDA,UAEErzC,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAdb,IAgBG0E,EAAU1E,EAAV0E,MAER,OACI,oCACI,yBAAKxL,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAC9CuW,EAAQ,kBAACzD,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKtV,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAKpC,UAAU,8CACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACI+F,OAAQA,EACR6C,KAAK,EACLD,YAAY,EACZrC,mBAAmB,EACnBoC,aAAc8C,EAAQ7M,KAAK2oC,iBAAmB,QAGtD,kBAACz9B,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAAC5F,QAAS41C,GACrD,kBAACnvC,GAAA,EAAD,KACI,kBAACyvC,GAAD,OAEJ,kBAACvvC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,kBAE7B,kBAACyH,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAAC5F,QAAS61C,GACrD,kBAACpvC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,sBAE7B,kBAACyH,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAAC5F,QAAS81C,GACrD,kBAACrvC,GAAA,EAAD,KACI,kBAACqqC,GAAD,OAEJ,kBAACnqC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oBAE7B,kBAACyH,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAAC5F,QAAS+1C,GACrD,kBAACtvC,GAAA,EAAD,KACI,kBAAC0vC,GAAD,OAEJ,kBAACxvC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,sBAE7B,kBAACyH,GAAA,EAAD,CAAUyvB,WAAW,EAAOt5B,UAAU,qBAAqB8J,QAAM,EAAC5F,QAASi2C,GACvE,kBAACxvC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,cAE7B,kBAACyH,GAAA,EAAD,CAAUyvB,WAAW,EAAOt5B,UAAU,qBAAqB8J,QAAM,EAAC5F,QAASg2C,GACvE,kBAACvvC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE7B,yBAAKpC,UAAU,wBACVs6C,GAAYC,e,GAxFlBj6C,IAAMC,YA4GVsD,iBAAkBg2C,I,yCChIlBr5C,gBACX,0BAAMC,EAAE,u+DACR,Y,UCUE+5C,I,0BACF,WAAY/6C,GAAQ,IAAD,uBACf,4CAAMA,KAaVg7C,aAAe,WACX,EAAK/6C,SAAS,CACVuC,MAAM,KAhBK,EAoBnBu3C,WAAa,WACT,IAAMkB,EAAU,EAAKC,WAAWnnC,QAC3BknC,IAELA,EAAQE,mBAAmBC,OAAO,SAAAr5B,GAC9B,IAAMs5B,EAAU9Y,IAAI+Y,gBAAgBv5B,GAEpC,EAAK9hB,SAAS,CACV8hB,OACAs5B,YALkC,IAQ9BE,EAAa,EAAKv7C,MAAlBu7C,SACHA,GAELA,EAASx5B,EAAMs5B,IAChB,cAEH,EAAKL,iBAtCU,EAyCnBQ,aAAe,WACX,EAAKC,eAAe1nC,QAAQ2nC,SA1Cb,EA6CnBC,qBA7CmB,qBA6CI,0CAAA/xC,EAAA,wDAEE,KADbmX,EAAU,EAAK06B,eAAe1nC,QAA9BgN,OACEzb,OAFS,oDAIE,IAAjByb,EAAMzb,OAJS,sBAKWka,MAAM1gB,KAAKiiB,GALtB,kBAKP3U,EALO,gBAMVA,EANU,iEAQewvC,aAAcxvC,GAR7B,mCAQRW,EARQ,KAQDC,EARC,KAUf,EAAK/M,SAAS,CACVuC,MAAM,EACN4J,OACAyvC,QAAStZ,IAAI+Y,gBAAgBlvC,GAC7BW,QACAC,WAfW,QAmBnB,EAAKyuC,eAAe1nC,QAAQvS,MAAQ,GAnBjB,0CA1CnB,EAAKi6C,eAAiB56C,IAAMoU,YAC5B,EAAKimC,WAAar6C,IAAMoU,YAJT,IAMP6mC,EAAe,EAAK97C,MAApB87C,WANO,OAQf,EAAKv8C,MAAQ,CACT87C,QAASS,EACTt5C,MAAM,GAVK,E,sEAmET,IACEG,EAAMzD,KAAKc,MAAX2C,EADH,EAE6CzD,KAAKK,MAA/CiD,EAFH,EAEGA,KAAMuK,EAFT,EAESA,MAAOC,EAFhB,EAEgBA,OAAQ6uC,EAFxB,EAEwBA,QAASR,EAFjC,EAEiCA,QAFjC,EAI0CU,aAAW,CAAEhvC,QAAOC,UAAU,KAAK,GAAnEgvC,EAJV,EAIGjvC,MAAyBkvC,EAJ5B,EAIoBjvC,OAEzB,OACI,oCACI,yBAAKzM,UAAU,kBACT86C,EACE,yBAAK96C,UAAU,8BAA8BkN,IAAI,GAAGzB,IAAKqvC,EAAS52C,QAASvF,KAAKs8C,eAEhF,yBAAKj7C,UAAU,oDAAoDkE,QAASvF,KAAKs8C,cAC7E,kBAACU,GAAD,CAAc37C,UAAU,0BAIpC,2BACImV,IAAKxW,KAAKu8C,eACVl7C,UAAU,yBACVe,KAAK,OACL66C,UAAU,EACVC,OAAO,UACP34C,SAAUvE,KAAKy8C,uBAEjBn5C,GACE,kBAAC,IAAD,CACIM,mBAAoB,EACpBN,MAAM,EACNO,QAAS7D,KAAK87C,aACdh4C,kBAAgB,gBAChB,yBAAKzC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASvF,KAAK87C,cACrD,kBAACnlC,EAAA,EAAD,OAEJ,yBAAKtV,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,uBAGnD,kBAAC,IAAD,KACI,kBAAC,KAAD,CACI+S,IAAKxW,KAAKg8C,WACVlvC,IAAK6vC,EACL/uC,MAAO,CAAEE,OAAQivC,EAAWlvC,MAAOivC,EAAUK,OAAQ,eAErDC,YAAa,EACbC,SAAU,EACVC,QAAQ,KAEhB,yBAAKj8C,UAAU,8BAA8BkE,QAASvF,KAAK66C,YACvD,kBAAC0C,GAAA,EAAD,a,GAtHD57C,IAAMC,YAqIlBsD,iBAAkB22C,ICnI3B2B,I,mBACF,WAAY18C,GAAQ,IAAD,uBACf,4CAAMA,KAuEV28C,qBAxEmB,qBAwEI,oCAAA/yC,EAAA,wDACXtD,EAAW,EAAKtG,MAAhBsG,OACAihC,EAAa,EAAKhoC,MAAlBgoC,UACJqV,EAAc,EAAKC,YAAY9oC,QAAQvS,OAC3ByP,WAAW,MAAQ2rC,EAAYt3C,OAAS,IACpDs3C,EAAcA,EAAY1rC,OAAO,IAEjCq2B,IAAaqV,GAA+B,KAAhBA,EAPb,gBAQf,EAAK38C,SAAS,CACV68C,cAAe,OATJ,wCAeMl9C,KAAgBC,KAAK,CACtC,QAAS,oBACT0G,QAASD,EACTihC,SAAUqV,IAlBC,QAeT78C,EAfS,QAuBXg9C,EAAe,EAAKF,YAAY9oC,QAAQvS,OAC3ByP,WAAW,MAAQ8rC,EAAaz3C,OAAS,IACtDy3C,EAAeA,EAAa7rC,OAAO,IAEnC6rC,IAAiBH,GACjB,EAAK38C,SAAS,CACV68C,cAAe/8C,IA7BR,0CAxEJ,EA2GnBi9C,kBA3GmB,sCA2GC,WAAM1c,GAAN,iBAAA12B,EAAA,4DACRtD,EAAW,EAAKtG,MAAhBsG,OADQ,SAGV1G,KAAgBC,KAAK,CACvB,QAAS,kBACTkM,MAAO,CAAE,QAAS,gBAAiBvI,KAAM,oBAAqB88B,UALlD,OAQVj0B,EAAQC,KAAUC,WACxBC,YAAgBH,EAAO/F,GAAQ,GATf,yCA3GD,sDAGf,EAAK22C,aAAep8C,IAAMoU,YAC1B,EAAKioC,YAAcr8C,IAAMoU,YACzB,EAAKkoC,OAASt8C,IAAMoU,YACpB,EAAK4nC,YAAch8C,IAAMoU,YAEzB,IAAMiN,EAAOvZ,KAAUlD,IAAIkD,KAAU0K,WAC/B+pC,EAAez0C,KAAUlB,YAAYkB,KAAU0K,WATtC,OAWf,EAAK9T,MAAQ,CACT89C,UAAWn7B,EAAOA,EAAKo7B,WAAa,GACpCC,SAAUr7B,EAAOA,EAAKs7B,UAAY,GAClC9U,IAAK0U,EAAeA,EAAa1U,IAAM,GACvCnB,SAAUrlB,EAAOA,EAAKqlB,SAAW,GACjCuV,cAAe,MAhBJ,E,oFAqBf59C,KAAKu+C,UACLv+C,KAAKw+C,SACLx+C,KAAKy+C,gB,oCAGM,IAAD,EAC0Bz+C,KAAKK,MAAjCgoC,EADE,EACFA,SAAUuV,EADR,EACQA,cACdF,EAAc19C,KAAK29C,YAAY9oC,QAAQvS,MACvCo7C,EAAY3rC,WAAW,MAAQ2rC,EAAYt3C,OAAS,IACpDs3C,EAAcA,EAAY1rC,OAAO,IAGjCq2B,IAAaqV,GACZE,GAC0B,8BAA3BA,EAAc,UAElBl9C,KAAgBC,KAAK,CACjB,QAAS,cACT0nC,SAAUqV,M,gCAIP,IAAD,EAC0B19C,KAAKK,MAA7B89C,EADF,EACEA,UAAWE,EADb,EACaA,SACbK,EAAe1+C,KAAK+9C,aAAalpC,QAAQvS,MACzCq8C,EAAc3+C,KAAKg+C,YAAYnpC,QAAQvS,MAEzCo8C,IAAiBP,GAAaQ,IAAgBN,GAIlD39C,KAAgBC,KAAK,CACjB,QAAS,UACTy9C,WAAYM,EACZJ,UAAWK,M,+BAIT,IACEnV,EAAQxpC,KAAKK,MAAbmpC,IACFoV,EAAS5+C,KAAKi+C,OAAOppC,QAAQvS,MAC/Bs8C,IAAWpV,GAIf9oC,KAAgBC,KAAK,CACjB,QAAS,SACT6oC,IAAKoV,M,+BAmDH,IAAD,EACwB5+C,KAAKc,MAA5BsG,EADD,EACCA,OAAQ3D,EADT,EACSA,EAAGI,EADZ,EACYA,QADZ,EAEyD7D,KAAKK,MAA3D89C,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SAAU7U,EAFxB,EAEwBA,IAAKnB,EAF7B,EAE6BA,SAAUuV,EAFvC,EAEuCA,cAExCiB,GAAW,EACXC,EAAgBr7C,EAAE,YACtB,GAAIm6C,EACA,OAAQA,EAAc,UAClB,IAAK,4BACDiB,GAAW,EACXC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDD,GAAW,EACXC,EAAgB,mBAChB,MAEJ,IAAK,0CACDD,GAAW,EACXC,EAAgB,4BAM5B,IAAM32C,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KA7Bb,IA+BG0E,EAAU1E,EAAV0E,MAEFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MACnCwrB,EAAW,GACXloB,EAAOyuC,aAAwBt7C,EAAE,gBAAiB+0B,GAClDwmB,EAAgBla,aAAiB,CAAE,QAAS,gBAAiBx0B,OAAMkoB,aAEzE,OACI,oCACI,yBAAKn3B,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,kBAGnD,yBAAKpC,UAAU,wBACX,kBAAC,GAAD,CAAcu7C,WAAY9vC,EAAKuvC,SAAUr8C,KAAK89C,oBAC9C,yBAAKz8C,UAAU,qBACX,kBAAC49C,GAAA,EAAD,CACIrnC,SAAU5X,KAAK+9C,aACf18C,UAAU,qBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,aACTy7C,aAAcf,IAElB,kBAACc,GAAA,EAAD,CACIrnC,SAAU5X,KAAKg+C,YACf38C,UAAU,qBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,YACTy7C,aAAcb,IAElB,kBAACY,GAAA,EAAD,CACIrnC,SAAU5X,KAAKi+C,OACf58C,UAAU,qBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,OACTy7C,aAAc1V,IAElB,yBAAKnoC,UAAU,qBAAqBoC,EAAE,cAE1C,yBAAKpC,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAAC49C,GAAA,EAAD,CACIrnC,SAAU5X,KAAK29C,YACftpC,MAAOwqC,EACPx9C,UAAU,qBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOm6C,EACPI,aAAc7W,EACd9jC,SAAUvE,KAAKy9C,uBAEnB,yBAAKp8C,UAAU,qBACV29C,U,GAlNHr9C,IAAMC,YAqOjBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQ04C,ICnPR37C,gBACX,0BAAM4lB,KAAK,eAAemqB,SAAS,UAAU9vC,EAAE,0nBAC/C,OCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,qgCAC3B,cCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,otDAC3B,eCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,wmEAC3B,YCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,0zCAC3B,cCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,q0CAC3B,aCFWD,gBACX,0BAAM+vC,SAAS,UAAU9vC,EAAE,kgEAC3B,Q,qBCDWD,gBACX,0BAAMC,EAAE,+bACR,QCUEq9C,I,kNAEF9+C,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,EACL2xB,SAAS,G,EAGb8E,sBAAwB,SAAA7+B,GACC,EAAKrB,MAAlBmK,WAGJ9I,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAGV,EAAK7J,SAAS,CACVuJ,aAAa,EACbE,KAAMrI,EAAM0I,QACZN,IAAKpI,EAAM2I,Y,EAInBC,uBAAyB,WACrB,EAAKhK,SAAS,CACVuJ,aAAa,EACbE,KAAM,EACND,IAAK,K,EAIbS,aAAe,WACX,EAAKD,yBADY,MAGY,EAAKjK,MAA1BsG,EAHS,EAGTA,OAAQ6D,EAHC,EAGDA,SAEhBA,GAAYA,EAAS7D,I,wEAGf,IAAD,EACyCpH,KAAKc,MAA3CsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAAGrB,EADd,EACcA,KAAM85B,EADpB,EACoBA,QAAS32B,EAD7B,EAC6BA,QAD7B,EAE8BvF,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAErBzC,EAAQC,aAAaX,GAAQ,EAAM3D,GAEzC,OACI,oCACI,kBAACyH,GAAA,EAAD,CAAU7J,UAAU,sBAAsB+9C,UAAMC,EAAWl0C,QAAM,EAAC5F,QAASA,EAAS6F,cAAepL,KAAKghC,uBACpG,yBAAK3/B,UAAU,oBACX,kBAAC,KAAD,CAAU+F,OAAQA,EAAQ4F,OAAO,EAAMrF,mBAAmB,KAE9D,yBAAKtG,UAAU,uBACX,yBAAKA,UAAU,qBACVyG,GAEH1F,GACE,yBAAKf,UAAU,wBACVi+C,aAAYl4C,EAAQ3D,UAInB47C,IAAZnjB,GACE,kBAACx3B,EAAA,EAAD,CAAOrD,UAAU,uBAAuBsB,MAAM,UAAUu5B,QAASA,KAGzE,kBAAC7wB,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAKgL,cACpB,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oB,GAtF5B9B,IAAMC,YAuGhBsD,iBAAkBi6C,ICvG3BI,I,kNAEFl/C,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EAGTy2B,sBAAwB,SAAA7+B,GACC,EAAKrB,MAAlBmK,WAGJ9I,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAGV,EAAK7J,SAAS,CACVuJ,aAAa,EACbE,KAAMrI,EAAM0I,QACZN,IAAKpI,EAAM2I,Y,EAInBC,uBAAyB,WACrB,EAAKhK,SAAS,CACVuJ,aAAa,EACbE,KAAM,EACND,IAAK,K,EAIbS,aAAe,WACX,EAAKD,yBADY,IAGTE,EAAa,EAAKnK,MAAlBmK,SAERA,GAAYA,K,wEAGN,IAAD,EACkDjL,KAAKc,MAApD2C,EADH,EACGA,EAAGpC,EADN,EACMA,UAAWkkC,EADjB,EACiBA,KAAMj1B,EADvB,EACuBA,KAAM4rB,EAD7B,EAC6BA,QAAS32B,EADtC,EACsCA,QADtC,EAE8BvF,KAAKK,MAAhCiK,EAFH,EAEGA,YAAaE,EAFhB,EAEgBA,KAAMD,EAFtB,EAEsBA,IAE3B,OACI,oCACI,kBAACW,GAAA,EAAD,CAAU7J,UAAWoE,IAAWpE,EAAW,sBAAuB,oBAAqB+9C,UAAMC,EAAWl0C,QAAM,EAACS,YAAarG,EAAS6F,cAAepL,KAAKghC,uBACrJ,yBAAK3/B,UAAU,oBACVkkC,GAEL,yBAAKlkC,UAAU,uBACViP,QAES+uC,IAAZnjB,GACE,kBAACx3B,EAAA,EAAD,CAAOrD,UAAU,uBAAuBsB,MAAM,UAAUu5B,QAASA,KAGzE,kBAAC7wB,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAKgL,cACpB,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oB,GA5E5B9B,IAAMC,YA8FhBsD,iBAAkBq6C,ICtDlBC,I,mBAhDX,WAAY1+C,GAAQ,IAAD,8BACf,4CAAMA,KAED2+C,OAAS99C,IAAMoU,YAHL,E,yEAMN,IAAD,EAMJ/V,KAAKy/C,OAAO5qC,QAEhB,MAAO,CAAErK,KARD,EAEJg0B,WAMWj0B,IARP,EAGJo7B,UAKgB93B,MARZ,EAIJyxB,YAIuBxxB,OARnB,EAKJiH,gB,sCAMQzE,GACZ,IAAMovC,EAAM1/C,KAAKy/C,OAAO5qC,QACnB6qC,IAELA,EAAI9xC,MAAMsxB,QAAU5uB,K,+BAGd,IAAD,EACqCtQ,KAAKc,MAAvCykC,EADH,EACGA,KAAMj1B,EADT,EACSA,KAAMilB,EADf,EACeA,SAAUhwB,EADzB,EACyBA,QAE9B,OACI,yBAAKiR,IAAKxW,KAAKy/C,OAAQp+C,UAAWoE,IAAW,OAAQ,CAAE,gBAAiB8vB,IAAahwB,QAASA,GAC1F,yBAAKlE,UAAU,aACVkkC,GAEL,yBAAKlkC,UAAU,eACX,kBAACsV,EAAA,EAAD,CAAWtV,UAAU,sBAEzB,yBAAKA,UAAU,aAAaiP,Q,GApCzB3O,IAAMC,YCgDV+9C,I,mBA7CX,WAAY7+C,GAAQ,IAAD,8BACf,4CAAMA,KAED2+C,OAAS99C,IAAMoU,YAHL,E,yEAMN,IAAD,EAMJ/V,KAAKy/C,OAAO5qC,QAEhB,MAAO,CAAErK,KARD,EAEJg0B,WAMWj0B,IARP,EAGJo7B,UAKgB93B,MARZ,EAIJyxB,YAIuBxxB,OARnB,EAKJiH,gB,sCAMQzE,GACZ,IAAMovC,EAAM1/C,KAAKy/C,OAAO5qC,QACnB6qC,IAELA,EAAI9xC,MAAMsxB,QAAU5uB,K,+BAGd,IAAD,EACiCtQ,KAAKc,MAAnCsG,EADH,EACGA,OAAQmuB,EADX,EACWA,SAAUhwB,EADrB,EACqBA,QAE1B,OACI,yBAAKiR,IAAKxW,KAAKy/C,OAAQp+C,UAAWoE,IAAW,OAAQ,CAAE,gBAAiB8vB,IAAahwB,QAASA,GAC1F,kBAAC,KAAD,CAAU6B,OAAQA,EAAQ4F,OAAO,IACjC,yBAAK3L,UAAU,eACX,kBAACsV,EAAA,EAAD,CAAWtV,UAAU,sBAEzB,yBAAKA,UAAU,aAAaiL,aAAkBlF,S,GAlCvCzF,IAAMC,YCgBvBg+C,I,mBAEF,WAAY9+C,GAAQ,IAAD,8BACf,4CAAMA,KAaV++C,iBAAmB,SAACz4C,EAAQ04C,GAAY,IAC5BC,EAAS,EAAKj/C,MAAdi/C,KAER,GAAID,EAAQ,CACR,IAAM35C,EAAQ,EAAK8S,eAAepE,QAClC1O,EAAM+T,QACN/T,EAAM4Q,UAAY,GAClB,EAAK4B,aAAa,IAGtB,EAAKzW,aAAsB,YAAT69C,EAAqB,oBAAsB,oBAAqB34C,IAxBnE,EA0LnB44C,gBAAkB,WAAO,IAAD,EACK,EAAKl/C,MAAtB8R,EADY,EACZA,OAAQmtC,EADI,EACJA,KACRE,EAAgB,EAAK5/C,MAArB4/C,YACR,GAAKrtC,EAEL,GAAIqtC,EACA,OAAQA,GACJ,IAAK,mBACL,IAAK,uBACL,IAAK,eACL,IAAK,iBACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,mBACD,EAAK/9C,aAAa+9C,GAElB,EAAKl/C,SAAS,CACVk/C,YAAa,OAEjB,MAEJ,QACI,EAAKJ,iBAAiBI,GAEtB,EAAKl/C,SAAS,CACVk/C,YAAa,YAS7B,GADyB,YAATF,EACH,CAAC,IAENG,EAMAttC,EANAstC,iBACAC,EAKAvtC,EALAutC,qBACAC,EAIAxtC,EAJAwtC,aACAC,EAGAztC,EAHAytC,eACAC,EAEA1tC,EAFA0tC,iBACAC,EACA3tC,EADA2tC,kBAGJ,GAAIA,EAAkBn6C,OAAS,EAAG,CAC9B,IAAMo6C,EAAWD,EAAkBA,EAAkBn6C,OAAS,GAC9D,IAAKo6C,EAAU,OAEf,EAAKz/C,SAAS,CACVk/C,YAAaO,SAEVJ,EACP,EAAKr/C,SAAS,CACVk/C,YAAa,iBAEVK,EACP,EAAKv/C,SAAS,CACVk/C,YAAa,qBAEVI,EACP,EAAKt/C,SAAS,CACVk/C,YAAa,mBAEVE,EACP,EAAKp/C,SAAS,CACVk/C,YAAa,yBAEVC,GACP,EAAKn/C,SAAS,CACVk/C,YAAa,yBAGlB,CAAC,IAEAQ,EAIA7tC,EAJA6tC,cACAC,EAGA9tC,EAHA8tC,aACAC,EAEA/tC,EAFA+tC,iBACAC,EACAhuC,EADAguC,kBAGJ,GAAIA,EAAkBx6C,OAAS,EAAG,CAC9B,IAAMo6C,EAAWI,EAAkBA,EAAkBx6C,OAAS,GAC9D,IAAKo6C,EAAU,OAEf,EAAKz/C,SAAS,CACVk/C,YAAaO,SAEVG,EACP,EAAK5/C,SAAS,CACVk/C,YAAa,qBAEVS,EACP,EAAK3/C,SAAS,CACVk/C,YAAa,iBAEVQ,GACP,EAAK1/C,SAAS,CACVk/C,YAAa,oBA5RV,EAkSnB/9C,aAAe,SAACE,EAAME,IAGlBiC,EAFqB,EAAKzD,MAAlByD,UAECnC,EAAME,GAEf,EAAKvB,SAAS,CACVk/C,YAAa,QAxSF,EA4SnBtnC,aA5SmB,sCA4SJ,WAAMrI,GAAN,yBAAA5F,EAAA,wDACLkG,EAAQN,EAAKwB,OADR,uBAGP,EAAK/Q,SAAS,CACV8qC,YAAa,KACboU,YAAa,OALV,iCAULvvC,EAAW,IACRV,KACLtP,KAAgBC,KAAK,CACjB,QAAS,cACTiQ,QACAC,MAAO,OAfJ,SAkBiBK,QAAQC,IAAIT,GAlB7B,mCAkBJm7B,EAlBI,KAoBL1+B,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAO0+B,EAAYh8B,UAEpC,EAAK9O,SAAS,CAAE8qC,cAAaoU,YAAa,OAvB/B,0CA5SI,sDAGf,EAAKhnC,eAAiBtX,IAAMoU,YAC5B,EAAK8qC,aAAel/C,IAAMoU,YAC1B,EAAK+qC,SAAW,IAAIr6C,IAEpB,EAAKpG,MAAQ,CACT4/C,YAAa,KACbpU,YAAa,KACbx3B,OAAO,GAVI,E,qFA2BKnT,EAAWC,GAAY,IAAD,EACjBnB,KAAKc,MAAtB8R,EADkC,EAClCA,OAAQmtC,EAD0B,EAC1BA,KACCgB,EAAe7/C,EAAxB0R,OAER,GAAI1R,EAAU0R,SAAWA,EACrB,OAAO,KAGX,IAAMouC,EAAmB,YAATjB,EACVkB,EAAYD,EAAU9/C,EAAU0R,OAAO2tC,kBAAoBr/C,EAAU0R,OAAOguC,kBAC5E7kC,EAAQilC,EAAUpuC,EAAO2tC,kBAAoB3tC,EAAOguC,kBAEpDM,EACFD,EAAU76C,OAAS2V,EAAM3V,QACtB26C,EAAWb,mBAAqBttC,EAAOstC,kBACvCa,EAAWZ,uBAAyBvtC,EAAOutC,sBAC3CY,EAAWV,iBAAmBztC,EAAOytC,gBACrCU,EAAWT,mBAAqB1tC,EAAO0tC,kBACvCS,EAAWX,eAAiBxtC,EAAOwtC,cACnCW,EAAWL,eAAiB9tC,EAAO8tC,cACnCK,EAAWN,gBAAkB7tC,EAAO6tC,eACpCM,EAAWJ,mBAAqB/tC,EAAO+tC,iBAExCQ,EAAYnhD,KAAK6gD,aAAahsC,QAC9BusC,EAAaD,EAAUnsC,aACvBqsC,EAAmBF,EAAUpsC,aAE7BusC,EAAcH,EAAUvzC,MAAMsxB,QAC9BoH,EAAgB6a,EAAUrsC,UAC5BosC,IACAC,EAAUvzC,MAAMsxB,QAAU,MAG9B,IAAMqiB,EAAU,IAAI96C,IAjCsB,uBAkC1C,YAAgBzG,KAAK8gD,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAKzR,KAAK8gD,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAMkB,EAASlB,EAAG0D,YAClBosC,EAAQxxC,IAAInK,EAAK+M,KAtCiB,kFA0C1C,MAAO,CAAEoJ,MAAOwlC,EAASC,MAAO,CAAEN,aAAYE,aAAYC,mBAAkB/a,gBAAegb,kB,yCAG5EpgD,EAAWC,EAAWC,GACjCF,EAAU0R,SAAW5S,KAAKc,MAAM8R,QAIpC5S,KAAKyhD,aAAargD,EAASogD,S,mCAIlBpgD,GAAW,IAAD,OACnB,GAAKA,EAAL,CADmB,IAGX8/C,EAAyE9/C,EAAzE8/C,WAAYE,EAA6DhgD,EAA7DggD,WAAYC,EAAiDjgD,EAAjDigD,iBAAkB/a,EAA+BllC,EAA/BklC,cAAegb,EAAgBlgD,EAAhBkgD,YAE3DH,EAAYnhD,KAAK6gD,aAAahsC,QAE9B6sC,EAAgBP,EAAUnsC,aAI1B2sC,GAHsBR,EAAUpsC,aAGpB2sC,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAI6hD,EAHxC,KAGV,OACA1iD,sBAAsB,WAClByiD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAImiD,EAL5C,KAKN,OACAplC,WAAW,WACP,EAAKrD,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,UACxD,SAGP8kC,EAAUvzC,MAAMsxB,QAAhB,sBAXU,IAWV,OACAl/B,KAAKiZ,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,YAEpDslC,EACHD,EAfU,KAgBVP,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAI8hD,EAhBxC,KAgBV,OACA3iD,sBAAsB,WAClByiD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAImiD,EAlB5C,KAkBN,WAGJP,EAAUvzC,MAAMsxB,QAAhB,sBArBU,IAqBV,OACAiiB,EAAUrsC,UAAYwxB,GAGtB4a,GACAC,EAAUvzC,MAAMsxB,QAAUoiB,EAC1BH,EAAUrsC,UAAYwxB,GAEtBtmC,KAAKiZ,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,c,mCAKtDwlC,GAAc,IAAD,OACtB,GAAKA,EAAL,CAEA,IAAMC,EAAkB,IAAIr7C,IAHN,uBAItB,YAAgBzG,KAAK8gD,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAKzR,KAAK8gD,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAMswC,EAAgBtwC,EAAG0D,YACnB6sC,EAAaH,EAAYj7C,IAAIhB,GAAOi8C,EAAYt7C,IAAIX,GAAO,KACjE,GAAIo8C,EAAY,CACRA,EAAWx3C,KAAOu3C,EAAcv3C,MAChCs3C,EAAgB/xC,IAAI0B,EAAI,CAAEuwC,aAAYD,kBAG1C,IAAMpP,EAAS,+BAA2BqP,EAAWx3C,KAAOu3C,EAAcv3C,KAA3D,eAAsEw3C,EAAWz3C,IAAMw3C,EAAcx3C,IAArG,OACfkH,EAAGwwC,gBAAgBtP,MAfT,kFAoBtBj0C,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKoiD,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAK,EAAKqvC,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAIwsB,EAAU,mCACd,GAAI6jB,EAAgBl7C,IAAI6K,GAAK,CAAC,IAAD,EACaqwC,EAAgBv7C,IAAIkL,GAAlDuwC,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB9jB,EAAa,+BAAwB+jB,EAAWx3C,KAAOu3C,EAAcv3C,KAAOw3C,EAAWn0C,MAA1E,eAAsFm0C,EAAWz3C,IAAMw3C,EAAcx3C,IAArH,QACP,mCAGVkH,EAAGwwC,gBAAgBhkB,KAXH,kFAenB6jB,EAAgBn0C,MAErB2O,WAAW,WAAO,IAAD,uBACb,YAAewlC,EAAgBluC,OAA/B,+CAAuC,CAAC,IAA/BnC,EAA8B,QAC3BswC,EAAkBD,EAAgBv7C,IAAIkL,GAAtCswC,cACF9jB,EAAa,+BAAwB8jB,EAAcl0C,MAAtC,WACb,iCAEN4D,EAAGwwC,gBAAgBhkB,IANV,kFASbv/B,sBAAsB,WAAO,IAAD,uBACxB,YAAeojD,EAAgBluC,OAA/B,+CAAuC,CAAC,IAA/BnC,EAA8B,QAGnCA,EAAGwwC,gBAFgB,qCAFC,sFAQ7B,U,+BAgJD,IAAD,SACkEjiD,KAAKc,MAApE2C,EADH,EACGA,EAAGmP,EADN,EACMA,OAAQa,EADd,EACcA,MAAO5C,EADrB,EACqBA,MAAOkvC,EAD5B,EAC4BA,KAAMl8C,EADlC,EACkCA,QAAmB4S,GADrD,EAC2ClS,SAD3C,EACqDkS,UADrD,EAEgCzW,KAAKK,MAAlC4/C,EAFH,EAEGA,YAAapU,EAFhB,EAEgBA,YAGjBqU,EAMAttC,EANAstC,iBACAC,EAKAvtC,EALAutC,qBACAC,EAIAxtC,EAJAwtC,aACAC,EAGAztC,EAHAytC,eACAC,EAEA1tC,EAFA0tC,iBACAC,EACA3tC,EADA2tC,kBAIAE,EAIA7tC,EAJA6tC,cACAC,EAGA9tC,EAHA8tC,aACAC,EAEA/tC,EAFA+tC,iBACAC,EACAhuC,EADAguC,kBAGEI,EAAmB,YAATjB,EACVhkC,EAAQilC,EAAUT,EAAoBK,EAE5C,OACI,oCACI,yBAAKv/C,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAA8CoC,EAAZ,YAATs8C,EAAuB,gBAAqB,oBAG7F,yBAAKvpC,IAAKxW,KAAK6gD,aAAcx/C,UAAU,uBACjC2/C,GACE,oCACKd,GAAoB,kBAAC,GAAD,CAAM36C,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,mBAAoB0B,IAAQ8jB,SAA0B,qBAAhB0qB,EAAoC1a,KAAM,kBAAC,GAAD,CAAc+N,QAAQ,cAAehjC,KAAM7M,EAAE,oBAC5O08C,GAAwB,kBAAC,GAAD,CAAM56C,QAAS,kBAAM,EAAKrD,aAAa,yBAAyBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,uBAAwB0B,IAAQ8jB,SAA0B,yBAAhB0qB,EAAwC1a,KAAM,kBAAC2c,GAAD,MAAqB5xC,KAAM7M,EAAE,uBAC5O48C,GAAkB,kBAAC,GAAD,CAAM96C,QAAS,kBAAM,EAAKrD,aAAa,mBAAmBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,iBAAkB0B,IAAQ8jB,SAA0B,mBAAhB0qB,EAAkC1a,KAAM,kBAAC,GAAD,CAAY+N,QAAQ,cAAehjC,KAAM7M,EAAE,kBAClO68C,GAAoB,kBAAC,GAAD,CAAM/6C,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,mBAAoB0B,IAAQ8jB,SAA0B,qBAAhB0qB,EAAoC1a,KAAM,kBAAC,GAAD,CAAc+N,QAAQ,cAAehjC,KAAM7M,EAAE,oBAC5O28C,GAAgB,kBAAC,GAAD,CAAM76C,QAAS,kBAAM,EAAKrD,aAAa,iBAAiBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,eAAgB0B,IAAQ8jB,SAA0B,iBAAhB0qB,EAAgC1a,KAAM,kBAAC4c,GAAD,MAAc7xC,KAAM7M,EAAE,kBAG3Mu9C,GACC,oCACKP,GAAiB,kBAAC,GAAD,CAAMl7C,QAAS,kBAAM,EAAKrD,aAAa,kBAAkBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,gBAAiB0B,IAAQ8jB,SAA0B,kBAAhB0qB,EAAiC1a,KAAM,kBAAC,GAAD,CAAY+N,QAAQ,cAAehjC,KAAM7M,EAAE,iBAC9Ni9C,GAAgB,kBAAC,GAAD,CAAMn7C,QAAS,kBAAM,EAAKrD,aAAa,iBAAiBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,eAAgB0B,IAAQ8jB,SAA0B,iBAAhB0qB,EAAgC1a,KAAM,kBAAC,GAAD,CAAc+N,QAAQ,cAAehjC,KAAM7M,EAAE,gBAC5Nk9C,GAAoB,kBAAC,GAAD,CAAMp7C,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBsU,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI,mBAAoB0B,IAAQ8jB,SAA0B,qBAAhB0qB,EAAoC1a,KAAM,kBAAC4c,GAAD,MAAc7xC,KAAM7M,EAAE,qBAG7NsY,EAAMnM,IAAI,SAAA1Q,GAAC,OAAI,kBAAC,GAAD,CAAUq2B,SAAU0qB,IAAgB/gD,EAAGsX,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI7Q,EAAGuS,IAAQ7L,IAAK1G,EAAGkI,OAAQlI,EAAGqG,QAAS,kBAAM,EAAKs6C,iBAAiB3gD,QACzJ,kBAAC,GAAD,CAAa0Y,SAAU5X,KAAKiZ,eAAgBnB,KAAMrU,EAAE,UAAWI,QAAS7D,KAAKoiD,kBAAmB79C,SAAUvE,KAAK2Y,aAAczB,YAAalX,KAAKggD,mBAEnJ,yBAAK3+C,UAAU,2BAA2BuM,MAAO,CAAEy0C,OAAQ,KAC3D,yBAAK7rC,IAAKxW,KAAKsiD,UAAWjhD,UAAU,uBAAuBuM,MAAO,CAAE20C,WAAY,EAAG5nC,SAAU,WAAY7M,OAAQ,QAAU2I,SAAUA,GACjI,kBAAC,EAAD,KAAgBhT,EAAE,oBACjBu9C,GACG,oCACI,kBAAC,GAAD,CAAYz7C,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBg6B,QAASgkB,EAAkB3a,KAAM,kBAAC,GAAD,CAAclkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,oBACpL,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,yBAAyBg6B,QAASikB,EAAsB5a,KAAM,kBAAC2c,GAAD,CAAiB7gD,UAAU,4BAA6BiP,KAAM7M,EAAE,uBAC3K,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,mBAAmBg6B,QAASmkB,EAAgB9a,KAAM,kBAAC,GAAD,CAAYlkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,kBAC9K,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBg6B,QAASokB,EAAkB/a,KAAM,kBAAC,GAAD,CAAclkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,oBACpL,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,iBAAiBg6B,QAASkkB,EAAc7a,KAAM,kBAAC4c,GAAD,CAAU9gD,UAAU,4BAA6BiP,KAAM7M,EAAE,kBAG1Ju9C,GACE,oCACI,kBAAC,GAAD,CAAYz7C,QAAS,kBAAM,EAAKrD,aAAa,kBAAkBg6B,QAASukB,EAAelb,KAAM,kBAAC+Q,GAAD,CAAWj1C,UAAU,4BAA6BiP,KAAM7M,EAAE,iBACvJ,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,iBAAiBg6B,QAASwkB,EAAcnb,KAAM,kBAAC,GAAD,CAAUlkC,UAAU,4BAA6BiP,KAAM7M,EAAE,gBACpJ,kBAAC,GAAD,CAAY8B,QAAS,kBAAM,EAAKrD,aAAa,qBAAqBg6B,QAASykB,EAAkBpb,KAAM,kBAAC,GAAD,CAAclkC,UAAU,4BAA6BiP,KAAM7M,EAAE,qBAGtKgQ,GAASA,EAAMrN,OAAS,GACtB,oCACI,yBAAK/E,UAAU,+BAA+BuM,MAAO,CAAEuvC,OAAQ,cAC/D,kBAAC,EAAD,KAAgB15C,EAAE,iBACfgQ,GAAS,IAAIuyB,MAAM,EAAGn1B,GAAOjB,IAAI,SAAA1Q,GAAC,OAAI,kBAAC,GAAD,CAAYkD,MAAM,EAAMmD,QAAS,kBAAM,EAAKs6C,iBAAiB3gD,IAAI0G,IAAK1G,EAAGkI,OAAQlI,EAAGg9B,QAAkB,YAAT6jB,EAAqBQ,EAAkBrxC,SAAShQ,GAAK0hD,EAAkB1xC,SAAShQ,QAG5N2sC,GACE,yBAAKxqC,UAAU,4BACTwqC,EAAYh8B,SAASD,IAAI,SAAA1Q,GAAC,OAAI,kBAAC,GAAD,CAAYkD,MAAM,EAAMmD,QAAS,kBAAM,EAAKs6C,iBAAiB3gD,GAAG,IAAO0G,IAAK1G,EAAGkI,OAAQlI,EAAGg9B,QAAkB,YAAT6jB,EAAqBQ,EAAkBrxC,SAAShQ,GAAK0hD,EAAkB1xC,SAAShQ,c,GAzZjNyC,IAAMC,YA0arBsD,iBAAkB06C,I,8jBCpajC,IAAM4C,GAAU7gD,IAAM8gD,KAAK,kBAAM,gCAE3BC,G,YAEF,WAAY5hD,GAAQ,IAAD,8BACf,4CAAMA,KAqCV6hD,kBAtCmB,qBAsCC,oCAAAj4C,EAAA,yDACM,EAAKrK,MAAnBuiD,UADQ,iEAKN36B,EAAW,CAAE46B,MAAM,wBALb,SAOU3xC,QAAQC,IAAI8W,GAPtB,cAONvY,EAPM,iBASSwB,QAAQC,IAAIzB,EAAQE,IAAI,SAAA1Q,GAAC,OAAIA,EAAEoR,UATxC,oCASL8wB,EATK,KAWZ,EAAKrgC,SAAS,CAAEqgC,SAXJ,kDAaZ7tB,QAAQc,MAAR,MAbY,wDAtCD,EAuDnBwmC,WAAa,WAAO,IACRiI,EAAW,EAAKhiD,MAAhBgiD,OACAC,EAAe,EAAK1iD,MAApB0iD,WAEFj7C,EAAQ,EAAKk7C,SAASnuC,QAAQvS,MAAMwP,OAC1C,IAAKhK,EAKD,OAJA,EAAKk7C,SAASnuC,QAAQqF,aACtB,EAAKnZ,SAAS,CACVsT,OAAO,IAIX,EAAKtT,SAAS,CACVsT,OAAO,IAIf0uC,EAAWj7C,MAAQA,ECxGpB,SAAuB8K,GAC1B,IAAKA,EAAQ,OAAO,EADc,IAI9BstC,EAOAttC,EAPAstC,iBACAC,EAMAvtC,EANAutC,qBACAC,EAKAxtC,EALAwtC,aACAC,EAIAztC,EAJAytC,eACAC,EAGA1tC,EAHA0tC,iBACAC,EAEA3tC,EAFA2tC,kBAIJ,QAFI3tC,EADA9K,QAKGo4C,GAAoBC,GAAwBC,GAAgBC,GAAkBC,GAAoBC,EAAkBn6C,OAAS,GD2F3H68C,CAAcF,GAKnBD,GAAUA,EAAOC,GAJb,EAAK1rB,sBAAsB,qDA3EhB,EAkFnB6rB,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUvuC,QACzBsuC,GACAA,EAAOE,UAEZF,EAAOt1B,QAvFQ,EA0FnBy1B,4BAA8B,WAAO,IACzB7/C,EAAM,EAAK3C,MAAX2C,EACAs/C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB7C,kBAAkB,IAEzD,EAAKn/C,SAAS,CACVgiD,WAAYQ,IAGF,EAAKP,SAASnuC,QAAQvS,QACtBmB,EAAE,mBACZ,EAAK1C,SAAS,CACV+G,MAAO,OAxGA,EA6GnB07C,+BAAiC,WAAO,IAC5B//C,EAAM,EAAK3C,MAAX2C,EACAs/C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB5C,sBAAsB,IAE7D,EAAKp/C,SAAS,CACVgiD,WAAYQ,IAGF,EAAKP,SAASnuC,QAAQvS,QACtBmB,EAAE,sBACZ,EAAK1C,SAAS,CACV+G,MAAO,OA3HA,EAgInB27C,0BAA4B,WAAO,IACvBhgD,EAAM,EAAK3C,MAAX2C,EACAs/C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB1C,gBAAgB,IAEvD,EAAKt/C,SAAS,CACVgiD,WAAYQ,IAGF,EAAKP,SAASnuC,QAAQvS,QACtBmB,EAAE,iBACZ,EAAK1C,SAAS,CACV+G,MAAO,OA9IA,EAmJnB47C,4BAA8B,WAAO,IACzBjgD,EAAM,EAAK3C,MAAX2C,EACAs/C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBzC,kBAAkB,IAEzD,EAAKv/C,SAAS,CACVgiD,WAAYQ,IAGF,EAAKP,SAASnuC,QAAQvS,QACtBmB,EAAE,mBACZ,EAAK1C,SAAS,CACV+G,MAAO,OAjKA,EAsKnB67C,wBAA0B,WAAO,IACrBlgD,EAAM,EAAK3C,MAAX2C,EACAs/C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB3C,cAAc,IAErD,EAAKr/C,SAAS,CACVgiD,WAAYQ,IAGF,EAAKP,SAASnuC,QAAQvS,QACtBmB,EAAE,eACZ,EAAK1C,SAAS,CACV+G,MAAO,OApLA,EAyLnB87C,yBAA2B,SAAAx8C,GAAW,IAC1B27C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBxC,kBAAmBwC,EAAWxC,kBAAkB3tC,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,MAEzG,EAAKrG,SAAS,CACVgiD,WAAYQ,MAhMD,EAoMnBM,yBAA2B,WAAO,IACtBd,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBtC,eAAe,IAEtD,EAAK1/C,SAAS,CACVgiD,WAAYQ,MA3MD,EA+MnBO,wBAA0B,WAAO,IACrBf,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBrC,cAAc,IAErD,EAAK3/C,SAAS,CACVgiD,WAAYQ,MAtND,EA0NnBQ,4BAA8B,WAAO,IACzBhB,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBpC,kBAAkB,IAEzD,EAAK5/C,SAAS,CACVgiD,WAAYQ,MAjOD,EAqOnBS,yBAA2B,SAAA58C,GAAW,IAC1B27C,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBnC,kBAAmBmC,EAAWnC,kBAAkBhuC,OAAO,SAAA1T,GAAC,OAAIA,IAAMkI,MAEzG,EAAKrG,SAAS,CACVgiD,WAAYQ,MA5OD,EAgPnBU,sBAhPmB,sCAgPK,WAAMlE,GAAN,eAAAr1C,EAAA,qEACChK,KAAgBC,KAAK,CACtC,QAAS,WACTkS,UAAW,CAAE,QAAS,gBACtBiN,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO,MANS,OACdhQ,EADc,OASpB,EAAKE,SAAS,CACVmjD,iBAAiB,EACjBnE,OACAtsC,MAAO5S,EAAOgP,SACdgB,MAAO8O,OAbS,yCAhPL,wDAqTnBwkC,uBAAyB,WAErB,EAAKC,wBAEL,EAAKrjD,SAAS,CACVmjD,iBAAiB,EACjBnE,KAAM,QA3TK,EA+TnB79C,aAAe,SAACE,EAAME,GAAW,IACrBygD,EAAe,EAAK1iD,MAApB0iD,WACR,GAAKA,EAAL,CAEA,IAAIQ,EAAgB,KACpB,OAAQnhD,GACJ,IAAK,mBACDmhD,EAAa,MAAQR,EAAR,CAAoB7C,kBAAmB6C,EAAW7C,mBAC/D,MAEJ,IAAK,uBACDqD,EAAa,MAAQR,EAAR,CAAoB5C,sBAAuB4C,EAAW5C,uBACnE,MAEJ,IAAK,eACDoD,EAAa,MAAQR,EAAR,CAAoB3C,cAAe2C,EAAW3C,eAC3D,MAEJ,IAAK,iBACDmD,EAAa,MAAQR,EAAR,CAAoB1C,gBAAiB0C,EAAW1C,iBAC7D,MAEJ,IAAK,mBACDkD,EAAa,MAAQR,EAAR,CAAoBzC,kBAAmByC,EAAWzC,mBAC/D,MAEJ,IAAK,oBACD,IAAI+D,EAAUC,EACVvB,EAAWxC,kBAAkBrxC,SAAS5M,IACtC+hD,EAAWtB,EAAWxC,kBAAkB3tC,OAAO,SAAA1T,GAAC,OAAIA,IAAMoD,IAC1DgiD,EAAWvB,EAAWnC,oBAEtByD,EAAQ,sBAAQtB,EAAWxC,mBAAnB,CAAsCj+C,IAC9CgiD,EAAWvB,EAAWnC,kBAAkBhuC,OAAO,SAAA1T,GAAC,OAAIA,IAAMoD,KAG9DihD,EAAa,MACNR,EADM,CAETxC,kBAAmB8D,EACnBzD,kBAAmB0D,IAEvB,MAEJ,IAAK,gBACDf,EAAa,MAAQR,EAAR,CAAoBtC,eAAgBsC,EAAWtC,gBAC5D,MAEJ,IAAK,eACD8C,EAAa,MAAQR,EAAR,CAAoBrC,cAAeqC,EAAWrC,eAC3D,MAEJ,IAAK,mBACD6C,EAAa,MAAQR,EAAR,CAAoBpC,kBAAmBoC,EAAWpC,mBAC/D,MAEJ,IAAK,oBACD,IAAI0D,EAAUC,EACVvB,EAAWnC,kBAAkB1xC,SAAS5M,IACtCgiD,EAAWvB,EAAWnC,kBAAkBhuC,OAAO,SAAA1T,GAAC,OAAIA,IAAMoD,IAC1D+hD,EAAWtB,EAAWxC,oBAEtB+D,EAAQ,sBAAQvB,EAAWnC,mBAAnB,CAAsCt+C,IAC9C+hD,EAAWtB,EAAWxC,kBAAkB3tC,OAAO,SAAA1T,GAAC,OAAIA,IAAMoD,KAG9DihD,EAAa,MACNR,EADM,CAETxC,kBAAmB8D,EACnBzD,kBAAmB0D,IAQ1Bf,GAEL,EAAKxiD,SAAS,CACVgiD,WAAYQ,MA9YD,EAkZnBgB,kBAAoB,WAChB,IAAMz8C,EAAQ,EAAKk7C,SAASnuC,QAAQvS,MAAM0P,OAAO,EAAGwyC,MAEpD,EAAKzjD,SAAS,CACV+G,WAtZW,EA0ZnB6M,aAAe,SAAAxS,GACX,IAAMg8B,EAASh8B,EAAME,OACjB87B,EAAOrpB,UAAYqpB,EAAOppB,cAAgBopB,EAAOnpB,cACjD,EAAKjU,SAAS,CACV8P,MAAO,EAAKxQ,MAAMwQ,MAAQ8O,QA9ZnB,EAmanB0X,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,kBAAMgyB,EAAcC,KAC7B,kBAAC7gB,EAAA,EAAD,WA7aZ,EAAKqsC,SAAWrhD,IAAMoU,YACtB,EAAKqtC,UAAYzhD,IAAMoU,YAEvB,EAAK1V,MAAQ,CACTokD,cAAe,EACfrjB,KAAM,KACN8iB,iBAAiB,EACjBnE,KAAM,KACNj4C,MAAO,GACPuM,OAAO,EACPqwC,OAAO,EACPjxC,MAAO,GACP5C,MAAO,GAfI,E,iFAmCf7Q,KAAK2iD,sB,8CA8NgB,IACbl/C,EAAMzD,KAAKc,MAAX2C,EACAs/C,EAAe/iD,KAAKK,MAApB0iD,WAGR,IADc/iD,KAAKgjD,SAASnuC,QAAQvS,MACxB,CAAC,IAEL49C,EAMA6C,EANA7C,iBACAC,EAKA4C,EALA5C,qBACAC,EAIA2C,EAJA3C,aACAC,EAGA0C,EAHA1C,eACAC,EAEAyC,EAFAzC,iBACAC,EACAwC,EADAxC,kBAQAwC,EAJAtC,cAIAsC,EAHArC,aAGAqC,EAFApC,iBAEAoC,EADAnC,kBAGCL,EAAkBn6C,UACf85C,GAAqBC,GAAyBC,GAAiBC,GAAmBC,EAI1EJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,GAIlFJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,EAIhFJ,GAAqBC,IAAwBC,GAAiBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,IAAgBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,GAAiBC,IAAkBC,GACzFtgD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,oBALbzD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,kBALbzD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,gBALbzD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,eALbzD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,uBALbzD,KAAKe,SAAS,CACV+G,MAAOrE,EAAE,wB,+BA4JnB,IAAD,SAC8BzD,KAAKc,MAAhC2C,EADH,EACGA,EAAGmP,EADN,EACMA,OAAQnU,EADd,EACcA,GAAIoF,EADlB,EACkBA,QACvB,IAAK+O,EAAQ,OAAO,KAFf,MAIkF5S,KAAKK,MAApF0iD,EAJH,EAIGA,WAAY3hB,EAJf,EAIeA,KAAM8iB,EAJrB,EAIqBA,gBAAiBnE,EAJtC,EAIsCA,KAAMtsC,EAJ5C,EAI4CA,MAAO5C,EAJnD,EAImDA,MAAO/I,EAJ1D,EAI0DA,MAAOuM,EAJjE,EAIiEA,MAGlE6rC,GAPC,EAIwEwE,MASzE3B,EANA7C,kBACAC,EAKA4C,EALA5C,qBACAC,EAIA2C,EAJA3C,aACAC,EAGA0C,EAHA1C,eACAC,EAEAyC,EAFAzC,iBACAC,EACAwC,EADAxC,kBAIAE,EAIAsC,EAJAtC,cACAC,EAGAqC,EAHArC,aACAC,EAEAoC,EAFApC,iBACAC,EACAmC,EADAnC,kBAGJ,OACI,oCACI,yBAAKv/C,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAmCoC,EAAVhF,GAAM,EAAM,aAAkB,qBAE3E,kBAACiY,EAAA,EAAD,CAAYrV,UAAU,sBAAsBsB,MAAM,UAAU4C,QAASvF,KAAK66C,YACtE,kBAAC8J,GAAD,QAGR,yBAAKtjD,UAAU,wBACX,yBAAKA,UAAU,4BACT+/B,GACE,kBAAC,IAAMwjB,SAAP,CAAgBC,SAAU,MACtB,kBAACrC,GAAD,CACIhsC,IAAKxW,KAAKojD,UACV9kD,QAAS,CACLuP,MAAO,GACPC,OAAQ,GACRg3C,UAAU,EACVC,MAAM,EACNp4C,OAAQ,eACRq4C,WAAY5jB,GAEhB77B,QAASvF,KAAKkjD,yBAO9B,yBAAK7hD,UAAU,uBACX,kBAAC49C,GAAA,EAAD,CACIrnC,SAAU5X,KAAKgjD,SACf3hD,UAAU,qBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,kBACTnB,MAAOwF,EACPuM,MAAOA,EACP9P,SAAUvE,KAAKukD,qBAGvB,yBAAKljD,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,kBAClB,kBAAC,GAAD,CAAYpC,UAAU,0BAA0BkkC,KAAM,kBAAC0f,GAAD,MAAY30C,KAAM7M,EAAE,kBAAmB8B,QAAS,kBAAM,EAAK0+C,sBAAsB,cACtI/D,GAAoB,kBAAC,GAAD,CAAYj1C,SAAUjL,KAAKsjD,4BAA6B/d,KAAM,kBAAC,GAAD,CAAclkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,oBACnK08C,GAAwB,kBAAC,GAAD,CAAYl1C,SAAUjL,KAAKwjD,+BAAgCje,KAAM,kBAAC2c,GAAD,CAAiB7gD,UAAU,4BAA6BiP,KAAM7M,EAAE,uBACzJ48C,GAAkB,kBAAC,GAAD,CAAYp1C,SAAUjL,KAAKyjD,0BAA2Ble,KAAM,kBAAC,GAAD,CAAYlkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,kBAC7J68C,GAAoB,kBAAC,GAAD,CAAYr1C,SAAUjL,KAAK0jD,4BAA6Bne,KAAM,kBAAC,GAAD,CAAclkC,UAAU,0BAA0BiyC,QAAQ,cAAehjC,KAAM7M,EAAE,oBACnK28C,GAAgB,kBAAC,GAAD,CAAYn1C,SAAUjL,KAAK2jD,wBAAyBpe,KAAM,kBAAC4c,GAAD,CAAU9gD,UAAU,4BAA6BiP,KAAM7M,EAAE,gBAClI88C,EAAkB3wC,IAAI,SAAA1Q,GAAC,OACrB,kBAAC,GAAD,CAAY0G,IAAK1G,EAAGkI,OAAQlI,EAAG+L,SAAU,EAAK24C,8BAGtD,yBAAKviD,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,kBAClB,kBAAC,GAAD,CAAYpC,UAAU,6BAA6BkkC,KAAM,kBAAC,KAAD,MAAej1B,KAAM7M,EAAE,qBAAsB8B,QAAS,kBAAM,EAAK0+C,sBAAsB,cAC/IxD,GAAiB,kBAAC,GAAD,CAAYx1C,SAAUjL,KAAK6jD,yBAA0Bte,KAAM,kBAAC+Q,GAAD,CAAWj1C,UAAU,4BAA6BiP,KAAM7M,EAAE,iBACtIi9C,GAAgB,kBAAC,GAAD,CAAYz1C,SAAUjL,KAAK8jD,wBAAyBve,KAAM,kBAAC,GAAD,CAAUlkC,UAAU,4BAA6BiP,KAAM7M,EAAE,gBACnIk9C,GAAoB,kBAAC,GAAD,CAAY11C,SAAUjL,KAAK+jD,4BAA6Bxe,KAAM,kBAAC,GAAD,CAAclkC,UAAU,4BAA6BiP,KAAM7M,EAAE,oBAC9Im9C,EAAkBhxC,IAAI,SAAA1Q,GAAC,OACrB,kBAAC,GAAD,CAAY0G,IAAK1G,EAAGkI,OAAQlI,EAAG+L,SAAU,EAAK+4C,+BAI1D,kBAAC,GAAD,CAAa1gD,KAAM4gD,EAAiBrgD,QAAS7D,KAAKmkD,wBAC9C,kBAAC,GAAD,CAAiBvxC,OAAQmwC,EAAYhD,KAAMA,EAAMtsC,MAAOA,EAAO5C,MAAOA,EAAOtM,SAAUvE,KAAKkC,aAAcuU,SAAUzW,KAAK2U,oB,gDA/fzG7T,EAAOT,GAAQ,IACnCuS,EAAqB9R,EAArB8R,OAAQsyC,EAAapkD,EAAbokD,SACRT,EAAiBpkD,EAAjBokD,aAER,OAAI7xC,GAAU6xC,IAAiBS,EACpB,CACHT,aAAcS,EACdnC,WAAW,MAAKnwC,GAChB9K,MAAO8K,EAAO9K,OAIf,S,GAjCYnG,IAAMC,WAwiBlBkD,GALCC,YACZG,cACA01B,gBAGW91B,CAAQ49C,IEnjBjByC,I,kNAEF9kD,MAAQ,CACJkM,QAAQ,EACRjC,aAAa,EACbE,KAAM,EACND,IAAK,G,EAGTS,aAAe,WACX,EAAKD,yBACL,EAAKq6C,oB,EAGTA,iBAAmB,WACf,EAAKrkD,SAAS,CACVwL,QAAQ,K,EAIhB84C,kBAAoB,WAChB,EAAKtkD,SAAS,CACVwL,QAAQ,K,EAIhB+4C,mBAAqB,WACjB,EAAKD,qB,EAGTE,oBAAsB,WAAO,IACjBxqB,EAAS,EAAKj6B,MAAdi6B,KACHA,IAEL,EAAKsqB,oBAEL3kD,KAAgBC,KAAK,CACjB,QAAS,mBACT63C,eAAgBzd,EAAKt8B,O,EAI7BuiC,sBAAwB,SAAA7+B,GAChBA,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAGV,EAAK7J,SAAS,CACVuJ,aAAa,EACbE,KAAMrI,EAAM0I,QACZN,IAAKpI,EAAM2I,W,EAInBC,uBAAyB,WACrB,EAAKhK,SAAS,CACVuJ,aAAa,EACbE,KAAM,EACND,IAAK,K,wEAIH,IAAD,EAC8BvK,KAAKc,MAAhC2C,EADH,EACGA,EAAGs3B,EADN,EACMA,KAAMyqB,EADZ,EACYA,OAAQ/xC,EADpB,EACoBA,MACzB,IAAKsnB,EAAM,OAAO,KAFb,MAIsC/6B,KAAKK,MAAxCkM,EAJH,EAIGA,OAAQjC,EAJX,EAIWA,YAAaC,EAJxB,EAIwBA,IAAKC,EAJ7B,EAI6BA,KAE1B1C,EAAUizB,EAAVjzB,MACFc,EDvEP,SAA2BnF,EAAGyhD,EAAUzxC,GAC3C,IAAKA,EAAO,MAAO,IAGnB,IADA,IAAI4mC,EAAQ,EACH1zC,EAAI,EAAGA,EAAI8M,EAAM5D,SAASzJ,OAAQO,IAC0D,MAA7FyJ,aAAaqD,EAAM5D,SAASlJ,GAAI,CAAE,QAAS,iBAAkB6xC,eAAgB0M,KAC7E7K,IAIR,OAAKA,EAIY,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAHI52C,EAAE,iBC4DQgiD,CAAkBhiD,EAAGs3B,EAAKt8B,GAAIgV,GAE/C,OACI,oCACI,kBAACvI,GAAA,EAAD,CAAU7J,UAAU,sBAAsB+9C,UAAMC,EAAWl0C,QAAM,EAAC5F,QAASigD,EAAQp6C,cAAepL,KAAKghC,uBACnG,kBAAC90B,GAAA,EAAD,CACI7K,UAAU,2BACVoB,QAASqF,EACTy0B,UAAW3zB,KAGnB,kBAACyC,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAKgL,cACpB,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAIrC,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBN,KAAMiJ,EACN1I,QAAS7D,KAAK87C,aACdh4C,kBAAgB,uBAChB,kBAAC,IAAD,CAAarF,GAAG,uBAAuBgF,EAAE,YACzC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KACKx3C,EAAE,uBAGX,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKslD,mBAAoB3iD,MAAM,WAC3Cc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAKulD,oBAAqB5iD,MAAM,WAC5Cc,EAAE,c,GAzHV9B,IAAMC,YAwIZsD,iBAAkBigD,ICpJ3BO,I,kNAEFC,UAAY,WAAO,IACCC,EAAsB,EAAK9kD,MAAnC8R,OACR,GAAKgzC,EAAL,CAFc,IAINhzC,EAAWgzC,EAAXhzC,OAERlS,KAAgBC,KAAK,CACjB,QAAS,mBACTiS,a,wEAIE,IAAD,EACoC5S,KAAKc,MAAtC2C,EADH,EACGA,EAAWmiD,EADd,EACMhzC,OACX,IAAKgzC,EAAmB,OAAO,KAF1B,IAIGhzC,EAAwBgzC,EAAxBhzC,OAAQ8wB,EAAgBkiB,EAAhBliB,YAEhB,OACI,kBAACx4B,GAAA,EAAD,CACI7J,UAAU,sBACV+9C,UAAMC,EACNl0C,QAAM,GACN,kBAACe,GAAA,EAAD,CACI7K,UAAU,0BACVoB,QAASmQ,EAAO9K,MAChBy0B,UAAWmH,IAEf,kBAAChJ,GAAA,EAAD,CAAQr5B,UAAU,yBAAyBg7B,QAAQ,YAAYwpB,kBAAgB,EAACljD,MAAM,UAAU4C,QAASvF,KAAK2lD,WACzGliD,EAAE,a,GA/BS9B,IAAMC,YA2CvBsD,iBAAkBwgD,IChC3BlD,I,OAAU7gD,IAAM8gD,KAAK,kBAAM,iCAE3BrK,G,YAEF,WAAYt3C,GAAQ,IAAD,8BACf,4CAAMA,KA0BVqjB,oBAAsB,SAAAld,GAClBqV,WAAW,WACP,EAAKwpC,YACN,MA9BY,EAoEnBnD,kBApEmB,qBAoEC,oCAAAj4C,EAAA,yDACM,EAAKrK,MAAnBuiD,UADQ,iEAKN36B,EAAW,CACb46B,MAAM,uBACNA,MAAM,wBAPE,SAUU3xC,QAAQC,IAAI8W,GAVtB,cAUNvY,EAVM,iBAYSwB,QAAQC,IAAIzB,EAAQE,IAAI,SAAA1Q,GAAC,OAAIA,EAAEoR,UAZxC,oCAYL8wB,EAZK,KAcZ,EAAKrgC,SAAS,CAAEqgC,SAdJ,kDAgBZ7tB,QAAQc,MAAR,MAhBY,wDApED,EAwFnB0xC,mBAAqB,WAAO,IAChBtiD,EAAM,EAAK3C,MAAX2C,EAER,GADoB6b,GAAZ5C,QACItW,QAAU4/C,KAClB,EAAK3uB,sBAAsB5zB,EAAE,0BADjC,CAsBA,EAAK1C,SAAS,CACVklD,YAAY,EACZf,UAAW,EACXtyC,OApBW,CACX,QAAS,YACT9K,MAAO,GACPo+C,UAAW,GACXC,gBAAiB,GACjB5F,kBAAmB,GACnBK,kBAAmB,GACnBH,eAAe,EACfC,cAAc,EACdC,kBAAkB,EAClBT,kBAAkB,EAClBC,sBAAsB,EACtBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,OA9GP,EAwHnB8F,kBAAoB,WAChB,EAAKrlD,SAAS,CACVklD,YAAY,EACZf,UAAW,EACXtyC,OAAQ,QA5HG,EAgInByzC,iBAhImB,sCAgIA,WAAMtrB,GAAN,eAAArwB,EAAA,qEACMhK,KAAgBC,KAAK,CACtC,QAAS,gBACT63C,eAAgBzd,EAAKt8B,KAHV,UACTmU,EADS,wDAQf,EAAK7R,SAAS,CACVklD,YAAY,EACZf,SAAUnqB,EAAKt8B,GACfmU,WAXW,yCAhIA,wDA+InBioC,WAAa,SAAAjoC,GAAW,IACZsyC,EAAa,EAAK7kD,MAAlB6kD,SAER,EAAKkB,oBACAxzC,KAEa,IAAdsyC,EACAxkD,KAAgBC,KAAK,CACjB,QAAS,iBACT63C,eAAgB0M,EAChBtyC,WAGJlS,KAAgBC,KAAK,CACjB,QAAS,mBACTiS,aA9JO,EAmKnBswC,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUvuC,QACzBsuC,GACAA,EAAOE,UAEZF,EAAOt1B,QAxKQ,EA2KnBwJ,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,kBAAMgyB,EAAcC,KAC7B,kBAAC7gB,EAAA,EAAD,WArLZ,EAAKysC,UAAYzhD,IAAMoU,YAEvB,EAAK1V,MAAQ,CACT4lD,YAAY,EACZf,UAAW,EACXtyC,OAAQ,KACRmwC,WAAY,KACZuD,mBAAoB,KACpB7yC,MAAO,KACP8yC,WAAY,IAAI9/C,KAZL,E,iFAiBfzG,KAAK2iD,oBACL3iD,KAAK8lD,WAELxmC,GAAY7X,GAAG,oBAAqBzH,KAAKmkB,uB,6CAIzC7E,GAAY5X,IAAI,oBAAqB1H,KAAKmkB,uB,6KAUtBzjB,KAAgBC,KAAK,CACrC,QAAS,WACTkS,UAAW,CAAE,QAAS,gBACtBE,eAAgB,EAChB+M,aAAc,sBACdjP,MAAO,M,OAKX,IAVM4C,E,OAQW+yC,EAAelnC,GAAxB5C,QACFhM,EAAW,GACR/J,EAAI,EAAG6/C,GAAc7/C,EAAI6/C,EAAWpgD,OAAQO,IACjD+J,EAASV,KAAKtP,KAAgBC,KAAK,CAC/B,QAAS,gBACT63C,eAAgBgO,EAAW7/C,GAAGlI,KAC/B2S,MAAM,SAAAvF,GAAC,OAAI,Q,gBAEIqF,QAAQC,IAAIT,G,OAGlC,IAHMgM,E,OAEA6pC,EAAa,IAAI9/C,IACdE,EAAI,EAAG6/C,GAAc7/C,EAAI6/C,EAAWpgD,OAAQO,IACjD4/C,EAAWx2C,IAAIy2C,EAAW7/C,GAAGlI,GAAIie,EAAQ/V,I,iBAGZjG,KAAgBC,KAAK,CAClD,QAAS,8B,QADP2lD,E,OAINtmD,KAAKe,SAAS,CACV0S,QACA8yC,aACAD,uB,oIA8HE,IAAD,SACkBtmD,KAAKc,MAApB2C,EADH,EACGA,EAAGI,EADN,EACMA,QADN,EAEiF7D,KAAKK,MAAnFimD,EAFH,EAEGA,mBAAoBL,EAFvB,EAEuBA,WAAYrzC,EAFnC,EAEmCA,OAAQsyC,EAF3C,EAE2CA,SAAU9jB,EAFrD,EAEqDA,KAAM3tB,EAF3D,EAE2DA,MAAO8yC,EAFlE,EAEkEA,WAC/D7pC,EAAY4C,GAAZ5C,QAEF+pC,EAAa/pC,GAAWA,EAAQtW,OAAS,EACzCsgD,EAAwBJ,GACvBA,EAAmB1pC,aAAaxW,OAAS,KACvCsW,GAAWA,EAAQtW,OAAS4/C,MAErC,OACI,oCACI,yBAAK3kD,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,2BAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,4BACT+/B,GACE,kBAAC,IAAMwjB,SAAP,CAAgBC,SAAU,MACtB,kBAAC,GAAD,CACIruC,IAAKxW,KAAKojD,UACV9kD,QAAS,CACLuP,MAAO,GACPC,OAAQ,GACRg3C,UAAU,EACVC,MAAM,EACNp4C,OAAQ,UACRq4C,WAAY5jB,GAEhB77B,QAASvF,KAAKkjD,yBAM9B,yBAAK7hD,UAAU,uBAAuBoC,EAAE,wBACxC,kBAACi3B,GAAA,EAAD,CAAQr5B,UAAU,wBAAwBsB,MAAM,UAAU05B,QAAQ,YAAYwpB,kBAAgB,EAACc,UAAW,kBAAC1B,GAAD,MAAY1/C,QAASvF,KAAK+lD,oBAC/HtiD,EAAE,qBAGTgjD,GACE,oCACI,yBAAKplD,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,aAChBiZ,GAAW,IAAI9M,IAAI,SAAA1Q,GAAC,OAAK,kBAAC,GAAD,CAAQ0G,IAAK1G,EAAET,GAAIs8B,KAAM77B,EAAG0T,OAAQ2zC,EAAWhgD,IAAIrH,EAAET,IAAKgV,MAAOA,EAAO+xC,OAAQ,kBAAM,EAAKa,iBAAiBnnD,UAIjJwnD,GACE,oCACI,yBAAKrlD,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,sBACjB6iD,EAAmB1pC,aAAahN,IAAI,SAAA1Q,GAAC,OAAK,kBAAC,GAAD,CAAmB0G,IAAK1G,EAAE0T,OAAO9K,MAAO8K,OAAQ1T,SAK3G,kBAAC,GAAD,CAAaoE,KAAM2iD,EAAYpiD,QAAS7D,KAAKomD,mBACzC,kBAAC,GAAD,CAAcxzC,OAAQA,EAAQnU,GAAIymD,EAAUpC,OAAQ9iD,KAAK66C,mB,GAlQvDl5C,IAAMC,WAkRbkD,GALCC,YACZG,cACA01B,gBAGW91B,CAAQszC,ICtSRv2C,gBACX,0BAAMC,EAAE,uhCACR,Y,kBCkFW8kD,G,2MA9EXvmD,MAAQ,CACJuM,QAAQ,G,EAWZi6C,oCAAsC,SAAA5/C,GAAW,IACrC6/C,EAAc,EAAKhmD,MAAnBgmD,UACR,GAAKA,EAAL,CAF4C,IAIpCrvC,EAAaqvC,EAAbrvC,SACR,GAAKA,EAAL,CAL4C,IAOpCuhB,EAAcvhB,EAAduhB,UACR,GAAKA,EAAL,CAR4C,IAUpC9rB,EAAS8rB,EAAT9rB,KACR,GAAKA,EAAL,CAX4C,IAapCP,EAAW1F,EAAX0F,OAEJO,EAAKzO,KAAOkO,GAIhB,EAAKzF,mB,EAGTwG,WAAa,WACT,EAAK3M,SAAS,CAAE6L,QAAQ,K,EAG5B/C,YAAc,WAAO,IAAD,EACe,EAAK/I,MAA5BgmD,EADQ,EACRA,UAAWvhD,EADH,EACGA,QAEfA,GACAA,EAAQuhD,I,mFArCZ15C,KAAU3F,GAAG,oCAAqCzH,KAAK6mD,uC,6CAIvDz5C,KAAU1F,IAAI,oCAAqC1H,KAAK6mD,uC,+BAqClD,IAAD,EAC6B7mD,KAAKc,MAA/BgmD,EADH,EACGA,UAAW/Q,EADd,EACcA,WAGXt+B,GAFYzX,KAAKK,MAAjBuM,OAEak6C,EAAbrvC,UACAypB,EAA6BzpB,EAA7BypB,cAAelI,EAAcvhB,EAAduhB,UAEjBmI,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWt0B,YAAOisB,EAAYA,EAAU9rB,KAAO,MAE/CJ,EAAMu0B,GAAYF,EAExB,OACI,yBAAK9/B,UAAU,eAAekE,QAASvF,KAAK6J,aACxC,yBAAKxI,UAAU,uBAAuBuM,MAAO,CAAE2zB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,QAASulB,mBAAoB,QACvIj6C,IAAQu0B,GACL,yBAAKhgC,UAAU,4BAA4BuM,MAAO,CAAE2zB,gBAAgB,OAAD,OAASz0B,EAAT,SAGzEipC,GAAc,oCAAE,yBAAK10C,UAAU,uBAAsB,yBAAKA,UAAU,8BACpEoW,GAAYA,EAASA,UAAY,kBAACuvC,GAAA,EAAD,CAAc95C,KAAMuK,EAASA,SAAUwvC,cAAc,S,GAnEhFtlD,IAAMC,WCKxBslD,I,kNACF7mD,MAAQ,CACJ8mD,WAAY3/C,KAAUs/C,UAAYt/C,KAAUs/C,UAAUroD,IAAM,G,EAehEoL,YAAc,SAAAi9C,GACV,EAAK/lD,SAAS,CACVomD,WAAYL,EAAUroD,KAFH,IAKfgZ,EAAaqvC,EAAbrvC,SACR,GAAKA,EAAL,CAEsCA,EAA9BuhB,UARe,IAQM9rB,EAASuK,EAAnBA,SACnB,GAAKvK,EAAL,CAGA,IADYH,YAAOG,GACT,CACN,IAAMC,EAAQC,KAAUC,WACxB+5C,YAAsBj6C,EAAO25C,GAAW,GAG5CpmD,KAAgBsf,aAAa,CACzB,QAAS,6BACT8mC,iB,mFA9BJ9mD,KAAK8T,gB,oCAGM,IACHuzC,EAAgBrnD,KAAKc,MAArBumD,YACR,GAAKA,EAAL,CAEA,IAAMl6C,EAAQC,KAAUC,WACxBi6C,YAAuBn6C,EAAOk6C,EAAYA,gB,+BA0BpC,IAAD,SAC+BrnD,KAAKc,MAAjC2C,EADH,EACGA,EAAG4jD,EADN,EACMA,YAAaxjD,EADnB,EACmBA,QAChBsjD,EAAennD,KAAKK,MAApB8mD,WAEFI,EAAaF,EAAYA,YAAYz0C,OAAO,SAAA1T,GAAC,MAAwB,4BAApBA,EAAEkD,KAAK,WAE9D,OACI,oCACI,yBAAKf,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,qBAGnD,yBAAKpC,UAAU,6DACTkmD,EAAW33C,IAAI,SAAA1Q,GAAC,OAAK,kBAAC,GAAD,CAAW0G,IAAK1G,EAAET,GAAIqoD,UAAW5nD,EAAG62C,WAAY72C,EAAET,KAAO0oD,EAAY5hD,QAAS,EAAKsE,sB,GAzDjGlI,IAAMC,YAoEpBsD,iBAAkBgiD,IC/D3BM,I,mBACF,WAAY1mD,GAAQ,IAAD,8BACf,4CAAMA,KAUV2mD,iBAAmB,WACf,EAAK19B,eAAelV,QAAQvR,QAZb,EAmBnBwQ,YAAc,WACVpT,KAAgBC,KAAK,CACjB,QAAS,iBACT+mD,gBAAgB,IACjB9mD,KAAK,SAAAymD,GAAW,OAAI,EAAKtmD,SAAS,CAAEsmD,mBAvBxB,EA0BnBM,mBAAqB,WACZ,EAAKtnD,MAAMgnD,aAEhB,EAAKtmD,SAAS,CACV4mD,oBAAoB,KA9BT,EAkCnBC,oBAAsB,WAClB,EAAK7mD,SAAS,CACV4mD,oBAAoB,KAjCxB,EAAKtnD,MAAQ,CACTgnD,YAAa,KACbM,oBAAoB,GAGxB,EAAK59B,eAAiBpoB,IAAMoU,YARb,E,iFAgBf/V,KAAK8T,gB,+BAwBC,IAAD,EACkB9T,KAAKc,MAApB2C,EADH,EACGA,EAAGI,EADN,EACMA,QADN,EAEuC7D,KAAKK,MAAzCgnD,EAFH,EAEGA,YAAaM,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAKtmD,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,sBAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,wBAOX,kBAAC6J,GAAA,EAAD,CAAUyvB,WAAW,EAAOt5B,UAAU,qBAAqB8J,QAAM,EAAC5F,QAASvF,KAAKynD,kBAC5E,kBAACz7C,GAAA,EAAD,KACI,kBAAC67C,GAAD,OAEJ,kBAAC37C,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mBAIrC,kBAAC,GAAD,CAAaH,KAAMqkD,EAAoB9jD,QAAS7D,KAAK4nD,qBACjD,kBAAC,GAAD,CAAgBP,YAAaA,KAEjC,kBAAC,EAAD,CAAa7wC,IAAKxW,KAAK+pB,sB,GA1EjBpoB,IAAMC,YA0FbkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQ0iD,IC/FjBM,I,mBACF,WAAYhnD,GAAQ,IAAD,uBACf,4CAAMA,KAUVoB,aAAe,SAAAggC,GACX,EAAKnhC,SAAS,CAAEmhC,aAEhBxhC,KAAgBsf,aAAa,CAAE,QAAS,6BAA8BkiB,cAdvD,IAGPH,EAASjhC,EAATihC,KACFG,EAAWH,EAAOA,EAAKG,SAAW,KAJzB,OAMf,EAAK7hC,MAAQ,CACT6hC,SAAUA,GAAY,MAPX,E,sEAiBT,IAAD,SACkBliC,KAAKc,MAApB2C,EADH,EACGA,EAAGI,EADN,EACMA,QACHq+B,EAAaliC,KAAKK,MAAlB6hC,SAGF6lB,GAFOnP,KAAkB7d,MAAQ,CAAEitB,eAAgB,KAElCA,eAAep4C,IAAI,SAAA1Q,GAAC,OACvC,yBAAK0G,IAAK1G,EAAET,GAAI4C,UAAU,gBAAgBkE,QAAS,kBAAM,EAAKrD,aAAahD,EAAET,MACzE,kBAACiG,EAAA,EAAD,CACI/B,MAAM,UACNtB,UAAU,wBACV66B,QAASgG,IAAahjC,EAAET,GACxB21B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CAAczN,GAAG,UAAUgE,QAASvD,EAAEoF,KAAMi4B,UAAWr9B,EAAEgpD,iBAIjE,OACI,oCACI,yBAAK7mD,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,eAGnD,yBAAKpC,UAAU,wBAAwB0mD,Q,GA9ChCpmD,IAAMC,YA8DdkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQgjD,I,kkBC5DjB5sB,G,YACF,WAAYp6B,GAAQ,IAAD,uBACf,4CAAMA,KAsDVqnD,cAAgB,SAAAC,GACZ,IAAMC,EAAW,EAAKhoD,MAAM+nD,GAC5B,GAAKC,EAAL,CAFwB,IAKlBC,EAAW,MAAQD,EAAR,CAAkBE,SAAuB,IADrCF,EAAbE,SACsD,QAAqB,IAEnF,EAAKxnD,SAAL,eAAiBqnD,EAAWE,MA9Db,EAiEnBE,kBAAoB,SAAAJ,GAChB,IAAMC,EAAW,EAAKhoD,MAAM+nD,GAC5B,GAAKC,EAAL,CAF4B,IAKtBC,EAAW,MAAQD,EAAR,CAAkBI,cADVJ,EAAjBI,eAGR,EAAK1nD,SAAL,eAAiBqnD,EAAWE,MAxEb,EA2EnBI,oBAAsB,WAClB,EAAK3nD,SAAS,CAAE4nD,eAAgB,EAAKtoD,MAAMsoD,iBAzE3C,IAAMC,EAAsBtiD,KAAYC,IAAI,4CAH7B,OAKf,EAAKlG,MAAQ,CACTwoD,qBAAsBhtB,KAAkBwsB,SAAS9hD,IAAI,yCACrDuiD,mBAAoBjtB,KAAkBwsB,SAAS9hD,IAAI,uCACnDwiD,qBAAsBltB,KAAkBwsB,SAAS9hD,IAAI,yCACrDoiD,eAAgBC,IAAwBA,EAAoBtmD,OATjD,E,oFAaK,IAAD,EACuEtC,KAAKK,MAAvFwoD,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxE3oD,KAAKgpD,6BAA6B,wCAAyCH,GAC3E7oD,KAAKgpD,6BAA6B,sCAAuCF,GACzE9oD,KAAKgpD,6BAA6B,wCAAyCD,GAC3E/oD,KAAKipD,uBAAuBN,K,+CAGN,IACdA,EAAkB3oD,KAAKK,MAAvBsoD,cAEFC,EAAsBtiD,KAAYC,IAAI,8CAClBqiD,IAAwBA,EAAoBtmD,SAC7CqmD,GAEzBjoD,KAAgBC,KAAK,CACjB,QAAS,YACT2D,KAAM,2CACNhC,MAAO,CACH,QAAS,qBACTA,OAAQqmD,O,mDAKSptB,EAAO8sB,GAChC,GAAK9sB,GACA8sB,EAAL,CACA,IAAMa,EAAcrtB,KAAkBwsB,SAAS9hD,IAAIg1B,GACnD,GAAK2tB,EAAL,CAJ0C,IAMlCX,EAA2BF,EAA3BE,SAAUE,EAAiBJ,EAAjBI,aACAU,EAA6CD,EAAvDX,SAAoCa,EAAmBF,EAAjCT,aAC1BF,IAAaY,GAAcV,IAAiBW,GAEhD1oD,KAAgBC,KAAK,CACjB,QAAS,+BACT46B,MAAO,CAAE,QAASA,GAClB8tB,sBAAuBhB,Q,gCA4BrBA,GACN,QAAKA,GAIe,IAFCA,EAAbE,W,kCAKAF,GACR,QAAKA,GAEoBA,EAAjBI,e,+BAKF,IAAD,SACkBzoD,KAAKc,MAApB2C,EADH,EACGA,EAAGI,EADN,EACMA,QADN,EAEqF7D,KAAKK,MAAvFwoD,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAKtnD,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,oBAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,8BAClB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAK4iD,cAAc,0BAC7D,kBAACnsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKspD,UAAUT,GACxBz0B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,gCACX84B,UACIv8B,KAAKspD,UAAUT,GACTplD,EAAE,wBACFA,EAAE,4BAIpB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAKijD,kBAAkB,0BACjE,kBAACxsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKupD,YAAYV,GAC1Bz0B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,kBACX84B,UACIv8B,KAAKupD,YAAYV,GAAwBplD,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKpC,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,wBAClB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAK4iD,cAAc,wBAC7D,kBAACnsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKspD,UAAUR,GACxB10B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,0BACX84B,UACIv8B,KAAKspD,UAAUR,GACTrlD,EAAE,wBACFA,EAAE,4BAIpB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAKijD,kBAAkB,wBACjE,kBAACxsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKupD,YAAYT,GAC1B10B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,kBACX84B,UACIv8B,KAAKupD,YAAYT,GAAsBrlD,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAKpC,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,0BAClB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAK4iD,cAAc,0BAC7D,kBAACnsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKspD,UAAUP,GACxB30B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,4BACX84B,UACIv8B,KAAKspD,UAAUP,GACTtlD,EAAE,wBACFA,EAAE,4BAIpB,yBAAKpC,UAAU,gBAAgBkE,QAAS,kBAAM,EAAKijD,kBAAkB,0BACjE,kBAACxsB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASl8B,KAAKupD,YAAYR,GAC1B30B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,kBACX84B,UACIv8B,KAAKupD,YAAYR,GAAwBtlD,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKpC,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,uBAClB,yBAAKpC,UAAU,gBAAgBkE,QAASvF,KAAK0oD,qBACzC,kBAAC1sB,GAAA,EAAD,CACIr5B,MAAM,UACNtB,UAAU,wBACV66B,QAASysB,EACTv0B,UAAW,EACX6zB,WAAY,CAAE,kBAAmB,aAErC,kBAAC/7C,GAAA,EAAD,CACIzN,GAAG,UACHgE,QAASgB,EAAE,iBACX84B,UAA2B94B,EAAhBklD,EAAkB,uBAA4B,mC,GA9O7DhnD,IAAMC,WAkQnBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQo2B,IC9QRr5B,gBACX,uBAAG8wC,UAAU,kCAAkCf,SAAS,WACpD,0BAAM9vC,EAAE,ygBAEZ,QCOE0nD,I,kNACFnpD,MAAQ,CACJiK,aAAa,EACbE,KAAM,EACND,IAAK,G,EAGTE,kBAAoB,SAAAtI,GACZA,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAHe,IAMjB6+C,EAAY,EAAK3oD,MAAjB2oD,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwB,EAAKrpD,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,QAC1B,CACH,IAAME,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QAElB,EAAK/J,SAAS,CACVuJ,aAAa,EACbE,OACAD,U,EAKZQ,uBAAyB,SAAA5I,GACrB,EAAKpB,SAAS,CACVuJ,aAAa,EACbE,KAAM,EACND,IAAK,K,EAIbo/C,gBAAkB,SAAAxnD,GACd,EAAK4I,uBAAuB5I,GADL,MAGU,EAAKrB,OAEtC8oD,EALuB,EAGfA,aAHe,EAGFH,U,wEAKf,IAAD,EACkBzpD,KAAKc,MAApB2oD,EADH,EACGA,QAAShmD,EADZ,EACYA,EACjB,IAAKgmD,EAAS,OAAO,KAFhB,MAI8BzpD,KAAKK,MAAhCmK,EAJH,EAIGA,KAAMD,EAJT,EAISA,IAAKD,EAJd,EAIcA,YAEfo/C,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAxgC,EAMAkgC,EANAlgC,SACAygC,EAKAP,EALAO,eACAC,EAIAR,EAJAQ,GACAC,EAGAT,EAHAS,OACAC,EAEAV,EAFAU,QACAC,EACAX,EADAW,iBAEEC,GAAYX,EAElB,OACI,oCACI,kBAACx+C,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAACC,cAAepL,KAAKyK,mBAChE,yBAAKpJ,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCwoD,EAAjC,YAAqDC,IACpDO,GACG,yBAAKhpD,UAAU,gBAAgBm4C,aAAe,CAAEpkC,KAAMg1C,MAG9D,yBAAK/oD,UAAU,qBAAf,UAAuC0oD,EAAvC,aAAwDxgC,EAAxD,YAAoEygC,IACpE,yBAAK3oD,UAAU,qBAAf,UACQ4oD,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAAC9+C,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACdO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAASvF,KAAK2pD,iBACpB,kBAAC39C,GAAA,EAAD,KACI,kBAACs+C,GAAD,OAEJ,kBAACp+C,GAAA,EAAD,CAAczJ,QAASgB,EAAE,uB,GAzG/B9B,IAAMC,YAuHbsD,iBAAkBskD,IClH3Be,I,kNACFlqD,MAAQ,CACJiD,MAAM,EACNknD,SAAS,EACTf,QAAS,M,EAGbE,gBAAkB,SAAAF,GACd,EAAK1oD,SAAS,CACVuC,MAAM,EACNmmD,a,EAIRgB,wBAA0B,WACtB,EAAK1pD,SAAS,CACVypD,SAAS,K,EAIjBE,wBAA0B,WACtB,EAAK3pD,SAAS,CACVuC,MAAM,EACNmmD,QAAS,Q,EAIjBkB,uB,qBAAyB,8BAAAjgD,EAAA,wDACbkgD,EAAa,EAAK9pD,MAAlB8pD,SACAnB,EAAY,EAAKppD,MAAjBopD,QAFa,wDAKrB,EAAK1oD,SAAS,CACVuC,MAAM,EACNmmD,QAAS,OAPQ,SAUf/oD,KAAgBC,KAAK,CACvB,QAAS,mBACTkqD,WAAYpB,EAAQhrD,KAZH,OAerBmsD,EAASA,SAAWA,EAASA,SAASh4C,OAAO,SAAA1T,GAAC,OAAIA,EAAET,KAAOgrD,EAAQhrD,KACnE,EAAKyI,cAhBgB,yC,EAmBzB4jD,2BAA6B,WACzB,EAAK/pD,SAAS,CACVypD,SAAS,K,EAIjBO,0B,qBAA4B,4BAAArgD,EAAA,4DAChBkgD,EAAa,EAAK9pD,MAAlB8pD,SAER,EAAK7pD,SAAS,CACVypD,SAAS,IAJW,SAOlB9pD,KAAgBC,KAAK,CACvB,QAAS,8BARW,OAWxBiqD,EAASA,SAAWA,EAASA,SAASh4C,OAAO,SAAA1T,GAAC,OAAKA,EAAEwqD,aACrD,EAAKxiD,cAZmB,yC,wEAelB,IAAD,SAC4BlH,KAAKc,MAA9B2C,EADH,EACGA,EAAGmnD,EADN,EACMA,SAAU/mD,EADhB,EACgBA,QADhB,EAEqB7D,KAAKK,MAAvBiD,EAFH,EAEGA,KAAMknD,EAFT,EAESA,QAER31C,EAAU+1C,EAASA,SAASliD,KAAK,SAAAxJ,GAAC,OAAIA,EAAEwqD,aACxCsB,EAAQJ,EAASA,SAASh4C,OAAO,SAAA1T,GAAC,OAAKA,EAAEwqD,aAE/C,OACI,oCACI,yBAAKroD,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,oBAGnD,yBAAKpC,UAAU,wBACVqE,QAAQmP,IACL,yBAAKxT,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,mBAClB,kBAAC,GAAD,CAASgmD,QAAS50C,EAAS+0C,YAAa5pD,KAAK2pD,kBAC5CqB,EAAM5kD,OAAS,GACZ,kBAAC8E,GAAA,EAAD,CACI7J,UAAU,qBACV8J,QAAM,EACNgxB,eAAa,EACb52B,QAASvF,KAAKyqD,yBACd,kBAACz+C,GAAA,EAAD,KACI,kBAACs+C,GAAD,CAAU3nD,MAAM,eAEpB,kBAACuJ,GAAA,EAAD,CACI++C,uBAAwB,CAAEtoD,MAAO,aACjCF,QAASgB,EAAE,4BAM9BunD,EAAM5kD,OAAS,GACZ,oCACI,yBAAK/E,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,EAAD,KAAgBoC,EAAE,kBACjBunD,EAAMp7C,IAAI,SAAA1Q,GAAC,OACR,kBAAC,GAAD,CAAS0G,IAAK1G,EAAET,GAAIgrD,QAASvqD,EAAG0qD,YAAa,EAAKD,uBAMtE,kBAAC,IAAD,CACIjmD,QAASC,IACTC,mBAAoB,EACpBN,KAAMA,EACNO,QAAS7D,KAAK0qD,wBACd5mD,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,YACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,CAAmBrtC,MAAO,CAAEooB,WAAY,aACnCvyB,EAAE,0BAGX,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAK0qD,wBAAyB/nD,MAAM,WAChDc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK2qD,uBAAwBhoD,MAAM,WAC/Cc,EAAE,SAIf,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBN,KAAMknD,EACN3mD,QAAS7D,KAAK8qD,2BACdhnD,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,YACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,CAAmBrtC,MAAO,CAAEooB,WAAY,aACnCvyB,EAAE,wBAGX,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAK8qD,2BAA4BnoD,MAAM,WACnDc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK+qD,0BAA2BpoD,MAAM,WAClDc,EAAE,c,GA5JF9B,IAAMC,YAgLpBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQylD,IChMR1oD,gBACX,0BAAMC,EAAE,81BACR,WCgBEopD,I,OAAcvpD,IAAMwpD,KAAK,YAAqC,IAAlCpjB,EAAiC,EAAjCA,OAAQxiC,EAAyB,EAAzBA,QAAS6lD,EAAgB,EAAhBA,UAAgB,EACzBzpD,IAAMunB,UAAS,GADU,mBACxD5e,EADwD,KAC3C+gD,EAD2C,OAEzC1pD,IAAMunB,SAAS,GAF0B,mBAExD3e,EAFwD,KAEnD+gD,EAFmD,OAGvC3pD,IAAMunB,SAAS,GAHwB,mBAGxD1e,EAHwD,KAGlD+gD,EAHkD,KAIvD9nD,EAAM+nD,cAAN/nD,EAmBFsH,EAAyB,WAC3BsgD,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAACpgD,GAAA,EAAD,CAAU7J,UAAU,qBAAqB8J,QAAM,EAAC5F,QAXpC,WAChBA,EAAQwiC,IAUkE38B,cAlCpD,SAAAjJ,GAMtB,GALIA,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAGNN,EACA+gD,GAAe,OACZ,CAAC,IACIxgD,EAAqB1I,EAArB0I,QAASC,EAAY3I,EAAZ2I,QAEjBugD,GAAe,GACfE,EAAQ1gD,GACRygD,EAAOxgD,MAsBH,kBAACg9B,GAAA,EAAD,CAAMC,OAAQA,KAElB,kBAAC18B,GAAA,EAAD,CACI/H,KAAMgH,EACNzG,QAASkH,EACTO,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKC,QACvBgB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBACtB,kBAACmB,GAAA,EAAD,CAAUxG,QAzBJ,WAClBwF,IACAqgD,EAAUrjB,KAwBM,kBAAC/7B,GAAA,EAAD,KACI,kBAACy/C,GAAD,OAEJ,kBAACv/C,GAAA,EAAD,CAAczJ,QAASgB,EAAE,oBAc3CioD,G,2MAeFC,kB,sCAAoB,WAAM5jB,GAAN,SAAAr9B,EAAA,qEACVhK,KAAgBC,KAAK,CACxB,QAAS,+BACRgT,OAAQ,CAAE,QAAS,oBAAqBhL,QAASo/B,GACjD6jB,YAAY,IAJA,yC,yIAZhB5rD,KAAK8T,gB,oCAGM,IACHJ,EAAU1T,KAAKc,MAAf4S,MAEFvG,EAAQC,KAAUC,WAExBwG,YAAiB1G,EAAOuG,EAAMm4C,QAAQj5C,OAAO,SAAA1T,GAAC,MAAmB,sBAAfA,EAAE,WAAkC0Q,IAAI,SAAA1Q,GAAC,OAAIA,EAAEyJ,WACjGiJ,YAAiBzE,EAAOuG,EAAMm4C,QAAQj5C,OAAO,SAAA1T,GAAC,MAAmB,sBAAfA,EAAE,WAAkC0Q,IAAI,SAAA1Q,GAAC,OAAIA,EAAEmI,a,+BAW3F,IAAD,SACyBrH,KAAKc,MAA3B+C,EADH,EACGA,QAAS6P,EADZ,EACYA,MAAOjQ,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAKpC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,mBAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,wBACTqS,EAAMm4C,QAAQzlD,OAAS,EACrB,oCACI,kBAAC,EAAD,CAAed,WAAS,GAAE7B,EAAE,qBAExBiQ,EAAMm4C,QAAQj5C,OAAO,SAAA1T,GAAC,MAAmB,sBAAfA,EAAE,WAAkC0Q,IAAI,SAAA1Q,GAAC,OAAI,kBAACgsD,GAAD,CAAatlD,IAAK1G,EAAEyJ,QAASo/B,OAAQ7oC,EAAEyJ,QAASpD,QAAS0hC,KAAUmkB,UAAW,EAAKO,uBAIlK,kBAAC,EAAD,KAAgBloD,EAAE,qB,GA9CnB9B,IAAMC,WA2DlBsD,iBAAkBwmD,ICzJlB7pD,gBACX,uBAAG8wC,UAAU,iCAAiCf,SAAS,WACnD,0BAAM9vC,EAAE,q3BAEZ,UCJWD,gBACX,uBAAG8wC,UAAU,kCAAkCf,SAAS,WACpD,0BAAM9vC,EAAE,2mCAEZ,gB,kkBCaEgqD,G,2MACFzrD,MAAQ,CACJuqD,SAAU,KACVl3C,MAAO,KACPq4C,kBAAkB,EAClBC,oBAAoB,G,EAaxBhjD,qBAAuB,SAAA/B,GAAW,IACtB0B,EAA4B1B,EAA5B0B,QAASsjD,EAAmBhlD,EAAnBglD,eACTv4C,EAAU,EAAKrT,MAAfqT,MACR,GAAKA,EAAL,CAH6B,IAKrB4B,EAAyB5B,EAAzB4B,YAAau2C,EAAYn4C,EAAZm4C,QACbD,EAAeK,EAAfL,WAEJA,MADqE,IAAnDC,EAAQxtC,UAAU,SAAAnf,GAAC,OAAIA,EAAEyJ,UAAYA,OAGvDijD,EACA,EAAK7qD,SAAS,CACV2S,MAAM,MACCA,EADF,CAED4B,YAAaA,EAAc,EAC3Bu2C,QAAQ,CAAE,CAAE,QAAS,oBAAqBljD,YAAnC,mBAAiDkjD,QAIhE,EAAK9qD,SAAS,CACV2S,MAAM,MACCA,EADF,CAED4B,YAAaA,EAAc,EAC3Bu2C,QAASA,EAAQj5C,OAAO,SAAA1T,GAAC,OAAIA,EAAEyJ,UAAYA,W,EAkB3DqjD,mBAAqB,WACZ,EAAK3rD,MAAMuqD,UAEhB,EAAK7pD,SAAS,CACVirD,oBAAoB,K,EAI5BE,oBAAsB,WAClB,EAAKnrD,SAAS,CACVirD,oBAAoB,K,EAI5BD,iBAAmB,WACV,EAAK1rD,MAAMqT,OAEhB,EAAK3S,SAAS,CACVgrD,kBAAkB,K,EAI1BI,kBAAoB,WAChB,EAAKprD,SAAS,CACVgrD,kBAAkB,K,mFA1EtB/rD,KAAK8T,cAELrK,KAAUhC,GAAG,qBAAsBzH,KAAKgJ,wB,6CAIxCS,KAAU/B,IAAI,qBAAsB1H,KAAKgJ,wB,uJAiCzCtI,KAAgBC,KAAK,CACjB,QAAS,sBACVC,KAAK,SAAAgqD,GAAQ,OAAI,EAAK7pD,SAAS,CAAE6pD,eAEpClqD,KAAgBC,KAAK,CACjB,QAAS,2BACTgS,OAAQ,EACR9B,MAAO,MACRjQ,KAAK,SAAA8S,GAAK,OAAI,EAAK3S,SAAS,CAAE2S,Y,8HA+B3B,IAAD,EACkB1T,KAAKc,MAApB2C,EADH,EACGA,EAAGI,EADN,EACMA,QADN,EAE6D7D,KAAKK,MAA/D0rD,EAFH,EAEGA,iBAAkBr4C,EAFrB,EAEqBA,MAAOs4C,EAF5B,EAE4BA,mBAAoBpB,EAFhD,EAEgDA,SAE/CwB,EACFxB,GAAYA,EAASA,SAASxkD,OAAS,EACJ,IAA7BwkD,EAASA,SAASxkD,OACd,YADJ,UAEOwkD,EAASA,SAASxkD,OAFzB,aAGA,YAEJimD,EACF34C,GAASA,EAAM4B,YAAc,EACD,IAAtB5B,EAAM4B,YACF,SADJ,UAEO5B,EAAM4B,YAFb,UAGA,WAEV,OACI,oCACI,yBAAKjU,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAAS1B,GAChD,kBAAC,GAAD,OAEJ,yBAAKxC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,sBAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC6J,GAAA,EAAD,CACI7J,UAAU,sBACV+9C,UAAMC,EACNl0C,QAAM,EACN5F,QAASvF,KAAK+rD,kBACd,kBAAC//C,GAAA,EAAD,CAAc3K,UAAU,2BACpB,kBAACirD,GAAD,OAEJ,kBAACpgD,GAAA,EAAD,CACIzN,GAAG,UACH4C,UAAU,0BACVoB,QAASgB,EAAE,gBACX84B,UAAW8vB,KAGnB,kBAACnhD,GAAA,EAAD,CACI7J,UAAU,sBACV+9C,UAAMC,EACNl0C,QAAM,EACN5F,QAASvF,KAAKgsD,oBACd,kBAAChgD,GAAA,EAAD,CAAc3K,UAAU,2BACpB,kBAACkrD,GAAD,OAEJ,kBAACrgD,GAAA,EAAD,CACIzN,GAAG,UACH4C,UAAU,0BACVoB,QAASgB,EAAE,iBACX84B,UAAW6vB,OA4C3B,kBAAC,GAAD,CAAa9oD,KAAMyoD,EAAkBloD,QAAS7D,KAAKmsD,mBAC/C,kBAAC,GAAD,CAAcz4C,MAAOA,KAEzB,kBAAC,GAAD,CAAapQ,KAAM0oD,EAAoBnoD,QAAS7D,KAAKksD,qBACjD,kBAAC,GAAD,CAAgBtB,SAAUA,U,GAhMhBjpD,IAAMC,WAiNrBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQgnD,ICjNjBU,I,mBACF,WAAY1rD,GAAQ,IAAD,8BACf,4CAAMA,KAsBVmM,kBAAoB,SAAAhG,GAAW,IACnBG,EAAW,EAAKtG,MAAhBsG,OACAC,EAAmBJ,EAAnBI,QAASwF,EAAU5F,EAAV4F,MAEjB,GAAIxF,IAAYD,GACXyF,EAAL,CAEA,IAAMM,EAAQC,KAAU7G,MACxB+G,YAAgBH,EAAO/F,GAAQ,KA/BhB,EAiDnBqlD,gBAAkB,WACd,EAAK1rD,SAAS,CACV0rD,iBAAiB,KAnDN,EAuDnBC,iBAAmB,WACf,EAAK3rD,SAAS,CACV0rD,iBAAiB,KAzDN,EA6DnBE,YAAc,WACV,EAAK5rD,SAAS,CACV4rD,aAAa,KA/DF,EAmEnBC,aAAe,WACX,EAAK7rD,SAAS,CACV4rD,aAAa,KArEF,EAyEnBE,kBAAoB,WAChB,EAAK9rD,SAAS,CACV8rD,mBAAmB,KA3ER,EA+EnBC,mBAAqB,WACjB,EAAK/rD,SAAS,CACV8rD,mBAAmB,KAjFR,EAqFnBE,oBAAsB,WAClB,EAAKhsD,SAAS,CACVgsD,qBAAqB,KAvFV,EA2FnBC,qBAAuB,WACnB,EAAKjsD,SAAS,CACVgsD,qBAAqB,KA7FV,EAiGnBE,aAAe,WACX,EAAKlsD,SAAS,CACVksD,cAAc,KAnGH,EAuGnBC,cAAgB,WACZ,EAAKnsD,SAAS,CACVksD,cAAc,KAzGH,EA6GnBE,YAAc,WACV,EAAKpsD,SAAS,CACVosD,aAAa,KA/GF,EAmHnBC,aAAe,WACX,EAAKrsD,SAAS,CACVosD,aAAa,KArHF,EAyHnBE,oBAAsB,WAClB3sD,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KAzHV,EAAKjD,MAAQ,CACTosD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,EACdE,aAAa,GATF,E,iFAcfntD,KAAK8T,cAELtM,KAAUC,GAAG,kBAAmBzH,KAAKiN,qB,6CAIrCzF,KAAUE,IAAI,kBAAmB1H,KAAKiN,qB,6JAe9B7F,EAAWpH,KAAKc,MAAhBsG,OAEF+F,EAAQC,KAAUC,WAExBC,YAAgBH,EAAO/F,GAAQ,G,SAEV1G,KAAgBC,KAAK,CACtC,QAAS,kBACTgI,QAASc,KAAU0K,Y,OAFjBtT,E,OAKN4I,KAAU6jD,YAAY7jD,KAAU0K,UAAWtT,G,mIAkFrC,IAAD,EACqBb,KAAKc,MAAvBsG,EADH,EACGA,OAAQgT,EADX,EACWA,MADX,EAEuGpa,KAAKK,MAAzGosD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAAcE,EAFvF,EAEuFA,YAE5F,OACI,oCACI,kBAAC,GAAD,CACI/lD,OAAQA,EACRgT,MAAOA,EACPvW,QAAS7D,KAAKqtD,oBACdlS,cAAen7C,KAAKysD,gBACpBrR,UAAWp7C,KAAK2sD,YAChBtR,gBAAiBr7C,KAAK6sD,kBACtBvR,kBAAmBt7C,KAAK+sD,oBACxBxR,WAAYv7C,KAAKitD,aACjBzR,UAAWx7C,KAAKmtD,cAEpB,kBAAC,GAAD,CAAa7pD,KAAMmpD,EAAiB5oD,QAAS7D,KAAK0sD,kBAC9C,kBAAC,GAAD,CAAatlD,OAAQA,KAEzB,kBAAC,GAAD,CAAa9D,KAAMqpD,EAAa9oD,QAAS7D,KAAK4sD,cAC1C,kBAAC,GAAD,CAASxlD,OAAQA,KAErB,kBAAC,GAAD,CAAa9D,KAAMupD,EAAmBhpD,QAAS7D,KAAK8sD,oBAChD,kBAAC,GAAD,CAAe1lD,OAAQA,KAE3B,kBAAC,GAAD,CAAa9D,KAAMypD,EAAqBlpD,QAAS7D,KAAKgtD,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAa1pD,KAAM6pD,EAAatpD,QAAS7D,KAAKotD,cAC1C,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAa9pD,KAAM2pD,EAAcppD,QAAS7D,KAAKktD,eAC3C,kBAAC,GAAD,Y,GAlKGvrD,IAAMC,YAoLdkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQ0nD,ICrLjBe,I,qMACoBjmD,EAAWC,EAAWmU,GAAc,IAAD,EAC3B1b,KAAKc,MAAvBinC,EAD6C,EAC7CA,OAAQn6B,EADqC,EACrCA,MAChB,OAAItG,EAAUygC,SAAWA,GAIrBzgC,EAAUsG,MAAMrD,MAAQqD,EAAMrD,M,+BAO5B,IAAD,EAC8BvK,KAAKc,MAAhCinC,EADH,EACGA,OAAQxiC,EADX,EACWA,QAASqI,EADpB,EACoBA,MAEzB,OACI,kBAAC1C,GAAA,EAAD,CAAU7J,UAAU,iBAAiBkE,QAAS,kBAAMA,EAAQwiC,IAAS58B,QAAM,EAACyC,MAAOA,GAC/E,kBAACk6B,GAAA,EAAD,CAAMC,OAAQA,S,GAnBHpmC,IAAMC,YA+LlB4rD,G,YArKX,WAAY1sD,GAAQ,IAAD,8BACf,4CAAMA,KAwBV6T,aAAe,SAAAxS,GACX,EAAKsrD,uBACL,EAAKC,wBA3BU,EAsCnBC,qBAAuB,WAAO,IAAD,EACM,EAAKttD,MAA5B0b,EADiB,EACjBA,MAAO8vB,EADU,EACVA,YAET+hB,EAAe/hB,GAAe9vB,EAE5BlH,GAAY+4C,IAAiB/hB,EAAc,EAAKJ,cAAgB,EAAK72B,SAArEC,QACR,GAAKA,EAAL,CAEA,IAAMsG,EAAYtG,EAAQg5C,mBAC1B,GAAI1yC,EAAUxN,KAAO,EAAG,CACpB,IAAMmgD,EAAU,GAChB,YAAI3yC,EAAUvH,QAAQjU,QAAQ,SAAAiG,GAC1BkoD,EAAQ99C,KAAK49C,EAAa7rC,SAASnc,MAGvC,IAAMuH,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAO2gD,MAtDb,EA4EnBhlB,eAAiB,SAAAf,GACbd,aAASc,GAAQ,GACjB,EAAK1kC,eA9EU,EAiFnByY,WAAa,WAAmBC,GAAW,IAA3BxB,EAA0B,EAA1BA,MAAO3M,EAAmB,EAAnBA,MACbm6B,EAAShsB,EAAMgG,SAASxH,GAE9B,OAAO,kBAAC,GAAD,CAAc3U,IAAKmiC,EAAQA,OAAQA,EAAQxiC,QAAS,kBAAM,EAAKujC,eAAef,IAASn6B,MAAOA,KApFtF,EAuFnB+K,aAvFmB,sCAuFJ,WAAMrI,GAAN,mBAAA5F,EAAA,wDACLkG,EAAQN,EAAKwB,OADR,uBAGP,EAAK/Q,SAAS,CACV8qC,YAAa,OAJV,0CASenrC,KAAgBC,KAAK,CAC3C,QAAS,iBACTiQ,QACAC,MAAO,MAZA,QASLg7B,EATK,QAcC9pB,SAAW8pB,EAAY9pB,SAAS9R,KAAK,SAAC/Q,EAAG2qC,GAAJ,OAC7CkkB,aAAgB7uD,GAAG8uD,cAAcD,aAAgBlkB,MAG/C18B,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAO0+B,EAAY9pB,SAASikB,MAAM,EAAG,KAEtD,EAAKjlC,SAAS,CAAE8qC,gBArBL,0CAvFI,wDA+GnBxoC,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KA/GV,EAAK2V,eAAiBtX,IAAMoU,YAC5B,EAAKnB,QAAUjT,IAAMoU,YACrB,EAAK01B,cAAgB9pC,IAAMoU,YAE3B,EAAK1V,MAAQ,CACT0b,MAAO,KACP8vB,YAAa,MAGjB,EAAK4hB,qBAAuB9rC,aAAS,EAAK8rC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBluB,aAAS,EAAKkuB,qBAAsB,KAAK,GAbtD,E,iFAgBE,IACT74C,EAAY7U,KAAKiZ,eAAjBpE,QACJA,GACAyH,WAAW,kBAAMzH,EAAQqF,SAAS,IAGtCla,KAAK8T,gB,6CASL9T,KAAK2tD,yB,6CAIL3tD,KAAK2tD,yB,uJAwBDrsC,EAAW4E,GAAW5E,S,gCAEL5gB,KAAgBC,KAAK,CAClC,QAAS,gB,QADb2gB,E,QAGSS,SAAWT,EAASS,SAAS9R,KAAK,SAAC/Q,EAAG2qC,GAAJ,OAAUkkB,aAAgB7uD,GAAG8uD,cAAcD,aAAgBlkB,MACtG3jB,GAAW5E,SAAWA,E,OAGpBnU,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAOmU,EAASS,SAASikB,MAAM,EAAG,KAEnDhmC,KAAKe,SAAS,CACVgb,MAAOuF,I,oIA8CL,IAAD,OACGlH,EAAUpa,KAAKc,MAAfsZ,MADH,EAE0Bpa,KAAKK,MAA5B0b,EAFH,EAEGA,MAAO8vB,EAFV,EAEUA,YAETj+B,EAAQwM,EAAQ,CAAEqwB,UAAW,KAAQ,KAE3C,OACI,oCACI,yBAAKppC,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASvF,KAAKqD,aACnD+W,EAAQ,kBAACzD,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,kBAAC,GAAD,CAAaiB,SAAU5X,KAAKiZ,eAAgB1U,SAAUvE,KAAK2Y,gBAE/D,yBAAKtX,UAAU,mBAAmBuM,MAAOA,GACpCmO,GACG,kBAAC,GAAD,CACIvF,IAAKxW,KAAK4U,QACVvT,UAAU,gBACVG,OAAQua,EAAMgG,SACdzG,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG6c,IACpCtF,SAAUzW,KAAK2U,eAGtBk3B,GACG,kBAAC,GAAD,CACIr1B,IAAKxW,KAAKyrC,cACVpqC,UAAU,qCACVG,OAAQqqC,EAAY9pB,SACpBzG,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG2sC,IACpCp1B,SAAUzW,KAAK2U,qB,GAzJpBhT,IAAMC,W,SCpCvBqsD,I,mBACF,WAAYntD,GAAQ,IAAD,uBACf,4CAAMA,KAoBVujB,wBAA0B,SAAApd,GAAW,IACzBqd,EAAiBrd,EAAjBqd,aAER,EAAKvjB,SAAS,CAAEujB,kBAxBD,EA2BnB4pC,kCAAoC,WAChC,EAAKntD,SAAS,CAAEotD,qBAAqB,KA5BtB,EA+BnBC,aAAe,WACP,EAAKhjC,UAET,EAAKA,SAAU,EACf9O,WAAW,WACPxC,OAAOu0C,SAASC,UACjB,OArCY,IAGPhqC,EAAiBjL,IAAjBiL,aAHO,OAKf,EAAKjkB,MAAQ,CACT8tD,qBAAqB,EACrB7pC,gBAPW,E,iFAYfjL,IAAS5R,GAAG,kCAAmCzH,KAAKkuD,mCACpD70C,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,2B,6CAI1ChL,IAAS3R,IAAI,kCAAmC1H,KAAKkuD,mCACrD70C,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,2B,+BAsBrC,IAAD,EACyCrkB,KAAKK,MAA3C8tD,EADH,EACGA,oBAAqB7pC,EADxB,EACwBA,aACrB7gB,EAAMzD,KAAKc,MAAX2C,EAER,OAAK0qD,EAKD,kBAACzzB,GAAA,EAAD,CAAQr5B,UAAU,gBAAgBg7B,QAAQ,YAAY15B,MAAM,UAAU4C,QAASvF,KAAKouD,cAC/E9pC,EAAe,kBAACiqC,GAAA,EAAD,MAAkB9qD,EAAE,WALjC,S,GA9CO9B,IAAMC,YAyDjBsD,iBAAkB+oD,IClD3BO,I,0BACF,WAAY1tD,GAAQ,IAAD,8BACf,4CAAMA,KAaVuC,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,yBACT1c,MAAM,KAjBK,EAqBnBu3C,WArBmB,qBAqBN,wCAAAnwC,EAAA,wDACD2J,EAAU,EAAKhU,MAAfgU,MADC,EAEkC,EAAKhU,MAAxCouD,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAEhB5mD,EAAQ,EAAKk7C,SAASnuC,QAAQvS,MAAMwP,OAJjC,uBAML,EAAK/Q,SAAS,CACVsT,OAAO,IAPN,iCAYLA,GACA,EAAKtT,SAAS,CACVsT,OAAO,IAIf,EAAKhR,cAECqgC,EAAc,EAAKirB,eAAe95C,QAAQvS,MApBvC,UAsBU5B,KAAgBC,KAAK,CACpC,QAAS,0BACTmH,QACA47B,cACAkrB,YAAY,EACZP,SAAU,OA3BL,QAsBHlmD,EAtBG,OA8BLumD,EACAhuD,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASc,EAAK1J,GACdoO,MAAO,CAAE,QAAS,cAAepO,GAAIiwD,EAAiBjwD,MAEnDgwD,GACP/tD,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASc,EAAK1J,GACdoO,MAAO,CAAE,QAAS,gBAAiBvI,KAAM,YAAa88B,KAAMqtB,KAIpEruB,aAASj4B,EAAK1J,IA5CL,0CArBM,EAoEnBq/C,kBApEmB,sCAoEC,WAAOj7B,EAAMs5B,GAAb,eAAAzxC,EAAA,4DAChB,EAAK3J,SAAS,CACV0tD,aAAc5rC,EACdgsC,gBAAiB1S,IAHL,SAMKz7C,KAAgBC,KAAK,CACtC,QAAS,aACTuM,KAAM,CACF,QAAS,gBACT5I,KAAM,YACN88B,KAAMve,GAEVisC,UAAW,CAAE,QAAS,iBACtBC,SAAUC,QAdE,OAMVnuD,EANU,OAiBhB,EAAKE,SAAS,CACV2tD,iBAAkB7tD,IAlBN,yCApED,wDAGf,EAAKmiD,SAAWrhD,IAAMoU,YACtB,EAAK44C,eAAiBhtD,IAAMoU,YAE5B,EAAK1V,MAAQ,CACTgU,OAAO,EACPo6C,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MAVP,E,sEA0FT,IAAD,EACgB1uD,KAAKc,MAAlBsZ,EADH,EACGA,MAAO3W,EADV,EACUA,EACP4Q,EAAUrU,KAAKK,MAAfgU,MAER,OACI,oCACI,yBAAKhT,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASvF,KAAKqD,aACnD+W,EAAQ,kBAACzD,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKtV,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,iBAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcg7C,SAAUr8C,KAAK89C,oBAC7B,yBAAKz8C,UAAU,kBACX,kBAAC49C,GAAA,EAAD,CACIrnC,SAAU5X,KAAKgjD,SACf3uC,MAAOA,EACPhT,UAAU,iBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,oBACTy7C,aAAc,KAElB,kBAACD,GAAA,EAAD,CACIrnC,SAAU5X,KAAK2uD,eACfttD,UAAU,iBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,kCACTy7C,aAAc,KAElB,yBAAK79C,UAAU,qBAAqBoC,EAAE,uBAKlD,yBAAKpC,UAAU,yBAAyBkE,QAASvF,KAAK66C,YAClD,kBAAC,GAAD,Y,GApIKl5C,IAAMC,YAgJhBsD,iBAAkBspD,ICxGlBS,I,mBA7CX,WAAYnuD,GAAQ,IAAD,8BACf,4CAAMA,KAED2+C,OAAS99C,IAAMoU,YAHL,E,yEAMN,IAAD,EAMJ/V,KAAKy/C,OAAO5qC,QAEhB,MAAO,CAAErK,KARD,EAEJg0B,WAMWj0B,IARP,EAGJo7B,UAKgB93B,MARZ,EAIJyxB,YAIuBxxB,OARnB,EAKJiH,gB,sCAMQzE,GACZ,IAAMovC,EAAM1/C,KAAKy/C,OAAO5qC,QACnB6qC,IAELA,EAAI9xC,MAAMsxB,QAAU5uB,K,+BAGd,IAAD,EACiCtQ,KAAKc,MAAnCinC,EADH,EACGA,OAAQxS,EADX,EACWA,SAAUhwB,EADrB,EACqBA,QAE1B,OACI,yBAAKiR,IAAKxW,KAAKy/C,OAAQp+C,UAAWoE,IAAW,OAAQ,CAAE,gBAAiB8vB,IAAahwB,QAASA,GAC1F,kBAACu0C,GAAA,EAAD,CAAU/R,OAAQA,EAAQ/6B,OAAO,IACjC,yBAAK3L,UAAU,eACX,kBAACsV,EAAA,EAAD,CAAWtV,UAAU,sBAEzB,yBAAKA,UAAU,aAAa6tD,aAAiBnnB,S,GAlCtCpmC,IAAMC,YCcvB2rD,G,8LACoBjmD,EAAWC,EAAWmU,GAAc,IAAD,EACjB1b,KAAKc,MAAjCinC,EAD6C,EAC7CA,OAAQxS,EADqC,EACrCA,SAAU3nB,EAD2B,EAC3BA,MAC1B,OAAItG,EAAUygC,SAAWA,IAIrBzgC,EAAUiuB,WAAaA,GAIvBjuB,EAAUsG,MAAMrD,MAAQqD,EAAMrD,O,+BAO5B,IAAD,EACwCvK,KAAKc,MAA1CinC,EADH,EACGA,OAAQxS,EADX,EACWA,SAAUhwB,EADrB,EACqBA,QAASqI,EAD9B,EAC8BA,MAEnC,OACI,kBAAC1C,GAAA,EAAD,CAAU7J,UAAU,iBAAiBkE,QAAS,kBAAMA,EAAQwiC,IAAS58B,QAAM,EAACyC,MAAOA,GAC/E,kBAACouB,GAAA,EAAD,CAAU36B,UAAU,0BAA0B66B,QAAS3G,EAAU5yB,MAAM,YACvE,kBAACmlC,GAAA,EAAD,CAAMC,OAAQA,S,GAxBHpmC,IAAMC,WA8B3ButD,G,YACF,WAAYruD,GAAQ,IAAD,8BACf,4CAAMA,KAoCV6T,aAAe,SAAAxS,GACX,EAAKsrD,uBACL,EAAKC,wBAvCU,EAkDnBC,qBAAuB,WAAO,IAAD,EACM,EAAKttD,MAA5B0b,EADiB,EACjBA,MAAO8vB,EADU,EACVA,YAET+hB,EAAe/hB,GAAe9vB,EAE5BlH,GAAY+4C,IAAiB/hB,EAAc,EAAKJ,cAAgB,EAAK72B,SAArEC,QACR,GAAKA,EAAL,CAEA,IAAMsG,EAAYtG,EAAQg5C,mBAC1B,GAAI1yC,EAAUxN,KAAO,EAAG,CACpB,IAAMmgD,EAAU,GAChB,YAAI3yC,EAAUvH,QAAQjU,QAAQ,SAAAiG,GAC1BkoD,EAAQ99C,KAAK49C,EAAa7rC,SAASnc,MAGvC,IAAMuH,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAO2gD,MAlEb,EAwFnBhlB,eAAiB,SAAAf,GAAW,IAKpBqnB,EALmB,EACgB,EAAK/uD,MAApCgvD,EADe,EACfA,cAAepP,EADA,EACAA,YACfrwC,EAAey/C,EAAfz/C,IAAK0/C,EAAUD,EAAVC,MAEPC,EAAS,IAAI9oD,IAAImJ,GAEnB4/C,EAAiB,KACjBtO,GAAa,EACbtxC,EAAIhJ,IAAImhC,IACRwnB,EAAO7xC,OAAOqqB,GACdqnB,EAAWE,EAAM18C,OAAO,SAAA1T,GAAC,OAAIA,IAAM6oC,IACnCynB,EAAiBvP,IAAgBlY,EAAS,KAAOkY,EACjDiB,GAAa,IAEbqO,EAAOx/C,IAAIg4B,EAAQA,GACnBqnB,EAAWE,EAAM/5C,OAAO,CAACwyB,IACzBynB,EAAiB,MAGrB,IAAMrpD,EAAQ,EAAK8S,eAAepE,QAClC1O,EAAM+T,QACDgnC,IACD/6C,EAAM4Q,UAAY,GAClB,EAAK4B,aAAa,KAGtB,IAAMwoC,EAAY,EAAKN,aAAahsC,QAC9BusC,EAAaD,EAAUnsC,aACvBqsC,EAAmBF,EAAUpsC,aAE7BwsC,EAAU,IAAI96C,IA9BG,uBA+BvB,YAAgB,EAAKq6C,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAK,EAAKqvC,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAMkB,EAASlB,EAAG0D,YAClBosC,EAAQxxC,IAAInK,EAAK+M,KAnCF,kFAuCvB,IAAM2uC,EAAcH,EAAUvzC,MAAMsxB,QAC9BoH,EAAgB6a,EAAUrsC,UAC5BosC,IACAC,EAAUvzC,MAAMsxB,QAAU,MAG9B,EAAKn+B,SAAS,CACVk/C,YAAauP,EACbH,cAAe,CACXC,MAAOF,EACPx/C,IAAK2/C,IAEV,WACC,EAAK9N,aAAaP,EAAYE,EAAYC,EAAkB/a,EAAegb,GAC3E,EAAKmO,aAAalO,MA7IP,EAoPnBzlC,WAAa,WAAmBC,EAAO2zC,GAAsB,IAA7Cn1C,EAA4C,EAA5CA,MAAO3M,EAAqC,EAArCA,MACbm6B,EAAShsB,EAAMxB,GACfw7B,EAAa2Z,EAAiB9oD,IAAImhC,GAExC,OAAO,kBAAC,GAAD,CAAcniC,IAAKmiC,EAAQA,OAAQA,EAAQxS,SAAUwgB,EAAYxwC,QAAS,kBAAM,EAAKujC,eAAef,IAASn6B,MAAOA,KAxP5G,EA2PnB+K,aA3PmB,sCA2PJ,WAAMrI,GAAN,6BAAA5F,EAAA,wDACLkG,EAAQN,EAAKwB,OADR,uBAGP,EAAK/Q,SAAS,CACV8qC,YAAa,KACb8jB,YAAa,KACb1P,YAAa,OANV,iCAWLvvC,EAAW,IACRV,KACLtP,KAAgBC,KAAK,CACjB,QAAS,iBACTiQ,QACAC,MAAO,MAGfH,EAASV,KACLtP,KAAgBC,KAAK,CACjB,QAAS,oBACTiQ,WAtBG,SAyB8BM,QAAQC,IAAIT,GAzB1C,mCAyBJm7B,EAzBI,KAyBS+jB,EAzBT,KA2BX/jB,EAAY9pB,SAAW8pB,EAAY9pB,SAAS9R,KAAK,SAAC/Q,EAAG2qC,GAAJ,OAC7CkkB,aAAgB7uD,GAAG8uD,cAAcD,aAAgBlkB,MAG/C8lB,EAAc,CAAE,QAAS,QAAS5tC,SAAU,IAClD6tC,EAAY//C,SAAS8kC,OAAO,SAAC2a,EAAOloD,GAChC,IAAMe,EAAOX,KAAUjB,IAAIa,GAI3B,OAHIe,GAA+B,oBAAvBA,EAAK/F,KAAK,UAClBktD,EAAMt/C,KAAK7H,EAAK/F,KAAKuG,SAElB2mD,GACRK,EAAY5tC,UAET5U,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAO0+B,EAAY9pB,UACpClO,YAAiB1G,EAAOwiD,EAAY5tC,UAEpC,EAAKhhB,SAAS,CAAE8qC,cAAa8jB,cAAa1P,YAAa,OA5C5C,0CA3PI,wDA0SnB58C,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KA7SK,EAiTnB8+C,kBAAoB,SAAAjgD,GAAU,IAAD,EACc,EAAK9B,MAApCgvD,EADiB,EACjBA,cAAepP,EADE,EACFA,YAClBoP,IAEWA,EAARz/C,IACChJ,IAAIq5C,KAEb99C,EAAMyI,kBACNzI,EAAM6U,YAAYC,2BAElB,EAAKlW,SAAS,CACVk/C,YAAa,UA5TF,EAgUnBD,gBAAkB,WAAO,IAAD,EACmB,EAAK3/C,MAApCgvD,EADY,EACZA,cAAepP,EADH,EACGA,YACvB,GAAKoP,EAAL,CAFoB,IAIZC,EAAeD,EAAfC,MAAO1/C,EAAQy/C,EAARz/C,IACf,GAAK0/C,GACAA,EAAMlpD,OAEX,GAAIwJ,EAAIhJ,IAAIq5C,GACR,EAAKnX,eAAemX,OADxB,CAKA,IAAMO,EAAW8O,EAAMA,EAAMlpD,OAAS,GACjCo6C,GAEL,EAAKz/C,SAAS,CACVk/C,YAAaO,OA9UjB,EAAKwC,SAAWrhD,IAAMoU,YACtB,EAAKkD,eAAiBtX,IAAMoU,YAC5B,EAAKnB,QAAUjT,IAAMoU,YACrB,EAAK01B,cAAgB9pC,IAAMoU,YAC3B,EAAK8qC,aAAel/C,IAAMoU,YAC1B,EAAK+qC,SAAW,IAAIr6C,IAEpB,EAAKpG,MAAQ,CACT0b,MAAO,KACP8vB,YAAa,KACbwjB,cAAe,CACXC,MAAO,GACP1/C,IAAK,IAAInJ,KAEbw5C,YAAa,MAGjB,EAAKwN,qBAAuB9rC,aAAS,EAAK8rC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBluB,aAAS,EAAKkuB,qBAAsB,KAAK,GArBtD,E,0EAyBf,OAAO1tD,KAAKK,MAAMgvD,cAAcC,Q,0CAGf,IACTz6C,EAAY7U,KAAKiZ,eAAjBpE,QACJA,GACAyH,WAAW,kBAAMzH,EAAQqF,SAAS,IAGtCla,KAAK8T,gB,6CASL9T,KAAK2tD,yB,6CAIL3tD,KAAK2tD,yB,uJAwBDrsC,EAAW4E,GAAW5E,S,gCAEL5gB,KAAgBC,KAAK,CAClC,QAAS,gB,QADb2gB,E,QAGSS,SAAWT,EAASS,SAAS9R,KAAK,SAAC/Q,EAAG2qC,GAAJ,OAAUkkB,aAAgB7uD,GAAG8uD,cAAcD,aAAgBlkB,MACtG3jB,GAAW5E,SAAWA,E,OAGpBnU,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAOmU,EAASS,SAASikB,MAAM,EAAG,KAEnDhmC,KAAKe,SAAS,CACVgb,MAAOuF,I,wIA6DF4/B,EAAYE,EAAYC,EAAkB/a,EAAegb,GAAc,IAAD,OACzEH,EAAYnhD,KAAK6gD,aAAahsC,QAE9B6sC,EAAgBP,EAAUnsC,aAI1B2sC,GAHsBR,EAAUpsC,aAGpB2sC,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAI6hD,EAHxC,KAGV,OACA1iD,sBAAsB,WAClByiD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAImiD,EAL5C,KAKN,OACAplC,WAAW,WACP,EAAKrD,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,UACxD,SAGP8kC,EAAUvzC,MAAMsxB,QAAhB,sBAXU,IAWV,OACAl/B,KAAKiZ,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,YAEpDslC,EACHD,EAfU,KAgBVP,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAI8hD,EAhBxC,KAgBV,OACA3iD,sBAAsB,WAClByiD,EAAUvzC,MAAMsxB,QAAhB,sBAAyC5/B,KAAKC,IAAImiD,EAlB5C,KAkBN,WAGJP,EAAUvzC,MAAMsxB,QAAhB,sBArBU,IAqBV,OACAiiB,EAAUrsC,UAAYwxB,GAGtB4a,GACAC,EAAUvzC,MAAMsxB,QAAUoiB,EAC1BH,EAAUrsC,UAAYwxB,GAEtBtmC,KAAKiZ,eAAepE,QAAQ+sC,eAAe,CAAEvlC,SAAU,a,mCAKtDwlC,GAAc,IAAD,OAChBC,EAAkB,IAAIr7C,IADN,uBAEtB,YAAgBzG,KAAK8gD,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAKzR,KAAK8gD,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAMswC,EAAgBtwC,EAAG0D,YACnB6sC,EAAaH,EAAYj7C,IAAIhB,GAAOi8C,EAAYt7C,IAAIX,GAAO,KACjE,GAAIo8C,EAAY,CACRA,EAAWx3C,KAAOu3C,EAAcv3C,MAChCs3C,EAAgB/xC,IAAI0B,EAAI,CAAEuwC,aAAYD,kBAG1C,IAAMpP,EAAS,+BAA2BqP,EAAWx3C,KAAOu3C,EAAcv3C,KAA3D,eAAsEw3C,EAAWz3C,IAAMw3C,EAAcx3C,IAArG,OACfkH,EAAGwwC,gBAAgBtP,MAbT,kFAkBtBj0C,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKoiD,SAASltC,OAA9B,+CAAsC,CAAC,IAA9BhO,EAA6B,QAC5B6L,EAAK,EAAKqvC,SAASv6C,IAAIX,GAC7B,GAAI6L,EAAI,CACJ,IAAIwsB,EAAU,mCACd,GAAI6jB,EAAgBl7C,IAAI6K,GAAK,CAAC,IAAD,EACaqwC,EAAgBv7C,IAAIkL,GAAlDuwC,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB9jB,EAAa,+BAAwB+jB,EAAWx3C,KAAOu3C,EAAcv3C,KAAOw3C,EAAWn0C,MAA1E,eAAsFm0C,EAAWz3C,IAAMw3C,EAAcx3C,IAArH,QACA,mCAGjBkH,EAAGwwC,gBAAgBhkB,KAXH,kFAenB6jB,EAAgBn0C,MAErB2O,WAAW,WAAO,IAAD,uBACb,YAAewlC,EAAgBluC,OAA/B,+CAAuC,CAAC,IAA/BnC,EAA8B,QAC3BswC,EAAkBD,EAAgBv7C,IAAIkL,GAAtCswC,cACF9jB,EAAa,+BAAwB8jB,EAAcl0C,MAAtC,WACA,iCAEnB4D,EAAGwwC,gBAAgBhkB,IANV,kFASbv/B,sBAAsB,WAAO,IAAD,uBACxB,YAAeojD,EAAgBluC,OAA/B,+CAAuC,CAAC,IAA/BnC,EAA8B,QAGnCA,EAAGwwC,gBAFgB,qCAFC,sFAQ7B,S,+BAqGD,IAAD,SACgBjiD,KAAKc,MAAlBsZ,EADH,EACGA,MAAO3W,EADV,EACUA,EADV,EAEmEzD,KAAKK,MAArE0b,EAFH,EAEGA,MAAO8vB,EAFV,EAEUA,YAAa8jB,EAFvB,EAEuBA,YAAaN,EAFpC,EAEoCA,cAAepP,EAFnD,EAEmDA,YAElDryC,EAAQwM,EAAQ,CAAEqwB,UAAW,KAAQ,KAI3C,OAFAzqC,KAAK8gD,SAAS5/B,QAGV,oCACI,yBAAK7f,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASvF,KAAKqD,aACnD+W,EAAQ,kBAACzD,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKtV,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,sBAGnD,yBAAK+S,IAAKxW,KAAK6gD,aAAcx/C,UAAU,uBAClCguD,EAAcC,MAAM1/C,IAAI,SAAA1Q,GAAC,OAAI,kBAAC,GAAD,CAAUq2B,SAAU0qB,IAAgB/gD,EAAGsX,IAAK,SAAA/E,GAAQ,EAAKqvC,SAAS/wC,IAAI7Q,EAAGuS,IAAQ7L,IAAK1G,EAAG6oC,OAAQ7oC,EAAGqG,QAAS,kBAAM,EAAKujC,eAAe5pC,QACrK,kBAAC,GAAD,CAAa0Y,SAAU5X,KAAKiZ,eAAgBnB,KAAMrU,EAAE,iBAAkBI,QAAS7D,KAAKoiD,kBAAmB79C,SAAUvE,KAAK2Y,aAAczB,YAAalX,KAAKggD,mBAE1J,yBAAK3+C,UAAU,oBACf,yBAAKA,UAAU,mBAAmBuM,MAAOA,GACpCmO,GACG,kBAAC,GAAD,CACIvF,IAAKxW,KAAK4U,QACVvT,UAAU,gBACVG,OAAQua,EAAMgG,SACdzG,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG6c,EAAMgG,SAAUstC,EAAcz/C,MAClE6G,SAAUzW,KAAK2U,eAGtBk3B,GAAe8jB,GACZ,kBAAC,GAAD,CACIn5C,IAAKxW,KAAKyrC,cACVpqC,UAAU,qCACVG,OAAQqqC,EAAY9pB,SAASxM,OAAOo6C,EAAY5tC,UAChDzG,UAAW,GACXE,cAAe,GACfM,WAAY,SAAA5c,GAAC,OAAI,EAAK4c,WAAW5c,EAAG2sC,EAAY9pB,SAASxM,OAAOo6C,EAAY5tC,UAAWstC,EAAcz/C,MACrG6G,SAAUzW,KAAK2U,qB,GAjYbhT,IAAMC,WAqZrBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQqqD,IC1bjB5B,I,qMACoBjmD,EAAWC,EAAWmU,GAAc,IAC9CqsB,EAAW/nC,KAAKc,MAAhBinC,OACR,OAAIzgC,EAAUygC,SAAWA,I,+BAOnB,IAAD,EACqB/nC,KAAKc,MAAvBinC,EADH,EACGA,OAAQn6B,EADX,EACWA,MAEhB,OACI,kBAAC1C,GAAA,EAAD,CAAU7J,UAAU,iBAAiB8J,QAAM,EAACyC,MAAOA,GAC/C,kBAACk6B,GAAA,EAAD,CAAMC,OAAQA,S,GAfHpmC,IAAMC,YAqB3BiuD,G,YAEF,WAAY/uD,GAAQ,IAAD,8BACf,4CAAMA,KAoCVuC,YAAc,WAAO,IACTQ,EAAY,EAAK/C,MAAjB+C,QACHA,GAELA,KAtCA,EAAKm/C,SAAWrhD,IAAMoU,YAEtB,EAAK1V,MAAQ,CACTgU,OAAO,GANI,E,iFAUE,IACTy5C,EAAY9tD,KAAKc,MAAjBgtD,QAEF3gD,EAAQC,KAAUC,WACxBwG,YAAiB1G,EAAO2gD,K,iCAGhB,IACAz5C,EAAUrU,KAAKK,MAAfgU,MAEFvM,EAAQ9H,KAAKgjD,SAASnuC,QAAQvS,MAAMwP,OAC1C,OAAKhK,GAODuM,GACArU,KAAKe,SAAS,CACVsT,OAAO,IAIRvM,IAZH9H,KAAKe,SAAS,CACVsT,OAAO,IAEJvM,K,+BAmBL,IAAD,EACkD9H,KAAKc,MAApD2C,EADH,EACGA,EAAGqqD,EADN,EACMA,QAASe,EADf,EACeA,gBAAiBiB,EADhC,EACgCA,cAC7Bz7C,EAAUrU,KAAKK,MAAfgU,MAEF0H,EAAQ+xC,EAAQl+C,IAAI,SAAAm4B,GAAM,OAAK,kBAAC,GAAD,CAAcniC,IAAKmiC,EAAQA,OAAQA,MAElEgoB,EAAkC,IAAnBjC,EAAQ1nD,OAAR,UAA0B0nD,EAAQ1nD,OAAlC,sBAAwD0nD,EAAQ1nD,OAAhE,WAErB,OACI,oCACI,yBAAK/E,UAAU,iBACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,qBAAqBkE,QAASvF,KAAKqD,aACrD,kBAAC,GAAD,OAEJ,yBAAKhC,UAAU,qCACX,0BAAMA,UAAU,yBAAyBoC,EAAE,eAGnD,yBAAKpC,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcu7C,WAAYiS,EAAiBxS,SAAUyT,IACrD,yBAAKzuD,UAAU,kBACX,kBAAC49C,GAAA,EAAD,CACIrnC,SAAU5X,KAAKgjD,SACf3uC,MAAOA,EACPhT,UAAU,iBACVg7B,QAAQ,WACR6Q,WAAS,EACTvoC,MAAOlB,EAAE,aACTy7C,aAAc,MAGtB,kBAAC,EAAD,KAAgB6Q,GACfh0C,S,GA/EIpa,IAAMC,WAoGpBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQ+qD,IC5HjBG,G,YACF,WAAYlvD,GAAQ,IAAD,8BACf,4CAAMA,KAcV+5C,WAfmB,qBAeN,wCAAAnwC,EAAA,wDACc,EAAKrK,MAApB4vD,WADC,oBAGCnC,EAAU,EAAKoC,mBAAmBr7C,QAAQs7C,cACnC/pD,OAJR,iDAML,EAAKrF,SAAS,CACVkvD,YAAY,EACZnC,YARC,4BAW+C,EAAKztD,MAAjDytD,EAXH,EAWGA,QAASW,EAXZ,EAWYA,aAAcC,EAX1B,EAW0BA,iBAEzB5mD,EAAQ,EAAKsoD,kBAAkBv7C,QAAQw7C,WAbxC,0DAkBL,EAAKhtD,cAlBA,UAoBc3C,KAAgBC,KAAK,CACpC,QAAS,0BACTmH,QACA8mD,YAAY,EACZlrB,YAAa,GACb2qB,SAAU,OAzBT,QAoBClmD,EApBD,OA4BDumD,EACAhuD,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASc,EAAK1J,GACdoO,MAAO,CAAE,QAAS,cAAepO,GAAIiwD,EAAiBjwD,MAEnDgwD,GACP/tD,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASc,EAAK1J,GACdoO,MAAO,CAAE,QAAS,gBAAiBvI,KAAM,YAAa88B,KAAMqtB,KAIhEX,EAAQ1nD,OAAS,GACjB1F,KAAgBC,KAAK,CACjB,QAAS,iBACT0G,QAASc,EAAK1J,GACdsjB,SAAU+rC,IAIlB1tB,aAASj4B,EAAK1J,IAlDT,0CAfM,EAqEnB4E,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,uBACT1c,MAAM,KAxEK,EA4EnBgtD,kBAAoB,WAChB,EAAKvvD,SAAS,CACVkvD,YAAY,EACZnC,QAAS,MA/EE,EAmFnBhQ,kBAnFmB,sCAmFC,WAAOj7B,EAAMs5B,GAAb,eAAAzxC,EAAA,4DAChB,EAAK3J,SAAS,CACV0tD,aAAc5rC,EACdgsC,gBAAiB1S,IAHL,SAMKz7C,KAAgBC,KAAK,CACtC,QAAS,aACTuM,KAAM,CACF,QAAS,gBACT5I,KAAM,YACN88B,KAAMve,GAEVisC,UAAW,CAAE,QAAS,iBACtBC,SAAUC,QAdE,OAMVnuD,EANU,OAiBhB,EAAKE,SAAS,CACV2tD,iBAAkB7tD,IAlBN,yCAnFD,wDAGf,EAAKqvD,mBAAqBvuD,IAAMoU,YAChC,EAAKq6C,kBAAoBzuD,IAAMoU,YAE/B,EAAK1V,MAAQ,CACT4vD,YAAY,EACZnC,QAAS,GACTW,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MAXP,E,sEAyGT,IACEt0C,EAAUpa,KAAKc,MAAfsZ,MADH,EAE4Cpa,KAAKK,MAA9C4vD,EAFH,EAEGA,WAAYnC,EAFf,EAEeA,QAASe,EAFxB,EAEwBA,gBAE7B,OACI,oCACI,kBAAC,GAAD,CAAiBr4C,IAAKxW,KAAKkwD,mBAAoB91C,MAAOA,EAAOvW,QAAS7D,KAAKqD,cAE3E,kBAAC,GAAD,CAAaC,KAAM2sD,GACf,kBAAC,GAAD,CACIz5C,IAAKxW,KAAKowD,kBACVvB,gBAAiBA,EACjBf,QAASA,EACTgC,cAAe9vD,KAAK89C,kBACpBj6C,QAAS7D,KAAKswD,qBAItB,yBAAKjvD,UAAU,yBAAyBkE,QAASvF,KAAK66C,YAClD,kBAAC,GAAD,Y,GA7HGl5C,IAAMC,WAyIdsD,iBAAkB8qD,ICkFlBO,G,YAzNX,WAAYzvD,GAAQ,IAAD,8BACf,4CAAMA,KA2DVkkB,yBAA2B,SAAA/d,GAEvB,GADyBoS,IAAjBiL,aACR,CAFiC,IAIzBld,EAAkBH,EAAlBG,OAAQwJ,EAAU3J,EAAV2J,MAJiB,EAKgB,EAAKvQ,MAA9CwY,EALyB,EAKzBA,WAAYoM,EALa,EAKbA,aAAc5U,EALD,EAKCA,WAE9BwI,GAAczR,IAAW6d,GAAgBrU,IAAUP,IAIvD,EAAKO,MAAQA,EACb,EAAK7P,SACD,CACI8X,YAAY,EACZoM,aAAc7d,EACdiJ,WAAY,UA5EL,EAiFnBmgD,kBAAoB,WAChB,GAAK,EAAK5/C,MAAV,CAEA,IAAMsU,EAAS,EAAKurC,UAAU57C,QAC1BqQ,GACAA,EAAOE,aAAa,EAAKxU,OAG7B,EAAKA,MAAQ,OAzFE,EA4FnBiV,uBAAyB,SAAA5e,GAErB,GADyBoS,IAAjBiL,aACR,CAF+B,IAIvBhhB,EAAiB2D,EAAjB3D,KAAM8D,EAAWH,EAAXG,OAEd,EAAKrG,SAAS,CAAE2vD,aAAcptD,EAAMqtD,SAAUvpD,MAlG/B,EAqGnB2e,uBArGmB,sCAqGM,WAAM9e,GAAN,eAAAyD,EAAA,wDACI2O,IAAjBiL,aADa,iDAIbhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE6vD,aAActtD,IANT,yCArGN,wDA8GnB0iB,uBA9GmB,sCA8GM,WAAM/e,GAAN,eAAAyD,EAAA,wDACI2O,IAAjBiL,aADa,iDAIbhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE8vD,aAAcvtD,IANT,yCA9GN,wDAuHnB2iB,yBAvHmB,sCAuHQ,WAAMhf,GAAN,eAAAyD,EAAA,wDACE2O,IAAjBiL,aADe,iDAIfhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE+vD,eAAgBxtD,IANT,yCAvHR,wDAgInBD,YAAc,WACV,EAAKtC,SAAS,CACV2vD,cAAc,EACdE,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBj4C,YAAY,KAtID,EA0InBF,aAAe,SAAA4M,GACX,EAAKxkB,SAAS,CACV8X,WAAY0M,EACZN,aAAc,EACd5U,WAAY,QA9ID,EAkJnB0I,uBAAyB,SAAAzI,GACrB,EAAKvP,SAAS,CACVsP,WAAYC,EACZM,MAAO,QArJI,EAyJnB2D,oBAAsB,SAACnN,EAAQqH,EAAWoK,GACtCunB,aAASh5B,EAAQqH,GAEjB,EAAKyK,qBA5JU,EA+JnBA,kBAAoB,WAChB,EAAKnY,SAAS,CACV8X,YAAY,EACZoM,aAAc,EACd5U,WAAY,QAhKhB,EAAKogD,UAAY9uD,IAAMoU,YAEvB,EAAK1V,MAAQ,CACTwY,YAAY,EACZ63C,cAAc,EACdE,cAAc,EACdC,cAAc,EACdC,gBAAgB,GAVL,E,mFAcGxpD,EAAWC,EAAWmU,GAAc,IAAD,EACwC1b,KAAKK,MAA1FwY,EAD6C,EAC7CA,WAAYxI,EADiC,EACjCA,WAAYqgD,EADqB,EACrBA,aAAcE,EADO,EACPA,aAAcC,EADP,EACOA,aAAcC,EADrB,EACqBA,eAE1E,OAAIvpD,EAAUsR,aAAeA,IAIzBtR,EAAU8I,aAAeA,IAIzB9I,EAAUmpD,eAAiBA,IAI3BnpD,EAAUqpD,eAAiBA,IAI3BrpD,EAAUspD,eAAiBA,GAI3BtpD,EAAUupD,iBAAmBA,Q,0CAQjCz3C,IAAS5R,GAAG,yBAA0BzH,KAAKglB,0BAC3Cxd,KAAUC,GAAG,uBAAwBzH,KAAK6lB,wBAC1Cre,KAAUC,GAAG,uBAAwBzH,KAAK+lB,wBAC1Cve,KAAUC,GAAG,uBAAwBzH,KAAKgmB,wBAC1Cxe,KAAUC,GAAG,yBAA0BzH,KAAKimB,4B,6CAI5C5M,IAAS3R,IAAI,yBAA0B1H,KAAKglB,0BAC5Cxd,KAAUE,IAAI,uBAAwB1H,KAAK6lB,wBAC3Cre,KAAUE,IAAI,uBAAwB1H,KAAK+lB,wBAC3Cve,KAAUE,IAAI,uBAAwB1H,KAAKgmB,wBAC3Cxe,KAAUE,IAAI,yBAA0B1H,KAAKimB,4B,+BA8GvC,IAAD,EACgHjmB,KAAKK,MAAlHswD,EADH,EACGA,SAAU1rC,EADb,EACaA,aAAc5U,EAD3B,EAC2BA,WAAYwI,EADvC,EACuCA,WAAY+3C,EADnD,EACmDA,aAAcF,EADjE,EACiEA,aAAcG,EAD/E,EAC+EA,aAAcC,EAD7F,EAC6FA,eAClG,OAAKj4C,GAAe+3C,GAAiBF,GAAiBG,GAAiBC,EAKnE,kBAAC,IAAD,CACIxtD,MAAI,EACJM,mBAAoB,EACpBC,QAAS7D,KAAKqD,YACduB,QAAS,CACLC,KAAM,wBACN0sB,UAAW,6BACXw/B,MAAO,0BAEXC,QAAShxD,KAAKwwD,mBAEbE,GAAgB,kBAAC,GAAD,CAAUtpD,OAAQupD,EAAUv2C,OAAK,IACjDw2C,GAAgB,kBAAC,GAAD,CAAUx2C,OAAK,IAC/By2C,GAAgB,kBAAC,GAAD,CAAUz2C,OAAK,IAC/B02C,GAAkB,kBAAC,GAAD,CAAY12C,OAAK,IACnCvB,GACG,oCACI,kBAAC,GAAD,CACIrC,IAAKxW,KAAKywD,UACV53C,YAAY,EACZ0L,SAAS,EACThf,QAASvF,KAAKqlB,kBACdzM,SAAU5Y,KAAK2Y,aACfK,mBAAoBhZ,KAAK+Y,uBACzBqB,OAAK,IAET,yBAAK/Y,UAAU,kBACX,kBAAC,GAAD,CACI+F,OAAQ6d,EACR3U,KAAMD,EACNqE,gBAAiB1U,KAAKuU,oBACtB1Q,QAAS7D,KAAKkZ,uBAnC3B,S,GA3KSvX,IAAMC,WCe5BiiB,I,OAAiB,CACnBC,MAAOzlB,YAAS0lB,eAChBC,KAAM3lB,YAAS4lB,gBA4eJgtC,G,YAxeX,WAAYnwD,GAAQ,IAAD,8BACf,4CAAMA,KAqIVqjB,oBAAsB,SAAAld,GAClB,EAAKmd,mBAvIU,EA0InBC,wBAA0B,SAAApd,GAGtB,GAFyBA,EAAjBqd,aAER,CAHgC,MAKiD,EAAKjkB,MAA9EqwD,EALwB,EAKxBA,aAAcE,EALU,EAKVA,aAAc/3C,EALJ,EAKIA,WAAYg4C,EALhB,EAKgBA,aAAcC,EAL9B,EAK8BA,gBAC1DJ,GAAgBE,GAAgB/3C,GAAcg4C,GAAgBC,IAC9D,EAAK/vD,SAAS,CACN6vD,cAAc,EACdF,cAAc,EACd73C,YAAY,EACZg4C,cAAc,EACdC,gBAAgB,EAChBvsC,QAAS,GACV,WACC,EAAKxjB,SAAS,CACVwjB,QAASV,SA1JV,EA2MnB5F,kBAAoB,SAAAhX,GAAW,IACNud,EAAoB,EAAKnkB,MAAtC8e,YAESsF,EAAgB,EAAKC,cAA9B7P,QACR,IAAI4P,IAAeA,EAAYjP,QAA/B,CAJ0B,IAQTmP,EAAmB,EAAKC,eAAjC/P,QACR,IAAI8P,IAAkBA,EAAenP,QAArC,CAIA,IAAMqP,EAAcrd,KAAUiV,SAASlW,IAAI,mBACrC4Y,EAAc0F,GAAeA,EAAYlX,KAAO,EAEtD,EAAK5M,SAAS,CAAEoe,cAAaC,aAAcoB,MAAqB,WAC5D,IAAKgE,GAAmBrF,EAAa,CAAC,IAC1BtK,EAAY,EAAK6P,cAAjB7P,QACR,GAAIA,EAAQD,QAAS,CAAC,IACDkQ,EAAgBjQ,EAAQD,QAAjCC,QACJiQ,GAAeA,EAAYhQ,UAAY,IACvCD,EAAQC,WAAa,QAMjC0P,IAAoBrF,GACpBze,KAAgBsf,aAAa,CACzB,QAAS,gCAzOF,EA8OnB+F,uBA9OmB,sCA8OM,WAAM9e,GAAN,eAAAyD,EAAA,yDACI2O,IAAjBiL,aADa,iDAIbhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE6vD,aAActtD,IANT,yCA9ON,wDAuPnBuiB,uBAAyB,SAAA5e,GAErB,IADyBoS,IAAjBiL,aACR,CAF+B,IAIvBhhB,EAAiB2D,EAAjB3D,KAAM8D,EAAWH,EAAXG,OAEd,EAAKrG,SAAS,CAAE2vD,aAAcptD,EAAMqtD,SAAUvpD,MA7P/B,EAgQnB4e,uBAhQmB,sCAgQM,WAAM/e,GAAN,eAAAyD,EAAA,yDACI2O,IAAjBiL,aADa,iDAIbhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE8vD,aAAcvtD,IANT,yCAhQN,wDAyQnB2iB,yBAzQmB,sCAyQQ,WAAMhf,GAAN,eAAAyD,EAAA,yDACE2O,IAAjBiL,aADe,iDAIfhhB,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAE+vD,eAAgBxtD,IANT,yCAzQR,wDAkRnBwiB,sBAAwB,SAAA7e,GAAW,IACvB3D,EAAS2D,EAAT3D,KAER,EAAKvC,SAAS,CAAEm2C,YAAa5zC,KArRd,EAwRnByhB,0BAA4B,SAAA9d,GACxB,EAAKC,eAzRU,EA4RnB8d,yBAA2B,SAAA/d,GAEvB,IADyBoS,IAAjBiL,aACR,CAFiC,IAIzBld,EAAkBH,EAAlBG,OAAQwJ,EAAU3J,EAAV2J,MAJiB,EAKgB,EAAKvQ,MAA9CwY,EALyB,EAKzBA,WAAYoM,EALa,EAKbA,aAAc5U,EALD,EAKCA,WAElC,IAAIwI,GAAczR,IAAW6d,GAAgBrU,IAAUP,EAAvD,CAIA,IAAM6U,EAAS,EAAKC,iBAAiBtQ,QACrC,EAAK9T,SACD,CACI8X,YAAY,EACZoM,aAAc7d,EACdiJ,WAAY,KACZ6mC,aAAa,EACb0Z,cAAc,EACdF,cAAc,EACdG,cAAc,EACdC,gBAAgB,GAEpB,WACQ5rC,GACAA,EAAOE,aAAaxU,QArTjB,EA2TnByU,kBAAoB,WACQ,EAAKhlB,MAArB62C,YAEJx2C,KAAgBsf,aAAa,CACzB,QAAS,6BAGb,EAAK0E,cAAc7P,QAAQyQ,eAlUhB,EAsUnB3M,aAAe,SAAA4M,GACX,EAAKxkB,SAAS,CACV8X,WAAY0M,EACZN,aAAc,EACd5U,WAAY,QA1UD,EA8UnBkE,oBAAsB,SAACnN,EAAQqH,EAAWoK,GACtCunB,aAASh5B,EAAQqH,GAEjB,IAAMwW,EAAepM,EAAa,EAAKxY,MAAM4kB,aAAe,EACtD5U,EAAawI,EAAa,EAAKxY,MAAMgQ,WAAa,KAExD,EAAKtP,SAAS,CACV8X,aACAoM,eACA5U,gBAvVW,EA2VnB6I,kBAAoB,WAChB,EAAKnY,SAAS,CACV8X,YAAY,EACZoM,aAAc,EACd5U,WAAY,QA/VD,EAmWnB0I,uBAAyB,SAAAzI,GACrB,EAAKvP,SAAS,CACVsP,WAAYC,EACZM,MAAO,QAtWI,EA0WnBwT,gBAAkB,WACd,EAAKvG,aA3WU,EAmXnBqzC,mBAAqB,WACjB,EAAKnwD,SAAS,CAAEm2C,aAAa,KApXd,EAuXnBia,oBAAsB,WAClB,EAAKpwD,SAAS,CAAE6vD,cAAc,KAxXf,EA2XnBvD,oBAAsB,WAClB,EAAKtsD,SAAS,CAAE2vD,cAAc,KA5Xf,EA+XnBU,oBAAsB,WAClB,EAAKrwD,SAAS,CAAE8vD,cAAc,KAhYf,EAmYnBQ,sBAAwB,WACpB,EAAKtwD,SAAS,CAAE+vD,gBAAgB,KAjYhC,EAAKpsC,cAAgB/iB,IAAMoU,YAC3B,EAAK6O,eAAiBjjB,IAAMoU,YAC5B,EAAKoP,iBAAmBxjB,IAAMoU,YAE9B,EAAK1V,MAAQ,CACTkhB,MAAO,KAEPpC,aAAa,EACbC,aAAc,KAEduG,UAAW,GACX2rC,aAAc,GAEd/sC,QAASV,GACThL,YAAY,EACZq+B,aAAa,EACb0Z,cAAc,EACdF,cAAc,EACdG,cAAc,EACdC,gBAAgB,EAEhB7rC,aAAc,EACd5U,WAAY,KACZO,MAAO,MA1BI,E,mFA8BGtJ,EAAWC,GAAY,IAAD,EAepCvH,KAAKK,MAbLkhB,EAFoC,EAEpCA,MACApC,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACAuG,EALoC,EAKpCA,UACA2rC,EANoC,EAMpCA,aACAz4C,EAPoC,EAOpCA,WACAq+B,EARoC,EAQpCA,YACAwZ,EAToC,EASpCA,aACAE,EAVoC,EAUpCA,aACAC,EAXoC,EAWpCA,aACAC,EAZoC,EAYpCA,eACA7rC,EAboC,EAapCA,aACA5U,EAdoC,EAcpCA,WAGJ,OAAI9I,EAAUga,QAAUA,IAIpBha,EAAU4X,cAAgBA,IAI1B5X,EAAU6X,eAAiBA,IAI3B7X,EAAU+pD,eAAiBA,IAI3B/pD,EAAUoe,YAAcA,IAIxBpe,EAAUsR,aAAeA,IAIzBtR,EAAU2vC,cAAgBA,IAI1B3vC,EAAUmpD,eAAiBA,IAI3BnpD,EAAUqpD,eAAiBA,IAI3BrpD,EAAUspD,eAAiBA,IAI3BtpD,EAAUupD,iBAAmBA,IAI7BvpD,EAAU0d,eAAiBA,GAI3B1d,EAAU8I,aAAeA,e,0CAQ7BrQ,KAAK4lB,YAELvM,IAAS5R,GAAG,yBAA0BzH,KAAKglB,0BAC3C3L,IAAS5R,GAAG,0BAA2BzH,KAAK+kB,2BAC5C1L,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,yBAC1C7c,KAAUC,GAAG,yBAA0BzH,KAAKie,mBAC5CzW,KAAUC,GAAG,wBAAyBzH,KAAKie,mBAC3CzW,KAAUC,GAAG,qBAAsBzH,KAAKie,mBACxCzW,KAAUC,GAAG,uBAAwBzH,KAAK6lB,wBAC1Cre,KAAUC,GAAG,sBAAuBzH,KAAK8lB,uBACzCte,KAAUC,GAAG,uBAAwBzH,KAAK+lB,wBAC1Cve,KAAUC,GAAG,uBAAwBzH,KAAKgmB,wBAC1Cxe,KAAUC,GAAG,yBAA0BzH,KAAKimB,0BAC5C3G,GAAY7X,GAAG,oBAAqBzH,KAAKmkB,uB,6CAIzC9K,IAAS3R,IAAI,yBAA0B1H,KAAKglB,0BAC5C3L,IAAS3R,IAAI,0BAA2B1H,KAAK+kB,2BAC7C1L,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,yBAC3C7c,KAAUE,IAAI,yBAA0B1H,KAAKie,mBAC7CzW,KAAUE,IAAI,wBAAyB1H,KAAKie,mBAC5CzW,KAAUE,IAAI,qBAAsB1H,KAAKie,mBACzCzW,KAAUE,IAAI,uBAAwB1H,KAAK6lB,wBAC3Cre,KAAUE,IAAI,sBAAuB1H,KAAK8lB,uBAC1Cte,KAAUE,IAAI,uBAAwB1H,KAAK+lB,wBAC3Cve,KAAUE,IAAI,uBAAwB1H,KAAKgmB,wBAC3Cxe,KAAUE,IAAI,yBAA0B1H,KAAKimB,0BAC7C3G,GAAY5X,IAAI,oBAAqB1H,KAAKmkB,uB,oKA8BrB+B,GAAWtE,O,gDAAW,G,OAArCL,E,KAEE9N,EAAwB8N,EAAxB9N,MAAOwO,EAAiBV,EAAjBU,aAEf3C,GAAY5C,QAAU4C,GAAY5C,SAAWwJ,GAAWxJ,QACxD1c,KAAKe,SAAS,CACVwgB,QAEApC,YAAa8C,GAAgBA,EAAa7b,OAAS,EACnDgZ,aAAcoB,OAGlBxgB,KAAK8e,kBAAkBrL,GAAS,IAAI7D,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,MAE/CiC,KAAgBsf,aAAa,CACzB,QAAS,4B,sQAKPtP,EAAW,IACRV,KAAKtP,KAAgBC,KAAK,CAC/B,QAAS,WACTkS,UAAW,CAAE,QAAS,gBACtBiN,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO8O,QAEXjP,EAASV,KAAKtP,KAAgBC,KAAK,CAC/B,QAAS,WACTkS,UAAW,CAAE,QAAS,mBACtBiN,aAAc,sBACd/M,eAAgB,EAChBlC,MAAO8O,Q,SAE6BzO,QAAQC,IAAIT,G,mCAA7CyV,E,KAAWlE,E,KAEVvF,EAAY4C,GAAZ5C,QAERwJ,GAAW9C,KAAK1G,EAASyJ,EAAUtW,SAAUoS,EAAapS,U,uIAsK7CyO,GACb,IAAMnR,EAAQC,KAAUC,WACxBuE,YAAiBzE,EAAOmR,K,+BAuBlB,IAAD,EAiBDte,KAAKK,MAfLkhB,EAFC,EAEDA,MACApC,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACAuG,EALC,EAKDA,UACA2rC,EANC,EAMDA,aACAX,EAPC,EAODA,SACAD,EARC,EAQDA,aACAE,EATC,EASDA,aACA1Z,EAVC,EAUDA,YACAr+B,EAXC,EAWDA,WACAg4C,EAZC,EAYDA,aACAC,EAbC,EAaDA,eACAvsC,EAdC,EAcDA,QACAU,EAfC,EAeDA,aACA5U,EAhBC,EAgBDA,WAGE+V,EAAiB7E,EAAQA,EAAM9N,OAAS,GAAK,KAC7C89C,EAAoBhwC,EAAQA,EAAMU,cAAgB,GAAK,KAE7D,OACI,oCACI,yBAAK5gB,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACImV,IAAKxW,KAAKmlB,iBACVtM,WAAYA,EACZ0L,QAAqB,IAAZA,EACThf,QAASvF,KAAKqlB,kBACdzM,SAAU5Y,KAAK2Y,aACfK,mBAAoBhZ,KAAK+Y,yBAE7B,yBAAK1X,UAAU,mBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,MAEA,kBAAC,GAAD,CACIe,KAAK,eACLoU,IAAKxW,KAAK0kB,cACVrF,WAAY+G,EACZrK,MAAO4J,EACPxG,YAAaA,EACbC,aAAcA,EACd9b,MAAM,EACNwa,YAAa9d,KAAKokB,mBAG1B,kBAACiC,EAAA,EAAD,CACI5gB,WAAW,SACX8e,QAASA,EACT+B,GAAIzN,EACJ0N,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACIpf,OAAQ6d,EACR3U,KAAMD,EACNqE,gBAAiB1U,KAAKuU,oBACtB1Q,QAAS7D,KAAKkZ,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa5V,KAAM4zC,EAAa3yB,QAASA,EAAS1gB,QAAS7D,KAAKkxD,oBAC5D,kBAAC,GAAD,CACInY,aAAc/4C,KAAK4kB,eACnB7I,MAAOu1C,EACPjyC,WAAYkyC,KAIpB,kBAAC,GAAD,CAAajuD,KAAMstD,EAAcrsC,QAASA,EAAS1gB,QAAS7D,KAAKmxD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa7tD,KAAMotD,EAAcnsC,QAASA,EAAS1gB,QAAS7D,KAAKqtD,qBAC7D,kBAAC,GAAD,CAAUjmD,OAAQupD,KAGtB,kBAAC,GAAD,CAAartD,KAAMutD,EAActsC,QAASA,EAAS1gB,QAAS7D,KAAKoxD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa9tD,KAAMwtD,EAAgBvsC,QAASA,EAAS1gB,QAAS7D,KAAKqxD,uBAC/D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAleEzvD,aCsCP4vD,G,2MA9DXnxD,MAAQ,CACJ+G,OAAQ7E,IAAiB8tC,c,EAmB7BohB,iCAAmC,SAAAxqD,GAC3B1E,IAAiBmvD,oBACjB,EAAKruD,e,EAIbsuD,2BAA6B,SAAA1qD,GAAW,IAC5BG,EAAWH,EAAXG,OAER,EAAKrG,SAAS,CAAEqG,Y,EAGpB/D,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,OAAQ,K,qFA/BME,EAAWC,EAAWmU,GAAc,IAC9CtU,EAAWpH,KAAKK,MAAhB+G,OAER,OAAOG,EAAUH,SAAWA,I,0CAI5B7E,IAAiBkF,GAAG,2BAA4BzH,KAAK2xD,4BACrDpvD,IAAiBkF,GAAG,iCAAkCzH,KAAKyxD,oC,6CAI3DlvD,IAAiBmF,IAAI,2BAA4B1H,KAAK2xD,4BACtDpvD,IAAiBmF,IAAI,iCAAkC1H,KAAKyxD,oC,+BAsBtD,IACErqD,EAAWpH,KAAKK,MAAhB+G,OACR,OAAKA,EAGD,kBAAC,IAAD,CACI9D,MAAI,EACJI,QAASC,IACTC,mBAAoB,EACpBC,QAAS7D,KAAKqD,YACduB,QAAS,CACLC,KAAM,wBACN0sB,UAAW,6BACXw/B,MAAO,2BAEX,kBAAC,GAAD,CAAU1vD,UAAU,2BAA2B+F,OAAQA,EAAQgT,OAAK,KAbxD,S,GA1CCzY,IAAMC,W,oDCNpBC,gBACX,0BAAMC,EAAE,6zBACR,QCFWD,gBACX,0BAAMC,EAAE,uuBACR,cCFWD,gBACX,0BAAMC,EAAE,uzCACR,U,qBCYE8vD,I,kNACFvxD,MAAQ,CACJq2C,SAAU,M,EAGdmb,gBAAkB,SAAA1vD,GACd,EAAKpB,SAAS,CAAE21C,SAAUv0C,EAAMw0C,iB,EAGpCC,gBAAkB,WACd,EAAK71C,SAAS,CAAE21C,SAAU,Q,EAG9Bob,kBAAoB,WAChB,EAAKlb,kBADiB,IAGdmb,EAAkB,EAAKjxD,MAAvBixD,cACHA,GAELz1C,WAAW,kBAAMy1C,KAAiBC,O,EAGtCC,qBAAuB,WACnB,EAAKrb,kBADoB,IAGjBsb,EAAqB,EAAKpxD,MAA1BoxD,iBACHA,GAEL51C,WAAW,kBAAM41C,KAAoBF,O,EAGzCG,iBAAmB,WACf,EAAKvb,kBADgB,IAGbwb,EAAiB,EAAKtxD,MAAtBsxD,aACHA,GAELA,K,wEAGM,IAAD,EAC0BpyD,KAAKc,MAAnB2C,GADZ,EACGmB,QADH,EACYnB,GAAG2D,EADf,EACeA,OACZsvC,EAAa12C,KAAKK,MAAlBq2C,SAER,OACI,oCACI,kBAAChgC,EAAA,EAAD,CACIrV,UAAU,uBACVgD,aAAW,SACXf,KAAMoC,QAAQgxC,GACdnxC,QAASvF,KAAK6xD,iBACd,kBAACQ,GAAD,OAEJ,kBAAC5a,GAAA,EAAD,CACIh5C,GAAG,cACHi4C,SAAUA,EACVpzC,KAAMoC,QAAQgxC,GACdgB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBpsC,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhB9G,QAAS,CACLmsD,MAAO,uBAEXltD,QAAS7D,KAAK42C,iBACd,kBAAC7qC,GAAA,EAAD,CAAUxG,QAASvF,KAAK8xD,kBAAmB58B,UAAWo9B,aAAqBlrD,IACvE,kBAAC4E,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,kBAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKiyD,qBAAsB/8B,UAAWo9B,aAAqBlrD,IAC1E,kBAAC4E,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,sBAE3Bu3B,cAAc5zB,IACZ,kBAAC2E,GAAA,EAAD,CAAUxG,QAASvF,KAAKmyD,iBAAkBj9B,UAAWq9B,aAAanrD,IAC9D,kBAAC4E,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,iB,GAzF1B9B,IAAMC,YAyGlBsD,iBAAkB0sD,I,8BC1H1B,SAASY,GAAUC,GAAsB,IAAhBC,EAAe,wDAC3C,GAAKD,EAAL,CAEA,GAAIC,GAASD,EAAKj5C,YAAci5C,EAAKj5C,WAAWpT,OAAS,EAAG,CACxD,IAAMusD,EAAWF,EAAKj5C,WAAWi5C,EAAKj5C,WAAWpT,OAAS,GACpDqT,EAAQhC,SAASiC,cACvBD,EAAME,SAASg5C,EAAUA,EAASvsD,QAClCqT,EAAMG,UAAS,GAEf,IAAMC,EAAYC,OAAOC,eACzBF,EAAUG,kBACVH,EAAUI,SAASR,GAEnBg5C,EAAK39C,UAAY29C,EAAKz9C,aAG1By9C,EAAKv4C,SCfT,IAAMtG,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFg/C,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPlnD,GACN,MAA0C,qBAA5B7L,KAAK6yD,QAAQhnD,EAAEgL,UAEjCm8C,eANiB,SAMFnnD,GACX,MAA+C,qBAAjC7L,KAAK8yD,aAAajnD,EAAEgL,WAI1C+7C,GAAMC,QAAQj/C,KAAqB,EACnCg/C,GAAMC,QAAQj/C,KAAiB,EAC/Bg/C,GAAMC,QAAQj/C,KAAgB,EAC9Bg/C,GAAMC,QAAQj/C,KAAe,EAC7Bg/C,GAAMC,QAAQj/C,KAAkB,EAEhCg/C,GAAME,aAAal/C,KAAmB,EACtCg/C,GAAME,aAAal/C,KAAqB,EACxCg/C,GAAME,aAAal/C,KAAqB,EACxCg/C,GAAME,aAAal/C,KAAsB,E,WClBnCq/C,G,YACF,WAAYnyD,GAAQ,IAAD,8BACf,4CAAMA,KASVoyD,QAAU,WACN,OAAO,EAAKC,cAAct+C,QAAQkC,WAXnB,EAcnBmD,MAAQ,WAAoB,IAAnBw4C,EAAkB,wDACjBD,EAAO,EAAKU,cAAct+C,QAEhC29C,GAAUC,EAAMC,IAjBD,EAoBnB1nD,aAAe,WAAO,IAAD,EACY,EAAKlK,MAA1ByhB,EADS,EACTA,OAAQtX,EADC,EACDA,SACXsX,GACAtX,GAELA,EAASsX,EAAO9jB,KAzBD,EA4BnBkZ,YAAc,SAAAxV,GAAU,IACZogB,EAAW,EAAKzhB,MAAhByhB,OAERpgB,EAAMwI,iBAEN,IAAM8nD,EAAO,EAAKU,cAAct+C,QAC1BzO,EAASqsD,EAAKW,QAAQhtD,OAEtBkK,GADYmiD,EAAKW,QAAQC,UAClB,EAAKH,WAElB,EAAKnyD,SAAS,CACVuyD,aAAcltD,EAASkK,EAAKlK,SAGhC1F,KAAgBsf,aAAa,CACzB,QAAS,yBACTvhB,GAAI8jB,EAAO9jB,GACX6R,UA7CW,EAiDnBjB,cAAgB,SAAAlN,GACZ,IAAMswD,EAAO,EAAKU,cAAct+C,QAC1Bw+C,EAAYZ,EAAKW,QAAQC,UAEzBjtD,EADY,EAAK8sD,UACE9sD,OAErBmtD,GAAe,EACb15C,EAAYC,OAAOC,eACnBg5C,EAAYH,GAAMG,UAAU5wD,GAC5B6wD,EAAiBJ,GAAMI,eAAe7wD,GAM5C,OAJI0X,IACA05C,IAAiB15C,EAAU25C,YAGvBrxD,EAAMyD,KACV,IAAK,YAED,IADa,EAAKstD,UACP,CAAC,IAAD,EACsB,EAAKpyD,MAA1ByhB,EADD,EACCA,OAAQtX,EADT,EACSA,SAMhB,OALIA,GACAA,EAASsX,EAAO9jB,IAAI,GAGxB0D,EAAMwI,kBACC,EAGX,MAEJ,IAAK,QAAU,IAAD,EACsB,EAAK7J,MAA7ByhB,EADE,EACFA,OAAQkxC,EADN,EACMA,YAMhB,OALIlxC,GAAUkxC,GACVA,EAAYlxC,EAAO9jB,IAGvB0D,EAAMwI,kBACC,EAEX,IAAK,UACD,IAAMkP,EAAYC,OAAOC,eACzB,IAAKF,EAAW,MAChB,IAAKA,EAAU65C,YAAa,MAE5B,IAAMn1B,EAAak0B,EAAKj5C,YAAci5C,EAAKj5C,WAAWpT,OAAS,EAAIqsD,EAAKj5C,WAAW,GAAK,KAExF,IAAK+kB,GAAe1kB,EAAU85C,aAAep1B,IAAe1kB,EAAU+5C,aAAe,CAAC,IAAD,EACjD,EAAK9yD,MAA7ByhB,EADyE,EACzEA,OAAQsxC,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAYtxC,EAAO9jB,IAGvB0D,EAAMwI,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkP,EAAYC,OAAOC,eACzB,IAAKF,EAAW,MAChB,IAAKA,EAAU65C,YAAa,MAE5B,IAAMI,EACFrB,EAAKj5C,YAAci5C,EAAKj5C,WAAWpT,OAAS,EAAIqsD,EAAKj5C,WAAWi5C,EAAKj5C,WAAWpT,OAAS,GAAK,KAElG,IAAK0tD,GAAcj6C,EAAU85C,aAAeG,GAAaj6C,EAAU+5C,eAAiBE,EAAU1tD,OAAS,CAAC,IAAD,EACnE,EAAKtF,MAA7ByhB,EAD2F,EAC3FA,OAAQkxC,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYlxC,EAAO9jB,IAGvB0D,EAAMwI,kBACC,GAOnB,SAAIooD,IAAaC,OAIb5sD,GAAUitD,IAAcE,KACxBpxD,EAAMwI,kBACC,KAvII,EA6InB0M,YAAc,SAAAlV,GACVA,EAAMwI,iBAEN,IACM0oD,EADO,EAAKF,cAAct+C,QACTu+C,QAAQC,UAEzBx5C,EAAYC,OAAOC,eACnBg6C,EAAkBl6C,EAAYA,EAAU25C,WAAa,GAErDz8C,EAAY,EAAKm8C,UACvB,KAAIn8C,EAAU3Q,OAASyT,EAAUzT,QAAUitD,GAA3C,CAEA,IAAIW,EAAY7xD,EAAMoV,cAAcC,QAAQ,cACvCw8C,IAELA,EAAYA,EAAUt0C,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtD3I,EAAU3Q,OAAS2tD,EAAgB3tD,OAAS4tD,EAAU5tD,OAASitD,IAC/DW,EAAYA,EAAUhiD,OAAO,EAAGqhD,EAAYt8C,EAAU3Q,OAAS2tD,EAAgB3tD,SAEnFqR,SAASC,YAAY,cAAc,EAAOs8C,MAjK3B,EAoKnB9xD,aAAe,WAAO,IACVqgB,EAAW,EAAKzhB,MAAhByhB,OACHA,GAEL7hB,KAAgBsf,aAAa,CACzB,QAAS,+BACTvhB,GAAI8jB,EAAO9jB,MAvKf,EAAK00D,cAAgBxxD,IAAMoU,YAE3B,EAAK1V,MAAQ,CACTizD,aAAcW,OANH,E,sEA8KT,IAAD,EACiBj0D,KAAKc,MAAnB2C,EADH,EACGA,EAAG8e,EADN,EACMA,OACH+wC,EAAiBtzD,KAAKK,MAAtBizD,aAEAY,EAAc3xC,EAAd2xC,UAER,OACI,yBAAK7yD,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAACqD,EAAA,EAAD,CACIkB,IAAK4K,KAAKxR,MACV4F,QAAS,CAAEC,KAAM,0BACjBlC,MAAM,UACNu5B,QAASg4B,EACT3vD,SAAUvE,KAAKkC,eAEnB,yBACIsU,IAAKxW,KAAKmzD,cACV9xD,UAAU,0BACV4W,iBAAe,EACfC,gCAA8B,EAC9BF,YAAavU,EAAE,UACf0wD,cAAaC,MACbC,kBAAiBJ,MACjB37C,QAAStY,KAAK2X,YACdQ,UAAWnY,KAAKqP,cAChBgJ,QAASrY,KAAKqX,eAGtB,yBAAKhW,UAAU,oCACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,4BAA4BkE,QAASvF,KAAKgL,cAC5D,kBAAC2L,EAAA,EAAD,CAAW29C,SAAS,YAG5B,yBAAKjzD,UAAU,qCACdiyD,GAAgBc,MAAqBG,OAClC,kBAAC,KAAD,CACIC,MAAM,SACNnzD,UAAU,8BACVsB,MAAO2wD,GAAgB,EAAI,gBAAkB,QAC7Cj3B,QAAQ,aACPi3B,Q,GAxNM3xD,IAAMC,WA6OtBkD,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQmuD,I,UCvNjBwB,I,mBACF,WAAY3zD,GAAQ,IAAD,8BACf,4CAAMA,KAsCV4zD,0BAA4B,SAAAztD,GAAW,IAC3B0tD,EAASC,KAATD,KAER,EAAK5zD,SAAS,CACV8zD,SAAS,EACTvB,aAAcwB,MACdH,UA7CW,EAiDnBI,+BAAiC,SAAA9tD,GAAW,IAChC0tD,EAASC,KAATD,KAEFlC,EAAO,EAAKuC,YAAYngD,QACxBzO,EAASqsD,EAAKW,QAAQhtD,OACtB2Q,EAAY07C,EAAK17C,UAEvB,EAAKhW,SAAS,CACVuyD,aAAcltD,EAAS2Q,EAAU3Q,OACjCuuD,UA1DW,EA8DnBM,uBAAyB,SAAAhuD,GAAW,IACxB0tD,EAASC,KAATD,KAER,EAAK5zD,SAAS,CAAE4zD,UAjED,EAoEnBO,gCAAkC,SAAAjuD,GAAW,IACjC0tD,EAASC,KAATD,KAER,EAAK5zD,SAAS,CAAE4zD,QAAQ,WACpBr4C,WAAW,WACM,EAAK64C,cAAc5uD,IAAIouD,EAAKr2D,QAAQ8H,OAAS,GAErD8T,OAAM,QA3EJ,EA0FnB7K,cAAgB,SAAAlN,GACZ,IAAMswD,EAAO,EAAKuC,YAAYngD,QACxBw+C,EAAYZ,EAAKW,QAAQC,UAEzBjtD,EADYqsD,EAAK17C,UACE3Q,OAErBmtD,GAAe,EACb15C,EAAYC,OAAOC,eACnBg5C,EAAYH,GAAMG,UAAU5wD,GAC5B6wD,EAAiBJ,GAAMI,eAAe7wD,GAM5C,OAJI0X,IACA05C,IAAiB15C,EAAU25C,YAGvBrxD,EAAMyD,KACV,IAAK,QACD,IAAKzD,EAAM+oB,SAIP,OAHA,EAAKkqC,sBAAsB,GAE3BjzD,EAAMwI,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkP,EAAYC,OAAOC,eACzB,IAAKF,EAAW,MAChB,IAAKA,EAAU65C,YAAa,MAE5B,IAAMI,EACFrB,EAAKj5C,YAAci5C,EAAKj5C,WAAWpT,OAAS,EAAIqsD,EAAKj5C,WAAWi5C,EAAKj5C,WAAWpT,OAAS,GAAK,KAElG,IAAK0tD,GAAcj6C,EAAU85C,aAAeG,GAAaj6C,EAAU+5C,eAAiBE,EAAU1tD,OAI1F,OAHA,EAAKgvD,sBAAsB,GAE3BjzD,EAAMwI,kBACC,EAOnB,SAAIooD,IAAaC,OAIb5sD,GAAUitD,IAAcE,KACxBpxD,EAAMwI,kBACC,KA7II,EAmJnB0M,YAAc,SAAAlV,GACVA,EAAMwI,iBAEN,IAAM8nD,EAAO,EAAKuC,YAAYngD,QACxBw+C,EAAYZ,EAAKW,QAAQC,UAEzBx5C,EAAYC,OAAOC,eACnBg6C,EAAkBl6C,EAAYA,EAAU25C,WAAa,GAErDz8C,EAAY07C,EAAK17C,UACvB,KAAIA,EAAU3Q,OAASyT,EAAUzT,QAAUitD,GAA3C,CAEA,IAAIW,EAAY7xD,EAAMoV,cAAcC,QAAQ,cACvCw8C,IAEDj9C,EAAU3Q,OAAS2tD,EAAgB3tD,OAAS4tD,EAAU5tD,OAASitD,IAC/DW,EAAYA,EAAUhiD,OAAO,EAAGqhD,EAAYt8C,EAAU3Q,OAAS2tD,EAAgB3tD,SAEnFqR,SAASC,YAAY,cAAc,EAAOs8C,MArK3B,EAwKnBr8C,YAAc,SAAAxV,GACVA,EAAMwI,iBAEN,IAAM8nD,EAAO,EAAKuC,YAAYngD,QAGxBkC,EAAY07C,EAAK17C,UAGL,SAFA07C,EAAKr7C,YAGnBq7C,EAAK17C,UAAY,IAOrBrW,KAAgBsf,aAAa,CACzB,QAAS,2BACTq1C,SAAUt+C,KA3LC,EA+LnBu+C,gBAAkB,WAAO,IACbX,EAAS,EAAKt0D,MAAds0D,KACR,GAAKA,KAEeA,EAAZr2D,QACI8H,QAAUmvD,OAAtB,CAEA,IAAMhzC,EAAS,CACX9jB,GAAI+R,KAAKxR,MACTsR,KAAM,IAGV5P,KAAgBsf,aAAa,CACzB,QAAS,4BACTuC,aA7MW,EAiNnBizC,mBAAqB,SAAC/2D,GAA2B,IAAvBg3D,EAAsB,wDACxCA,EACA,EAAKC,wBAAwBj3D,GAE7B,EAAKuM,aAAavM,IArNP,EAyNnBuM,aAAe,SAAAvM,GACXiC,KAAgBsf,aAAa,CACzB,QAAS,+BACTvhB,QA5NW,EAgOnBi3D,wBAA0B,SAAAj3D,GAAO,IACrBk2D,EAAS,EAAKt0D,MAAds0D,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBr2D,EAAYq2D,EAAZr2D,QAEFic,EAAQjc,EAAQ+f,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOA,IACxCk3D,EAAYp7C,EAAQ,EACtBq7C,GAAe,EACVjvD,EAAI4T,EAAO5T,EAAIrI,EAAQ8H,OAAQO,IAAK,CAEzC,GADiBrI,EAAQqI,GAAjB2J,KACE,CACNslD,GAAe,EACf,OAIJA,GACA,EAAKJ,mBAAmB/2D,GAG5B,IAAMo3D,EAAW,EAAKV,cAAc5uD,IAAIovD,GACxC,GAAKE,EAOLA,EAAS37C,OAAM,QAJXs4C,GAFgB,EAAKwC,YAAYngD,SAEd,KAzPR,EAgQnBihD,sBAAwB,SAAAr3D,GAAO,IACnBk2D,EAAS,EAAKt0D,MAAds0D,KACR,GAAKA,EAAL,CAF0B,IAOpBgB,EAHchB,EAAZr2D,QAEc+f,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOA,IACpB,EAEpBo3D,EAAW,EAAKV,cAAc5uD,IAAIovD,GACxC,GAAKE,EAOLA,EAAS37C,OAAM,QAJXs4C,GAFgB,EAAKwC,YAAYngD,SAEd,KA7QR,EAoRnBugD,sBAAwB,SAAA32D,GAAO,IACnBk2D,EAAS,EAAKt0D,MAAds0D,KACR,GAAKA,EAAL,CAF0B,IAIlBr2D,EAAYq2D,EAAZr2D,QAEFic,EAAQjc,EAAQ+f,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOA,IACxCs3D,EAAYx7C,EAAQ,EAEpBy7C,EAAW,EAAKb,cAAc5uD,IAAIwvD,GACxC,GAAKC,EAULA,EAAS97C,MAAM87C,GAAU,OAVzB,CACI,IAAM1lD,EAAOiK,GAAS,GAAKA,EAAQjc,EAAQ8H,OAAS9H,EAAQic,GAAOjK,KAAO,GAC1E,GAAIhS,EAAQ8H,SAAWkK,EACnB,OAGJ,EAAKglD,qBApSM,EA2SnBW,QAAU,WAAO,IACLtB,EAAS,EAAKt0D,MAAds0D,KACR,GAAKA,EAAL,CAFY,IAIJr2D,EAAYq2D,EAAZr2D,QAEF43D,EAAWX,MAAyBj3D,EAAQ8H,OAElD,OAAI8vD,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBX,MAAyBj3D,EAAQ8H,OAAvD,oBA1Te,EA6TnB/C,YAAc,WAAO,IACTsxD,EAAS,EAAKt0D,MAAds0D,KAEJwB,aAAYxB,GACZ,EAAK5zD,SAAS,CAAE8zD,SAAS,IAEzB,EAAKuB,0BAnUM,EAuUnBp+B,WAAa,WAAO,IACRq+B,EAAW,EAAKv1D,MAAhBu1D,OAEFC,EAAmB1B,KAAU2B,sBAC9BD,IAELD,EAAOC,GAEP,EAAKF,2BA/UU,EAkVnBI,wBAA0B,WACtB,EAAKz1D,SAAS,CAAE8zD,SAAS,KAnVV,EAsVnBuB,uBAAyB,WACrB,EAAKI,0BAEL91D,KAAgBsf,aAAa,CACzB,QAAS,4BA1VE,EA8VnBy2C,sBAAwB,WACpB/1D,KAAgBsf,aAAa,CACzB,QAAS,qCAhWE,EAoWnB02C,iCAAmC,WAC/Bh2D,KAAgBsf,aAAa,CACzB,QAAS,gDAtWE,EA0WnB22C,iBAAmB,WACfj2D,KAAgBsf,aAAa,CACzB,QAAS,gCA5WE,EAgXnBqX,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,kBAAMgyB,EAAcC,KAC7B,kBAAC7gB,EAAA,EAAD,WA7XG,EAmYnBigD,gCAAkC,SAAAz0D,GAAU,IAChCsB,EAAM,EAAK3C,MAAX2C,EACAkxD,EAAS,EAAKt0D,MAAds0D,KACHA,IAEmC,iBAAvBA,EAAKvyD,KAAK,WAEvBD,EAAMyI,kBAEN,EAAKysB,sBAAsB5zB,EAAE,8BAzYjC,EAAKuxD,YAAcrzD,IAAMoU,YACzB,EAAKo/C,cAAgB,IAAI1uD,IAEzB,EAAKpG,MAAQ,CACTs0D,KAAM,KACNE,SAAS,EACTvB,aAAcwB,OATH,E,iFAcfF,KAAUntD,GAAG,+BAAgCzH,KAAKi1D,wBAClDL,KAAUntD,GAAG,kCAAmCzH,KAAKi1D,wBACrDL,KAAUntD,GAAG,6CAA8CzH,KAAKi1D,wBAChEL,KAAUntD,GAAG,6BAA8BzH,KAAKi1D,wBAChDL,KAAUntD,GAAG,yBAA0BzH,KAAKi1D,wBAC5CL,KAAUntD,GAAG,+BAAgCzH,KAAKi1D,wBAClDL,KAAUntD,GAAG,sBAAuBzH,KAAK00D,2BACzCE,KAAUntD,GAAG,4BAA6BzH,KAAKk1D,iCAC/CN,KAAUntD,GAAG,yBAA0BzH,KAAKi1D,wBAC5CL,KAAUntD,GAAG,2BAA4BzH,KAAK+0D,kC,6CAI9CH,KAAUltD,IAAI,+BAAgC1H,KAAKi1D,wBACnDL,KAAUltD,IAAI,kCAAmC1H,KAAKi1D,wBACtDL,KAAUltD,IAAI,6CAA8C1H,KAAKi1D,wBACjEL,KAAUltD,IAAI,6BAA8B1H,KAAKi1D,wBACjDL,KAAUltD,IAAI,yBAA0B1H,KAAKi1D,wBAC7CL,KAAUltD,IAAI,+BAAgC1H,KAAKi1D,wBACnDL,KAAUltD,IAAI,sBAAuB1H,KAAK00D,2BAC1CE,KAAUltD,IAAI,4BAA6B1H,KAAKk1D,iCAChDN,KAAUltD,IAAI,yBAA0B1H,KAAKi1D,wBAC7CL,KAAUltD,IAAI,2BAA4B1H,KAAK+0D,kC,yCA4ChC7zD,EAAWC,EAAWC,GAAW,IAAD,OAC9BpB,KAAKK,MAAds0D,OAEKxzD,EAAUwzD,MACnBr4C,WAAW,WACPk2C,GAAU,EAAKwC,YAAYngD,SAAS,IACrC,K,+BA0TD,IAAD,OACGpR,EAAMzD,KAAKc,MAAX2C,EADH,EAEmCzD,KAAKK,MAArCizD,EAFH,EAEGA,aAAcuB,EAFjB,EAEiBA,QAASF,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,IAKGkC,EAAiBlC,EAAjBkC,aAEFv4D,EAAUq2D,EAAOA,EAAKr2D,QAAU,GAChCw4D,EAAuBnC,EAAKvyD,KAAK20D,uBACjCC,EAAsD,oBAAvBrC,EAAKvyD,KAAK,SACzC60D,EAAkC,iBAAvBtC,EAAKvyD,KAAK,SAE3BpC,KAAKm1D,cAAcj0C,QACnB,IAAMnF,EAAQzd,EAAQsR,IAAI,SAAC1Q,EAAGyH,GAAJ,OACtB,kBAAC,GAAD,CACI6P,IAAK,SAAA/E,GAAE,OAAI,EAAK0jD,cAAcplD,IAAIpJ,EAAG8K,IACrC7L,IAAK1G,EAAET,GACP8jB,OAAQrjB,EACR+L,SAAU,EAAKuqD,mBACf3B,YAAa,EAAKiC,sBAClBrC,YAAa,EAAK2B,0BAIpB8B,EAAe3B,MAAyBj3D,EAAQ8H,OAAS,EACzD0R,EAAO9X,KAAKi2D,UAElB,OACI,oCACI,kBAAC,IAAD,CACI50D,UAAWoE,IAAW,qBAAsB,CAAE,qBAAsBwxD,IACpE3zD,MAAI,EACJI,QAASC,IACTC,mBAAoB,EACpBC,QAAS7D,KAAKqD,YACdS,kBAAgB,gBAChB,kBAAC,IAAD,CAAarF,GAAG,gBAAgBgF,EAAE,YAClC,kBAAC,IAAD,CAAemB,QAAS,CAAEC,KAAM,4BAC5B,yBAAKxD,UAAU,qCACX,kBAAC+6B,GAAA,EAAD,CAAYz5B,MAAM,UAAU05B,QAAQ,YAAYzuB,MAAO,CAAEupD,SAAU,IAC9D1zD,EAAE,aAEN6vD,GAAgB8D,MAAuBC,OACpC,kBAACj7B,GAAA,EAAD,CAAYz5B,MAAO2wD,GAAgB,EAAI,gBAAkB,QAASj3B,QAAQ,aACrEi3B,IAIb,yBACI98C,IAAKxW,KAAKg1D,YACVv2D,GAAG,8BACHwZ,iBAAe,EACfC,gCAA8B,EAC9BF,YAAavU,EAAE,gBACf0wD,cAAaiD,MACb/C,kBAAiBS,MACjBz8C,QAASrY,KAAKqX,YACdc,UAAWnY,KAAKqP,cAChBiJ,QAAStY,KAAK2X,cAElB,kBAAC2/C,GAAA,EAAD,CAASj2D,UAAU,YACnB,kBAAC+6B,GAAA,EAAD,CAAYz5B,MAAM,UAAU05B,QAAQ,aAC/B54B,EAAE,gBAEP,kBAAC,KAAD,CAAMmB,QAAS,CAAEC,KAAM,4BAClBkX,EACAm7C,GACG,kBAAChsD,GAAA,EAAD,CACIqqB,UAAU,EACVl0B,UAAU,yBACV8J,QAAM,EACN5F,QAASvF,KAAKs1D,iBACd,kBAACppD,GAAA,EAAD,CAAcqrD,mBAAiB,EAAC90D,QAASgB,EAAE,mBAIvD,kBAAC24B,GAAA,EAAD,KAAatkB,GACb,kBAACw/C,GAAA,EAAD,CAASj2D,UAAU,YACnB,kBAAC+6B,GAAA,EAAD,CAAYz5B,MAAM,UAAU05B,QAAQ,aAC/B54B,EAAE,aAEP,kBAAC+zD,GAAA,EAAD,KACI,kBAAChzD,EAAA,EAAD,CACIC,QACI,kBAACu3B,GAAA,EAAD,CACIr5B,MAAM,UACNu5B,QAAS26B,EACTtyD,SAAUvE,KAAKy2D,wBAGvB9xD,MAAOlB,EAAE,mBAEb,yBAAK8B,QAASvF,KAAK42D,gCAAiChpD,MAAO,CAAE6pD,WAAY,gBACrE,kBAACjzD,EAAA,EAAD,CACIC,QACI,kBAACu3B,GAAA,EAAD,CACIr5B,MAAM,UACNuyB,SAAU8hC,EACV96B,QAAS46B,EACTvyD,SAAUvE,KAAK02D,mCAGvB/xD,MAAOlB,EAAE,mBAGjB,kBAACe,EAAA,EAAD,CACIC,QACI,kBAACu3B,GAAA,EAAD,CAAUr5B,MAAM,UAAUu5B,QAAS+6B,EAAU1yD,SAAUvE,KAAK22D,mBAEhEhyD,MAAOlB,EAAE,eAGjB,kBAAC24B,GAAA,EAAD,KAAa34B,EAAE,cAEnB,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ/3B,MAAM,UAAU4C,QAASvF,KAAKqD,aACjCI,EAAE,WAENi0D,aAAY/C,IACT,kBAACj6B,GAAA,EAAD,CAAQ/3B,MAAM,UAAU4C,QAASvF,KAAKg4B,YACjCv0B,EAAE,aAKnB,kBAAC,IAAD,CACIpC,UAAU,0BACViC,KAAMuxD,EACNnxD,QAASC,IACTC,mBAAoB,EACpBC,QAAS7D,KAAKw2D,wBACd1yD,kBAAgB,gBAChB,kBAAC,IAAD,CAAarF,GAAG,gBAAgBgF,EAAE,yBAClC,kBAAC,IAAD,CAAemB,QAAS,CAAEC,KAAM,4BAC3BpB,EAAE,wBAEP,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ/3B,MAAM,UAAU4C,QAASvF,KAAKw2D,yBACjC/yD,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQ/3B,MAAM,UAAU4C,QAASvF,KAAKo2D,wBACjC3yD,EAAE,c,GA9hBA9B,IAAMC,YAkjBtBkD,GAPCC,YACZC,cACAE,cACA01B,gBACAz1B,cAGWL,CAAQ2vD,I,SC1kBjBkD,I,mBACF,WAAY72D,GAAQ,IAAD,8BACf,4CAAMA,KAuGV82D,kBAAoB,SAAAz1D,GACE,UAAdA,EAAMyD,MACN,EAAKiyD,YAAYhjD,QAAQqF,QACzB/X,EAAMwI,iBACNxI,EAAMyI,oBA5GK,EAgHnBktD,iBAAmB,SAAA31D,GACG,UAAdA,EAAMyD,MACN,EAAKi1C,aACL14C,EAAMwI,iBACNxI,EAAMyI,oBApHK,EAwHnBmtD,iBAAmB,SAAA51D,GACf,EAAKpB,SAAS,CACVuP,KAAMnO,EAAME,OAAOC,SA1HR,EA8HnB01D,gBAAkB,SAAA71D,GACd,EAAKpB,SAAS,CACVqS,IAAKjR,EAAME,OAAOC,SAhIP,EAoInBu4C,WAAa,WAAO,IAAD,EACqB,EAAK/5C,MAAjCm3D,EADO,EACPA,YAAaC,EADN,EACMA,WADN,EAEK,EAAK73D,MAAnBiQ,EAFS,EAETA,KAAM8C,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAM8kD,GAD3B5nD,EAAgB,OAATA,EAAgBA,EAAO2nD,IAGhB7kD,EAAd,CAKA,IAAK9C,EAGD,OAFA,EAAKvP,SAAS,CAAEo3D,WAAW,SAC3B,EAAKC,aAAavjD,QAAQqF,QAK9B,KADA9G,EAAMilD,aAAYjlD,IAId,OAFA,EAAKrS,SAAS,CAAEu3D,UAAU,SAC1B,EAAKT,YAAYhjD,QAAQqF,SAM7B4oC,EAFmB,EAAKhiD,MAAhBgiD,QAEDxyC,EAAM8C,QAnBT,EAAKglD,aAAavjD,QAAQqF,SA5If,EAkKnB4hC,aAAe,YAGXyc,EAFqB,EAAKz3D,MAAlBy3D,aAhKR,EAAKC,QAAU72D,IAAMoU,YACrB,EAAKqiD,aAAez2D,IAAMoU,YAC1B,EAAK0iD,OAAS92D,IAAMoU,YACpB,EAAK8hD,YAAcl2D,IAAMoU,YAEzB,EAAK1V,MAAQ,GARE,E,gFAWAa,EAAWC,EAAWC,GAAW,IAAD,SACLpB,KAAKc,MAAvCm3D,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAY50D,EADc,EACdA,KAE7BA,GAAQpC,EAAUoC,OAASA,GAC3BgZ,WAAW,WACP,IAAMhM,EAAO,EAAK8nD,aAAavjD,QACzBzB,EAAM,EAAKykD,YAAYhjD,QAExBvE,GACA8C,IAEA6kD,EAEOC,GAGR5nD,EAAK4J,QACL5J,EAAKgmB,UAHLljB,EAAI8G,QAFJ5J,EAAK4J,UAOV,K,yFAyBW5S,EAAWC,EAAWmU,GAAc,IAAD,EACO1b,KAAKc,MAAzDm3D,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAYpV,EADoB,EACpBA,OAAQyV,EADY,EACZA,SAAUj1D,EADE,EACFA,KADE,EAErBtD,KAAKK,MAA7B83D,EAF6C,EAE7CA,UAAWG,EAFkC,EAElCA,SAEnB,OAAIhxD,EAAU2wD,cAAgBA,IAI1B3wD,EAAU4wD,aAAeA,IAIzB3wD,EAAU4wD,YAAcA,IAIxB5wD,EAAU+wD,WAAaA,IAIvBhxD,EAAUw7C,SAAWA,IAIrBx7C,EAAUixD,WAAaA,GAIvBjxD,EAAUhE,OAASA,S,+BAqFjB,IAAD,EACwCtD,KAAKc,MAA1CwC,EADH,EACGA,KAAM40D,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAax0D,EADlC,EACkCA,EADlC,EAE2BzD,KAAKK,MAA7B83D,EAFH,EAEGA,UAAWG,EAFd,EAEcA,SACnB,OAAKh1D,EAGD,kBAAC,IAAD,CACII,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS7D,KAAK87C,aACdh4C,kBAAgB,yBAChB,kBAAC,IAAD,CAAarF,GAAG,yBAAyBgF,EAAE,eAC3C,kBAAC,IAAD,KACI,yBAAKmK,MAAO,CAAE8qD,QAAS,OAAQC,cAAe,SAAU9qD,MAAO,MAC3D,kBAACoxC,GAAA,EAAD,CACIzoC,IAAKxW,KAAKw4D,QACV5gD,SAAU5X,KAAKo4D,aACfzzD,MAAOlB,EAAE,QACT05C,OAAO,SACPyb,aAAa,MACb1Z,aAAc+Y,EACd5jD,MAAO8jD,EACP5zD,SAAUvE,KAAK+3D,iBACf5/C,UAAWnY,KAAK43D,oBAEpB,kBAAC3Y,GAAA,EAAD,CACIzoC,IAAKxW,KAAKy4D,OACV7gD,SAAU5X,KAAK63D,YACflzD,MAAOlB,EAAE,OACT05C,OAAO,SACPyb,aAAa,MACb1Z,aAAcgZ,EACd7jD,MAAOikD,EACP/zD,SAAUvE,KAAKg4D,gBACf7/C,UAAWnY,KAAK83D,qBAI5B,kBAACr9B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAK87C,aAAcn5C,MAAM,WACrCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK66C,WAAYl4C,MAAM,WACnCc,EAAE,aAzCD,Q,gDAjFU3C,EAAOT,GACnC,OAAIA,EAAMw4D,WAAa/3D,EAAMwC,KAClB,CACHu1D,UAAU,EACVV,WAAW,EACXG,UAAU,EACVhoD,KAAM,KACN8C,IAAK,MAIN,S,GAtGazR,IAAMC,YAqOnBsD,iBAAkByyD,ICpJlBmB,I,kNA/DXC,mBAAqB,SAAA9xD,GAAW,IAAD,EACc,EAAKnG,MAAtCsG,EADmB,EACnBA,OAAQqH,EADW,EACXA,UAAWuqB,EADA,EACAA,UAC3B,GAAKA,EAAL,CAEA,IAAM9rB,EAAO8rB,EAAUnsB,OAASmsB,EAAU9rB,KACrCA,GAEDjG,EAAOG,SAAWA,GAAUH,EAAOwH,YAAcA,GAAaxH,EAAO0F,SAAWO,EAAKzO,IACrF,EAAKyI,gB,mFA3BTkG,KAAU3F,GAAG,qCAAsCzH,KAAK+4D,oBACxD3rD,KAAU3F,GAAG,iCAAkCzH,KAAK+4D,oBACpD3rD,KAAU3F,GAAG,oCAAqCzH,KAAK+4D,oBACvD3rD,KAAU3F,GAAG,wBAAyBzH,KAAK+4D,oBAC3C3rD,KAAU3F,GAAG,mCAAoCzH,KAAK+4D,oBACtD3rD,KAAU3F,GAAG,iCAAkCzH,KAAK+4D,oBACpD3rD,KAAU3F,GAAG,qCAAsCzH,KAAK+4D,sB,6CAIxD3rD,KAAU1F,IAAI,qCAAsC1H,KAAK+4D,oBACzD3rD,KAAU1F,IAAI,iCAAkC1H,KAAK+4D,oBACrD3rD,KAAU1F,IAAI,oCAAqC1H,KAAK+4D,oBACxD3rD,KAAU1F,IAAI,wBAAyB1H,KAAK+4D,oBAC5C3rD,KAAU1F,IAAI,mCAAoC1H,KAAK+4D,oBACvD3rD,KAAU1F,IAAI,iCAAkC1H,KAAK+4D,oBACrD3rD,KAAU1F,IAAI,qCAAsC1H,KAAK+4D,sB,+BAenD,IAAD,EAC4D/4D,KAAKc,MAA9DsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWuqB,EADtB,EACsBA,UAAWkI,EADjC,EACiCA,cAAe37B,EADhD,EACgDA,QACrD,IAAKyzB,EAAW,OAAO,KAEvB,IAAM9rB,EAAO8rB,EAAUnsB,OAASmsB,EAAU9rB,KAC1C,IAAKA,EAAM,OAAO,KAElB,IAAMi0B,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Et0B,EAAMC,YAAOG,GACbw1B,EAAYpB,aAAmBtI,EAAW2J,MAA2Bq2B,OACrEp2B,EAAcC,aAAaz7B,EAAQqH,GAEzC,OACI,yBAAKpN,UAAU,aAAakE,QAASA,GAChC47B,GACG,yBACI9/B,UAAWoE,IACP,mBACA,CAAE,yBAA0Bm9B,GAC5B,CAAE,sBAAsB,IAE5Bt0B,WAAW,EACXxB,IAAKq0B,EACL5yB,IAAI,KAGXzB,GACG,yBACIzL,UAAWoE,IACP,mBACA,CAAE,yBAA0Bm9B,GAC5B,CAAE,gBAAiB91B,GAAO41B,IAE9Bp0B,WAAW,EACXxB,IAAKA,EACLyB,IAAI,U,GApEJ5M,IAAMC,YCAxBq3D,I,kNASFC,mBAAqB,SAAAr4D,GAAW,IAAD,EACG,EAAKC,MAA3BsG,EADmB,EACnBA,OAAQqH,EADW,EACXA,UAEZrH,IAAWvG,EAAOwG,SAAWoH,IAAc5N,EAAOpC,IAClD,EAAKyI,e,EAIb2C,YAAc,SAAA1H,GACVA,EAAMyI,mB,EAGVo8B,WAAa,SAAA7kC,GACT,GAAqB,IAAjBA,EAAMgJ,OAAV,CAEAhJ,EAAMyI,kBAHY,MAKqB,EAAK9J,MAApCsG,EALU,EAKVA,OAAQqH,EALE,EAKFA,UAAWlJ,EALT,EAKSA,QAErB+N,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KACrB,GAAI6lD,aAAiB7lD,GAAU,OAAO,KAEtC8sB,aAASh5B,EAAQqH,GAAW,GAC5B2qD,eACI7zD,GAASA,M,mFAhCb0N,KAAaxL,GAAG,mBAAoBzH,KAAKk5D,sB,6CAIzCjmD,KAAavL,IAAI,mBAAoB1H,KAAKk5D,sB,+BA+BpC,IAAD,EAC4Bl5D,KAAKc,MAA9B2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQqH,EADd,EACcA,UACb3G,EAAU9H,KAAKc,MAAfgH,MAEAwL,EAAUL,KAAa1M,IAAIa,EAAQqH,GAEzC3G,EAAQA,GAASuoD,aAAS/8C,EAAS7P,GACnC,IAAI4W,EAAW/G,EAAyBsmC,aAAWtmC,EAAS7P,GAAnCA,EAAE,WACrBu1B,EAAYqgC,aAAkBjyD,EAAQqH,GACtCyyB,EAAgBo4B,aAAsBlyD,EAAQqH,GAOpD,OALI0qD,aAAiB7lD,KACjBxL,EAAQ,KACRuS,EAAU5W,EAAE,mBAIZ,yBAAKpC,UAAU,QAAQuK,YAAa5L,KAAKgnC,WAAYzhC,QAASvF,KAAK6J,aAC/D,yBAAKxI,UAAU,iBACX,yBAAKA,UAAU,wBACd23B,GACG,kBAAC,GAAD,CACI5xB,OAAQA,EACRqH,UAAWA,EACXyyB,cAAeA,EACflI,UAAWA,IAGnB,yBAAK33B,UAAU,iBACVyG,GAAS,yBAAKzG,UAAU,uBAAuByG,GAChD,yBAAKzG,UAAWoE,IAAW,2BAA4B4U,U,GAnE3D1Y,IAAMC,YAkFXsD,iBAAkB+zD,ICjF3BM,I,kNASF98B,uBAAyB,SAAAx1B,GAAW,IAAD,EACc,EAAKnG,MAA1CsG,EADuB,EACvBA,OAAQqH,EADe,EACfA,UAAW+qD,EADI,EACJA,cACnBnyD,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WAEbtH,IAAWC,IACXoH,IAAcC,GAAc8qD,IAAkB9qD,GAElD,EAAKxH,gB,EAGT7D,YAAc,WAAO,IAAD,EACkB,EAAKvC,MAA/BsG,EADQ,EACRA,OADQ,EACAoyD,cAGZC,aAAYryD,EAAQ,GAEpBsyD,aAAatyD,EAAQ,I,mFAvBzB6L,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,6CAI7CxpB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,+BAuBxC,IAAD,EACoDz8B,KAAKc,MAAtDsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAW+qD,EADtB,EACsBA,cAAe/1D,EADrC,EACqCA,EAAG8B,EADxC,EACwCA,QAC7C,OAAK6B,IACAqH,GAAc+qD,GAGf,yBAAKn4D,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAACqV,EAAA,EAAD,CAAYrV,UAAU,uBAAuBgD,aAAW,QAAQkB,QAASvF,KAAKqD,aAC1E,kBAACsT,EAAA,EAAD,QAGR,yBAAKtV,UAAU,iCACX,kBAAC,GAAD,CACI+F,OAAQA,EACRqH,UAAW+qD,GAAiB/qD,EAC5B3G,MAAO0xD,EAAgB/1D,EAAE,eAAiB,KAC1C8B,QAASA,KAGjB,yBAAKlE,UAAU,kCAlBH,S,GA/BCM,IAAMC,YA8DpBsD,iBAAkBq0D,IC5D3BI,I,kNACF9e,WAAa,YAET+e,EADsB,EAAK94D,MAAnB84D,c,EAIZ9d,aAAe,YAEXyc,EADqB,EAAKz3D,MAAlBy3D,a,wEAIF,IAAD,EACgBv4D,KAAKc,MAAlB+gB,EADH,EACGA,MAAOpe,EADV,EACUA,EACf,OAAKoe,EAGD,kBAAC,IAAD,CACIne,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS7D,KAAK87C,aACdh4C,kBAAgB,uBAChB,kBAAC,IAAD,CAAarF,GAAG,uBAAuBgF,EAAE,YACzC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KACKp5B,EAAMzb,OAAS,EAAI3C,EAAE,yBAA2BA,EAAE,0BAG3D,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAK87C,aAAcn5C,MAAM,WACrCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK66C,WAAYl4C,MAAM,WACnCc,EAAE,SApBA,S,GAbI9B,IAAMC,YAiDtBkD,GAFCC,YAAQG,cAETJ,CAAQ60D,IC2CRE,I,kNAnGXx5D,MAAQ,G,EAcRy5D,0BAA4B,WACxB,EAAKC,MAAQC,YAAY,WACrB,IACMC,EADM,IAAIzpD,KACG,EAAK3R,UAGxB,EAAKkC,SAAS,CACV1B,KAAM46D,KAEX,IACH,EAAKp7D,UAAY,IAAI2R,M,EAGzB0pD,yBAA2B,WACnB,EAAKH,OACL9pC,aAAa,EAAK8pC,OAGtB,EAAKh5D,SAAS,CACV1B,KAAM,Q,EAId86D,0BAA4B,WACpB,EAAKJ,OACL9pC,aAAa,EAAK8pC,OAGtB,EAAKh5D,SAAS,CACV1B,KAAM,Q,mFAxCV4T,KAAaxL,GAAG,0BAA2BzH,KAAK85D,2BAChD7mD,KAAaxL,GAAG,yBAA0BzH,KAAKk6D,0BAC/CjnD,KAAaxL,GAAG,0BAA2BzH,KAAKm6D,6B,6CAIhDlnD,KAAavL,IAAI,0BAA2B1H,KAAK85D,2BACjD7mD,KAAavL,IAAI,yBAA0B1H,KAAKk6D,0BAChDjnD,KAAavL,IAAI,0BAA2B1H,KAAKm6D,6B,iCAoC1Cl6D,GACP,IAAIm6D,EAAQn6D,EAAEuzD,WAOd,OANqB,IAAjB4G,EAAMh0D,OACNg0D,GAAS,IACFA,EAAMh0D,OAAS,IACtBg0D,EAAQA,EAAMpoD,OAAO,EAAG,IAGrBooD,I,iCAGAn6D,GACP,IAAIm6D,EAAQn6D,EAAEuzD,WAKd,OAJqB,IAAjB4G,EAAMh0D,SACNg0D,EAAQ,IAAMA,GAGXA,I,+BAGFC,GACL,IAAI7xC,EAAM6xC,EAAI,IAEVC,GADJD,GAAKA,EAAI7xC,GAAM,KACA,GAEX+xC,GADJF,GAAKA,EAAIC,GAAQ,IACF,GACXE,GAAOH,EAAIE,GAAQ,GAEnB15D,EAAS05D,EAAO,IAAMv6D,KAAKy6D,WAAWH,GAAQ,IAAMt6D,KAAK06D,WAAWlyC,GAKxE,OAJIgyC,EAAM,IACN35D,EAAS25D,EAAM,IAAM35D,GAGlBA,I,+BAGD,IACExB,EAASW,KAAKK,MAAdhB,KACR,OAAKA,EAGD,yBAAKgC,UAAU,gBACVrB,KAAK26D,SAASt7D,GACf,yBAAKgC,UAAU,uBALL,S,GAtFAM,IAAMC,Y,qBCe1Bg5D,I,mBACF,WAAY95D,GAAQ,IAAD,8BACf,4CAAMA,KAqDV+5D,sBAAwB,WAChBpjD,SAAS6Y,gBAAkB,EAAKwqC,WAAWjmD,SAC3C,EAAKkmD,iBAxDM,EA4DnBC,YAAc,WAAO,IAAD,EAC6B,EAAKl6D,MAA1CsG,EADQ,EACRA,OAAQqH,EADA,EACAA,UAAWnL,EADX,EACWA,KAAM23D,EADjB,EACiBA,QACjC,GAAK33D,EAAL,CAEA,IAAIgN,EAAO,KACPioB,EAAU,KACRjlB,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,GAAI6E,EAAS,CAAC,IACF+G,EAAY/G,EAAZ+G,QACJA,IACA/J,EAAO+J,EAAQ/J,KACfioB,EAAUle,EAAQke,SAI1B,IAAMzhB,EAAU,EAAKgkD,WAAWjmD,QAC3BiC,IAEDxG,EACA,EAAK4qD,iBAAiB5qD,GACfioB,EACP,EAAK2iC,iBAAiB3iC,GACf0iC,GAAWA,EAAQ1iC,QAC1BzhB,EAAQM,UAAY6jD,EAAQ1iC,QAE5BzhB,EAAQC,UAAY,KAGxBoD,GAAWrD,MAxFI,EAgHnB+jC,WAAa,WAAO,IAAD,EAC6B,EAAK/5C,MAAzCsG,EADO,EACPA,OAAQ6zD,EADD,EACCA,QAAS5E,EADV,EACUA,OAAQ7Q,EADlB,EACkBA,OADlB,EAE2C,EAAKnlD,MAAvDo5D,EAFO,EAEPA,YAAa0B,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpCvkD,EAAU,EAAKgkD,WAAWjmD,QAChC,GAAKiC,EAAL,CALe,IAOPM,EAAcN,EAAdM,UAERN,EAAQC,UAAY,KATL,MAWYukD,aAAYlkD,GAEjCmhB,EAAU,CACZ,QAAS,gBACTjoB,KAfW,EAWPA,KAKJkoB,SAhBW,EAWDA,UASd,GADkB9yB,QAAQ+zD,GACX,CACX,GAAI2B,EAAW,CAAC,IACJvuD,EAAUuuD,EAAVvuD,MACR,IAAKA,EAAO,OAFD,IAIHkrB,EAAUlrB,EAAVkrB,MACR,IAAKA,EAAO,OAEZ,IAAMpqB,EAAOoqB,EAAMA,EAAM3xB,OAAS,GAE1ByH,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAUf03C,EAAO,KARS,CACZ,QAAS,oBACT34C,MAAO,CAAE,QAAS,gBAAiBvI,KAAM62D,EAAS72D,KAAM88B,KAAM+5B,GAC9DttD,QACAC,SACAyqB,iBAKJitB,EAAOjtB,EAAS,MAGpBgjC,aAAkBn0D,EAAQ,OACvB,CAAC,IACIu1B,EAAgBs+B,EAAhBt+B,MAAOzvB,EAAS+tD,EAAT/tD,KACPkwB,EAA2BT,EAA3BS,MAAOvwB,EAAoB8vB,EAApB9vB,MAAO4K,EAAaklB,EAAbllB,SAElB4C,EAAU,KACd,GAAIxN,EAAO,CAAC,IACAkrB,EAAUlrB,EAAVkrB,MACR,IAAKA,EAAO,OAEZ,IAAMpqB,EAAOoqB,EAAMA,EAAM3xB,OAAS,GAE1ByH,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEfuM,EAAUghD,EACJ,CACE,QAAS,oBACTxuD,MAAO,CAAE,QAAS,gBAAiBvI,KAAM4I,EAAK5I,KAAM88B,KAAMl0B,GAC1DW,QACAC,SACAyqB,WAEF,CACE,QAAS,uBACT9gB,SAAU,CAAE,QAAS,gBAAiBnT,KAAM4I,EAAK5I,KAAM88B,KAAMl0B,GAC7D8rB,UAAW,KACXT,gBAEL,GAAI9gB,EACP4C,EAAU,CACN,QAAS,uBACT5C,SAAU,CAAE,QAAS,gBAAiBnT,KAAM4I,EAAK5I,KAAM88B,KAAMl0B,GAC7D8rB,UAAW,KACXT,gBAED,GAAI6E,EAAO,CAAC,IACP/+B,EAA+B++B,EAA/B/+B,SAAUyJ,EAAqBs1B,EAArBt1B,MAAO0zD,EAAcp+B,EAAdo+B,UAEzBnhD,EAAU,CACN,QAAS,oBACT+iB,MAAO,CAAE,QAAS,gBAAiB94B,KAAM4I,EAAK5I,KAAM88B,KAAMl0B,GAC1D8rB,UAAW,KACX36B,WACAyJ,QACA0zD,YACAjjC,WAGR,IAAKle,EAAS,OAEdg8C,EAAOh8C,EAASnN,MA/ML,EAmNnB4uC,aAAe,WAAO,IAAD,EACuB,EAAKh7C,MAArCsG,EADS,EACTA,OAAQqH,EADC,EACDA,UAAW8pD,EADV,EACUA,SAErBjlD,EAAUL,KAAa1M,IAAIa,EAAQqH,GACvB/I,QAAQ4N,IAGtBioD,aAAkBn0D,EAAQ,GAG9BmxD,KA7Ne,EAgOnBlpD,cAAgB,SAAAlN,GAAU,IACd4oB,EAAgF5oB,EAAhF4oB,OAAQC,EAAwE7oB,EAAxE6oB,QAA6BC,GAA2C9oB,EAA/DyD,IAA+DzD,EAA1D0U,QAA0D1U,EAAjD2oB,KAAiD3oB,EAA3C8oB,SAASC,EAAkC/oB,EAAlC+oB,SAAUuwC,EAAwBt5D,EAAxBs5D,OAAQzkD,EAAgB7U,EAAhB6U,YAIxE,GADwBA,EAAhBzH,YAEJpN,EAAMyI,uBAIV,OAAQoM,EAAY8T,MAChB,IAAK,QACL,IAAK,cAEIC,KAAWC,GAAWC,GAAWC,IAAcuwC,EAO1C1wC,GAAWC,GAAYC,GAAYC,GAAauwC,IACtD,EAAK5gB,aAEL14C,EAAMwI,iBACNxI,EAAMyI,oBAVN6M,SAASC,YAAY,mBAErBvV,EAAMwI,iBACNxI,EAAMyI,mBASV,MAGJ,IAAK,OACImgB,IAAWC,IAAWC,GAAaC,GAAauwC,IACjD,EAAKC,aAELv5D,EAAMwI,iBACNxI,EAAMyI,mBAEV,MAGJ,IAAK,OACImgB,IAAWC,IAAWC,GAAaC,GAAauwC,IACjD,EAAKE,eAELx5D,EAAMwI,iBACNxI,EAAMyI,mBAEV,MAEJ,IAAK,OAEImgB,IAAWC,IAAWC,GAAaC,GAAauwC,GAO5C1wC,IAAWC,IAAWC,GAAaC,GAAauwC,IACrD,EAAKG,aAELz5D,EAAMwI,iBACNxI,EAAMyI,oBAVN,EAAKixD,YAEL15D,EAAMwI,iBACNxI,EAAMyI,mBASV,MAGJ,IAAK,QACGmgB,IAAWC,IAAWC,GAAaC,GAAauwC,IAChD,EAAKK,cAEL35D,EAAMwI,iBACNxI,EAAMyI,qBAxSH,EA+SnBkxD,YAAc,WACVrkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,OAjTvB,EAoTnBgkD,WAAa,WACTjkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,QAAQ,EAAO,OAxTrB,EA2TnBikD,aAAe,WACXlkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,UAAU,EAAO,OA/TvB,EAkUnBkkD,WAAa,WACTnkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtC,IAAIpH,EAAO,GACHuJ,EALO,gBAKPA,UACJA,IAAcA,EAAU65C,cACxBpjD,EAAOuJ,EAAU25C,YAGhBljD,IACLA,EAAI,gBAAYA,EAAZ,WACJmH,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,cAAc,EAAOpH,KA/U3B,EAkVnByrD,gBAAkB,WACdtkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,aAAa,EAAO,OAtV1B,EAyVnBskD,oBAAsB,WAClBvkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,iBAAiB,EAAO,OA7V9B,EAgWnBmkD,UAAY,WACR,EAAKI,qBAjWU,EAoWnBA,kBAAoB,WAChB,IAAIhE,EAAc,GACdC,EAAa,GAFK,kBAIdr+C,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACFyiD,EAAiCziD,EAAjCyiD,eACN,GAAIA,IADmCziD,EAAjB0iD,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BpE,EAAcmE,EAAcrlD,UAC5BmhD,EAAakE,EAAcE,OAKlCrE,IAAep+C,GAAcA,EAAU65C,cACxCuE,EAAcp+C,EAAU25C,YAG5B,EAAKzyD,SAAS,CACVw7D,aAAa,EACbrE,aACAD,iBA3XW,EA+XnBuE,mBAAqB,WACjB,EAAKz7D,SACD,CACIw7D,aAAa,GAEjB,WACI,EAAKE,sBArYE,EAianBplD,YAAc,SAAAlV,GACV,IAAMmV,EAAYnV,EAAMoV,cAAcC,QAAQ,cAC1CF,IACAnV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,KAra/B,EAyanBK,YAAc,WACV,EAAK+kD,kBA1aU,EAubnBC,oBAAsB,WAClB,EAAKH,sBAxbU,EA2bnBI,kBAAoB,SAACtsD,EAAM8C,GACvB,EAAKopD,qBACLlgD,WAAW,WAAM,IAEL7C,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACAyiD,EAAiCziD,EAAjCyiD,eAAgBC,EAAiB1iD,EAAjB0iD,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOlpD,EAClBypD,EAAW/0D,MAAQsL,EACnBypD,EAAW9lD,UAAYzG,EAHoB,IAMnCwjD,EAAc+I,EAAd/I,UACR,GAAIA,EAAW,CACX,IAAMr6C,EAAQhC,SAASiC,cACvBD,EAAME,SAASm6C,EAAWA,EAAUgJ,YAAY12D,QAChDqT,EAAMsjD,OAAOjJ,EAAWA,EAAUgJ,YAAY12D,QAE9C,IAAMyT,EAAYpC,SAASsC,eAC3BF,EAAUG,kBACVH,EAAUI,SAASR,GAEvB,SAMZ,IAAM2d,EAAI,kBAAchkB,EAAd,kBAA2BA,EAA3B,sDAA4E9C,EAA5E,QACVmH,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,cAAc,EAAO0f,IAC3C,IA7dY,EAgenB4lC,gBAAkB,SAAA76D,GACd,IAAM2U,EAAU,EAAKmmD,aAAapoD,QAC7BiC,GAELA,EAAQ0lC,SApeO,EAuenB0gB,wBAvemB,qBAueO,sCAAAxyD,EAAA,wDAChBoM,EAAU,EAAKmmD,aAAapoD,QADZ,oDAKD,KADbgN,EAAU/K,EAAV+K,OACEzb,OALY,sDAOEka,MAAM1gB,KAAKiiB,GAPb,kBAOf3U,EAPe,gBAQjBA,EARiB,kEAUEiwD,aAAsBjwD,GAVxB,QAUhBkuD,EAVgB,OAYtB,EAAKr6D,SAAS,CACVo6D,SAAUjuD,EACVkuD,cAGJtkD,EAAQxU,MAAQ,GAjBM,0CAveP,EA2fnB86D,kBAAoB,WAAO,IACf/B,EAAgB,EAAKh7D,MAArBg7D,YAER,EAAKt6D,SAAS,CACVs6D,aAAcA,KA5flB,EAAKP,WAAan5D,IAAMoU,YACxB,EAAKknD,aAAet7D,IAAMoU,YAE1B,EAAK1V,MAAQ,GANE,E,iFA+CfoX,SAASkE,iBAAiB,kBAAmB3b,KAAK66D,uBAAuB,K,6CAIzEpjD,SAASoE,oBAAoB,kBAAmB7b,KAAK66D,uBAAuB,K,uCAwC/D7b,GAAgB,IACrBv7C,EAAMzD,KAAKc,MAAX2C,EACFqT,EAAU9W,KAAK86D,WAAWjmD,QAEhC,GAAKmqC,EAAL,CAJ4B,IASpB1uC,EAAmB0uC,EAAnB1uC,KAAMkoB,EAAawmB,EAAbxmB,SACd,IACI,IAAM6kC,EAAQC,aAAShtD,EAAMkoB,EAAU/0B,GACvCqT,EAAQM,UAAY,KACpBimD,EAAM19D,QAAQ,SAAAT,GACV4X,EAAQob,YAAYhzB,KAE1B,MAAO2M,GACLiL,EAAQC,UAAYzG,QAZpBwG,EAAQC,UAAY,O,sCA2SxB/W,KAAK6Z,UAAYpC,SAASsC,eACrB/Z,KAAK6Z,WACL7Z,KAAK6Z,UAAU0jD,aAEpBv9D,KAAKyZ,MAAQzZ,KAAK6Z,UAAU2jD,WAAW,M,yCAGvB,IACR/jD,EAAUzZ,KAAVyZ,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYpC,SAASsC,eAC3BF,EAAUG,kBACVH,EAAUI,SAASR,GAEnBzZ,KAAK86D,WAAWjmD,QAAQqF,aARpBC,O,uCAwBJ,IAAMrD,EAAU9W,KAAK86D,WAAWjmD,QAChC,GAAKiC,EAAL,CAFa,IAILM,EAAcN,EAAdM,UACU,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,S,+BAgFlB,IAAD,EAC2CpX,KAAKc,MAA7CsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWwsD,EADtB,EACsBA,QAAS33D,EAD/B,EAC+BA,KAAMG,EADrC,EACqCA,EADrC,EAEiFzD,KAAKK,MAAnF43D,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYqE,EAF5B,EAE4BA,YAAa9C,EAFzC,EAEyCA,YAAa2B,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAK/3D,EAAM,OAAO,KAElB,IAAMgQ,EAAUL,KAAa1M,IAAIa,EAAQqH,GACnCgvD,EAAY/3D,QAAQ4N,GACtBoqD,GAAU,EACVzC,GAAWA,EAAQt+B,OAAoC,iBAA3Bs+B,EAAQt+B,MAAM,SAC1C+gC,GAAU,EACHtC,GAAoC,iBAAvBA,EAAU,SAC9BsC,GAAU,EACHjE,GAAgD,iBAAjCA,EAAYp/C,QAAQ,WAC1CqjD,GAAU,GAGd,IAAI/gC,EAAQ,KACR8gC,EACA9gC,EACAy+B,EACMx+B,aAAS,CAAEviB,QAAS+gD,IACpBx+B,aAAStpB,EAAS,MACjB2nD,IACPt+B,EAAQC,aAAS,CAAEviB,QAAS4gD,EAAQt+B,SAExC,IAAMghC,EAAwBl6D,EAAZg6D,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACI/5D,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS7D,KAAK87C,aACdh4C,kBAAgB,0BAChBktD,QAAShxD,KAAKg7D,aACd,yBAAK35D,UAAU,6BACX,yBAAKuM,MAAO,CAAEuvC,OAAQ,KAAOxgB,GAC3B8gC,GACE,oCACI,kBAAC/mD,EAAA,EAAD,CACIylB,eAAe,EACf93B,aAAYZ,EAAE,QACdpC,UAAU,gCACVsM,KAAK,QACLpI,QAASvF,KAAKg9D,iBACd,kBAAC,KAAD,CAAU1I,SAAS,aAEvB,2BACI99C,IAAKxW,KAAKi9D,aACV57D,UAAU,yBACVe,KAAK,OACL86C,OAAO,UACP34C,SAAUvE,KAAKk9D,4BAIxBO,GAAaC,GACZ,kBAACt5D,EAAA,EAAD,CAAY9B,MAAO+4D,EAAa92D,SAAUvE,KAAKo9D,kBAAmBxvD,MAAO,CAAEuvC,OAAQ,gBAC/E,kBAAC34C,EAAA,EAAD,CAAkBlC,OAAO,EAAMmC,QAAS,kBAACC,EAAA,EAAD,CAAO/B,MAAM,YAAagC,MAAOlB,EAAE,iBAC3E,kBAACe,EAAA,EAAD,CAAkBlC,OAAO,EAAOmC,QAAS,kBAACC,EAAA,EAAD,CAAO/B,MAAM,YAAagC,MAAOlB,EAAE,kBAIxF,yBACI+S,IAAKxW,KAAK86D,WACVr8D,GAAG,4BACH4C,UAAU,oBACV4W,iBAAe,EACfC,gCAA8B,EAC9BF,YAAavU,EAAE,WACf0U,UAAWnY,KAAKqP,cAChBgJ,QAASrY,KAAKqX,YACdiB,QAAStY,KAAK2X,cAElB,kBAAC8iB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAK87C,aAAcn5C,MAAM,WACrCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK66C,WAAYl4C,MAAM,WACnCg7D,IAGT,kBAAC,GAAD,CACIr6D,KAAMi5D,EACNtE,YAAaA,EACbC,WAAYA,EACZpV,OAAQ9iD,KAAK48D,kBACbrE,SAAUv4D,KAAK28D,0B,gDA/kBC77D,EAAOT,GAAQ,IACnCw4D,EAAax4D,EAAbw4D,SACAv1D,EAAqCxC,EAArCwC,KAAM8D,EAA+BtG,EAA/BsG,OAAQqH,EAAuB3N,EAAvB2N,UAAWwsD,EAAYn6D,EAAZm6D,QAEjC,GAAIpC,IAAav1D,EAAM,CACnB,GAAIA,EAAM,CACN,IAAMm2D,EAAcxmD,KAAa1M,IAAIa,EAAQqH,GACzC4sD,GAAc,EAOlB,OANI5B,GAAgD,iBAAjCA,EAAYp/C,QAAQ,SACnCghD,GAAc,EACPJ,GAAWA,EAAQt+B,OAAoC,iBAA3Bs+B,EAAQt+B,MAAM,WACjD0+B,GAAc,GAGX,CACHxC,UAAU,EACVwC,cACA5B,cACA2B,UAAW,KACXD,SAAU,MAGd,MAAO,CACHtC,UAAU,EACVwC,aAAa,EACb5B,YAAa,KACb2B,UAAW,KACXD,SAAU,MAKtB,OAAO,S,GA5Cex5D,IAAMC,YA8mBrBsD,iBAAkB01D,ICnmBlBv4C,G,WA3BX,WAAYjb,GAAS,oBACjBpH,KAAKoH,OAASA,EACdpH,KAAK49D,WAAa,K,sDAGZhmC,GACN,GAAK53B,KAAKoH,OAAV,CAEA,GAAIpH,KAAK49D,YAAc59D,KAAK49D,WAAW,WAAahmC,EAAO,SAAU,CACjE,IAAI54B,EAAM,IAAIwR,KAEd,GADAxR,EAAI6+D,WAAW7+D,EAAI8+D,aAAeC,OAC9B/9D,KAAKg+D,gBAAkBh+D,KAAKg+D,eAAiBh/D,EAC7C,OAIRgB,KAAK49D,WAAahmC,EAClB53B,KAAKg+D,eAAiB,IAAIxtD,KAE1B9P,KAAgBC,KAAK,CACjB,QAAS,iBACT0G,QAASrH,KAAKoH,OACdwwB,OAAQA,S,wBCgBdqmC,I,OAAoBt8D,IAAM8gD,KAAK,kBAAM,uDAErCyb,G,YACF,WAAYp9D,GAAQ,IAAD,uBACf,4CAAMA,KAoHVq9D,wBAA0B,WAElB1mD,SAAS6Y,gBAAkB,EAAK8tC,cAAcvpD,SAC9C,EAAKkmD,iBAxHM,EAgKnBsD,yBAA2B,SAAAp3D,GAAW,IAAD,EACH,EAAKnG,MADF,EACzBsG,OADyB,EACjBqH,UACE,EAAKpO,MAAfqkD,MAGJ,EAAK3jD,SAAS,CAAE2jD,OAAO,GAAS,WAC5BpoC,WAAW,WACP,EAAKvb,SAAS,CAAE2jD,OAAO,KACxB,KAGP,EAAK3jD,SAAS,CAAE2jD,OAAO,KA3KZ,EA+KnB4Z,wBAA0B,SAAAr3D,GAAW,IACzB4a,EAAU5a,EAAV4a,MACHA,GAEL,EAAK08C,gBAAgBj+C,MAAM1gB,KAAKiiB,KAnLjB,EAsLnBib,uBAAyB,SAAA71B,GAAW,IAAD,EACG,EAAK5G,MAA/B+G,EADuB,EACvBA,OAAQoyD,EADe,EACfA,cACRnyD,EAAuCJ,EAAvCI,QAAS+xB,EAA8BnyB,EAA9BmyB,YAAaolC,EAAiBv3D,EAAjBu3D,aAEzBhF,GACAgF,GACDp3D,IAAWC,IAC6B,IAAxC+xB,EAAYe,QAAQq/B,IAExB,EAAK1d,gBA/LU,EAkMnB2iB,0BAA4B,SAAAx3D,GAAW,IAC3BG,EAAsBH,EAAtBG,OAAQqH,EAAcxH,EAAdwH,UAEhB,IAD0B,EAAKpO,MAAvBq+D,eAEJ,EAAKr+D,MAAM+G,SAAWA,EAA1B,CAEKqH,EAGD,EAAKkwD,wBAFL,EAAKC,2BAKT,IAAMC,EAA8B,IAAdpwD,GAAmBqwD,aAAc13D,EAAQqH,GAC/D,EAAK1N,SACD,CACIy4D,cAAe/qD,EACfowD,iBAEJ,WACS,EAAKx+D,MAAMw+D,gBACZ,EAAKE,iBACL,EAAKpnD,cACL2E,WAAW,WACP,EAAKnC,cACN,QA1NA,EAqQnB6kD,0BAA4B,SAAA/3D,GACJA,EAAZ9C,SAGR,EAAK86D,aAzQU,EA4QnBC,yBAA2B,SAAAj4D,GAAW,IAC1BI,EAAYJ,EAAZI,QADyB,EAEC,EAAKhH,MAA/B+G,EAFyB,EAEzBA,OAFyB,EAEjBs3D,eAGZt3D,IAAWC,GAEf,EAAK83D,aAnRU,EAsRnBC,4BAA8B,SAAAn4D,GAAW,IAClB2U,EAAS3U,EAApB08B,UACR,GAAK/nB,EAAL,CAFoC,IAI5B+nB,EAAkD/nB,EAAlD+nB,UAAW3K,EAAuCpd,EAAvCod,UAAWnrB,EAA4B+N,EAA5B/N,MAAOC,EAAqB8N,EAArB9N,OAAQzP,EAAaud,EAAbvd,SAC7C,GAAKslC,EAAL,CAEA,IAAM7sB,EAAU,EAAKsnD,cAAcvpD,QACnC,GAAKiC,EAAL,CAEAA,EAAQC,UAAY,KAEpB,EAAK0lD,mBAEL,IAAMpiD,EAAU,CACZ,QAAS,wBACTspB,UAAW,CACP,QAAS,cACTllC,GAAIklC,EAAUllC,IAElBoP,QACAC,SACAzP,YAGJ,GAAI26B,EAAW,CAAC,IACGqmC,EAAkDrmC,EAAzDnrB,MAA+ByxD,EAA0BtmC,EAAlClrB,OAAyBZ,EAAS8rB,EAAT9rB,KAExDmN,EAAQ2e,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTv6B,GAAIyO,EAAKzO,IAEboP,MAAOwxD,EACPvxD,OAAQwxD,GAIhB,EAAKC,YAAYllD,GAAS,EAAO,SAAAxZ,UA7TlB,EAgUnB2+D,0BAA4B,SAAAv4D,GAAW,IAClB2U,EAAS3U,EAAlBxG,QACR,GAAKmb,EAAL,CAFkC,IAI1Bnb,EAAsCmb,EAAtCnb,QAASu4B,EAA6Bpd,EAA7Bod,UAAWnrB,EAAkB+N,EAAlB/N,MAAOC,EAAW8N,EAAX9N,OACnC,GAAKrN,EAAL,CAEA,IAAMqW,EAAU,EAAKsnD,cAAcvpD,QACnC,GAAKiC,EAAL,CAEAA,EAAQC,UAAY,KAEpB,EAAK0lD,mBAEL,IAAMpiD,EAAU,CACZ,QAAS,sBACT5Z,QAAS,CACL,QAAS,cACThC,GAAIgC,EAAQhC,IAEhBoP,QACAC,UAGJ,GAAIkrB,EAAW,CAAC,IACGqmC,EAAkDrmC,EAAzDnrB,MAA+ByxD,EAA0BtmC,EAAlClrB,OAAyBZ,EAAS8rB,EAAT9rB,KAExDmN,EAAQ2e,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTv6B,GAAIyO,EAAKzO,IAEboP,MAAOwxD,EACPvxD,OAAQwxD,GAIhB,EAAKC,YAAYllD,GAAS,EAAO,SAAAxZ,MAEjCH,KAAgBsf,aAAa,CACzB,QAAS,gCACTlI,KAAM,WA1WK,EA8WnB2nD,oBAAsB,SAAAx4D,GAAW,IAAD,EACqB,EAAK5G,MAAtC09B,EADY,EACpB32B,OAAuBs3D,EADH,EACGA,cACvBt3D,EAAsBH,EAAtBG,OAAQqH,EAAcxH,EAAdwH,UAEZsvB,IAAkB32B,IAItB,EAAKrG,SAAS,CAAE2+D,iBAAkBjxD,IAE9BA,IAAciwD,GACd,EAAKiB,kBAzXM,EA6XnBjyB,qBAAuB,SAAAzmC,GACA,EAAK5G,MAAhB+G,SACOH,EAAO0mC,aAEtB,EAAKsxB,YACL,EAAKW,eAAiB,KACtB,EAAK7+D,SACD,CACIqG,OAAQH,EAAO0mC,WACf+xB,iBAAkBG,aAA6B54D,EAAO0mC,YACtD6rB,cAAe,EACf+C,aAAa,GAEjB,WACI,EAAK4C,cAIb,EAAKW,uBA/YU,EAkZnBC,SAAW,WAAO,IACN34D,EAAW,EAAK/G,MAAhB+G,OAEF0P,EAAU,EAAKsnD,cAAcvpD,QAE7BmqC,EAAgB1N,aAAalqC,GAC/B43C,GACA,EAAKkc,iBAAiBlc,GACtB,EAAKj+C,SAAS,CACV2+D,iBAAkBG,aAA6Bz4D,MAGnD0P,EAAQC,UAAY,MA9ZT,EA8cnB4oD,cAAgB,WACc,EAAKt/D,MAAvBq+D,eAGRpiD,WAAW,WAGPnC,GAFgB,EAAKikD,cAAcvpD,UAGpC,MAtdY,EAydnBmrD,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9B74D,EAAyB64D,EAAzB74D,OAAQ84D,EAAiBD,EAAjBC,aACX94D,GAEL1G,KAAgBC,KAAK,CACjB,QAAS,sBACT0G,QAASD,EACT+4D,cAAeD,MAleJ,EAsenBE,gBAAkB,SAACh5D,EAAQs4D,EAAkBtoD,GACzC,IAAMjP,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAFuD,IAI/Cg4D,EAAkBh4D,EAAlBg4D,cAJ+C,EAK5B7E,aAAYlkD,GAA/B9G,EAL+C,EAK/CA,KAAMkoB,EALyC,EAKzCA,SACR0nC,EACD5vD,GAAQA,EAAKlK,OAAS,GAAMoyB,EAASpyB,OAAS,EACzC,CACI,QAAS,eACTqyB,oBAAqBinC,EACrBW,mBAAoB,CAChB,QAAS,mBACT/vD,KAAM,CACF,QAAS,gBACTA,OACAkoB,YAEJM,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAIunC,aAAYH,EAAeD,GACpB,KAGJ,CAAE94D,SAAQ84D,kBAlgBF,EAqgBnBK,aAAe,WAAyB,IAAxBC,IAAuB,2DACgD,EAAKngE,MAAhF+G,EAD2B,EAC3BA,OAAQoyD,EADmB,EACnBA,cAAiCiH,GADd,EACJf,iBADI,EACce,gBAAgB/B,EAD9B,EAC8BA,cAEjE,GAAIA,EAAJ,CACI,GAAK,IAAIluD,KAASkuD,EAAiBgC,MAC/B,OAGJ,EAAKC,wBAEF,GAAIF,EACHD,GAAa,EAAKI,mBADnB,CAKP,IAAM9pD,EAAU,EAAKsnD,cAAcvpD,QACnC,GAAKiC,EAAL,CAhBmC,IAkB7BM,EAAcN,EAAdM,UAKN,GAHAN,EAAQC,UAAY,KACpB,EAAKY,cAEAP,GACAA,EAAUtF,OAAf,CAxBmC,MA0BRwpD,aAAYlkD,GAA/B9G,EA1B2B,EA0B3BA,KAAMkoB,EA1BqB,EA0BrBA,SAERwmB,EAAgB,CAClB,QAAS,gBACT1uC,OACAkoB,YAEEqoC,EAAe,CACjB,QAAS,mBACTvwD,KAAM0uC,EACNlmB,0BAA0B,EAC1BC,aAAa,GAGjB,GAAIygC,EAAe,CACf,IAAMsH,EAAgB7tD,KAAa1M,IAAIa,EAAQoyD,GAC/C,IAAKsH,EAAe,OAFL,IAIPzmD,EAAYymD,EAAZzmD,QACR,IAAKA,EAAS,OALC,IAOP/J,EAAkB+J,EAAlB/J,KAAMioB,EAAYle,EAAZke,QACVjoB,EACA,EAAKywD,gBAAgBF,EAAc,SAAAhgE,MAC5B03B,GACP,EAAKyoC,mBAAmBhiB,GAE5Bya,aAAYryD,EAAQ,QAEpB,EAAKm4D,YAAYsB,GAAc,EAAO,SAAAhgE,UA5jB3B,EAgkBnBsxD,iBAAmB,WACfzxD,KAAgBsf,aAAa,CACzB,QAAS,yBAlkBE,EAskBnB8xC,kBAAoB,WACX,EAAKvV,gBAEV,EAAKA,eAAe1nC,QAAQ2nC,SAzkBb,EAgmBnBykB,0BAhmBmB,qBAgmBS,oCAAAv2D,EAAA,wDAEH,KADbmX,EAAU,EAAK06B,eAAe1nC,QAA9BgN,OACEzb,OAFc,oDAIH,IAAjByb,EAAMzb,OAJc,sBAKSka,MAAM1gB,KAAKiiB,GALpB,kBAKZq/C,EALY,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQdjG,EARc,OAUpB,EAAKl6D,SAAS,CACV89D,eAAe,EACf5D,YAZgB,wBAepB36C,MAAM1gB,KAAKiiB,GAAOliB,QAAlB,sCAA0B,WAAMuN,GAAN,uBAAAxC,EAAA,qEACQgyC,aAAcxvC,GADtB,mCACfW,EADe,KACRC,EADQ,KAGhBuM,EAAU,CACZ,QAAS,oBACTxN,MAAO,CAAE,QAAS,gBAAiBvI,KAAM4I,EAAK5I,KAAMqJ,KAAMT,EAAKS,KAAMyzB,KAAMl0B,GAC3EW,QACAC,UAGJ,EAAKszD,gBAAgB/mD,EAASnN,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAKqvC,eAAe1nC,QAAQvS,MAAQ,GA7BZ,0CAhmBT,EAgoBnB2vD,qBAAuB,WACd,EAAKoP,mBAEV,EAAKA,kBAAkBxsD,QAAQ2nC,SAnoBhB,EAsoBnB8kB,6BAtoBmB,qBAsoBY,oCAAA52D,EAAA,wDAEN,KADbmX,EAAU,EAAKw/C,kBAAkBxsD,QAAjCgN,OACEzb,OAFiB,oDAIN,IAAjByb,EAAMzb,OAJiB,sBAKMka,MAAM1gB,KAAKiiB,GALjB,kBAKfq/C,EALe,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjBjG,EARiB,OAUvB,EAAKl6D,SAAS,CACV89D,eAAe,EACf5D,YAZmB,wBAevB36C,MAAM1gB,KAAKiiB,GAAOliB,QAAQ,SAAAuN,GACtB,IAAMmN,EAAU,CACZ,QAAS,uBACT5C,SAAU,CAAE,QAAS,gBAAiBnT,KAAM4I,EAAK5I,KAAMqJ,KAAMT,EAAKS,KAAMyzB,KAAMl0B,IAGlF,EAAKq0D,mBAAmBlnD,EAASnN,KArBd,QAyB3B,EAAKm0D,kBAAkBxsD,QAAQvS,MAAQ,GAzBZ,0CAtoBZ,EAwvBnBw5D,YAAc,WACVrkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,OA1vBvB,EA6vBnBgkD,WAAa,WACTjkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,QAAQ,EAAO,OAjwBrB,EAowBnBikD,aAAe,WACXlkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,UAAU,EAAO,OAxwBvB,EA2wBnBkkD,WAAa,WACTnkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtC,IAAIpH,EAAO,GACHuJ,EALO,gBAKPA,UACJA,IAAcA,EAAU65C,cACxBpjD,EAAOuJ,EAAU25C,YAGhBljD,IACLA,EAAI,gBAAYA,EAAZ,WACJmH,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,cAAc,EAAOpH,KAxxB3B,EA2xBnByrD,gBAAkB,WACdtkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,aAAa,EAAO,OA/xB1B,EAkyBnBskD,oBAAsB,WAClBvkD,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,UAAU,EAAO,MAEtCD,SAASC,YAAY,iBAAiB,EAAO,OAtyB9B,EAyyBnBmkD,UAAY,WACR,EAAKI,qBA1yBU,EA6yBnBngB,aAAe,WAAO,IAAD,EACmC,EAAKz7C,MAAjD+G,EADS,EACTA,OAAQoyD,EADC,EACDA,cAAekG,EADd,EACcA,iBAC/B,OAAIlG,GACAC,aAAYryD,EAAQ,IACb,KACAs4D,IACPhG,aAAatyD,EAAQ,IACd,IApzBI,EA0zBnBiI,cAAgB,SAAAlN,GAAU,IACd4oB,EAAoF5oB,EAApF4oB,OAAQC,EAA4E7oB,EAA5E6oB,QAAiCC,GAA2C9oB,EAAnEyD,IAAmEzD,EAA9D0U,QAA8D1U,EAArDq/D,SAAqDr/D,EAA3C8oB,SAASC,EAAkC/oB,EAAlC+oB,SAAUuwC,EAAwBt5D,EAAxBs5D,OAAQzkD,EAAgB7U,EAAhB6U,YADvD,EAEuB,EAAK3W,MAAzCm5D,EAFa,EAEbA,cAAekG,EAFF,EAEEA,iBAWvB,IADwB1oD,EAAhBzH,YAKR,OAAQyH,EAAY8T,MAEhB,IAAK,SACD,GAAIC,GAAUC,IAAYC,IAAYC,EAAU,CAC5C,GAAIsuC,EAAe,OACnB,GAAIkG,EAAkB,OAEtBv9D,EAAMwI,iBAEV,MAEJ,IAAK,QACL,IAAK,cAEIogB,KAAWC,GAAWC,GAAWC,IAAcuwC,EAO1C1wC,GAAWC,GAAYC,GAAYC,GAAauwC,IACtD,EAAK8E,cAAa,GAElBp+D,EAAMwI,iBACNxI,EAAMyI,oBAVN6M,SAASC,YAAY,mBAErBvV,EAAMwI,iBACNxI,EAAMyI,mBASV,MAGJ,IAAK,SACImgB,GAAWC,GAAYC,GAAYC,IAC/BuwC,GAAU,EAAK3f,iBAChB35C,EAAMwI,iBACNxI,EAAMyI,mBAGd,MAGJ,IAAK,UACD,IAAK6wD,IAAW1wC,IAAWC,IAAYC,IAAYC,EAAU,CACzD,IAAMpU,EAAU,EAAKsnD,cAAcvpD,QACnC,GAAIiC,IAAYA,EAAQC,UAAW,CAE/B,GAD0B,EAAK1W,MAAvBm5D,cACW,OAEnB94D,KAAgBsf,aAAa,CACzB,QAAS,+BAGb7d,EAAMwI,iBACNxI,EAAMyI,mBAGd,MAGJ,IAAK,OACImgB,IAAWC,IAAWC,GAAaC,GAAauwC,IACjD,EAAKC,aAELv5D,EAAMwI,iBACNxI,EAAMyI,mBAEV,MAGJ,IAAK,OACImgB,IAAWC,IAAWC,GAAaC,GAAauwC,IACjD,EAAKE,eAELx5D,EAAMwI,iBACNxI,EAAMyI,mBAEV,MAEJ,IAAK,OAEImgB,IAAWC,IAAWC,GAAaC,GAAauwC,GAO5C1wC,IAAWC,IAAWC,GAAaC,GAAauwC,IACrD,EAAKG,aAELz5D,EAAMwI,iBACNxI,EAAMyI,oBAVN,EAAKixD,YAEL15D,EAAMwI,iBACNxI,EAAMyI,mBASV,MAGJ,IAAK,QACGmgB,IAAWC,IAAWC,GAAaC,GAAauwC,IAChD,EAAKK,cAEL35D,EAAMwI,iBACNxI,EAAMyI,qBA/6BH,EAs7BnBw2D,gBAAkB,SAAC/mD,EAASnN,GACnBmN,GAEL,EAAKklD,YAAYllD,GAAS,EAAM,SAAAxZ,GAC5B,IAAM4gE,EAAgBxuD,KAAa1M,IAAI1F,EAAOwG,QAASxG,EAAOpC,IACzC,MAAjBgjE,GACA,EAAKC,qBAAqBD,EAAev0D,GAG7CE,KAAUu0D,WAAW9gE,EAAOwZ,QAAQxN,MAAMkrB,MAAM,GAAGlrB,MAAMpO,GAAIoC,MA/7BlD,EAm8BnB+gE,eAAiB,SAAAjN,GACb,EAAK4K,YAAY5K,GAAM,EAAM,eAp8Bd,EAu8BnB4M,mBAAqB,SAAClnD,EAASnN,GACtBmN,GAEL,EAAKklD,YAAYllD,GAAS,EAAM,SAAAxZ,GAAM,OAAIuM,KAAUu0D,WAAW9gE,EAAOwZ,QAAQ5C,SAASA,SAAShZ,GAAIoC,MA18BrF,EA68BnBghE,gBAAkB,SAACxnD,EAASnN,GACnBmN,GAEL,EAAKklD,YAAYllD,GAAS,EAAM,SAAAxZ,GAAM,OAAIuM,KAAUu0D,WAAW9gE,EAAOwZ,QAAQ+iB,MAAMA,MAAM3+B,GAAIoC,MAh9B/E,EAm9BnBihE,oBAAsB,SAACznD,EAASnN,GACvBmN,GAEL,EAAKklD,YAAYllD,GAAS,EAAM,SAAAxZ,GAAM,OAAIuM,KAAUu0D,WAAW9gE,EAAOwZ,QAAQ2tB,WAAW9C,MAAMzmC,GAAIoC,MAt9BpF,EA0+BnBwW,YA1+BmB,sCA0+BL,WAAMlV,GAAN,qBAAAuI,EAAA,0DACQvI,EAAMoV,eAAiBpV,EAAM4/D,cAAcxqD,cAArDwE,EADE,EACFA,MADE,oDAIJ8F,EAAQ,GACdvB,MAAM1gB,KAAKmc,GAAOpc,QAAQ,SAAAic,GACtB,GAAkC,IAA9BA,EAAKomD,KAAK7nC,QAAQ,QAAe,CACjC,IAAMjtB,EAAO0O,EAAKqmD,YACd/0D,GACA2U,EAAM7R,KAAK9C,QAKnB2U,EAAMzb,OAAS,GAdT,uBAeNjE,EAAMwI,iBAEN,EAAK4zD,gBAAgB18C,GAjBf,+BAqBJvK,EAAYnV,EAAMoV,cAAcC,QAAQ,eArBpC,wBAuBNrV,EAAMwI,iBACN8M,SAASC,YAAY,cAAc,EAAOJ,GAxBpC,6DA1+BK,wDAugCnB4qD,mBAAqB,WAAO,IAChBrgD,EAAU,EAAKxhB,MAAfwhB,MACHA,GACAA,EAAMzb,SAEXyb,EAAMliB,QAAQ,SAAAuN,GACV,IAAMmN,EAAU,CACZ,QAAS,uBACT5C,SAAU,CAAE,QAAS,gBAAiBnT,KAAM4I,EAAK5I,KAAM88B,KAAMl0B,IAGjE,EAAKq0D,mBAAmBlnD,EAASnN,KAGrC,EAAKi1D,sBArhCU,EAwhCnBA,kBAAoB,WAChB,EAAKphE,SAAS,CAAE8gB,MAAO,QAzhCR,EA4hCnBugD,yBAA2B,WACF,EAAK/hE,MAAlBgiE,WAGR,EAAKlD,YACL,EAAKmD,4BAjiCU,EAoiCnBA,wBAA0B,WACtB,EAAKvhE,SAAS,CAAEshE,SAAU,QAriCX,EAwiCnBX,qBAAuB,SAACpuD,EAASuP,GAC7B,GAAKvP,EAAL,CADsC,IAG9B0/B,EAAwC1/B,EAAxC0/B,cAAe34B,EAAyB/G,EAAzB+G,QAAShT,EAAgBiM,EAAhBjM,QAAS5I,EAAO6U,EAAP7U,GACzC,GAAKu0C,GAC0B,+BAA3BA,EAAc,UACO,iBAArB34B,EAAQ,SAAZ,CANsC,IAQ9BxN,EAAUwN,EAAVxN,MACR,GAAKA,EAAL,CAEA,IAAMc,EAAOg0B,aAAQ90B,EAAMkrB,MAAO6J,MAClC,GAAKj0B,EAAL,CAZsC,IAcvBT,EAASS,EAAhBd,MACHK,IAELE,KAAUm1D,QAAQr1D,EAAKzO,GAAIokB,GAC3BzV,KAAUo1D,gBAAgBn7D,EAAS5I,EAAIyO,EAAKzO,UA1jC7B,EAgnCnB8gE,YAhnCmB,sCAgnCL,WAAOllD,EAASooD,EAAYljD,GAA5B,qBAAA7U,EAAA,0DAC2B,EAAKrK,MAAlC+G,EADE,EACFA,OAAQs4D,EADN,EACMA,iBAEXt4D,EAHK,oDAILiT,EAJK,0EAOAhB,IAASqpD,sBAAT,0CAAkEt7D,IAPlE,wBASe1G,KAAgBC,KAAK,CACtC,QAAS,cACT0G,QAASD,EACTqxB,oBAAqBinC,EACrB7mC,sBAAuBxe,IAbrB,QASAxZ,EATA,OAgBN,EAAKE,SAAS,CAAE2+D,iBAAkB,GAAK,WAC/B+C,GACA,EAAKxD,cAKbv+D,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASD,EACTgyB,YAAa,CAACv4B,EAAOpC,MAGrBihE,GACAhG,aAAatyD,EAAQ,GAGzBmY,EAAS1e,GAjCH,kDAmCN8hE,MAAM,qBAAuB9hD,KAAKG,UAAL,OAnCvB,wDAhnCK,4DAupCnB4hD,kBAAoB,SAAAtiE,GACXA,IAEL,EAAKm8D,mBACLhlD,SAASC,YAAY,cAAc,EAAOpX,EAAMuiE,QAChD,EAAKlrD,gBA5pCU,EA+pCnBA,YA/pCmB,sCA+pCL,WAAMxV,GAAN,SAAAuI,EAAA,qDACV,EAAKo4D,YACL,EAAKC,WACL,EAAKC,yBAHK,yCA/pCK,wDAmrCnB/G,kBAAoB,WAChB,IAAIhE,EAAc,GACdC,EAAa,GAFK,kBAIdr+C,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACFyiD,EAAiCziD,EAAjCyiD,eACN,GAAIA,IADmCziD,EAAjB0iD,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BpE,EAAcmE,EAAcrlD,UAC5BmhD,EAAakE,EAAcE,OAKlCrE,IAAep+C,GAAcA,EAAU65C,cACxCuE,EAAcp+C,EAAU25C,YAG5B,EAAKzyD,SAAS,CACVw7D,aAAa,EACbrE,aACAD,iBA1sCW,EA8sCnBuE,mBAAqB,WACjB,EAAKz7D,SACD,CACIw7D,aAAa,GAEjB,WACI,EAAKE,sBAptCE,EAgvCnBtiD,WAAa,WACT,IAAMrD,EAAU,EAAKsnD,cAAcvpD,QACnC,GAAKiC,EACL,GAAKA,EAAQ0C,WAAWpT,OAAxB,CAKA,IAAM68D,EAAejnD,GAAiBlF,GACtC,GAAKmsD,EAAL,CAIA,IAAMxpD,EAAQhC,SAASiC,cACvBD,EAAME,SAASspD,EAAcA,EAAa78D,QAC1CqT,EAAMG,UAAS,GAEf,IAAMC,EAAYC,OAAOC,eACzBF,EAAUG,kBACVH,EAAUI,SAASR,GAEnB3C,EAAQoD,cAjBJpD,EAAQoD,SApvCG,EAwwCnByiD,oBAAsB,WAClB,EAAKH,sBAzwCU,EA4wCnBI,kBAAoB,SAACtsD,EAAM8C,GACvB,EAAKopD,qBACLlgD,WAAW,WAAM,IAEL7C,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACAyiD,EAAiCziD,EAAjCyiD,eAAgBC,EAAiB1iD,EAAjB0iD,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOlpD,EAClBypD,EAAW/0D,MAAQsL,EACnBypD,EAAW9lD,UAAYzG,EAHoB,IAMnCwjD,EAAc+I,EAAd/I,UACR,GAAIA,EAAW,CACX,IAAMr6C,EAAQhC,SAASiC,cACvBD,EAAME,SAASm6C,EAAWA,EAAUgJ,YAAY12D,QAChDqT,EAAMsjD,OAAOjJ,EAAWA,EAAUgJ,YAAY12D,QAE9C,IAAMyT,EAAYpC,SAASsC,eAC3BF,EAAUG,kBACVH,EAAUI,SAASR,GAEvB,SAMZ,IAAM2d,EAAI,kBAAchkB,EAAd,kBAA2BA,EAA3B,sDAA4E9C,EAA5E,QACVmH,SAASC,YAAY,gBAAgB,EAAO,MAC5CD,SAASC,YAAY,cAAc,EAAO0f,IAC3C,IA9yCY,EAizCnB8rC,sBAAwB,WACpB,EAAKC,wBAlzCU,EAqzCnBnG,gBArzCmB,sCAqzCD,WAAOzkC,EAASle,GAAhB,2BAAA3P,EAAA,yDACV2P,EADU,iCAEY,EAAK+oD,iBAAiB/oD,GAFlC,YAEJ/G,EAFI,yBAIW+vD,EAAgB/vD,EAAzB+G,QAJF,KAKEgpD,EAAY,SALd,OAMG,iBANH,0BAOiBC,EAAcjpD,EAArBxN,MAPV,wDAUgBgW,EAASygD,EAAfliC,KAVV,wDAaUv0B,EAAUw2D,EAAVx2D,MAbV,wDAgBQ02D,EAAQ12D,EAAMkrB,MAAMrvB,KAAK,SAAAxJ,GAAC,MAAe,MAAXA,EAAEkD,OAhBxC,4DAmBiB8K,EAASq2D,EAAhB12D,QAEJO,KAAUm1D,QAAQr1D,EAAKzO,GAAIokB,GArBjC,+DA8Bd,EAAKm+C,mBAAmBzoC,GA9BV,0CArzCC,0DAs1CnBirC,gBAAkB,SAACnpD,EAASnN,GAGxB,OAFA,EAAKi2D,sBAAqB,GAElB9oD,EAAQ,UACZ,IAAK,oBACD,EAAKwnD,gBAAgBxnD,EAASnN,GAC9B,MAEJ,IAAK,oBACD,EAAKk0D,gBAAgB/mD,EAASnN,GAC9B,MAEJ,IAAK,uBACD,EAAKq0D,mBAAmBlnD,EAASnN,KAn2C1B,EA63CnBmY,kBAAoB,WAChB/I,WAAW,kBAAM,EAAKmgD,oBAAoB,IA93C3B,EAi4CnBkE,iBAAmB,WAAwB,IAAvB8C,EAAsB,wDACjC,EAAKC,WAEV,EAAKA,SAASD,UAAYA,EAC1B,EAAKC,SAAS5jE,OACd,EAAK4jE,SAASC,OAAOC,iBAAiBjkE,QAAQ,SAAAi1B,GAAK,OAAIA,EAAM90B,WAt4C9C,EAy4CnBggE,mBAAqB,WACjB,EAAKa,kBAAiB,IA14CP,EA64CnBC,aA74CmB,qBA64CJ,sCAAAl2D,EAAA,yDACP,EAAKg5D,SADE,wDAGPC,EAAS,KAHF,kBAKQr6C,UAAUu6C,aAAaC,aAAa,CAAE1mC,OAAO,IALrD,UAKPumC,EALO,QAMH,EAAKD,SANF,8GASNC,EATM,wBAUP,EAAK5iE,SAAS,CACVgjE,wBAAwB,IAXrB,2BAgBLC,EAAc,CAChBC,aAAc,EACdC,WAAY,MAGFP,EAAOC,iBAAiB,GAChCO,iBAAiBH,GAEjB1lE,EAAU,CAAE8lE,SAAU,yBAA0BC,mBAAoB,MACpEC,EAAgB,CAClBC,qBAAsB,WAClB,OAAO,IAAIC,OAAOC,6DAEtBC,uBAAwBD,2DAGtBf,EAAW,IAAIiB,KAAchB,EAAQrlE,EAASgmE,GAE9CM,EAAS,GAEflB,EAASmB,gBAAkB,SAAAh5D,GACvB+4D,EAAO50D,KAAKnE,EAAEu1B,OAElBsiC,EAASoB,QAAU,aAGnBpB,EAASqB,OAAS,WACdrkE,KAAgBsf,aAAa,CAAE,QAAS,2BACxC,EAAKjf,SAAS,CAAE29D,cAAe,OAFX,IAIZ+E,EAAc,EAAKC,SAAnBD,UAIR,GAHA,EAAKC,SAAW,KAEhB,EAAKvE,aACDsE,EAAJ,CAKA,IAAM5gD,EAAO,IAAImiD,KAAKJ,EAAQ,CAAE,KAAS,2BACnCK,EAAWnrD,OAAOupB,IAAI+Y,gBAAgBv5B,GAEtCua,EAAQ,IAAI8nC,MAAMD,GACxB7nC,EAAM1L,UAAY,WACd,IAAMrX,EAAU,CACZ,QAAS,wBACT2tB,WAAY,CAAE,QAAS,gBAAiB1jC,KAAM,GAAIqJ,KAAMkV,EAAKlV,KAAMyzB,KAAMve,GACzExkB,SAAUiB,KAAK6lE,MAAM/nC,EAAM/+B,UAC3B+mE,SAAU,GACV7sC,QAAS,MAGb,EAAKupC,oBAAoBznD,EAASwI,MAG1C6gD,EAAS//C,QAAU,WACfjjB,KAAgBsf,aAAa,CAAE,QAAS,4BACxC,EAAKjf,SAAS,CAAE29D,cAAe,OAE/B,EAAKS,aAIT,EAAKuE,SAAWA,EAChB,EAAKA,SAASnlE,MAAM,IACpB,EAAKM,UAAY,IAAI2R,KAErB9P,KAAgBsf,aAAa,CAAE,QAAS,4BACxC,EAAKjf,SAAS,CAAE29D,cAAe,IAAIluD,OApFxB,wDA74CI,EAo+CnB60D,sBAAwB,WACpB,EAAKtkE,SAAS,CACVgjE,wBAAwB,KAn+C5B,EAAK1C,kBAAoB1/D,IAAMoU,YAC/B,EAAKwmC,eAAiB56C,IAAMoU,YAC5B,EAAKqoD,cAAgBz8D,IAAMoU,YAE3B,IAAM3O,EAASiS,IAASoF,YAPT,OASf,EAAKpe,MAAQ,CACT+G,SACAs4D,iBAAkBG,aAA6Bz4D,GAC/CoyD,cAAe,EACfiH,gBAAgB,EAChB/B,cAAe,KACfqF,wBAAwB,EACxBuB,SAAU,MAGd7tD,SAASC,YAAY,6BAA6B,EAAO,MAnB1C,E,mFAsBGpQ,EAAWC,GAAY,IACjC9D,EAAMzD,KAAKc,MAAX2C,EADgC,EAepCzD,KAAKK,MAZL+G,EAHoC,EAGpCA,OACAi7D,EAJoC,EAIpCA,SACAxgD,EALoC,EAKpCA,MACA69C,EANoC,EAMpCA,iBACAlG,EAPoC,EAOpCA,cACAqF,EARoC,EAQpCA,cACAtC,EAToC,EASpCA,YACA+I,EAVoC,EAUpCA,SACA7E,EAXoC,EAWpCA,eACA/B,EAZoC,EAYpCA,cACAqF,EAboC,EAapCA,uBACArf,EAdoC,EAcpCA,MAGJ,OAAIp9C,EAAU7D,IAAMA,IAIhB8D,EAAUH,SAAWA,IAIrBG,EAAU86D,WAAaA,IAIvB96D,EAAUsa,QAAUA,IAIpBta,EAAUm4D,mBAAqBA,IAI/Bn4D,EAAUiyD,gBAAkBA,IAI5BjyD,EAAU+9D,WAAaA,IAIvB/9D,EAAUg1D,cAAgBA,IAI1Bh1D,EAAUs3D,gBAAkBA,IAI5Bt3D,EAAUm3D,gBAAkBA,IAI5Bn3D,EAAUk5D,iBAAmBA,IAI7Bl5D,EAAUw8D,yBAA2BA,GAIrCx8D,EAAUm9C,QAAUA,e,kCAQxB1kD,KAAK+/D,WACL//D,KAAK2/D,gBACL3/D,KAAK2X,gB,kCAGI,IAAD,EAC4C3X,KAAKK,MAAjD+G,EADA,EACAA,OAAQoyD,EADR,EACQA,cAAekG,EADvB,EACuBA,iBAEzB5oD,EAAU9W,KAAKo+D,cAAcvpD,QACnC,GAAKiC,EAAL,CAEA,IAAIM,EAAY,KAEZA,EADAoiD,EACYx5D,KAAK4/D,eAAiB5/D,KAAK4/D,eAAexoD,UAAY,KAEtDN,EAAQM,UAGxB,IAAM8oD,EAAelgE,KAAKogE,gBAAgBh5D,EAAQs4D,EAAkBtoD,GACpEpX,KAAKggE,oBAAoBE,M,0CAWzBzoD,SAASkE,iBAAiB,kBAAmB3b,KAAKm+D,yBAAyB,GAE3EoH,KAAe99D,GAAG,4BAA6BzH,KAAKo/D,6BACpD/lD,IAAS5R,GAAG,yBAA0BzH,KAAKq+D,0BAC3ChlD,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvCr0B,IAAS5R,GAAG,0BAA2BzH,KAAKg/D,2BAC5Cx3D,KAAUC,GAAG,yBAA0BzH,KAAKk/D,0BAC5C9xD,KAAU3F,GAAG,wBAAyBzH,KAAKs+D,yBAC3CrrD,KAAaxL,GAAG,0BAA2BzH,KAAKy+D,2BAChDxrD,KAAaxL,GAAG,oBAAqBzH,KAAKy/D,qBAC1CxsD,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C0oC,KAAa/9D,GAAG,0BAA2BzH,KAAKw/D,2BAEhDx/D,KAAKm/D,c,6CAILn/D,KAAKi/D,YAELsG,KAAe79D,IAAI,4BAA6B1H,KAAKo/D,6BACrD/lD,IAAS3R,IAAI,yBAA0B1H,KAAKq+D,0BAC5ChlD,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxCr0B,IAAS3R,IAAI,0BAA2B1H,KAAKg/D,2BAC7Cx3D,KAAUE,IAAI,yBAA0B1H,KAAKk/D,0BAC7C9xD,KAAU1F,IAAI,wBAAyB1H,KAAKs+D,yBAC5CrrD,KAAavL,IAAI,0BAA2B1H,KAAKy+D,2BACjDxrD,KAAavL,IAAI,oBAAqB1H,KAAKy/D,qBAC3CxsD,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C0oC,KAAa99D,IAAI,0BAA2B1H,KAAKw/D,2BAEjD/nD,SAASoE,oBAAoB,kBAAmB7b,KAAKm+D,yBAAyB,GAE9En+D,KAAK8/D,uB,iDAoEL,IAAMhpD,EAAU9W,KAAKo+D,cAAcvpD,QACnC,GAAKiC,EAAL,CAFuB,IAIf8oD,EAAmB5/D,KAAnB4/D,eAER,GAAIA,EAAgB,CAGhB,GAFA9oD,EAAQM,UAAYwoD,EAAexoD,WAE9BwoD,EAAenmD,MAEhB,YADAzZ,KAAKma,aAIT,IAAMN,EAAYpC,SAASsC,eAC3BF,EAAUG,kBACVH,EAAUI,SAAS2lD,EAAenmD,OAElC3C,EAAQoD,aAERpD,EAAQM,UAAY,KACpBpX,KAAKma,aAGTna,KAAK2X,iB,8CAIL,IAAMb,EAAU9W,KAAKo+D,cAAcvpD,QAC9BiC,IAEL9W,KAAK4/D,eAAiB,CAClBxoD,UAAWN,EAAQM,UACnBqC,MAAOzZ,KAAKyZ,U,uCAiKF,IAAD,EACqBzZ,KAAKK,MAA/B+G,EADK,EACLA,OAAQoyD,EADH,EACGA,cAEVlmD,EAAUL,KAAa1M,IAAIa,EAAQoyD,GACzC,GAAKlmD,EAAL,CAJa,IAML+G,EAAY/G,EAAZ+G,QACR,GAAKA,EAAL,CAPa,IASL/J,EAAkB+J,EAAlB/J,KAAMioB,EAAYle,EAAZke,QACd,GAAKjoB,GAASioB,EAAd,CAEA,IAAMzhB,EAAU9W,KAAKo+D,cAAcvpD,QAE/BvE,EACAtQ,KAAKk7D,iBAAiB5qD,GACfioB,EACPv4B,KAAKk7D,iBAAiB3iC,GAEtBzhB,EAAQC,UAAY,U,uCAIXioC,GAAgB,IACrBv7C,EAAMzD,KAAKc,MAAX2C,EACFqT,EAAU9W,KAAKo+D,cAAcvpD,QAEnC,GAAKmqC,EAAL,CAJ4B,IASpB1uC,EAAmB0uC,EAAnB1uC,KAAMkoB,EAAawmB,EAAbxmB,SACd,IACI,IAAM6kC,EAAQC,aAAShtD,EAAMkoB,EAAU/0B,GACvCqT,EAAQM,UAAY,KACpBimD,EAAM19D,QAAQ,SAAAT,GACV4X,EAAQob,YAAYhzB,KAE1B,MAAO2M,GACLiL,EAAQC,UAAYzG,QAZpBwG,EAAQC,UAAY,O,yEA8IX7J,EAAMu4D,G,2EACdv4D,E,yCAAa,M,WAEZqrB,EAAUv4B,KAAKo+D,cAAcvpD,QAAQuC,aAEvCpX,KAAKo+D,cAAcvpD,QAAQuC,UAAY,KACvCpX,KAAK2X,gBAGK8tD,E,iCACFtI,aAAsBjwD,G,4DACtBw4D,aAAyBx4D,G,mCAF/ByvB,E,uBAIC,CACHzvB,OACAyvB,QACApE,Y,0IAsEK,IAAD,EAC0Bv4B,KAAKK,MAA/B+G,EADA,EACAA,OAAQoyD,EADR,EACQA,cACVrxD,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAEA,IAAM2O,EAAU9W,KAAKo+D,cAAcvpD,QACnC,GAAKiC,EAAL,CANQ,IAQAM,EAAcN,EAAdM,UAMR,GALkB,SAAdA,GAAsC,oBAAdA,IACxBN,EAAQM,UAAY,MAEFN,EAAdC,UAGR,IAAI3M,cAAShD,GACb,IAAIoyD,GAEkBrxD,EAAKka,sBAAwBla,EAAKka,oBAAsB,IAAIA,GAAoBla,EAAK1J,MAC7FqkE,UAAU,CAAE,QAAS,yB,iCAG3B,IACAtJ,EAAkBx5D,KAAKK,MAAvBm5D,cACFziD,EAAY/W,KAAKo+D,cAAcvpD,QAAQkC,UAC7C,IAAKA,GAAaA,EAAU3Q,OAAS,IAAMozD,EAA3C,CACqBgM,KAAT1tD,MAEJpX,KAAgBsf,aAAa,CACzB,QAAS,gCACTlI,KAAM,WALlB,CAYW6tD,YAAY3mE,MAAvB,IAEI4mE,EADUC,OACIC,KAAK/uD,GACZ4uD,YAAY3mE,MAEvB,GAAK4mE,GAAS7uD,IAAc6uD,EAAM,GAAlC,CAYA,IAAMG,EAAYv1D,KAAKxR,MACvB0B,KAAgBC,KAAK,CACjB,QAAS,cACTL,MAAOslE,EAAM,GACb/0D,MAAO,MACRjQ,KAAK,SAAAolE,GACJtlE,KAAgBsf,aAAa,CACzB,QAAS,gCACTlI,KAAM,CACFiuD,YACAzlE,MAAOslE,EAAM,GACbI,gBAKZtlE,KAAgBC,KAAK,CACjB,QAAS,iBACTL,MAAOslE,EAAM,GACb/0D,MAAO,MACRjQ,KAAK,SAAAolE,GACJtlE,KAAgBsf,aAAa,CACzB,QAAS,iCACTlI,KAAM,CACFiuD,YACAzlE,MAAOslE,EAAM,GACbI,oBAtCZ,CACqBR,KAAT1tD,MAEJpX,KAAgBsf,aAAa,CACzB,QAAS,gCACTlI,KAAM,W,8EAwQA+J,G,yEACbA,E,oDACAA,EAAMzb,O,oDAEU,IAAjByb,EAAMzb,O,iCACgBpG,KAAKmhE,WAAWt/C,EAAM,GAAIA,EAAM,GAAGzf,KAAK2P,WAAW,U,UAAnEkpD,E,0DAGNj7D,KAAKe,SAAS,CACV89D,eAAe,EACf5D,Y,wBAGJj7D,KAAKe,SAAS,CAAE8gB,U,qLAuFDxH,G,+EACera,KAAKK,MAA/B+G,E,EAAAA,OAAQoyD,E,EAAAA,cAGXpyD,E,oDACAoyD,E,oDACAn/C,E,0EAEE3Z,KAAgBC,KAAK,CACxB,QAAS,mBACT0G,QAASD,EACTsH,WAAY8qD,EACZ3gC,sBAAuBxe,K,8IAIZke,GAAU,IAAD,EACUv4B,KAAKK,MAA/B+G,EADgB,EAChBA,OAAQoyD,EADQ,EACRA,cAEXpyD,GACAoyD,GACAjhC,GAEL73B,KAAgBC,KAAK,CACjB,QAAS,qBACT0G,QAASD,EACTsH,WAAY8qD,EACZjhC,c,8EAIcle,EAASkF,G,iFACOvf,KAAKK,MAA/B+G,E,EAAAA,OAAQoyD,E,EAAAA,cAEXpyD,E,oDACAoyD,E,oDACAn/C,E,2EAGoB3Z,KAAgBC,KAAK,CACtC,QAAS,kBACT0G,QAASD,EACTsH,WAAY8qD,EACZ3gC,sBAAuBxe,I,QAJrBxZ,E,OAON0e,EAAS1e,G,0MA0DS,IACd24D,EAAkBx5D,KAAKK,MAAvBm5D,cACUx5D,KAAKo+D,cAAcvpD,QAAQkC,WAC1ByiD,EAKfx5D,KAAKe,SAAS,CACV0/D,gBAAgB,IALpBzgE,KAAKe,SAAS,CACV0/D,gBAAgB,M,sCAgDxBzgE,KAAK6Z,UAAYpC,SAASsC,eACrB/Z,KAAK6Z,WACL7Z,KAAK6Z,UAAU0jD,aAEpBv9D,KAAKyZ,MAAQzZ,KAAK6Z,UAAU2jD,WAAW,M,yCAGvB,IACR/jD,EAAUzZ,KAAVyZ,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYpC,SAASsC,eAC3BF,EAAUG,kBACVH,EAAUI,SAASR,GAEnBzZ,KAAKo+D,cAAcvpD,QAAQqF,aARvBla,KAAKma,e,6CAoIwB,IAAD,OAAf8rD,IAAe,yDACxBhL,EAAYj7D,KAAKK,MAAjB46D,QAERj7D,KAAKe,SACD,CACI89D,eAAe,EACf5D,QAAS,MAEb,WACQgL,GAAUhL,GAAWA,EAAQ1iC,SAC7B,EAAK6lC,cAAcvpD,QAAQuC,UAAY6jD,EAAQ1iC,QAC/C,EAAKpe,aACL,EAAKxC,eAEL,EAAK8kD,uB,+BAmHX,IACEh5D,EAAMzD,KAAKc,MAAX2C,EADH,EAiBDzD,KAAKK,MAdL+G,EAHC,EAGDA,OACAoyD,EAJC,EAIDA,cACAyB,EALC,EAKDA,QACAyE,EANC,EAMDA,iBACA79C,EAPC,EAODA,MAEAo2C,GATC,EAQDoK,SARC,EASDpK,aACAC,EAVC,EAUDA,WACAqE,EAXC,EAWDA,YACAsC,EAZC,EAYDA,cACA4B,EAbC,EAaDA,eACA/B,EAdC,EAcDA,cACAqF,EAfC,EAeDA,uBACArf,EAhBC,EAgBDA,MAGEwhB,EAAiB1M,EAAgB,IAAM2M,aAAc/+D,EAAQoyD,GAC/Dj0B,EAAQ,kBAACqF,GAAA,EAAD,CAAetnC,MAAOo7D,GAAiB+B,EAAgB51B,SAAU,kBAACu7B,GAAD,MAAoB7gC,KAAM,kBAAC8gC,GAAD,QAKvG,OAJI7M,IACAj0B,EAAO,kBAACof,GAAD,OAIP,yBAAKtjD,UAAU,uBACX,yBAAKA,UAAWoE,IAAW,WAAY,CAAE,qBAAsBi5D,GAAiB,CAAE,MAASha,KACvF,yBAAKrjD,UAAWoE,IAAW,oBACvB,kBAAC,GAAD,CACI2B,OAAQA,EACRqH,UAAWixD,EACXlG,cAAeqF,EAAgB,EAAIrF,EACnCj0D,QAASvF,KAAKqlB,oBAElB,yBAAKhkB,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAMujD,SAAP,CACIC,SACI,kBAACnuC,EAAA,EAAD,CAAYrV,UAAU,uBAAuBgD,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAAC45D,GAAD,CAAmBn0D,SAAU9J,KAAK4iE,sBAG1C,yBAAKvhE,UAAU,0BACX,yBACI5C,GAAG,mBACH4C,UAAU,oBACVmV,IAAKxW,KAAKo+D,cACVpmD,YAA8BvU,EAAjByiE,EAAmB,UAAe,WAC/CjuD,iBAAe,EACfC,gCAA8B,EAC9BC,UAAWnY,KAAKqP,cAEhBgJ,QAASrY,KAAKqX,YACdiB,QAAStY,KAAK2X,eAGtB,yBAAKtW,UAAU,yBACX,kBAAC,GAAD,MACA,2BACImV,IAAKxW,KAAKqhE,kBACVhgE,UAAU,yBACVe,KAAK,OACL66C,SAAS,WACT14C,SAAUvE,KAAKshE,+BAEnB,2BACI9qD,IAAKxW,KAAKu8C,eACVl7C,UAAU,yBACVe,KAAK,OACL66C,SAAS,WACTC,OAAO,UACP34C,SAAUvE,KAAKihE,6BAEjBv7D,QAAQ8zD,KAAmBkF,GACzB,kBAAC,GAAD,CACIt3D,OAAQA,EACR2qD,cAAe/xD,KAAK8xD,kBACpBI,iBAAkBlyD,KAAKiyD,qBACvBG,aAAcpyD,KAAKmyD,sBAUrCuM,GACE,yBAAKr9D,UAAU,4CACX,kBAACqV,EAAA,EAAD,CACIrV,UAAU,gCACVgD,aAAW,SACXsJ,KAAK,QACLhL,MAAM,YACN4C,QAASvF,KAAK8/D,oBACd,kBAAC7zD,GAAD,QAIZ,yBAAK5K,UAAU,mCACX,kBAACqV,EAAA,EAAD,CACIrV,UAAWoE,IAAW,uBAAwB,CAAC,8BAA+Bi5D,IAAkB+B,IAChGp8D,aAAW,OACXsJ,KAAK,QACLpI,QAASvF,KAAKugE,cACbh7B,MAIXvK,cAAc5zB,IAAW,kBAAC,GAAD,CAAkBivD,OAAQr2D,KAAK4hE,iBAC1D,kBAAC,GAAD,CAAkB//C,MAAOA,EAAO+3C,UAAW55D,KAAKkiE,mBAAoB3J,SAAUv4D,KAAKmiE,oBAEnF,kBAAC,GAAD,CACI7+D,KAAMi5D,EACNtE,YAAaA,EACbC,WAAYA,EACZpV,OAAQ9iD,KAAK48D,kBACbrE,SAAUv4D,KAAK28D,sBAEnB,kBAAC,GAAD,CACIr5D,KAAMu7D,EACNz3D,OAAQA,EACRqH,UAAW+qD,EACXyB,QAASA,EACTzV,OAAQxlD,KAAKg9D,gBACb3G,OAAQr2D,KAAKwjE,gBACbjL,SAAUv4D,KAAKkjE,wBAEnB,kBAAC,IAAD,CACIt/D,mBAAoB,EACpBN,KAAMygE,EACNlgE,QAAS7D,KAAKqlE,sBACdvhE,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,sBACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KAAoBx3C,EAAE,6BAE1B,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKqlE,sBAAuB1iE,MAAM,WAC9Cc,EAAE,c,GA3nDR7B,aAooDRsD,iBAAkBg5D,I,qBC1pDlBoI,I,wLAjBD,IAAD,EAC0BtmE,KAAKc,MAA5BuE,EADH,EACGA,QAASkhE,EADZ,EACYA,UAEjB,OACI,yBAAKllE,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAQsB,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASghE,GAC9DlhE,U,GATD1D,IAAMC,YCC5B4kE,G,iLACQ,IACE/iE,EAAMzD,KAAKc,MAAX2C,EAEF4B,EAAoB5B,EADNzD,KAAKK,MAAjB+6B,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAe/1B,QAASA,EAASkhE,UAAWvmE,KAAKw7B,iC,GAN7BN,IAUpBh2B,iBAAkBshE,ICH3BC,I,kNAyBFr9D,mBAAqB,SAAAnC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OAEJs/D,aAAgBt/D,EAAQH,EAAOoC,YAAY5K,KAC3C,EAAKyI,e,EAIboC,mBAAqB,SAAArC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OAEJu/D,aAAgBv/D,EAAQH,EAAOsC,WAAW9K,KAC1C,EAAKyI,e,EAIb0/D,WAAa,WAAO,IACRx/D,EAAW,EAAKtG,MAAhBsG,OACHA,GAEL1G,KAAgBC,KAAK,CACjB,QAAS,WACT0G,QAASD,K,EAIjBy/D,oBAAsB,WAAO,IACjBz/D,EAAW,EAAKtG,MAAhBsG,OACHA,GAEL1G,KAAgBC,KAAK,CACjB,QAAS,oBACT0G,QAASD,EACT+gB,uBAAuB,K,qFAzDT7gB,EAAWC,GAAY,IAAD,EAClBvH,KAAKc,MAAnB2C,EADgC,EAChCA,EAAG2D,EAD6B,EAC7BA,OAEX,OAAIE,EAAUF,SAAWA,GAIrBE,EAAU7D,IAAMA,I,0CAQpB6E,KAAgBb,GAAG,mBAAoBzH,KAAKoJ,oBAC5CM,KAAgBjC,GAAG,mBAAoBzH,KAAKsJ,sB,6CAI5ChB,KAAgBZ,IAAI,mBAAoB1H,KAAKoJ,oBAC7CM,KAAgBhC,IAAI,mBAAoB1H,KAAKsJ,sB,+BA8CvC,IAAD,EACiBtJ,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EACV0E,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAHb,IAKG/F,EAAS+F,EAAT/F,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAM2gB,EAAaza,KAAgB/B,IAAInE,EAAKoG,gBAC5C,IAAKua,EAAY,OAAO,KAFD,IAIfsF,EAAWtF,EAAXsF,OACR,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWw+C,EAAgBz+C,EAAhBy+C,YAEnB,OAAQz+C,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAehjB,QAAS5B,EAAE,cAAe8iE,UAAWvmE,KAAK6mE,sBAEpE,IAAK,0BACD,OAAOv+C,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAejjB,QAAS5B,EAAE,aAAc8iE,UAAWvmE,KAAK4mE,aAE9F,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAIt+C,EACOw+C,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAe1hE,QAAS5B,EAAE,aAAc8iE,UAAWvmE,KAAK4mE,aAI3E,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,qBACD,IAAMr9D,EAAaG,KAAgBnD,IAAInE,EAAK+G,eAC5C,IAAKI,EAAY,OAAO,KAFD,IAIfqlD,EAAuBrlD,EAAvBqlD,WAAYvmC,EAAW9e,EAAX8e,OACpB,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWw+C,EAAgBz+C,EAAhBy+C,YAEnB,OAAQz+C,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAehjB,QAAS5B,EAAE,cAAe8iE,UAAWvmE,KAAK6mE,sBAEpE,IAAK,0BACD,OAAOv+C,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAejjB,QAAsB5B,EAAbmrD,EAAe,cAAmB,aAAc2X,UAAWvmE,KAAK4mE,aAE9H,IAAK,uBACD,OACI,kBAAC,GAAD,CACIvhE,QAAsB5B,EAAbmrD,EAAe,cAAmB,aAC3C2X,UAAWvmE,KAAK4mE,aAI5B,IAAK,yBACD,OAAIhY,EACO,kBAAC,GAAD,CAAsBxnD,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAIkhB,EACOw+C,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACI1hE,QAAsB5B,EAAbmrD,EAAe,cAAmB,aAC3C2X,UAAWvmE,KAAK4mE,cAS5C,OAAO,S,GAxKMjlE,IAAMC,YA4KZsD,iBAAkBuhE,ICrLlB5kE,gBACX,0BAAMC,EAAE,iPACR,SCmBE00C,I,kNACFn2C,MAAQ,CACJq2C,SAAU,M,EAGdswB,kB,sCAAoB,WAAM7kE,GAAN,mBAAAuI,EAAA,4DACOgsC,EAAav0C,EAA5Bw0C,cAEFvvC,EAASiS,IAASoF,YAHR,SAIG/d,KAAgBC,KAAK,CAAE,QAAS,UAAW0G,QAASD,IAJvD,OAIVe,EAJU,OAKhBX,KAAUuI,IAAI5H,GAEd,EAAKpH,SAAS,CAAE21C,aAPA,yC,wDAUpBE,gBAAkB,WACd,EAAK71C,SAAS,CAAE21C,SAAU,Q,EAG9BuwB,eAAiB,WACb,EAAKrwB,kBACLt6B,WAAW,kBAAM,EAAKxb,MAAMomE,mBAAmB,M,EAGnDC,mBAAqB,WACjB,EAAKvwB,kBAEL5F,aAAa33B,IAASoF,c,EAG1B+2B,iBAAmB,WACf,EAAKoB,kBAELnB,aAAUp8B,IAASoF,c,EAGvB2oD,YAAc,WACV,EAAKxwB,kBAEL,IAAMxvC,EAASiS,IAASoF,YAElBke,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,IAAKu1B,EAAO,OAAO,EANH,IAQR0qC,EAAW1qC,EAAX0qC,OACR,QAAKA,IACiB,IAAlBA,EAAOjhE,aAEXkhE,aAAoBlgE,EAAQigE,EAAO,GAAG5oE,M,wEAGhC,IACEgF,EAAMzD,KAAKc,MAAX2C,EACAizC,EAAa12C,KAAKK,MAAlBq2C,SAEFtvC,EAASiS,IAASoF,YAClBuyB,EAAeu2B,aAAgBngE,GAC/BuuC,EAAaC,aAAcxuC,GAC3ByuC,EAAkBC,aAAmB1uC,EAAQ3D,GAC7C+K,EAAeg5D,aAAoBpgE,GAEzC,OACI,oCACI,kBAACsP,EAAA,EAAD,CACIuhC,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACd72C,UAAU,mBACVgD,aAAW,OACXkB,QAASvF,KAAKgnE,mBACd,kBAACjsB,GAAD,OAEJ,kBAACtD,GAAA,EAAD,CACIh5C,GAAG,YACHi4C,SAAUA,EACVpzC,KAAMoC,QAAQgxC,GACd7yC,QAAS7D,KAAK42C,gBACdc,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBpsC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACK,GAAA,EAAD,CAAUxG,QAASvF,KAAKinE,gBACpB,kBAACj7D,GAAA,EAAD,KACKgvB,cAAc5zB,GAAU,kBAAC,GAAD,MAAe,kBAAC+uC,GAAD,OAE5C,kBAACjqC,GAAA,EAAD,CAAczJ,QAAS2zC,aAAiBhvC,EAAQ3D,MAEnDutC,GACG,kBAACjlC,GAAA,EAAD,CAAUxG,QAASvF,KAAKmnE,oBACpB,kBAACn7D,GAAA,EAAD,KACI,kBAACy7D,GAAD,OAEJ,kBAACv7D,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mBAGhCkyC,GAAcE,GACX,kBAAC9pC,GAAA,EAAD,CAAUxG,QAASvF,KAAKw1C,kBACpB,kBAACxpC,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASozC,KAG9BrnC,GACG,kBAACzC,GAAA,EAAD,CAAUxG,QAASvF,KAAKonE,aACpB,kBAACp7D,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mC,GAlHxB9B,IAAMC,YAgIpBkD,GALCC,YACZ61B,gBACA11B,cAGWJ,CAAQ0xC,ICeRkxB,I,kNApIXC,8BAAgC,SAAA1gE,GACT,EAAKnG,MAAhBsG,SACOH,EAAOI,SAEtB,EAAKH,e,EAGTC,kBAAoB,SAAAF,GACG,EAAKnG,MAAhBsG,SACOH,EAAOI,SAEtB,EAAKH,e,EAGT0gE,uBAAyB,SAAA3gE,GACF,EAAKnG,MAAhBsG,SACOH,EAAOI,SAEtB,EAAKH,e,EAGTgB,mBAAqB,SAAAjB,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,GACAA,EAAK/F,KAEV,OAAQ+F,EAAK/F,KAAK,UACd,IAAK,qBACD,IAAMiG,EAAWC,KAAgBC,YAAYJ,EAAK/F,KAAKoG,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAAxJ,GAAC,OAAIA,EAAEyJ,UAAY1B,EAAO0B,WAE3D,EAAKzB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGiB,EAAK/F,KAAKuG,UAAY1B,EAAO0B,SAC7B,EAAKzB,gB,EAUrB8B,qBAAuB,SAAA/B,GAAW,IACtBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK/F,OAGkB,oBAAvB+F,EAAK/F,KAAK,UAAyD,mBAAvB+F,EAAK/F,KAAK,UACvD+F,EAAK/F,KAAKuG,UAAY1B,EAAO0B,SAE7B,EAAKzB,gB,EAIb+B,2BAA6B,SAAAhC,GAAW,IAC5BG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK/F,MAEiB,uBAAvB+F,EAAK/F,KAAK,UAAqC+F,EAAK/F,KAAKoG,iBAAmBvB,EAAOuB,gBACnF,EAAKtB,e,EAIbgC,2BAA6B,SAAAjC,GAAW,IAC5BG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK/F,MAEiB,uBAAvB+F,EAAK/F,KAAK,UAAqC+F,EAAK/F,KAAK+G,gBAAkBlC,EAAOkC,eAClF,EAAKjC,e,EAIbkC,mBAAqB,SAAAnC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK/F,MAEiB,uBAAvB+F,EAAK/F,KAAK,UAAqC+F,EAAK/F,KAAKoG,iBAAmBvB,EAAOoC,YAAY5K,IAC/F,EAAKyI,e,EAIboC,mBAAqB,SAAArC,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACFe,EAAOX,KAAUjB,IAAIa,GACtBe,GACAA,EAAK/F,MAEiB,uBAAvB+F,EAAK/F,KAAK,UAAqC+F,EAAK/F,KAAK+G,gBAAkBlC,EAAOsC,WAAW9K,IAC7F,EAAKyI,e,mFArITM,KAAUC,GAAG,8BAA+BzH,KAAK2nE,+BACjDngE,KAAUC,GAAG,kBAAmBzH,KAAKmH,mBACrCsC,KAAUhC,GAAG,mBAAoBzH,KAAKkI,oBACtCV,KAAUC,GAAG,uBAAwBzH,KAAK4nE,wBAC1Cn+D,KAAUhC,GAAG,qBAAsBzH,KAAKgJ,sBACxCV,KAAgBb,GAAG,2BAA4BzH,KAAKiJ,4BACpDS,KAAgBjC,GAAG,2BAA4BzH,KAAKkJ,4BACpDZ,KAAgBb,GAAG,mBAAoBzH,KAAKoJ,oBAC5CM,KAAgBjC,GAAG,mBAAoBzH,KAAKsJ,sB,6CAI5C9B,KAAUE,IAAI,8BAA+B1H,KAAK2nE,+BAClDngE,KAAUE,IAAI,kBAAmB1H,KAAKmH,mBACtCsC,KAAU/B,IAAI,mBAAoB1H,KAAKkI,oBACvCV,KAAUE,IAAI,uBAAwB1H,KAAK4nE,wBAC3Cn+D,KAAU/B,IAAI,qBAAsB1H,KAAKgJ,sBACzCV,KAAgBZ,IAAI,2BAA4B1H,KAAKiJ,4BACrDS,KAAgBhC,IAAI,2BAA4B1H,KAAKkJ,4BACrDZ,KAAgBZ,IAAI,mBAAoB1H,KAAKoJ,oBAC7CM,KAAgBhC,IAAI,mBAAoB1H,KAAKsJ,sB,+BAqHvC,IACElC,EAAWpH,KAAKc,MAAhBsG,OAEFwB,EAAWi/D,aAAgBzgE,GAAQ,GACnC0gE,EAAmBC,aAAqB3gE,GAE9C,OACI,yBAAK/F,UAAWoE,IAAW,uBAAwB,CAAE,8BAA+BqiE,KAC/El/D,O,GAnJgBjH,IAAMC,YCkBxBomE,I,wLAnBD,IAAD,EACkChoE,KAAKc,MAApCO,EADH,EACGA,UAAW+F,EADd,EACcA,OAAQ7B,EADtB,EACsBA,QAE3B,OACI,yBAAKlE,UAAWoE,IAAW,cAAepE,GAAYkE,QAASA,GAC3D,kBAAC,KAAD,CAAU6B,OAAQA,EAAQuG,KAAM,KAChC,yBAAKtM,UAAU,uBACX,kBAAC,GAAD,CAAa+F,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,U,GATvBzF,IAAMC,YCJzBqmE,I,0BACF,WAAYnnE,GAAQ,IAAD,8BACf,4CAAMA,KA6CVonE,QAAU,SAACtoE,EAAMT,EAAIgpE,GAAgB,IACzBr6D,EAAW,EAAKhN,MAAhBgN,OAEFyjB,EAAY,EAAK62C,aAAavzD,QAC9BwzD,EAAQ,EAAKC,SAASzzD,QACtB0zD,EAAQ,EAAKC,SAAS3zD,QAE5B,GAAK0c,GAAc82C,GAAUE,EAA7B,CAKIJ,GACA52C,EAAU3jB,MAAMsxB,QAAhB,iCAAoDpxB,EAApD,OACAu6D,EAAMz6D,MAAMsxB,QAAU,aACtBqpC,EAAM36D,MAAMsxB,QAAU,aACtBxgC,sBAAsB,WAClB6yB,EAAU3jB,MAAMsxB,QAAhB,0DARS,QAQT,YAPe,eAQfmpC,EAAMz6D,MAAMsxB,QAAZ,0CATS,QAST,YARe,cAQf,qBAAgGpxB,EAAhG,MACAy6D,EAAM36D,MAAMsxB,QAAZ,0CAVS,QAUT,YATe,cASf,qBAAgGpxB,EAAhG,UAGJyjB,EAAU3jB,MAAMsxB,QAAU,6BAC1BmpC,EAAMz6D,MAAMsxB,QAAU,aACtBqpC,EAAM36D,MAAMsxB,QAAU,aACtBxgC,sBAAsB,WAClB6yB,EAAU3jB,MAAMsxB,QAAhB,iCAAoDpxB,EAApD,sCAjBS,QAiBT,YAhBe,eAiBfu6D,EAAMz6D,MAAMsxB,QAAZ,0CAlBS,QAkBT,YAjBe,cAiBf,qBAAgGpxB,EAAhG,MACAy6D,EAAM36D,MAAMsxB,QAAZ,0CAnBS,QAmBT,YAlBe,cAkBf,qBAAgGpxB,EAAhG,WAvER,EAAKs6D,aAAezmE,IAAMoU,YAC1B,EAAKuyD,SAAW3mE,IAAMoU,YACtB,EAAKyyD,SAAW7mE,IAAMoU,YAEtB,EAAK1V,MAAQ,GAPE,E,mFAUGiH,EAAWC,EAAWmU,GACxC,OAAOpU,EAAUsU,OAAS5b,KAAKc,MAAM8a,O,0CAmBpB,IACTusD,EAAenoE,KAAKc,MAApBqnE,WACAhpE,EAAOa,KAAKK,MAAZlB,GAERa,KAAKkoE,QAAQ,GAAI/oE,EAAIgpE,K,yCAGNjnE,EAAWC,EAAWC,GAAW,IAAD,EAClBpB,KAAKc,MAA1B8a,EADuC,EACvCA,KAAMusD,EADiC,EACjCA,WADiC,EAE1BnoE,KAAKK,MAAlBT,EAFuC,EAEvCA,KAAMT,EAFiC,EAEjCA,GAEV+B,EAAU0a,OAASA,GACnB5b,KAAKkoE,QAAQtoE,EAAMT,EAAIgpE,K,+BAqCrB,IAAD,EAC0BnoE,KAAKc,MAA5BqnE,EADH,EACGA,WAAYr6D,EADf,EACeA,OADf,EAEgB9N,KAAKK,MAAlBT,EAFH,EAEGA,KAAMT,EAFT,EAESA,GAId,OACI,yBAAKkC,UAAU,gBAAgBuM,MAAO,CAAEE,WACpC,yBAAKzM,UAAU,6BAA6BlC,GAC5C,yBAAKqX,IAAKxW,KAAKooE,aAAc/mE,UAAU,yBACnC,yBAAKmV,IAAKxW,KAAKsoE,SAAUjnE,UAAU,kBAAkBuM,MAAO,CAAEE,WAAWq6D,EAAahpE,EAAKS,GAC3F,yBAAK4W,IAAKxW,KAAKwoE,SAAUnnE,UAAU,kBAAkBuM,MAAO,CAAEE,WAAWq6D,EAAavoE,EAAOT,Q,gDA5E7E2B,EAAOT,GAAQ,IACnCub,EAAS9a,EAAT8a,KACAzc,EAAiBkB,EAAjBlB,GAER,OAAIyc,IAFqBvb,EAAbooE,SAGD,CACHA,SAAU7sD,EACVhc,KAAMT,EACNA,GAAIyc,EACJusD,WAAYvsD,EAAOzc,GAIpB,S,GA5BYwC,IAAMC,YAwGjCqmE,GAAajgE,aAAe,CACxB4T,KAAM,KACNusD,YAAY,EACZr6D,OAAQ,IAGGm6D,UC7GTS,I,kNAEFroE,MAAQ,G,wEAiBE,IAAD,EACgCL,KAAKc,MAAlC6nE,EADH,EACGA,QAAS76D,EADZ,EACYA,OAAQ86D,EADpB,EACoBA,QACjBT,EAAenoE,KAAKK,MAApB8nE,WACR,IAAKQ,EAAS,OAAO,KAErB,IAAME,EAAaF,EAAU,GAE7B,OACI,yBAAKtnE,UAAU,mBAAmBuM,MAAO,CAAEE,WACtC,YAAI+6D,GAAYD,UAAUh5D,IAAI,SAAC1Q,EAAGqb,GAAJ,OAAc,kBAAC,GAAD,CAAc3U,IAAK2U,EAAOqB,KAAM1c,EAAGipE,WAAYS,GAAWT,EAAaA,EAAYr6D,OAAQA,U,gDAxBpHhN,EAAOT,GAAQ,IACnCsoE,EAAY7nE,EAAZ6nE,QACAG,EAAgBzoE,EAAhByoE,YAER,OAAIH,IAAYG,EACL,CACHA,YAAaH,EAEbR,WAAYQ,EAAUG,GAIvB,S,GAhBennE,IAAMC,YAwCpC8mE,GAAgB1gE,aAAe,CAC3B2gE,QAAS,EACT76D,OAAQ,GACR86D,SAAS,GAGEF,UC1CTK,G,2MACFjtB,aAAe,WACX7jB,gB,EAGJjtB,aAAe,WACX,IAAIvM,EAAK,EACLm4B,EAAa,GAFA,uBAGjB,YAAkC3jB,KAAao8C,cAAcpsC,SAA7D,+CAAuE,CAAC,IAAD,UAA5D7b,EAA4D,EAA5DA,OAAQqH,EAAoD,EAApDA,UACfhQ,EAAK2I,EACLwvB,EAAW5mB,KAAKvB,IALH,kFAQjB8xB,aAAe9hC,EAAIm4B,I,EAGvByJ,cAAgB,WACZ,IAAI5hC,EACEm4B,EAAa,GAFD,uBAGlB,YAAkC3jB,KAAao8C,cAAcpsC,SAA7D,+CAAuE,CAAC,IAAD,UAA5D7b,EAA4D,EAA5DA,OAAQqH,EAAoD,EAApDA,UACfhQ,EAAK2I,EACLwvB,EAAW5mB,KAAKvB,IALF,kFAQlB6xB,aAAgB7hC,EAAIm4B,I,wEAGd,IAAD,EACgB52B,KAAKc,MAAlB2C,EADH,EACGA,EAAG42C,EADN,EACMA,MAEP2uB,GAAe,EAHd,uBAIL,YAAkC/1D,KAAao8C,cAAcpsC,SAA7D,+CAAuE,CAAC,IAAD,UAA5D7b,EAA4D,EAA5DA,OAAQqH,EAAoD,EAApDA,UACT6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,CACV01D,GAAe,EACf,MAEJ,IAAK11D,EAAQmtB,+BAAiCntB,EAAQotB,6BAA8B,CAChFsoC,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,uBAiBL,YAAkCh2D,KAAao8C,cAAcpsC,SAA7D,+CAAuE,CAAC,IAAD,UAA5D7b,EAA4D,EAA5DA,OAAQqH,EAAoD,EAApDA,UACT6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,CACV21D,GAAiB,EACjB,MAEJ,IAAK31D,EAAQwkB,iBAAkB,CAC3BmxC,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAK5nE,UAAU,kBACV4nE,GACG,kBAACvuC,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAKqgC,eACnE58B,EAAE,WACH,sCACA,kBAAC,GAAD,CAAiBklE,QAAStuB,KAGjC2uB,GACG,kBAACtuC,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAKgL,cACnEvH,EAAE,UACH,sCACA,kBAAC,GAAD,CAAiBklE,QAAStuB,KAGlC,yBAAKh5C,UAAU,yBACf,kBAACq5B,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAK87C,cACnEr4C,EAAE,gB,GA1EK9B,IAAMC,WAqFnBsD,iBAAkB6jE,I,SC5FlBlnE,gBACX,0BAAMC,EAAE,q8DACR,gBCyIWonE,I,yNAtIXC,SAAW,SAACjqE,EAAG2qC,EAAGh8B,EAAOC,EAAQs7D,GAC7B,MAAM,IAAN,OAAWlqE,EAAX,YAAgB2qC,EAAIu/B,EAApB,YAA8BA,EAA9B,YAAwCA,EAAxC,kBAAwDv7D,EAAxD,cAAmEC,EAAS,EAAIs7D,EAAhF,YAA0FA,EAA1F,YAAoGA,EAApG,mBAAqHv7D,EAArH,Q,EAGJw7D,YAAc,SAAC5qE,EAAI6qE,EAAWjvB,GAC1B,IAEIv4C,EAAI,GACR,GAAc,IAAVu4C,EACAv4C,EAAI,EAAKqnE,SAAS,EAAG,EAAG,EAAGG,EAJhB,GAKL,EAAKH,SAAS,EAAG,GAAI,EAAGG,EAAY,EAL/B,GAML,EAAKH,SAAS,EAAG,GAAI,EAAGG,EANnB,QAQX,IAAK,IAAI3iE,EAAI,EAAGA,EAAI0zC,EAAO1zC,IACvB7E,GAAK,EAAKqnE,SAAS,GAAIG,EAAY,GAAK3iE,EAAG,EAAG2iE,EATvC,GAaf,OACI,8BAAU7qE,GAAIA,GACV,0BAAMqD,EAAGA,M,EAKrBynE,aAAe,SAAClvB,EAAO9/B,GACnB,IAAI+uD,EAAY,GAahB,OAZc,IAAVjvB,EACAivB,EAAY,GACK,IAAVjvB,EACPivB,EAAY,GACK,IAAVjvB,EACPivB,EAAY,EACK,IAAVjvB,EACPivB,EAAY,EACLjvB,EAAQ,IACfivB,EAAY,GAGTA,G,EAGXE,cAAgB,SAACnvB,EAAO9/B,GACpB,IAAI+uD,EAAY,GAahB,OAZc,IAAVjvB,EACAivB,EAAY,GACK,IAAVjvB,EACPivB,EAAY,GACK,IAAVjvB,EACPivB,EAAsB,IAAV/uD,EAAc,GAAK,EACd,IAAV8/B,EACPivB,EAAY,EACLjvB,EAAQ,IACfivB,EAAY,GAGTA,G,EAGXG,kBAAoB,SAAClvD,EAAO+uD,EAAWjvB,GACnC,OAAc,IAAVA,EACO,EACU,IAAVA,EACU,IAAV9/B,EAAc,EAAI+uD,EAAY,EAG3B,IAAVjvB,EACc,IAAV9/B,EACO,EACU,IAAVA,EACA,GAGJ,IAEC+uD,EAAY,GAAK/uD,G,EAIjCmvD,mBAAqB,SAACnvD,EAAO8/B,EAAOivB,EAAWK,GAC3C,OAAItvB,GAAS,EACF,EAGP9/B,GAAS,EACF,EACAA,GAAS8/B,EAAQ,EACjBsvB,EAAc,IAGjBL,EAAY,GAAK,GAAK/uD,EAAQ,IAAM+uD,EAAY,I,EAG5DM,eAAiB,SAACvvB,EAAOivB,GACrB,OAAOjvB,GAAS,EAAI,GAAKivB,EAAYjvB,EAAQ,GAAKA,EAAQ,I,wEAGpD,IAAD,EACoBr6C,KAAKc,MAAtBu5C,EADH,EACGA,MAAO9/B,EADV,EACUA,MACf,GAAc,IAAV8/B,EACA,OACI,yBAAKh5C,UAAU,yBACX,yBAAKA,UAAU,qCAI3B,IAAMioE,EAAYtpE,KAAKupE,aAAalvB,EAAO9/B,GACrCsvD,EAAa7pE,KAAKwpE,cAAcnvB,EAAO9/B,GACvCovD,EAAc3pE,KAAK4pE,eAAevvB,EAAOivB,GAEzCQ,EAAU,mBAAezvB,GACzB0vB,EAAW/pE,KAAKqpE,YAAYS,EAAYR,EAAWjvB,GAEnD2vB,EAAiBhqE,KAAKypE,kBAAkBlvD,EAAO+uD,EAAWjvB,GAC1D4vB,EAAkBjqE,KAAK0pE,mBAAmBnvD,EAAO8/B,EAAOivB,EAAWK,GAEzE,OACI,yBAAKtoE,UAAWoE,IAAW,wBAAyB,CAAE,6BAA8B40C,EAAQ,KACxF,yBAAKh5C,UAAU,gCAAgCuM,MAAO,CAAEm8D,SAAS,QAAD,OAAUD,EAAV,KAAyBj8D,MAAO,EAAGC,OAAQ67D,EAAah3B,UAAU,eAAD,OAAiBs3B,EAAjB,SAC7H,yBAAKn8D,OAAO,IAAID,MAAM,KAClB,8BAAOk8D,IAEX,yBAAK1oE,UAAU,6BAA6BuM,MAAO,CAAEE,OAAQ+7D,EAAYl3B,UAAU,cAAD,OAAgBq3B,EAAhB,gB,GA5HpEroE,IAAMC,YCalCsoE,G,2MACF7pE,MAAQ,G,EAsFR8pE,mCAAqC,SAAAljE,GACd,EAAKnG,MAAhBsG,SACOH,EAAOG,QAItB,EAAKgjE,kBAAkBnjE,EAAOwH,Y,EAGlC47D,wBAA0B,SAAApjE,GACH,EAAKnG,MAAhBsG,SACYH,EAAZI,SAKR,EAAKijE,kB,EAGTvtC,mBAAqB,SAAA91B,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OACAkM,EAAYrM,EAAZqM,QACJlM,IAAWkM,EAAQjM,SAGlBiM,EAAQi3D,WAIb,EAAKD,kB,EAGTxtC,uBAAyB,SAAA71B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAigE,EAAW,EAAKhnE,MAAhBgnE,OACAhgE,EAAuCJ,EAAvCI,QAASm3D,EAA8Bv3D,EAA9Bu3D,aAAcplC,EAAgBnyB,EAAhBmyB,YACzBxC,EAAa,IAAInwB,IAAI2yB,EAAYxpB,IAAI,SAAA1Q,GAAC,MAAI,CAACA,EAAGA,MAChDkI,IAAWC,GAGVggE,EAAO71D,KAAK,SAAAtS,GAAC,OAAI03B,EAAWhwB,IAAI1H,EAAET,OAGlC+/D,GAIL,EAAK8L,kB,EAGT7tC,uBAAyB,SAAAx1B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAigE,EAAW,EAAKhnE,MAAhBgnE,OACAhgE,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WACbtH,IAAWC,GAGVggE,EAAO71D,KAAK,SAAAtS,GAAC,OAAIA,EAAET,KAAOiQ,KAI/B,EAAK47D,kB,EAGTE,YAAc,SAAC/7D,EAAWilC,GAAmC,IAApBr1C,EAAmB,uDAAR,IAC1CosE,EAAchzD,SAASwV,eAAe,gCACtCy9C,EAAejzD,SAASwV,eAAe,kCACvC09C,EAAelzD,SAASwV,eAAe,kCAC7C,GAAKw9C,GAAgBC,GAAiBC,EAAtC,CAEA,IAAMC,EAAiB,cAEjBzC,EAA+B,IAAlBz0B,GAAuBjlC,EAAYilC,EAClDy0B,GACAsC,EAAY78D,MAAMsxB,QAAU,+BAC5BwrC,EAAa98D,MAAMsxB,QAAU,aAC7ByrC,EAAa/8D,MAAMsxB,QAAU,aAC7BxgC,sBAAsB,WAClB+rE,EAAY78D,MAAMsxB,QAAlB,0DAA+E7gC,EAA/E,cAA6FusE,GAC7FF,EAAa98D,MAAMsxB,QAAnB,0CAAgE7gC,EAAhE,cAA8EusE,GAC9ED,EAAa/8D,MAAMsxB,QAAnB,0CAAgE7gC,EAAhE,cAA8EusE,OAGlFH,EAAY78D,MAAMsxB,QAAU,6BAC5BwrC,EAAa98D,MAAMsxB,QAAU,aAC7ByrC,EAAa/8D,MAAMsxB,QAAU,aAC7BxgC,sBAAsB,WAClB+rE,EAAY78D,MAAMsxB,QAAlB,8DAAmF7gC,EAAnF,cAAiGusE,GACjGF,EAAa98D,MAAMsxB,QAAnB,0CAAgE7gC,EAAhE,cAA8EusE,GAC9ED,EAAa/8D,MAAMsxB,QAAnB,0CAAgE7gC,EAAhE,cAA8EusE,Q,EAK1FN,eAAiB,WAAO,IACZljE,EAAW,EAAKtG,MAAhBsG,OADW,EAE0D,EAAK/G,MAA/DwqE,EAFA,EAEXp8D,UAA4Cq8D,EAFjC,EAEkBp3B,cAE/Bq3B,EAAavjE,KAAUwjE,cAAc5jE,GAErCu1B,EAAQ1pB,KAAa2pB,SAASx1B,GAC9BigE,EAAS1qC,EAAQA,EAAM0qC,OAAS,GAElC54D,EAAY44D,EAAO71D,KAAK,SAAAtS,GAAC,OAAIA,EAAET,KAAOosE,IAAoBA,EAAmB,GAC5Ep8D,GAAa44D,EAAOjhE,OAAS,IAC9BqI,EAAY44D,EAAO,GAAG5oE,IAE1B,IAAIi1C,EAAgBm3B,IAAqBp8D,EAAYq8D,EAAuBD,EAEtE7xC,EAAYqgC,aAAkBjyD,EAAQqH,GACtCyyB,EAAgBo4B,aAAsBlyD,EAAQqH,GAEpDwE,KAAag4D,cAAgB,CAAE7jE,SAAQ3I,GAAIgQ,GAC3C,EAAK1N,SAAS,CACVgqE,aACA1D,SACA3zB,gBACAjlC,YACAuqB,YACAkI,gBACAgqC,UAAW,CACPz8D,YACAuqB,YACAkI,kBAEL,WACkC,IAA7B,EAAK7gC,MAAMqzC,eACXm3B,IAAqB,EAAKxqE,MAAMoO,WAEpC,EAAK+7D,YAAY,EAAKnqE,MAAMoO,UAAW,EAAKpO,MAAMqzC,kB,EAI1D5V,wBAA0B,SAAA72B,GAAW,IACjB82B,EAAkB,EAAKj9B,MAA/BsG,OACWH,EAAXG,SACO22B,GAEf,EAAKusC,kB,EAGTa,gCAAkC,SAAAlkE,GAAW,IACjCG,EAAuBH,EAAvBG,OAAQ2jE,EAAe9jE,EAAf8jE,WAEZ,EAAKjqE,MAAMsG,SAAWA,GAE1B,EAAKrG,SAAS,CAAEgqE,gB,EAGpBX,kBAAoB,SAAAjxB,GAAkB,IAC1B/xC,EAAW,EAAKtG,MAAhBsG,OADyB,EAEe,EAAK/G,MAA7CoO,EAFyB,EAEzBA,UAAWuqB,EAFc,EAEdA,UAAWkI,EAFG,EAEHA,cAExBkqC,EAAgB/R,aAAkBjyD,EAAQ+xC,GAC1CkyB,EAAoB/R,aAAsBlyD,EAAQ+xC,GAElD+xB,EAAYE,EAAgB,CAC9B38D,UAAW0qC,EACXngB,UAAWoyC,EACXlqC,cAAemqC,GACf,CACA58D,YACAuqB,YACAkI,iBAGJjuB,KAAag4D,cAAgB,CAAE7jE,SAAQ3I,GAAIgQ,GAC3C,EAAK1N,SAAS,CACV2yC,cAAejlC,EACfA,UAAW0qC,EACXngB,UAAWoyC,EACXlqC,cAAemqC,EACfH,aACD,WACkC,IAA7B,EAAK7qE,MAAMqzC,eACXjlC,IAAc,EAAKpO,MAAMoO,WAE7B,EAAK+7D,YAAY,EAAKnqE,MAAMoO,UAAW,EAAKpO,MAAMqzC,kB,EAI1D7pC,YAAc,SAAA1H,GAAU,IACZiF,EAAW,EAAKtG,MAAhBsG,OADW,EAEW,EAAK/G,MAA3BgnE,EAFW,EAEXA,OAAQ54D,EAFG,EAEHA,UAChB,GAAK44D,EAAOjhE,QAEPqI,GAC2B,IAA5BtM,EAAM6U,YAAYgY,MAAtB,CAEA/b,KAAaq4D,cAAgB,CAAElkE,SAAQ3I,GAAIgQ,GAE3C2xB,aAASh5B,EAAQqH,GAEjB,IAAM8L,EAAQ8sD,EAAOhpD,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOgQ,IAC7C,IAAe,IAAX8L,EAAJ,CAEA,IAAMw7C,EAAYx7C,GAAS8sD,EAAOjhE,OAAS,EAAI,EAAImU,EAAQ,EAE3D,EAAK6vD,kBAAkB/C,EAAOtR,GAAWt3D,O,EAG7C+wB,gBAAkB,SAAArtB,GACdA,EAAMyI,mB,EAGV2gE,gBAAkB,SAAAppE,GAAU,IAChBiF,EAAW,EAAKtG,MAAhBsG,OAER1G,KAAgBsf,aAAa,CACzB,QAAS,yBACT5Y,Y,qFAtQcE,EAAWC,EAAWmU,GAAc,IAC9CtU,EAAWpH,KAAKc,MAAhBsG,OAD6C,EAEXpH,KAAKK,MAAvC0qE,EAF6C,EAE7CA,WAAY1D,EAFiC,EAEjCA,OAAQ54D,EAFyB,EAEzBA,UAE5B,OAAInH,EAAUF,SAAWA,IAIrBG,EAAUwjE,aAAeA,IAIzBxjE,EAAU8/D,SAAWA,GAIrB9/D,EAAUkH,YAAcA,M,yCAObvN,EAAWC,EAAWC,GAAW,IACxCgG,EAAWpH,KAAKc,MAAhBsG,OADuC,EAEVpH,KAAKK,MAAlCqzC,EAFuC,EAEvCA,cAAejlC,EAFwB,EAExBA,UAEnBvN,EAAUkG,SAAWA,GACrBpH,KAAKwqE,YAAY/7D,EAAWilC,EAAe,K,0CAK/ClsC,KAAUC,GAAG,gCAAiCzH,KAAKmrE,iCACnDl4D,KAAaxL,GAAG,wBAAyBzH,KAAK89B,yBAC9C7qB,KAAaxL,GAAG,mCAAoCzH,KAAKmqE,oCACzDl3D,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,oBACzC9pB,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,wBAC7CxpB,KAAaxL,GAAG,wBAAyBzH,KAAKqqE,2B,6CAI9C7iE,KAAUE,IAAI,gCAAiC1H,KAAKmrE,iCACpDl4D,KAAavL,IAAI,wBAAyB1H,KAAK89B,yBAC/C7qB,KAAavL,IAAI,mCAAoC1H,KAAKmqE,oCAC1Dl3D,KAAavL,IAAI,mBAAoB1H,KAAK+8B,oBAC1C9pB,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,wBAC9CxpB,KAAavL,IAAI,wBAAyB1H,KAAKqqE,2B,+BAyNzC,IAAD,EACiBrqE,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EADX,EAEyFzD,KAAKK,MAA3FoO,EAFH,EAEGA,UAAWilC,EAFd,EAEcA,cAAe2zB,EAF7B,EAE6BA,OAAQruC,EAFrC,EAEqCA,UAA0BkyC,GAF/D,EAEgDhqC,cAFhD,EAE+DgqC,WAAWH,EAF1E,EAE0EA,WAE/E,IAAK3jE,EAAQ,OAAO,KAEpB,GAAI2jE,GACqBA,EAAbS,SACM,OAAO,KAGzB,IAAMl4D,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAErB,IAAMm4D,EAAcx4D,KAAa1M,IAAIa,EAAQssC,GAEzCr5B,EAAW/G,EAAyBsmC,aAAWtmC,EAAS7P,GAAnCA,EAAE,WACvB01D,aAAiB7lD,KACjB+G,EAAU5W,EAAE,mBAGhB,IAAIioE,EAAeD,EAAmB7xB,aAAW6xB,EAAahoE,GAA7B,GAC7B01D,aAAiBsS,KACjBpxD,EAAU5W,EAAE,mBAGhB,IAAI8W,EAAQ,EACRge,EAAU90B,EAAE,iBACZ4jE,GAAUA,EAAOjhE,OAAS,IAC1BmU,EAAQ8sD,EAASA,EAAOhpD,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOgQ,KAAc,EAE1D8pB,EADkB,IAAlB8uC,EAAOjhE,OACiB3C,EAAJ,IAAV8W,EAAgB,wBAA6B,iBAGnD,oCACK9W,EAAE,iBACF8W,EAAQ,GACL,oCACK,KACD,kBAAC,GAAD,CAAiBouD,QAAStB,EAAOjhE,OAASmU,EAAOzM,OAAQ,GAAI86D,SAAS,OAO9F,IAAMT,EAA+B,IAAlBz0B,GAAuBjlC,EAAYilC,EAEtD,OACI,oCACI,kBAACxoC,GAAA,EAAD,CAAUC,QAAM,EAAC9J,UAAWoE,IAAW,iBAAkB,CAAE,uBAAwBuzB,IAAcptB,YAAa5L,KAAK6J,aAC/G,kBAAC,GAAD,CAAqB0Q,MAAO8sD,EAAOjhE,OAASmU,EAAQ,EAAG8/B,MAAOgtB,EAAOjhE,SACrE,kBAACigB,EAAA,EAAD,CACIC,KAAM0S,EACNvzB,WAAW,sBACX8e,QAAS,IACTgC,cAAc,EACdC,eAAe,GACf,6BACI,kBAAC,GAAD,CACIpf,OAAQA,EACRqH,UAAWy8D,EAAYA,EAAUz8D,UAAY,KAC7CuqB,UAAWkyC,EAAYA,EAAUlyC,UAAY,KAC7CkI,cAAegqC,EAAYA,EAAUhqC,cAAgB,SAIjE,yBAAK7/B,UAAU,0BACX,yBAAKA,UAAU,wBAAwBk3B,GACvC,yBAAKl3B,UAAU,2BACX,yBAAK5C,GAAG,gCACJ,yBAAKA,GAAG,kCAAkC0pE,EAAa9tD,EAAUqxD,GACjE,yBAAKjtE,GAAG,kCAAkC0pE,EAAauD,EAAcrxD,MAI/EgtD,EAAOjhE,OAAS,GACd,kBAACsQ,EAAA,EAAD,CACIrV,UAAU,6BACVgD,aAAW,OACXkB,QAASvF,KAAKurE,gBACd3/D,YAAa5L,KAAKwvB,iBAClB,kBAACm8C,GAAD,Y,gDA5XQ7qE,EAAOT,GAAQ,IACnCurE,EAAoBvrE,EAApBurE,gBACAxkE,EAAWtG,EAAXsG,OAER,GAAIwkE,IAAoBxkE,EAAQ,CAC5B,IAAMu1B,EAAQ1pB,KAAa2pB,SAASx1B,GAE9BigE,EAAS1qC,EAAQA,EAAM0qC,OAAS,GAEhC54D,EAAY44D,GAAUA,EAAOjhE,OAAS,EAAIihE,EAAO,GAAG5oE,GAAK,EACzDu6B,EAAYqgC,aAAkBjyD,EAAQqH,GACtCyyB,EAAgBo4B,aAAsBlyD,EAAQqH,GAEpD,MAAO,CACHm9D,gBAAiBxkE,EACjB2jE,WAAYvjE,KAAUwjE,cAAc5jE,GACpCigE,SACA3zB,cAAe,EACfjlC,YACAyyB,gBACAlI,YACAkyC,UAAW,CACPz8D,YACAyyB,gBACAlI,cAKZ,OAAO,S,GAhCar3B,IAAMC,WA4YnBsD,iBAAkBglE,ICtY3B2B,G,2MACFxrE,MAAQ,CACJoY,mBAAoBY,IAASC,wBAC7BwyD,gBAAiBzyD,IAAS0yD,sB,EAqB9BC,8BAAgC,SAAA/kE,GAC5B,EAAKlG,SAAS,CAAEkrE,eAAgBh5D,KAAao8C,cAAc1hD,Q,EAG/D+/B,qBAAuB,SAAAzmC,GACnB,EAAKC,e,EAGTglE,wBAA0B,SAAAjlE,GACtB,EAAKlG,SAAS,CAAE+qE,gBAAiB7kE,EAAO5G,S,EAG5CmY,2BAA6B,SAAAvR,GACzB,EAAKlG,SAAS,CAAE0X,mBAAoBxR,EAAOyR,uB,EAG/CwuD,gBAAkB,WACd,IAAM9/D,EAASiS,IAASoF,YACXjX,KAAUjB,IAAIa,KAGFiS,IAAjBiL,aAGJ8b,aAASh5B,EAAQ,MAAM,GAEvBwX,cAA4B,K,EAIpCutD,WAAa,WACTzrE,KAAgBie,UAAU,I,EAG9BytD,iBAAmB,WACf,IAAMhlE,EAASiS,IAASoF,YACXjX,KAAUjB,IAAIa,IAG3BkwC,aAAWlwC,I,EAGfilE,SAAW,SAAAC,GAGP,OAAO7oE,EAFO,EAAK3C,MAAX2C,GAEC6oE,GACJ5sD,QAAQ,MAAO,IACfA,QAAQ,SAAK,K,mFAhElBrG,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvCr0B,IAAS5R,GAAG,2BAA4BzH,KAAKwY,4BAC7Ca,IAAS5R,GAAG,wBAAyBzH,KAAKksE,yBAE1Cj5D,KAAaxL,GAAG,6BAA8BzH,KAAKgsE,+BACnD/4D,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,iC,6CAIpD3yD,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxCr0B,IAAS3R,IAAI,2BAA4B1H,KAAKwY,4BAC9Ca,IAAS3R,IAAI,wBAAyB1H,KAAKksE,yBAE3Cj5D,KAAavL,IAAI,6BAA8B1H,KAAKgsE,+BACpD/4D,KAAavL,IAAI,8BAA+B1H,KAAKgsE,iC,+BAqD/C,IACEvoE,EAAMzD,KAAKc,MAAX2C,EADH,EAMDzD,KAAKK,MAHLoY,EAHC,EAGDA,mBACAqzD,EAJC,EAIDA,gBACAG,EALC,EAKDA,eAGE7kE,EAASiS,IAASoF,YAClBtW,EAAOX,KAAUjB,IAAIa,GAErB0gE,EAAmBC,aAAqB3gE,GAC1CU,EAAQC,aAAaX,GAAQ,EAAM3D,GACnCmF,EAAWi/D,aAAgBzgE,GAAQ,GACnCmlE,GAAwB,EAE5B,GAAIT,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDhkE,EAAQ9H,KAAKqsE,SAAS,cACtBzjE,EAAW,GACX2jE,GAAwB,EACxB,MACJ,IAAK,mCACDzkE,EAAQ9H,KAAKqsE,SAAS,uBACtBzjE,EAAW,GACX2jE,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDzkE,EAAQ9H,KAAKqsE,SAAS,YACtBzjE,EAAW,GACX2jE,GAAwB,EACxB,MACJ,IAAK,mCACDzkE,EAAQ9H,KAAKqsE,SAAS,uBACtBzjE,EAAW,GACX2jE,GAAwB,OAG7B,GAAI9zD,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD3Q,EAAQ9H,KAAKqsE,SAAS,eACtBzjE,EAAW,GACX2jE,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDzkE,EAAQ9H,KAAKqsE,SAAS,WACtBzjE,EAAW,GACX2jE,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDzkE,EAAQ9H,KAAKqsE,SAAS,WACtBzjE,EAAW,GACX2jE,GAAwB,OAIhCzkE,EAAQ9H,KAAKqsE,SAAS,WACtBzjE,EAAW,GACX2jE,GAAwB,EAG5B,OACI,yBAAKlrE,UAAWoE,IAAW,iBAAkB,CAAE,2BAA4BwmE,EAAiB,KACxF,yBAAK5qE,UAAU,0BACX,kBAAC,GAAD,CAAeg5C,MAAO4xB,IACtB,yBAAK5qE,UAAU,sBACX,kBAACqV,EAAA,EAAD,CACErV,UAAU,0BACVgD,aAAW,OACXkB,QAASvF,KAAKmsE,YACZ,kBAACK,GAAD,OAEHD,EACG,yBACIlrE,UAAWoE,IAAW,gBAAiB,OAAQ0C,EAAO,iBAAmB,kBACzE5C,QAASvF,KAAKknE,iBACd,0BAAM7lE,UAAU,yBAAyByG,GACzC,kBAAC2kE,GAAA,EAAD,MACA,0BAAMprE,UAAWoE,IAAW,sBAAuB,CAAE,uBAAwBqiE,KACxEl/D,GAEL,0BAAMvH,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWoE,IAAW,OAAQ,kBAC9B2B,OAAQA,EACR7B,QAASvF,KAAKknE,kBAGtB,kBAAC,GAAD,CAAe9/D,OAAQA,IACtBe,GACG,oCACI,kBAACuO,EAAA,EAAD,CACIrV,UAAU,6BACVgD,aAAW,SACXkB,QAASvF,KAAKosE,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgBlF,gBAAiBlnE,KAAKknE,0B,GA7LjDtlE,aAuMNsD,iBAAkB2mE,I,8HCzClBa,I,kNAzKXrsE,MAAQ,CACJq2C,SAAU,KACVp0C,MAAOuuB,KAAYnF,OACnBihD,UAAW97C,KAAYnF,OACvB+D,UAAU,EACVm9C,YAAY,EACZC,WAAW,G,EAWfC,0BAA4B,SAAA7lE,GAAW,IAC3BykB,EAAuBzkB,EAAvBykB,OAAQ6E,EAAetpB,EAAfspB,gBAEG8uB,IAAf9uB,EACA,EAAKxvB,SAAS,CAAEuB,MAAOopB,IAEvB,EAAK3qB,SAAS,CAAEuB,MAAOopB,EAAQihD,UAAWp8C,K,EAIlDw8C,kBAAoB,SAAAr2B,GAChB,EAAK31C,SAAS,CAAE21C,SAAUA,K,EAG9Bs2B,mBAAqB,WAAO,IAAD,EACqB,EAAK3sE,MAAzCovB,EADe,EACfA,SAAUm9C,EADK,EACLA,WAAYC,EADP,EACOA,UAE1Bp9C,GACAm9C,GACAC,GAEJ,EAAK9rE,SAAS,CAAE21C,SAAU,Q,EAG9Bu2B,iBAAmB,SAAC9qE,EAAO+qE,GACvB,EAAKnsE,SAAS,CAAE6rE,YAAY,IAExBM,GACA,EAAKH,kBAAkB5qE,EAAMw0C,gB,EAIrCw2B,iBAAmB,WACf,EAAKpsE,SAAS,CAAE6rE,YAAY,GAAS,WACjC,EAAKI,wB,EAIbI,sBAAwB,WACpB,EAAKrsE,SAAS,CAAE8rE,WAAW,GAAS,WAChC,EAAKG,wB,EAIbK,iBAAmB,WAAO,IAAD,EACQ,EAAKhtE,MAA1BiC,EADa,EACbA,MAAOqqE,EADM,EACNA,UACTW,EAAYhrE,EAAQ,EAAI,EAAIqqE,GAAaY,MAE/C7sE,KAAgBsf,aAAa,CACzB,QAAS,0BACT0L,OAAQ4hD,K,EAIhBprE,aAAe,SAACC,EAAOG,GAAW,IAAD,EACG,EAAKjC,MAA7BovB,EADqB,EACrBA,SAAUk9C,EADW,EACXA,UAEdl9C,EACA/uB,KAAgBsf,aAAa,CACzB,QAAS,0BACT0L,OAAQppB,IAGZ5B,KAAgBsf,aAAa,CACzB,QAAS,0BACTuQ,WAAYjuB,EAAQ,EAAIA,EAAQqqE,EAChCjhD,OAAQppB,K,EAKpBkrE,gBAAkB,WAAO,IACblrE,EAAU,EAAKjC,MAAfiC,MAER,EAAKvB,SAAS,CACV0uB,UAAU,EACVk9C,UAAWrqE,K,EAInBmrE,cAAgB,WAAO,IAAD,EACW,EAAKptE,MAA1BiC,EADU,EACVA,MAAOqqE,EADG,EACHA,UAEf,EAAK5rE,SACD,CACI0uB,UAAU,EACVk9C,UAAWrqE,EAAQ,EAAIA,EAAQqqE,GAEnC,WACI,EAAKK,wB,EAKjB/3C,cAAgB,SAAA3yB,GACZ,OAAc,IAAVA,EACO,kBAAC,KAAD,CAAegyD,SAAS,UAG/BhyD,EAAQ,IACD,kBAAC,KAAD,CAAgBgyD,SAAS,UAGhChyD,EAAQ,GACD,kBAAC,KAAD,CAAgBgyD,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,W,mFAlH9BzjC,KAAYppB,GAAG,0BAA2BzH,KAAK8sE,6B,6CAI/Cj8C,KAAYnpB,IAAI,0BAA2B1H,KAAK8sE,6B,+BAiH1C,IAAD,SACuB9sE,KAAKK,MAAzBq2C,EADH,EACGA,SAAUp0C,EADb,EACaA,MACZgB,EAAOoC,QAAQgxC,GAErB,OACI,yBACIpiB,aAAc,SAAAzoB,GAAC,OAAI,EAAKohE,iBAAiBphE,GAAG,IAC5C0oB,aAAcv0B,KAAKmtE,iBACnBv/D,MAAO,CACH+M,SAAU,WACV88C,WAAY,gBAEhB,kBAAC/gD,EAAA,EAAD,CAAYrV,UAAU,uBAAuBsB,MAAM,UAAU4C,QAASvF,KAAKqtE,kBACtErtE,KAAKi1B,cAAc3yB,IAExB,yBACIsL,MAAO,CACH+M,SAAU,WACV88C,WAAY,cACZiW,WAAYpqE,EAAO,UAAY,SAC/B++C,OAAQ,GAEZ/tB,aAAc,SAAAzoB,GAAC,OAAI,EAAKohE,iBAAiBphE,GAAG,IAC5C0oB,aAAcv0B,KAAKotE,uBACnB,yBAAK/rE,UAAU,uBACX,kBAACmzB,GAAA,EAAD,CACIj1B,IAAK,EACLk1B,IAAK,EACLC,KAAM,IACNpyB,MAAOA,EACPiC,SAAUvE,KAAKkC,aACfyrE,YAAa3tE,KAAKwtE,gBAClBI,UAAW5tE,KAAKytE,cAChBI,YAAY,oB,GAjKblsE,IAAMC,Y,0CC4ElBksE,G,YAhFX,WAAYhtE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVitE,0BAA4B,SAAA9mE,GAAW,IAC3Bw0D,EAAWx0D,EAAXw0D,OAER,EAAK16D,SAAS,CAAE06D,YArBD,EAwBnBuS,aAAe,WAAO,IACVvS,EAAW,EAAKp7D,MAAhBo7D,OAEJwS,EAAaxS,EACjB,OAAQA,GACJ,KAAKyS,KAAWC,KACZF,EAAaC,KAAWE,OACxB,MAEJ,KAAKF,KAAWE,OACZH,EAAaC,KAAWG,WACxB,MAEJ,KAAKH,KAAWG,WACZJ,EAAaC,KAAWC,KAKhCztE,KAAgBsf,aAAa,CACzB,QAAS,0BACTy7C,OAAQwS,KA7CG,EAiDnBK,QAAU,SAAA7S,GACN,OAAQA,GACJ,KAAKyS,KAAWC,KAGhB,KAAKD,KAAWE,OACZ,OAAO,kBAAC,KAAD,CAAY9Z,SAAS,UAEhC,KAAK4Z,KAAWG,WACZ,OAAO,kBAAC,KAAD,CAAe/Z,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,IAGPmH,EAAW5qC,KAAX4qC,OAHO,OAKf,EAAKp7D,MAAQ,CACTo7D,UANW,E,iFAWf5qC,KAAYppB,GAAG,0BAA2BzH,KAAK+tE,6B,6CAI/Cl9C,KAAYnpB,IAAI,0BAA2B1H,KAAK+tE,6B,+BAmD1C,IACEtS,EAAWz7D,KAAKK,MAAhBo7D,OAER,OACI,kBAAC/kD,EAAA,EAAD,CACIrV,UAAU,uBACVsB,MAAO84D,IAAWyS,KAAWC,KAAO,UAAY,UAChD5oE,QAASvF,KAAKguE,cACbhuE,KAAKsuE,QAAQ7S,Q,GA3EH95D,IAAMC,W,qBC+ClB2sE,G,YA/CX,WAAYztE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV0tE,2BAA6B,SAAAvnE,GAAW,IAC5BwnE,EAAYxnE,EAAZwnE,QAER,EAAK1tE,SAAS,CAAE0tE,aArBD,EAwBnBC,cAAgB,WAAO,IACXD,EAAY,EAAKpuE,MAAjBouE,QAER/tE,KAAgBsf,aAAa,CACzB,QAAS,2BACTyuD,SAAUA,KA7BC,IAGPA,EAAY59C,KAAZ49C,QAHO,OAKf,EAAKpuE,MAAQ,CACTouE,WANW,E,iFAWf59C,KAAYppB,GAAG,2BAA4BzH,KAAKwuE,8B,6CAIhD39C,KAAYnpB,IAAI,2BAA4B1H,KAAKwuE,8B,+BAkB3C,IACEC,EAAYzuE,KAAKK,MAAjBouE,QAER,OACI,kBAAC/3D,EAAA,EAAD,CACIrV,UAAU,uBACVsB,MAAQ8rE,EAAsB,UAAZ,UAClBlpE,QAASvF,KAAK0uE,eACd,kBAAC,KAAD,CAAapa,SAAS,e,GA1CV3yD,IAAMC,WCC5B+sE,G,YACF,WAAY7tE,GAAQ,IAAD,uBACf,4CAAMA,KAoBV8tE,gCAAkC,SAAA3nE,GAAW,IACjCilB,EAAiBjlB,EAAjBilB,aAER,EAAKnrB,SAAS,CAAEmrB,kBAxBD,EA2BnB2iD,qCAAuC,SAAA5nE,GAAW,IACtC6nE,EAAsB7nE,EAAtB6nE,kBAER,EAAK/tE,SAAS,CAAE+tE,uBA9BD,EAiCnB7iD,mBAAqB,WAAO,IAChBmR,EAAU,EAAKt8B,MAAfs8B,MADe,EAEqB,EAAK/8B,MAAzCyuE,EAFe,EAEfA,kBAAmB5iD,EAFJ,EAEIA,aAGrB6iD,GADO3xC,EAAQ0xC,EAAoB5iD,KACf8iD,KACpBC,KACAD,KAEF5xC,EACA18B,KAAgBsf,aAAa,CACzB,QAAS,qCACT8uD,kBAAmBC,IAGvBruE,KAAgBsf,aAAa,CACzB,QAAS,gCACTkM,aAAc6iD,KAlDP,IAGPD,EAAoCj+C,KAApCi+C,kBAAmB5iD,EAAiB2E,KAAjB3E,aAHZ,OAKf,EAAK7rB,MAAQ,CACTyuE,oBACA5iD,gBAPW,E,iFAYf2E,KAAYppB,GAAG,gCAAiCzH,KAAK4uE,iCACrD/9C,KAAYppB,GAAG,qCAAsCzH,KAAK6uE,wC,6CAI1Dh+C,KAAYnpB,IAAI,gCAAiC1H,KAAK4uE,iCACtD/9C,KAAYnpB,IAAI,qCAAsC1H,KAAK6uE,wC,+BAqCrD,IACEzxC,EAAUp9B,KAAKc,MAAfs8B,MADH,EAEuCp9B,KAAKK,MAAzCyuE,EAFH,EAEGA,kBAAmB5iD,EAFtB,EAEsBA,aAErBO,EAAO2Q,EAAQ0xC,EAAoB5iD,EAEzC,OACI,kBAACxV,EAAA,EAAD,CACIrV,UAAU,uBACVsB,MAAO8pB,EAAOuiD,KAA6B,UAAY,UACvDzpE,QAASvF,KAAKisB,oBACd,yBAAK5qB,UAAU,+BAAf,W,GAnEiBM,IAAMC,WAyEvC+sE,GAAmB3mE,aAAe,CAC9Bo1B,OAAO,GAOIuxC,UCxBAO,I,mBA1DX,WAAYpuE,GAAQ,IAAD,uBACf,4CAAMA,KAuBVquE,wBAA0B,SAAAloE,GAAW,IACzBqkB,EAA0BrkB,EAA1BqkB,YAAajtB,EAAa4I,EAAb5I,SACbuqE,EAAY,EAAKvoE,MAAjBuoE,QAER,EAAK7nE,SAAS,CACVuqB,cACAjtB,WACA+wE,kBAAmBz7C,aAAkBr0B,KAAKs0B,MAAMtI,GAAe,GAAIjtB,EAAUuqE,MA/BlE,EAmCnByG,cAAgB,SAAAltE,GACZA,EAAMyI,kBACNzI,EAAMwI,iBAFe,MAIsB,EAAKtK,MAAxCirB,EAJa,EAIbA,YAAajtB,EAJA,EAIAA,SAAUuqE,EAJV,EAIUA,QAE/B,EAAK7nE,SAAS,CACV6nE,SAAUA,EACVwG,kBAAmBz7C,aAAkBr0B,KAAKs0B,MAAMtI,GAAe,GAAIjtB,GAAWuqE,MA3CnE,IAGPvqE,EAAa,EAAKyC,MAAlBzC,SAHO,OAQf,EAAKgC,MAAQ,CACTuoE,SAHY,EAIZt9C,YALgB,EAMhBjtB,WACA+wE,kBAAmBz7C,aAPH,EAOkCt1B,GANtC,IAND,E,iFAiBfwyB,KAAYppB,GAAG,wBAAyBzH,KAAKmvE,2B,6CAI7Ct+C,KAAYnpB,IAAI,wBAAyB1H,KAAKmvE,2B,+BA0BxC,IACEC,EAAsBpvE,KAAKK,MAA3B+uE,kBAER,OACI,yBAAK/tE,UAAU,qBAAqBkE,QAASvF,KAAKqvE,eAC7CD,O,GArDEztE,IAAMC,Y,0DCsRV0tE,I,mBA5QX,WAAYxuE,GAAQ,IAAD,uBACf,4CAAMA,KAyBVyuE,eAAiB,WACb,IAAMxgE,EAAO,EAAK6F,QAAQC,QAC1B,GAAK9F,EAAL,CAFmB,MAIkB,EAAK1O,MAAlCmvE,EAJW,EAIXA,SAAUl8D,EAJC,EAIDA,QAASm8D,EAJR,EAIQA,MAC3B,IAAKn8D,GAAYm8D,IACZD,EAAL,CAEA,IAAMj1D,EAAQ,YAAIi1D,EAASzzD,OACtB6sD,UACAvqD,UAAU,SAAAnf,GAAC,OAAIwwE,aAAmBxwE,EAAGoU,GAAWm8D,KACrD,IAAe,IAAXl1D,EAAJ,CAEA,IAAMqB,EAAO,EAAK+zD,WAAWppE,IAAIgU,GACjC,GAAKqB,EAAL,CAEA,IAAM62C,EAAOmd,eAAqBh0D,GAC7B62C,IAEL1jD,EAAK+F,UAAY29C,EAAK9sB,UAAY,SA7CnB,EA8DnBkqC,kCAAoC,SAAA5oE,GAAW,IACnC6oE,EAAS7oE,EAAT6oE,KAEJA,EACA,EAAK/uE,SACD,CACIgvE,kBAAmBD,GAEvB,WACI,EAAKE,YAIb,EAAKjvE,SACD,CACIgvE,kBAAmBD,GAEvB,WACI,EAAKG,cAhFF,EAsFnBC,0BAA4B,SAAAjpE,GAAW,IAC3BzF,EAAWyF,EAAXzF,OAER,OAAQA,EAAO,UACX,IAAK,UAED,EAAKT,SAAS,CACVuS,QAAS9R,EACTiuE,MAAO,OAEX,MAEJ,IAAK,oBAED,EAAK1uE,SAAS,CACVuS,QAAS,KACTm8D,MAAOjuE,EAAOiuE,UAtGX,EA6GnBU,mCAAqC,SAAAlpE,GAAW,IAAD,EAChB,EAAK5G,MAAxBiT,EADmC,EACnCA,QAASm8D,EAD0B,EAC1BA,MACTjuE,EAAWyF,EAAXzF,OAEF4F,EAASkM,EAAUA,EAAQjM,QAAU,EACrCoH,EAAY6E,EAAUA,EAAQ7U,GAAK,EAErC2xE,aAAgBhpE,EAAQqH,EAAWghE,EAAOjuE,IAC1C,EAAKT,SAAS,CACVyuE,SAAU,QAtHH,EA2HnBa,4BAA8B,SAAAppE,GAAW,IAAD,EACT,EAAK5G,MAAxBiT,EAD4B,EAC5BA,QAASm8D,EADmB,EACnBA,MACTjuE,EAAqByF,EAArBzF,OAAQguE,EAAavoE,EAAbuoE,SAEVpoE,EAASkM,EAAUA,EAAQjM,QAAU,EACrCoH,EAAY6E,EAAUA,EAAQ7U,GAAK,EAErC2xE,aAAgBhpE,EAAQqH,EAAWghE,EAAOjuE,IAC1C,EAAKT,SAAS,CACVyuE,cApIO,EAyInBQ,QAAU,WACN//C,aAAa,EAAKqgD,aAElB,EAAKA,YAAch0D,WAAW,WAAO,IAAD,EACc,EAAKjc,MAA3CkwE,EADwB,EACxBA,eAAgBR,EADQ,EACRA,kBACxB,EAAKhvE,SAAS,CACVuC,KAAMitE,GAAkBR,KAE7B,MAjJY,EAoJnBE,SAAW,WACPhgD,aAAa,EAAK1L,SAElB,EAAKA,QAAUjI,WAAW,WAAO,IAAD,EACkB,EAAKjc,MAA3CkwE,EADoB,EACpBA,eAAgBR,EADI,EACJA,kBACxB,EAAKhvE,SAAS,CACVuC,KAAMitE,GAAkBR,KAE7B,MA5JY,EA+JnB9C,iBAAmB,WACf,EAAKlsE,SAAS,CACVgvE,mBAAmB,EACnBzsE,MAAM,KAlKK,EAsKnB6pE,iBAAmB,WACf,EAAKpsE,SACD,CACIgvE,mBAAmB,GAEvB,WACI,EAAKE,cA5KE,EAiLnBt7D,aAAe,WACX,IAAM5F,EAAO,EAAK6F,QAAQC,QACrB9F,IAEDA,EAAK+F,WAAaG,MAClBvU,KAAgBsf,aAAa,CACzB,QAAS,kCAENjR,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,OACjEvU,KAAgBsf,aAAa,CACzB,QAAS,oCAxLjB,EAAKpL,QAAUjT,IAAMoU,YACrB,EAAK45D,WAAa,IAAIlpE,IAJP,IAMP6M,EAA6Bud,KAA7Bvd,QAASm8D,EAAoB5+C,KAApB4+C,MAAOD,EAAa3+C,KAAb2+C,SANT,OAOf,EAAKnvE,MAAQ,CACTiT,UACAm8D,QACAD,WAEAlsE,MAAM,EACNitE,gBAAgB,EAChBR,mBAAmB,GAdR,E,gFAkBA7uE,EAAWC,EAAWC,GAAW,IACxCkC,EAAStD,KAAKK,MAAdiD,MAEHnC,EAAUmC,MAAQA,GACnBtD,KAAKuvE,mB,0CA2BT1+C,KAAYppB,GAAG,0BAA2BzH,KAAKkwE,2BAC/Cr/C,KAAYppB,GAAG,4BAA6BzH,KAAKqwE,6BACjDx/C,KAAYppB,GAAG,mCAAoCzH,KAAKmwE,oCACxDt/C,KAAYppB,GAAG,kCAAmCzH,KAAK6vE,qC,6CAIvDh/C,KAAYnpB,IAAI,0BAA2B1H,KAAKkwE,2BAChDr/C,KAAYnpB,IAAI,4BAA6B1H,KAAKqwE,6BAClDx/C,KAAYnpB,IAAI,mCAAoC1H,KAAKmwE,oCACzDt/C,KAAYnpB,IAAI,kCAAmC1H,KAAK6vE,qC,mCAqI/CJ,EAAOe,GAChB,IAAKf,EAAO,OAAO,KAEnB,IAAI34D,EAAU,KACd,OAAQ24D,EAAM,UACV,IAAK,iBACD34D,EACI,kBAAC,KAAD,CACI24D,MAAOA,EACPryC,MAAOqyC,EAAMryC,MACb6D,UAAW,kBAAMwvC,aAAqBhB,EAAMryC,MAAOqyC,EAAMl3C,QAASk3C,EAAOe,GAAa,MAE9F,MAEJ,IAAK,qBACD15D,EACI,kBAAC,KAAD,CACI24D,MAAOA,EACPpyC,UAAWoyC,EAAMznC,WACjB/G,UAAW,kBAAMwvC,aAAqBhB,EAAMznC,WAAYynC,EAAMl3C,QAASk3C,EAAOe,GAAa,MAM3G,OAAO15D,I,+BAGD,IAAD,SACsB9W,KAAKK,MAAxBiD,EADH,EACGA,KAAMksE,EADT,EACSA,SAEd,IAAKlsE,EAAM,OAAO,KAClB,IAAKksE,EAAU,OAAO,KAJjB,IAMGzzD,EAAUyzD,EAAVzzD,MACR,IAAKA,EAAO,OAAO,KACnB,GAAIA,EAAM3V,QAAU,EAAG,OAAO,KAE9BpG,KAAK2vE,WAAWzuD,QAEhB,IAAIwvD,EAAK,KACiB,sBAAtB30D,EAAM,GAAG,WACT20D,EAAKlB,EAAShuE,OAAOgvE,aAGzB,IAAMG,EAAqC,YAAtB50D,EAAM,GAAG,SACxB,SAAA7c,GAAC,OAAI09B,aAAS19B,EAAG,kBAAM+hC,aAAU/hC,EAAEmI,QAASnI,EAAET,OAC9C,SAAAS,GAAC,OAAI,EAAK0xE,aAAa1xE,EAAGwxE,IAEhC,OACI,yBAAKrvE,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACImV,IAAKxW,KAAK4U,QACVvT,UAAU,iBACVizB,aAAct0B,KAAKitE,iBACnB14C,aAAcv0B,KAAKmtE,iBACnB12D,SAAUzW,KAAK2U,cACd,YAAIoH,GACA6sD,UACAh5D,IAAI,SAAC1Q,EAAGqb,GAAJ,OACD,yBAAK3U,IAAK1G,EAAET,IAAM8b,EAAO/D,IAAK,SAAA/E,GAAE,OAAI,EAAKk+D,WAAW5/D,IAAIwK,EAAO9I,IAAKpQ,UAAU,iBACzEsvE,EAAazxE,a,GA/P3ByC,IAAMC,YCD7B,IAAImkE,GAAY,KAEV8K,GAAU,IAAIpqE,IACdqqE,GAAW,IAAIrqE,IAEd,SAAesqE,GAAtB,mC,6CAAO,WAA+B39D,GAA/B,mBAAA1I,EAAA,iEAEK7J,EAAS,MACTgwE,GAAQjqE,IAAIwM,GAHjB,gBAIKvS,EAASgwE,GAAQtqE,IAAI6M,GAJ1B,8BAMWpU,EAAO+mE,GAAY,IAAIv1D,KANlC,SAOoB9P,KAAgBC,KAAK,CAChC,QAAS,wBACTyS,MACA49D,YAAY,IAVrB,UAOKnwE,EAPL,OAYKgwE,GAAQ9gE,IAAIqD,EAAKvS,GACjBiwE,GAAS/gE,IAAIlP,EAAQuS,GACjB2yD,KAAc/mE,EAdvB,mDAiBCuU,QAAQC,IAAI,YAAa3S,GACzBowE,YAAuBpwE,GACvBqwE,aAAsB,CAAEV,YAAa3vE,EAAQuS,QAnB9C,mDAqBO+9D,EAAYr3D,OAAOxW,QACf8tE,OAAS,KACnBD,EAAU9iB,SAAWj7C,EAvBtB,yD,8PCUDi+D,G,YACF,WAAYvwE,GAAQ,IAAD,uBACf,4CAAMA,KAuGVwwE,kBAAoB,WAChB,IAAMnmD,EAAQ,EAAKomD,SAAS18D,QACvBsW,GAEL,EAAKE,WAAWF,EAAMG,YAAcE,OA5GrB,EA+GnBgmD,mBAAqB,WACjB,IAAMrmD,EAAQ,EAAKomD,SAAS18D,QACvBsW,GAEL,EAAKE,WAAWF,EAAMG,YAAcE,OAnHrB,EAsHnBimD,aAAe,SAAAtvE,GACG,EAAKovE,SAAS18D,SAG5B,EAAKwW,WAAWlpB,EAAMuvE,WA1HP,EA6HnBrmD,WAAa,SAAAC,GACT,IAAMH,EAAQ,EAAKomD,SAAS18D,QACvBsW,IAELG,EAAcc,aAAMd,EAAa,EAAGH,EAAM9sB,UAAY,GAEtD8sB,EAAMG,YAAcA,IAnIL,EA4LnBwuC,0BAA4B,SAAA7yD,GACxB,IAAMkmB,EAAS,EAAKokD,SAAS18D,QACxBsY,IAEAA,EAAOyB,SACR,EAAK+iD,cAAc,KACnB,EAAKC,iBAAkB,KAlMZ,EAsMnB1X,yBAA2B,SAAAjzD,GACvB,IAAMkmB,EAAS,EAAKokD,SAAS18D,QACxBsY,GAEDA,EAAOyB,QAAU,EAAKgjD,kBACtB,EAAKC,aAAa,KAClB,EAAKD,iBAAkB,IA5MZ,EAgNnBhD,gCAAkC,SAAA3nE,GAAW,IACjCilB,EAAiBjlB,EAAjBilB,aADgC,EAGb,EAAK7rB,MAAxBiT,EAHgC,EAGhCA,QAASm8D,EAHuB,EAGvBA,MACjB,IAAKn8D,GAAYm8D,KAEH/xC,aAASpqB,GAAWm8D,GAClC,CAEA,IAAMtiD,EAAS,EAAKokD,SAAS18D,QACxBsY,IAELA,EAAOjB,aAAeA,KA5NP,EA+NnB2iD,qCAAuC,SAAA5nE,GAAW,IACtC6nE,EAAsB7nE,EAAtB6nE,kBADqC,EAGlB,EAAKzuE,MAAxBiT,EAHqC,EAGrCA,QAASm8D,EAH4B,EAG5BA,MACjB,IAAKn8D,GAAYm8D,IAEZ/xC,aAASpqB,GAAWm8D,IACpBqC,aAAqBx+D,GAAWm8D,GAArC,CAEA,IAAMtiD,EAAS,EAAKokD,SAAS18D,QACxBsY,IAELA,EAAOjB,aAAe4iD,KA3OP,EA8OnBhC,0BAA4B,SAAA7lE,GAAW,IAC3BykB,EAAWzkB,EAAXykB,OAEFyB,EAAS,EAAKokD,SAAS18D,QACxBsY,IAELA,EAAOzB,OAASA,IApPD,EAuPnBqmD,wBAA0B,SAAA9qE,GAAW,IACzBzF,EAA4ByF,EAA5BzF,OAAQc,EAAoB2E,EAApB3E,MAAOjE,EAAa4I,EAAb5I,SADS,EAEL,EAAKgC,MAAxBiT,EAFwB,EAExBA,QAASm8D,EAFe,EAEfA,MAEjB,GAAKW,aAAgB98D,EAASA,EAAQjM,QAAU,EAAGiM,EAASA,EAAQ7U,GAAK,EAAGgxE,EAAOjuE,GAAnF,CAEA,IAAM2rB,EAAS,EAAKokD,SAAS18D,QACxBsY,IACAA,EAAO9uB,SAKZ8uB,EAAO7B,YAAchpB,EAAQ6qB,EAAO9uB,SAJhC,EAAK2zE,aAAe,CAAE1vE,QAAOjE,eAhQlB,EAuQnBozD,iCAAmC,SAAAxqD,GAC/B,EAAKgrE,mBAAqBvsE,QAAQ2T,IAASq4C,qBAxQ5B,EA2QnBwgB,+BAAiC,SAAAjrE,GAC7B,EAAKgrE,oBAAqB,GA5QX,EA+QnBE,+BAAiC,SAAAlrE,GAC7B,EAAKgrE,oBAAqB,GAhRX,EAmRnBG,8BAAgC,SAAAnrE,GAC5B,EAAKgrE,oBAAqB,EAEX,EAAKV,SAAS18D,SAG7B,EAAK88D,cAAc,MAzRJ,EA4RnBU,iBAAmB,SAAA7wE,GACf,GAAKA,EAAL,CADyB,IAGjBguE,EAAa3+C,KAAb2+C,SACK8C,EAAY,EAAKjyE,MAAtByM,IAEFA,EAAMylE,aAAY/wE,GAClB4iE,EAAWoO,aAAiBhxE,GAPT,EAQSkvB,aAAelvB,GAAzC8pB,EARiB,EAQjBA,YAAajtB,EARI,EAQJA,SACfo0E,EAAU/sE,QAAQoH,GAElB4lE,EAAgC,sBAApBlxE,EAAO,SACnB,CAAE8R,QAAS,KAAMm8D,MAAOjuE,EAAOiuE,MAAOe,YAAahvE,EAAOgvE,aAC1D,CAAEl9D,QAAS9R,EAAQiuE,MAAO,KAAMe,YAAa,MAEnD,EAAKzvE,S,uVAAL,EAEQuqB,cACAjtB,WACAmxE,WACAiD,UACA3lE,OACG4lE,EAPX,CAQQtO,aAEJ,WACI,IAAMj3C,EAAS,EAAKokD,SAAS18D,QACxBsY,IAEDmlD,IAAYxlE,IACZqgB,EAAOvL,OACH,EAAKowD,cACL7kD,EAAO7B,YAAc,EAAK0mD,aAAa1vE,MAAQ,EAAK0vE,aAAa3zE,SACjE,EAAK2zE,aAAe,MAEpB7kD,EAAO7B,YAAcA,GAIzB,EAAK2mD,oBACL9kD,EAAOW,QAEPptB,KAAgBsf,aAAa,CACzB,QAAS,yBACTxe,YAEG2rB,EAAOyB,QACdzB,EAAOU,YA3UJ,EAiVnB8kD,wBAA0B,SAAA1rE,GAAW,IACzBG,EAA8BH,EAA9BG,OAAQqH,EAAsBxH,EAAtBwH,UAAW9B,EAAW1F,EAAX0F,OADK,EAEQ,EAAKtM,MAArCiT,EAFwB,EAExBA,QAASm8D,EAFe,EAEfA,MAAOe,EAFQ,EAERA,YAExB,GAAIl9D,EAAS,CAAC,IACFjM,EAAyBiM,EAAzBjM,QAAS5I,EAAgB6U,EAAhB7U,GAAI4b,EAAY/G,EAAZ+G,QACrB,IAAKA,EAAS,OACd,GAAIjT,IAAWC,GAAWoH,IAAchQ,EAAI,OAE5C,IAAIm0E,GAAe,EACnB,OAAQv4D,EAAQ,UACZ,IAAK,cAAgB,IACTutB,EAAavtB,EAAbutB,SACR,GAAIA,EAAU,CAAC,IACHxK,EAAkCwK,EAAlCxK,MAAO4K,EAA2BJ,EAA3BI,WAAYpE,EAAegE,EAAfhE,WAE3B,GAAIxG,EAAO,CACP,GAAIy1C,cAAqB,OAGzB,GADwBz1C,EAAhBA,MACE,CACNw1C,GAAe,EACf,OAIR,GAAI5qC,EAEA,GADkBA,EAAV9C,MACG,CACP0tC,GAAe,EACf,MAIR,GAAIhvC,EAEA,GADkBA,EAAVzY,MACG,CACPynD,GAAe,EACf,OAKZ,MAEJ,IAAK,eAAiB,IACVx1C,EAAU/iB,EAAV+iB,MACR,GAAIA,EAAO,CACP,GAAIy1C,cAAqB,OAGzB,GADwBz1C,EAAhBA,MACE,CACNw1C,GAAe,EACf,OAIR,MAEJ,IAAK,mBAAqB,IACd5qC,EAAe3tB,EAAf2tB,WACR,GAAIA,EAEA,GADkBA,EAAV9C,MACG,CACP0tC,GAAe,EACf,MAIR,MAEJ,IAAK,mBAAqB,IACdhvC,EAAevpB,EAAfupB,WACR,GAAIA,EAEA,GADkBA,EAAVzY,MACG,CACPynD,GAAe,EACf,OAQZA,GACA,EAAKP,iBAAiB/+D,QAEvB,GAAIm8D,EAAO,CACd,IAAImD,GAAe,EACnB,OAAQnD,EAAM,UACV,IAAK,iBAAmB,IACZryC,EAAUqyC,EAAVryC,MACR,GAAIA,EAAO,CACP,GAAIy1C,cAAqB,OADlB,IAGQ3lE,EAASkwB,EAAhBA,MACJlwB,GAAQA,EAAKzO,KAAOkO,IACpBimE,GAAe,GAIvB,MAEJ,IAAK,qBAAuB,IAChB5qC,EAAeynC,EAAfznC,WACR,GAAIA,EAAY,CAAC,IACE96B,EAAS86B,EAAhB9C,MACJh4B,GAAQA,EAAKzO,KAAOkO,IACpBimE,GAAe,GAIvB,MAEJ,IAAK,qBAAuB,IAChBhvC,EAAe6rC,EAAf7rC,WACR,GAAIA,EAAY,CAAC,IACE12B,EAAS02B,EAAhBzY,MACJje,GAAQA,EAAKzO,KAAOkO,IACpBimE,GAAe,IAQ3BA,GACA,EAAKP,iBAAiB,CAAE,QAAS,oBAAqB5C,QAAOe,kBAldtD,EAudnBH,4BAA8B,SAAAppE,GAAW,IAC7BuoE,EAAqBvoE,EAArBuoE,SAAUhuE,EAAWyF,EAAXzF,OADkB,EAET,EAAKnB,MAAxBiT,EAF4B,EAE5BA,QAASm8D,EAFmB,EAEnBA,MAEXroE,EAASkM,EAAUA,EAAQjM,QAAU,EACrCoH,EAAY6E,EAAUA,EAAQ7U,GAAK,EAErC2xE,aAAgBhpE,EAAQqH,EAAWghE,EAAOjuE,IAC1C,EAAKT,SAAS,CAAEyuE,cA/dL,EAmenBsD,yBAA2B,SAAA7rE,GACvB,EAAKlG,SAAS,CACVuS,QAAS,KACTm8D,MAAO,KACPe,YAAa,KACbhB,SAAU,KACViD,SAAS,EACT3lE,IAAK,KACLs3D,SAAU,MACX,WACC,IAAMj3C,EAAS,EAAKokD,SAAS18D,QACxBsY,GAELA,EAAOvL,UAhfI,EAofnBsuD,0BAA4B,SAAAjpE,GAAW,IAC3BzF,EAAWyF,EAAXzF,OAD0B,EAEF,EAAKnB,MAA7BiT,EAF0B,EAE1BA,QAASm8D,EAFiB,EAEjBA,MAAO3iE,EAFU,EAEVA,IAExB,GAAIsjE,aAAgB98D,EAAUA,EAAQjM,QAAU,EAAGiM,EAAUA,EAAQ7U,GAAK,EAAGgxE,EAAOjuE,GAAS,CACzF,IAAKsL,EAAK,OAEV,IAAMqgB,EAAS,EAAKokD,SAAS18D,QAC7B,IAAKsY,EAAQ,OAEb,EAAKykD,iBAAkB,EACnBzkD,EAAOyB,OACPzB,EAAOU,OAEPV,EAAOW,aAGX,EAAKukD,iBAAiB7wE,IArgBX,EAygBnBuxE,WAAa,WACTryE,KAAgBsf,aAAa,CACzB,QAAS,2BA3gBE,EA+gBnB+N,WAAa,WAAO,IAAD,EACyB,EAAK1tB,MAArCiT,EADO,EACPA,QAASm8D,EADF,EACEA,MAAOe,EADT,EACSA,YACxB,GAAKl9D,GAAYm8D,EAAjB,CAEA,IAAMjuE,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,0BACTxe,aAvhBW,EA2hBnBwxE,WAAa,WACTtyE,KAAgBsf,aAAa,CACzB,QAAS,2BA7hBE,EAiiBnBmO,YAAc,WAAsB,IAArB8kD,IAAoB,2DACS,EAAK5yE,MAArCiT,EADuB,EACvBA,QAASm8D,EADc,EACdA,MAAOe,EADO,EACPA,YACxB,GAAKl9D,GAAYm8D,EAAjB,CAEA,IAAMjuE,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,0BACTxe,SACAyxE,aAGJ,EAAKlyE,SACD,GAKA,WACIL,KAAgBsf,aAAa,CACzB,QAAS,uBACTxe,SACAyxE,iBAvjBG,EA6jBnBC,iBAAmB,WACf,IAAM/nD,EAAQ,EAAKomD,SAAS18D,QAC5B,EAAKwZ,eAAe,CAAE/C,YAAa,EAAGjtB,SAAU8sB,EAAM9sB,WAEtD,EAAK8vB,aAAY,IAjkBF,EAokBnB9qB,YAAc,WACV,IAAM8pB,EAAS,EAAKokD,SAAS18D,QACzBsY,GACAA,EAAOW,QAGX,EAAKK,aAAY,IA1kBF,EA6kBnBV,qBAAuB,WAAO,IAAD,EAC0B,EAAKptB,MAAlDiT,EADmB,EACnBA,QAASm8D,EADU,EACVA,MAAOe,EADG,EACHA,YAAallD,EADV,EACUA,YACnC,GAAKhY,GAAYm8D,EAAjB,CAEA,IAAMtiD,EAAS,EAAKokD,SAAS18D,QAC7B,GAAKsY,EAAL,CALyB,IAOjB2hD,EAA4Cj+C,KAA5Ci+C,kBAAmB5iD,EAAyB2E,KAAzB3E,aAAcR,EAAWmF,KAAXnF,OAEnC0R,EAAQM,aAASpqB,GAAWm8D,GAC5BpyC,EAAY81C,aAAS7/D,GAAWm8D,GAElChjD,EAAOuiD,KACP3xC,EACA5Q,EAAOP,EACAkR,GAAS00C,aAAqBx+D,GAAWm8D,KAChDhjD,EAAOqiD,GAGX3hD,EAAOjB,aAAeO,EACtBU,EAAOzB,OAASA,EAChByB,EAAOimD,OAAQ,EACX,EAAKpB,cACL7kD,EAAO7B,YAAc6B,EAAO9uB,SAAW,EAAK2zE,aAAa1vE,MACzD,EAAK0vE,aAAe,MAEpB7kD,EAAO7B,YAAcA,EAGzB6B,EAAOU,OA7BkB,IA+BjBH,EAAgDP,EAAhDO,SAAUrvB,EAAsC8uB,EAAtC9uB,SAAUg1E,EAA4BlmD,EAA5BkmD,WAAYC,EAAgBnmD,EAAhBmmD,YAClC9xE,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAWjE,GATA9vE,KAAgBsf,aAAa,CACzB,QAAS,kCACTxe,SACAksB,WACArvB,WACAg1E,aACAC,iBAGAl2C,IAGAC,EAAJ,CAIA,IAAIsmC,EAAS,KACT,kBAAmBx2C,EACnBw2C,EAASx2C,EAAOomD,gBACT,qBAAsBpmD,IAC7Bw2C,EAASx2C,EAAOqmD,oBAGf7P,GAILjjE,KAAgBsf,aAAa,CACzB,QAAS,iCACT5Y,OAAQkM,EAAQjM,QAChBoH,UAAW6E,EAAQ7U,GACnBklE,OAAQA,QA9oBG,EAkpBnBl1C,eAAiB,WAAO,IAAD,EACqB,EAAKpuB,MAArCiT,EADW,EACXA,QAASm8D,EADE,EACFA,MAAOe,EADL,EACKA,YACxB,GAAKl9D,GAAYm8D,EAAjB,CAEA,IAAMtiD,EAAS,EAAKokD,SAAS18D,QAC7B,GAAKsY,EAAL,CALmB,IAOXO,EAAaP,EAAbO,SAEFlsB,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,4BACTxe,SACAksB,gBAhqBW,EAoqBnBY,iBAAmB,WAAO,IAAD,EACmB,EAAKjuB,MAArCiT,EADa,EACbA,QAASm8D,EADI,EACJA,MAAOe,EADH,EACGA,YACxB,GAAKl9D,GAAYm8D,EAAjB,CAEA,IAAMtiD,EAAS,EAAKokD,SAAS18D,QAC7B,GAAKsY,EAAL,CALqB,IAOb7B,EAAoC6B,EAApC7B,YAAaoC,EAAuBP,EAAvBO,SAAUrvB,EAAa8uB,EAAb9uB,SAE/B,EAAK0C,SAAS,CAAEuqB,gBAEhB,IAAM9pB,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,wBACTxe,SACAnD,WACAitB,cACAoC,WACAq4C,UAAWv1D,KAAKxR,QAGpB,EAAKqvB,eAAe,CAAE/C,cAAajtB,gBA1rBpB,EA6rBnBuvB,cAAgB,aA7rBG,EAisBnB6lD,gBAAkB,WAAO,IAAD,EACoB,EAAKpzE,MAArCiT,EADY,EACZA,QAASm8D,EADG,EACHA,MAAOe,EADJ,EACIA,YACxB,GAAKl9D,GAAYm8D,EAAjB,CAEA,EAAK1uE,SAAS,CAAE0xE,SAAS,IAEzB,IAAMtlD,EAAS,EAAKokD,SAAS18D,QAC7B,GAAKsY,EAAL,CAPoB,IASZ7B,EAA0B6B,EAA1B7B,YAAajtB,EAAa8uB,EAAb9uB,SAEfmD,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,wBACTxe,SACA8pB,cACAjtB,WACA0nE,UAAWv1D,KAAKxR,WAntBL,EAutBnB00E,iBAAmB,WAAO,IAAD,EACmB,EAAKrzE,MAArCiT,EADa,EACbA,QAASm8D,EADI,EACJA,MAAOe,EADH,EACGA,YACxB,IAAKl9D,GAAYm8D,KAEjB,EAAK1uE,SAAS,CACV0xE,SAAS,IAGE,EAAKlB,SAAS18D,SAC7B,CAEA,IAAMrT,EAAS8R,GAAW,CAAE,QAAS,oBAAqBm8D,QAAOe,eAEjE9vE,KAAgBsf,aAAa,CACzB,QAAS,yBACTxe,aAtuBW,EA0uBnBmyE,QAAU,SAAC/3D,EAAM4zD,GACb,IAAK5zD,EAAM,OAAO,EAClB,IAAK4zD,IAAaA,EAASzzD,MAAM3V,OAAQ,OAAO,EAEhD,IAAMmU,EAAQi1D,EAASzzD,MAAMsC,UAAU,SAAAnf,GAAC,OAAIwwE,aAAmBxwE,EAAG0c,KAClE,OAAe,IAAXrB,GAEGA,EAAQ,EAAIi1D,EAASzzD,MAAM3V,QAjvBnB,EAovBnBwtE,QAAU,SAACh4D,EAAM4zD,GACb,IAAK5zD,EAAM,OAAO,EAClB,IAAK4zD,IAAaA,EAASzzD,MAAM3V,OAAQ,OAAO,EAEhD,IAAMmU,EAAQi1D,EAASzzD,MAAMsC,UAAU,SAAAnf,GAAC,OAAIwwE,aAAmBxwE,EAAG0c,KAClE,OAAe,IAAXrB,GAEGA,EAAQ,GAAK,GA3vBL,EA8vBnBs5D,sBAAwB,WACpBnzE,KAAgBsf,aAAa,CACzB,QAAS,kCACT8vD,MAAM,KAjwBK,EAqwBnBgE,sBAAwB,WACpBpzE,KAAgBsf,aAAa,CACzB,QAAS,kCACT8vD,MAAM,KAxwBK,EA4wBnBiE,iBAAmB,WAAO,IAAD,EACmB,EAAK1zE,MAArCiT,EADa,EACbA,QAASm8D,EADI,EACJA,MAAOe,EADH,EACGA,YACpBl9D,EACA8sB,aAAS9sB,EAAQjM,QAASiM,EAAQ7U,IAIlCgxE,GAASe,GD5yBd,SAA8BA,EAAaf,GAC9C,IAAMr8D,EAAM09D,GAASvqE,IAAIiqE,GACpBp9D,IAELG,QAAQC,IAAI,YAAag9D,GACzBS,YAAuBT,GACvBU,aAAsB,CAAEV,cAAaf,QAAOr8D,SCuyBpC4gE,CAAqBxD,EAAaf,IApxBvB,EAyxBnBphD,eAAiB,SAAA/C,GAAgB,IAAD,EACD,EAAKjrB,MAAxBiT,EADoB,EACpBA,QAASm8D,EADW,EACXA,MACjB,IAAKn8D,GAAYm8D,IAEZqC,aAAqBx+D,GAAWm8D,GAArC,CAEA,IAAMryC,EAAQ62C,aAAgB3gE,EAAQjM,QAASiM,EAAQ7U,IACvD,GAAK2+B,EAAL,CAP4B,IASblwB,EAASkwB,EAAhBA,MACR,GAAKlwB,EAAL,CAV4B,IAYpByjB,EAAWzjB,EAAXyjB,OACR,GAAKA,EAAL,CAb4B,IAepBC,EAAcD,EAAdC,UACHA,IAEAtF,EAGDuF,KAAYxC,eAAeuC,EAAWtF,GAFtCuF,KAAYC,iBAAiBF,SAzyBjC,EAAK2gD,SAAW5vE,IAAMoU,YAHP,IAKPzC,EAA0Cud,KAA1Cvd,QAASm8D,EAAiC5+C,KAAjC4+C,MAAOe,EAA0B3/C,KAA1B2/C,YAAahB,EAAa3+C,KAAb2+C,SALtB,EAMmB9+C,aAAepd,GAAzCgY,EANO,EAMPA,YAAajtB,EANN,EAMMA,SANN,OAQf,EAAKgC,MAAQ,CACTirB,cACAjtB,WACAiV,UACAm8D,QACAe,cACAhB,WACAiD,SAAS,EACT3lE,IAAKylE,aAAYj/D,GACjB8wD,SAAUoO,aAAiBl/D,IAjBhB,E,mFAqBGhM,EAAWC,EAAWmU,GAAc,IAAD,EACF1b,KAAKK,MAAhDiT,EAD6C,EAC7CA,QAASm8D,EADoC,EACpCA,MAAOD,EAD6B,EAC7BA,SAAU1iE,EADmB,EACnBA,IAAK2lE,EADc,EACdA,QAEvC,OAAIlrE,EAAUkoE,QAAUA,IAIpBloE,EAAU+L,UAAYA,IAItB/L,EAAUioE,WAAaA,IAIvBjoE,EAAUuF,MAAQA,GAIlBvF,EAAUkrE,UAAYA,O,0CAQ1BzyE,KAAKk0E,0BAEL76D,IAAS5R,GAAG,iCAAkCzH,KAAKyxD,kCACnDrkD,KAAU3F,GAAG,4BAA6BzH,KAAK2yE,yBAC/CvlE,KAAU3F,GAAG,4BAA6BzH,KAAK2yE,yBAC/CvlE,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3C1/D,KAAaxL,GAAG,0BAA2BzH,KAAK85D,2BAChD7mD,KAAaxL,GAAG,yBAA0BzH,KAAKk6D,0BAC/CrpC,KAAYppB,GAAG,0BAA2BzH,KAAKkwE,2BAC/Cr/C,KAAYppB,GAAG,yBAA0BzH,KAAK8yE,0BAC9CjiD,KAAYppB,GAAG,4BAA6BzH,KAAKqwE,6BACjDx/C,KAAYppB,GAAG,8BAA+BzH,KAAKoyE,+BACnDvhD,KAAYppB,GAAG,+BAAgCzH,KAAKmyE,gCACpDthD,KAAYppB,GAAG,+BAAgCzH,KAAKkyE,gCACpDrhD,KAAYppB,GAAG,0BAA2BzH,KAAK8sE,2BAC/Cj8C,KAAYppB,GAAG,gCAAiCzH,KAAK4uE,iCACrD/9C,KAAYppB,GAAG,qCAAsCzH,KAAK6uE,sCAC1Dh+C,KAAYppB,GAAG,wBAAyBzH,KAAK+xE,2B,6CAI7C/xE,KAAKm0E,6BAEL96D,IAAS3R,IAAI,iCAAkC1H,KAAKyxD,kCACpDrkD,KAAU1F,IAAI,4BAA6B1H,KAAK2yE,yBAChDvlE,KAAU1F,IAAI,4BAA6B1H,KAAK2yE,yBAChDvlE,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5C1/D,KAAavL,IAAI,0BAA2B1H,KAAK85D,2BACjD7mD,KAAavL,IAAI,yBAA0B1H,KAAKk6D,0BAChDrpC,KAAYnpB,IAAI,0BAA2B1H,KAAKkwE,2BAChDr/C,KAAYnpB,IAAI,yBAA0B1H,KAAK8yE,0BAC/CjiD,KAAYnpB,IAAI,4BAA6B1H,KAAKqwE,6BAClDx/C,KAAYnpB,IAAI,8BAA+B1H,KAAKoyE,+BACpDvhD,KAAYnpB,IAAI,+BAAgC1H,KAAKmyE,gCACrDthD,KAAYnpB,IAAI,+BAAgC1H,KAAKkyE,gCACrDrhD,KAAYnpB,IAAI,0BAA2B1H,KAAK8sE,2BAChDj8C,KAAYnpB,IAAI,gCAAiC1H,KAAK4uE,iCACtD/9C,KAAYnpB,IAAI,qCAAsC1H,KAAK6uE,sCAC3Dh+C,KAAYnpB,IAAI,wBAAyB1H,KAAK+xE,2B,gDAGvB,IACfqC,EAAiB9qD,UAAjB8qD,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAar0E,KAAKgzE,YAChDoB,EAAaC,iBAAiB,gBAAiBr0E,KAAK+yE,YACpDqB,EAAaC,iBAAiB,cAAer0E,KAAKsxE,mBAClD8C,EAAaC,iBAAiB,eAAgBr0E,KAAKwxE,oBACnD4C,EAAaC,iBAAiB,SAAUr0E,KAAKyxE,cAC/C,a,mDAmCwB,IAClB2C,EAAiB9qD,UAAjB8qD,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAa,MAC3CD,EAAaC,iBAAiB,gBAAiB,MAC/CD,EAAaC,iBAAiB,cAAe,MAC7CD,EAAaC,iBAAiB,eAAgB,MAC9CD,EAAaC,iBAAiB,SAAU,MAC3C,a,oCAKSh2E,GAAW,IAAD,OACd8uB,EAASntB,KAAKuxE,SAAS18D,QAC7B,GAAKsY,EAAL,CAEA,IACIktB,EAAQ,EACNi6B,EAAgBnnD,EAAOzB,OAC7B1rB,KAAKu0E,eAAiBva,YAAY,WAC1B3f,GAJgB,IAKhBltB,EAAOW,QACPX,EAAOzB,OAAS4oD,EAChBE,cAAc,EAAKD,kBAEnBpnD,EAAOzB,OAAS4oD,GAAiBj6B,EAAQ,GACzCA,MAELh8C,EAZqB,O,mCAefA,GAAW,IAAD,OACb8uB,EAASntB,KAAKuxE,SAAS18D,QAC7B,GAAKsY,EAAL,CAEA,IACIktB,EAAQ,EACNi6B,EAAgBnnD,EAAOzB,OAC7ByB,EAAOzB,OAAS,EAChByB,EAAOU,OACP7tB,KAAKu0E,eAAiBva,YAAY,WAC1B3f,GANgB,IAOhBltB,EAAOzB,OAAS4oD,EAChBE,cAAc,EAAKD,kBAEnBpnD,EAAOzB,OAAS4oD,EAVA,IAUmCj6B,EAAQ,GAC3DA,MAELh8C,EAbqB,O,+BAsoBlB,IACEoF,EAAMzD,KAAKc,MAAX2C,EADH,EAEkEzD,KAAKK,MAApEoyE,EAFH,EAEGA,QAASn/D,EAFZ,EAEYA,QAASm8D,EAFrB,EAEqBA,MAAOpxE,EAF5B,EAE4BA,SAAUmxE,EAFtC,EAEsCA,SAAU1iE,EAFhD,EAEgDA,IAAKs3D,EAFrD,EAEqDA,SAEpDhnC,EAAQM,aAASpqB,GAAWm8D,GAC5BgF,EAAe3C,aAAqBx+D,GAAWm8D,GAE/Cr6D,EAAO9B,EAAUA,EAAQ8B,KAAO,KAEhCtN,EAAQ4sE,aAAcphE,GAAWm8D,EAAOhsE,GAIxCkxE,GAHcC,aAAYx/D,GAChBy/D,aAAQz/D,IAEEgoB,GAASq3C,GAC7BK,EAAa13C,EACb23C,EAAc33C,EACdu2C,EAAU3zE,KAAK2zE,QAAQrgE,GAAWm8D,EAAOD,GACzCoE,EAAU5zE,KAAK4zE,QAAQtgE,GAAWm8D,EAAOD,GAEzChuE,EAASsL,EAAM,4BAAQA,IAAKA,EAAK1K,KAAMgiE,IAAc,KAE3D,OACI,oCACI,2BACI/iE,UAAU,sBACVmV,IAAKxW,KAAKuxE,SACVyD,UAAU,EACV7tC,UAAU,EACVt5B,MAAO,GACPC,OAAQ,GACRmnE,yBAAyB,EACzBC,iBAAkBl1E,KAAKytB,qBACvB0nD,UAAWn1E,KAAK4tB,cAChBI,OAAQhuB,KAAKyzE,gBACbvlD,QAASluB,KAAK0zE,iBACdtlD,QAASpuB,KAAKkzE,iBACdkC,aAAcp1E,KAAKsuB,iBACnB+mD,WAAYr1E,KAAKyuB,gBAEhBjtB,IAEH8R,GAAWm8D,IACT,yBAAKpuE,UAAU,iBACX,kBAACqV,EAAA,EAAD,CACIwe,UAAWy+C,EACXtyE,UAAU,uBACVsB,MAAM,UACN4C,QAASvF,KAAK+yE,YACd,kBAAC,KAAD,CAAkBze,SAAS,WAE/B,kBAAC59C,EAAA,EAAD,CACIrV,UAAU,uBACVsB,MAAM,UACNuyB,UAAWpoB,EACXvH,QAASvF,KAAK+tB,YACb0kD,EAAU,kBAACz9C,GAAA,EAAD,MAAgB,kBAACsgD,GAAA,EAAD,OAE/B,kBAAC5+D,EAAA,EAAD,CACIwe,UAAW0+C,EACXvyE,UAAU,uBACVsB,MAAM,UACN4C,QAASvF,KAAKgzE,YACd,kBAAC,KAAD,CAAc1e,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACIjzD,UAAU,wBACVizB,aAAct0B,KAAK6zE,sBACnBt/C,aAAcv0B,KAAK8zE,sBACnBvuE,QAASvF,KAAK+zE,kBACd,yBAAK1yE,UAAU,uBACVyG,GA3DR,GAqDD,QAgBA,kBAAC,GAAD,CAAMzJ,SAAUA,IAChB,kBAAC,GAAD,MACCs2E,GAAoB,kBAAC,GAAD,CAAoBv3C,MAAOA,IAC/C03C,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAACr+D,EAAA,EAAD,CAAYrV,UAAU,uBAAuBkE,QAASvF,KAAKqD,aACvD,kBAACsT,EAAA,EAAD,CAAW29C,SAAS,iB,GA14BrB3yD,IAAMC,WAm5BlBsD,iBAAkBmsE,ICn6B3BkE,I,kNASFC,sBAAwB,SAAAvuE,GAAW,IACvBG,EAAW,EAAKtG,MAAhBsG,OACYH,EAAZI,UAEQD,GAEhB,EAAKF,e,EAGT7D,YAAc,WAAO,IACT+D,EAAW,EAAKtG,MAAhBsG,OAER,IADaI,KAAUjB,IAAIa,GAChB,OAAO,KAElB1G,KAAgBC,KAAK,CACjB,QAAS,sBACT0G,QAASD,K,EAIjBquE,iBAAmB,WAAO,IACdruE,EAAW,EAAKtG,MAAhBsG,OAER,IADaI,KAAUjB,IAAIa,GAChB,OAAO,KAElB1G,KAAgBC,KAAK,CACjB,QAAS,aACT0G,QAASD,EACTsuE,OAAQ,CACJ,QAAS,wBAEbt8C,YAAa,M,EAIrBu8C,8BAAgC,WAAO,IAC3BvuE,EAAW,EAAKtG,MAAhBsG,OAER,IADaI,KAAUjB,IAAIa,GAChB,OAAO,KAElB1G,KAAgBC,KAAK,CACjB,QAAS,aACT0G,QAASD,EACTsuE,OAAQ,CACJ,QAAS,qCAEbt8C,YAAa,M,EAIrBw8C,uBAAyB,WAAO,IACpBxuE,EAAW,EAAKtG,MAAhBsG,OACF2gC,EAASyC,aAAcpjC,GACxB2gC,GAELrnC,KAAgBC,KAAK,CACjB,QAAS,mBACTgI,QAASo/B,K,EAIjB8tC,iBAAmB,WAAO,IACdzuE,EAAW,EAAKtG,MAAhBsG,OACF2gC,EAASyC,aAAcpjC,GAC7B,GAAK2gC,EAAL,CAEA,IAAM/kB,EAAOvZ,KAAUlD,IAAIwhC,GAC3B,GAAK/kB,EAAL,CANqB,IAQbra,EAAiDqa,EAAjDra,QAASmtE,EAAwC9yD,EAAxC8yD,aAAc13B,EAA0Bp7B,EAA1Bo7B,WAAYE,EAAct7B,EAAds7B,UAE3C59C,KAAgBC,KAAK,CACjB,QAAS,aACTo1E,QAAS,CACL,QAAS,UACTD,eACA13B,aACAE,YACA03B,MAAO,GACPrtE,WAEJstE,oBAAoB,O,EAI5BC,gBAAkB,WAAO,IACb9uE,EAAW,EAAKtG,MAAhBsG,OACF2gC,EAASyC,aAAcpjC,GACxB2gC,GAELrnC,KAAgBC,KAAK,CACjB,QAAS,YACTgI,QAASo/B,K,mFAnGbvgC,KAAUC,GAAG,sBAAuBzH,KAAKw1E,yB,6CAIzChuE,KAAUE,IAAI,sBAAuB1H,KAAKw1E,yB,+BAmGpC,IAAD,EACiBx1E,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAChB,IAAK2D,EAAQ,OAAO,KAEpB,IAAMe,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KALb,IAOGguE,EAAehuE,EAAfguE,WACR,IAAKA,EAAY,OAAO,KAExB,IAAI97D,EAAU,KACd,OAAQ87D,EAAW,UACf,IAAK,gCACD97D,EACI,kBAACqgB,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAK41E,wBACnEnyE,EAAE,iBAGX,MAEJ,IAAK,0BACD4W,EACI,kBAACqgB,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAK61E,kBACnEpyE,EAAE,mBAGX,MAEJ,IAAK,8BACD4W,EACI,oCACI,kBAACqgB,GAAA,EAAD,CAAQ/3B,MAAM,UAAUtB,UAAU,wBAAwBkE,QAASvF,KAAK61E,kBACnEpyE,EAAE,mBAEP,kBAACi3B,GAAA,EAAD,CAAQ/3B,MAAM,YAAYtB,UAAU,wBAAwBkE,QAASvF,KAAKk2E,iBACrEzyE,EAAE,oBAIf,MAEJ,IAAK,iCACD4W,EACI,kBAACqgB,GAAA,EAAD,CACI/3B,MAAM,YACNtB,UAAU,wBACVkE,QAASvF,KAAK21E,+BACblyE,EAAE,uBAGX,MAEJ,IAAK,0BACD4W,EACI,kBAACqgB,GAAA,EAAD,CAAQ/3B,MAAM,YAAYtB,UAAU,wBAAwBkE,QAASvF,KAAKy1E,kBACrEhyE,EAAE,eAOnB,OACI,yBAAKpC,UAAU,aAAauK,YAAa5L,KAAK6J,aAC1C,yBAAKxI,UAAU,sBAAsBgZ,GACrC,yBAAKhZ,UAAU,2BACX,kBAACqV,EAAA,EAAD,CAAYnR,QAASvF,KAAKqD,aACtB,kBAACsT,EAAA,EAAD,a,GA5KAhV,IAAMC,YAwLfsD,iBAAkBqwE,I,+BClMlB1zE,gBACX,0BAAMC,EAAE,4jBACR,QCFWD,gBACX,0BAAMC,EAAE,wzBACR,cCFWD,gBACX,uBAAG6wC,OAAO,eAAef,YAAY,IAAIlqB,KAAK,OAAOmqB,SAAS,UAAUK,cAAc,QAAQU,UAAU,mBACpG,0BAAM7wC,EAAE,2IACR,8BAAUowC,eAAe,QAAQkkC,OAAO,yBACxC,8BAAUlkC,eAAe,QAAQkkC,OAAO,+BAE5C,e,oBCiCEC,I,kNACFh2E,MAAQ,CACJi2E,iBAAiB,G,EAGrBC,sBAAwB,SAAAp0E,GACD,EAAK9B,MAAhBkM,QAGR,EAAKxL,SAAS,CACVu1E,iBAAiB,EACjBhsE,aAAa,K,EAIrBksE,mBAAqB,SAAAr0E,GACbA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEu1E,iBAAiB,K,EAGrCG,eAAiB,SAAAt0E,GACbA,EAAMyI,kBADgB,MAGQ,EAAK9J,MAA3BsG,EAHc,EAGdA,OAAQqH,EAHM,EAGNA,UACY,EAAKpO,MAAzBi2E,iBAGJ,EAAKv1E,SAAS,CAAEu1E,iBAAiB,IAGrCI,aAAStvE,EAAQqH,I,EAGrBkoE,aAAe,SAAAx0E,GACPA,GACAA,EAAMyI,kBAFU,MAKmB,EAAK9J,MAApCsG,EALY,EAKZA,OAAQqH,EALI,EAKJA,WAEhB5K,EAPoB,EAKOA,SAEnB1B,GACRy0E,aAAiBxvE,EAAQqH,I,EAG7B0oB,eAAiB,SAAAh1B,GAAU,IAAD,EACW,EAAKrB,MAA9B+C,EADc,EACdA,QAASgzE,EADK,EACLA,SAAUpzE,EADL,EACKA,EAE3BI,EAAQ1B,GAEH00E,IAELrhD,GAAKqhD,GACL,EAAKx/C,sBAAsB5zB,EAAE,iB,EAGjCqzE,4B,sCAA8B,WAAM30E,GAAN,2BAAAuI,EAAA,8DACgB,EAAK5J,MAAvC+C,EADkB,EAClBA,QAASuD,EADS,EACTA,OAAQqH,EADC,EACDA,UAAWhL,EADV,EACUA,EAEpCI,EAAQ1B,GAHkB,SAKJzB,KAAgBC,KAAK,CACvC,QAAS,iBACT0G,QAASD,EACTsH,WAAYD,EACZsoB,WAAW,EACXC,aAAa,IAVS,UAKpB+/C,EALoB,2DAcZF,EAAaE,EAAnB3/C,KAdkB,mDAkB1B5B,GAAKqhD,GACL,EAAKx/C,sBAAsB5zB,EAAE,eAnBH,0C,wDAsB9B4zB,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,WACLgyB,EAAcC,KAElB,kBAAC7gB,EAAA,EAAD,W,EAMhBqgE,YAAc,SAAA70E,GAAU,IAAD,EACoB,EAAKrB,MAApCsG,EADW,EACXA,OAAQqH,EADG,EACHA,UAAW5K,EADR,EACQA,QAE3Bo0B,eACAp0B,EAAQ1B,GACRu3D,aAAatyD,EAAQqH,I,EAGzBmmC,UAAY,SAAAzyC,GAAU,IAAD,EACsB,EAAKrB,MAApCsG,EADS,EACTA,OAAQqH,EADC,EACDA,UAAW5K,EADV,EACUA,QAE3Bo0B,eACAp0B,EAAQ1B,GAEJ80E,aAAgB7vE,EAAQqH,GACxB64D,aAAoBlgE,EAAQqH,GAE5ByoE,aAAkB9vE,EAAQqH,I,EAIlC4xB,cAAgB,SAAAl+B,GAAU,IAAD,EACkB,EAAKrB,MAApCsG,EADa,EACbA,OAAQqH,EADK,EACLA,WAEhB5K,EAHqB,EACMA,SAEnB1B,GACRm+B,aAAgBl5B,EAAQ,CAACqH,K,EAG7B0oE,WAAa,SAAAh1E,GAAU,IAAD,EACqB,EAAKrB,MAApCsG,EADU,EACVA,OAAQqH,EADE,EACFA,UAAW5K,EADT,EACSA,QAE3Bo0B,eACAp0B,EAAQ1B,GACRs3D,aAAYryD,EAAQqH,I,EAGxBhB,aAAe,SAAAtL,GAAU,IAAD,EACmB,EAAKrB,MAApCsG,EADY,EACZA,OAAQqH,EADI,EACJA,WAChB5K,EAFoB,EACOA,SACnB1B,GAER,IAAM0X,EAAYC,OAAOC,eAAey5C,WACxC,GAAK4jB,aAAiBv9D,GAAtB,CAIA,IAAM0b,GAAYtiB,KAAao8C,cAAczoD,IAA3B,iBAAyCQ,EAAzC,sBAA6DqH,IAC/E4oE,aAAcjwE,EAAQqH,EAAW8mB,K,EAGrCvqB,aAAe,SAAA7I,GAAU,IAAD,EACmB,EAAKrB,MAApCsG,EADY,EACZA,OAAQqH,EADI,EACJA,WAEhB5K,EAHoB,EACOA,SAEnB1B,GACRo+B,aAAen5B,EAAQ,CAACqH,K,EAG5B6oE,eAAiB,SAAAn1E,GAAU,IAAD,EACQ,EAAKrB,MAA3BsG,EADc,EACdA,OAAQqH,EADM,EACNA,UACV6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,GAAK6E,EAAL,CAHsB,IAKd+G,EAAY/G,EAAZ+G,QACR,GAAKA,EAAL,CANsB,IAQd5Z,EAAY4Z,EAAZ5Z,QACR,GAAKA,EAAL,CATsB,IAWLyM,EAASzM,EAAlBA,QACR,GAAKyM,EAAL,CAEA,IAAM2V,EAAOzV,KAAU0V,QAAQ5V,EAAKzO,IAC/BokB,GAEL00D,YAAS10D,EAAM,oB,wEAGT,IAAD,EAC6E7iB,KAAKc,MAA/E2C,EADH,EACGA,EAAG2D,EADN,EACMA,OAAQqH,EADd,EACcA,UAAWlD,EADzB,EACyBA,eAAgBsrE,EADzC,EACyCA,SAAUvzE,EADnD,EACmDA,KAAMO,EADzD,EACyDA,QAASrC,EADlE,EACkEA,OAC/D80E,EAAoBt2E,KAAKK,MAAzBi2E,gBACR,IAAKA,IAAoBhzE,EAAM,OAAO,KAEtC,IAAM+uC,EAAW4kC,aAAgB7vE,EAAQqH,GACnC+oE,EAAeC,aAAoBrwE,EAAQqH,IAAyB,SAAXjN,EACzDk2E,EAAcC,aAAmBvwE,EAAQqH,IAAyB,SAAXjN,EACvDo2E,EAAe/9C,aAAgBzyB,IAAsB,SAAX5F,EAC1Cq2E,EAAcC,aAAe1wE,GAC7B6hE,EAAiB8O,aAAsB3wE,EAAQqH,GAC/Cu6D,EAAegP,aAAoB5wE,EAAQqH,GAC3CwpE,EAAcC,aAAmB9wE,EAAQqH,KAAe4K,IAAS8+D,WAAwB,SAAX32E,EAC9E42E,GAAiBnlE,KAAaolE,mBAAmBjxE,EAAQqH,GACzD6pE,EAAc5yE,QAAQmxE,GACtB0B,EAA2BC,aAAmBpxE,GAEpD,OACI,oCACI,kBAACiE,GAAA,EAAD,CACI/H,MAAM,EACNO,QAASA,EACTyH,gBAAgB,iBAChBC,eAAgBA,EAChBC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAC,GAAC,OAAIA,EAAEjB,oBACpB,kBAACkB,GAAA,EAAD,CAAUvG,QAAS,SAAAsG,GAAC,OAAIA,EAAEjB,oBAOrBwtE,GACG,kBAACrsE,GAAA,EAAD,CAAUxG,QAASvF,KAAKyN,cACpB,kBAACzB,GAAA,EAAD,KACI,kBAACysE,GAAD,OAEJ,kBAACvsE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,aAGhC80E,GACG,kBAACxsE,GAAA,EAAD,CAAUxG,QAASvF,KAAK82E,6BACpB,kBAAC9qE,GAAA,EAAD,KACI,kBAAC0sE,GAAD,OAEJ,kBAACxsE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,sBAGhC60E,GACG,kBAACvsE,GAAA,EAAD,CAAUxG,QAASvF,KAAKm3B,gBACpB,kBAACnrB,GAAA,EAAD,KACI,kBAAC0sE,GAAD,OAEJ,kBAACxsE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAGhCm0E,GACG,kBAAC7rE,GAAA,EAAD,CAAUxG,QAASvF,KAAKg3E,aACpB,kBAAChrE,GAAA,EAAD,KACI,kBAAC20B,GAAD,CAAW/yB,MAAO,CAAC+kC,UAAW,iBAElC,kBAACzmC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,YAGhCo0E,GACG,kBAAC9rE,GAAA,EAAD,CAAUxG,QAASvF,KAAK40C,WACnBvC,EACG,oCACI,kBAACrmC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,mBAG7B,oCACI,kBAACuI,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,kBAKxCwlE,GACG,kBAACl9D,GAAA,EAAD,CAAUxG,QAASvF,KAAKqgC,eACpB,kBAACr0B,GAAA,EAAD,KACI,kBAAC20B,GAAD,OAEJ,kBAACz0B,GAAA,EAAD,CAAczJ,QAASgB,EAAE,cAGhCw0E,GACG,kBAAClsE,GAAA,EAAD,CAAUxG,QAASvF,KAAKm3E,YACpB,kBAACnrE,GAAA,EAAD,KACI,kBAACyvC,GAAD,OAEJ,kBAACvvC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,WAGhCulE,GACG,kBAACj9D,GAAA,EAAD,CAAUpJ,MAAM,YAAY4C,QAASvF,KAAKgL,cACtC,kBAACgB,GAAA,EAAD,KACI,kBAACC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAczJ,QAASgB,EAAE,aAGhC+zE,GACG,kBAACzrE,GAAA,EAAD,CAAUxG,QAASvF,KAAK22E,cACpB,kBAAC3qE,GAAA,EAAD,KACI,kBAAC2sE,GAAD,OAEJ,kBAACzsE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,aAGhCi0E,GACG,kBAAC3rE,GAAA,EAAD,CAAUxG,QAASvF,KAAKu2E,uBACpB,kBAACvqE,GAAA,EAAD,KACI,kBAACs+C,GAAD,OAEJ,kBAACp+C,GAAA,EAAD,CAAczJ,QAASgB,EAAE,iBAKzC,kBAAC,IAAD,CACIG,mBAAoB,EACpBN,KAAMgzE,EACNzyE,QAAS7D,KAAKw2E,mBACd1yE,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,uBACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KAAoBx3C,EAAE,uBAE1B,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKw2E,mBAAoB7zE,MAAM,WAC3Cc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAKy2E,eAAgB9zE,MAAM,WACvCc,EAAE,gB,GApUL9B,IAAMwK,gBA4VjBrH,GALCC,YACZG,cACA01B,gBAGW91B,CAAQuxE,ICnYRx0E,gBACX,0BAAMC,EAAE,gEACR,a,qBCQE82E,I,kNAEFv4E,MAAQ,G,EA6CRgqE,wBAA0B,SAAApjE,GAAW,IACzBI,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WADe,EAEU,EAAK5N,MAAvCsG,EAFwB,EAExBA,OAAQqH,EAFgB,EAEhBA,UAAWmoB,EAFK,EAELA,WAErBiiD,EAAM,CAACpqE,GAAD,mBAAgBmoB,GAAc,KAAKhkB,OAAO,SAAA1T,GAAC,OAAIwG,QAAQxG,KAE/DmI,IAAYD,GACXyxE,EAAIrnE,KAAK,SAAAtS,GAAC,OAAIA,IAAMwP,KAEzB,EAAK3N,SAAS,CAAEsxC,SAAUwmC,EAAIrnE,KAAK,SAAAtS,GAAC,OAAI+T,KAAa1M,IAAIa,EAAQlI,GAAGqrE,e,EAGxEuO,sBAAwB,SAAA7xE,GAAW,IACvBI,EAA6CJ,EAA7CI,QAASqH,EAAoCzH,EAApCyH,WAAuBqqE,EAAa9xE,EAAxB+xE,UACrB1lE,EAAY,EAAKjT,MAAjBiT,QAEHA,GACDA,EAAQjM,UAAYA,GACpBiM,EAAQ7U,KAAOiQ,GAEnB,EAAK3N,SAAS,CAAEg4E,c,EAGpBE,+BAAiC,SAAAhyE,GAAW,IAChCI,EAA0CJ,EAA1CI,QAASqH,EAAiCzH,EAAjCyH,WAAYwqE,EAAqBjyE,EAArBiyE,iBACrB5lE,EAAY,EAAKjT,MAAjBiT,QAEHA,GACDA,EAAQjM,UAAYA,GACpBiM,EAAQ7U,KAAOiQ,GAEnB,EAAK3N,SAAS,CAAEo4E,gBAAiBD,K,mFA1CjCjmE,KAAaxL,GAAG,sBAAuBzH,KAAK84E,uBAC5C7lE,KAAaxL,GAAG,+BAAgCzH,KAAKi5E,gCACrDhmE,KAAaxL,GAAG,wBAAyBzH,KAAKqqE,2B,6CAI9Cp3D,KAAavL,IAAI,sBAAuB1H,KAAK84E,uBAC7C7lE,KAAavL,IAAI,+BAAgC1H,KAAKi5E,gCACtDhmE,KAAavL,IAAI,wBAAyB1H,KAAKqqE,2B,+BAqCzC,IAAD,EAC2DrqE,KAAKc,MAA7DO,EADH,EACGA,UAAW+F,EADd,EACcA,OAAQqH,EADtB,EACsBA,UAAW2qE,EADjC,EACiCA,YAAa31E,EAD9C,EAC8CA,EAAGmK,EADjD,EACiDA,MADjD,EAE6D5N,KAAKK,MAA/D+U,EAFH,EAEGA,KAAM2jE,EAFT,EAESA,SAAUM,EAFnB,EAEmBA,WAAYhnC,EAF/B,EAE+BA,SAEhBinC,GAJf,EAEyCH,iBAEG,CAAEI,WAAY,EAAGC,cAAe,IAAzED,WAEFE,EAAU5E,aAAQz/D,GAClBskE,EAAc9E,aAAYx/D,GAC1BukE,EAAWC,aAASN,GAE1B,OACI,yBAAKj4E,UAAWoE,IAAW,OAAQpE,GAAYuM,MAAOA,GAElD,wCACC0rE,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgBj4E,UAAU,oBAC1B,0BAAMA,UAAU,aAAayG,MAAOwxE,GAApC,OAEKK,EAFL,cAOPtnC,GACG,oCACI,kBAAC,GAAD,CAAShxC,UAAU,kBACnB,uCAGP03E,EAAW,GAAK,8BAAOt1E,EAAE,iBAAT,QACjB,uBAAG8B,QAAS6zE,GACR,0BAAMtxE,MAAO4xE,GAAcD,IAE9BJ,GAAc,kBAAC,GAAD,CAAQjyE,OAAQA,EAAQqH,UAAWA,Q,gDA/G9B3N,EAAOT,GAAQ,IACnC+G,EAAkCtG,EAAlCsG,OAAQqH,EAA0B3N,EAA1B2N,UAAWmoB,EAAe91B,EAAf81B,WACnBptB,EAA8CnJ,EAA9CmJ,WAAYkqC,EAAkCrzC,EAAlCqzC,cAAemmC,EAAmBx5E,EAAnBw5E,eAEnC,GAAIrwE,IAAepC,GAAUssC,IAAkBjlC,GAAaqrE,aAAmBD,EAAgBjjD,GAAa,CAExG,IAAMiiD,EAAM,CAACpqE,GAAD,mBAAgBmoB,GAAc,KAAKhkB,OAAO,SAAA1T,GAAC,OAAIwG,QAAQxG,KAC7DT,EAAKo6E,EAAIA,EAAIzyE,OAAS,GAEtBkN,EAAUL,KAAa1M,IAAIa,EAAQ3I,GACzC,IAAK6U,EAAS,OAAO,KANmF,IAQhG8B,EAA0F9B,EAA1F8B,KAAiB2jE,EAAyEzlE,EAApF0lE,UAAuCG,EAA6C7lE,EAA/D4lE,iBAAgDG,EAAe/lE,EAA5BwgC,YAEtE,MAAO,CACHtqC,WAAYpC,EACZssC,cAAejlC,EACforE,eAAgBjjD,EAEhBtjB,UACA8B,OACA2jE,WACAI,kBACAE,aACAhnC,SAAUwmC,EAAIrnE,KAAK,SAAAtS,GAAC,OAAI+T,KAAa1M,IAAIa,EAAQlI,GAAGqrE,aAI5D,OAAO,S,GAhCI5oE,IAAMC,YAgIVsD,iBAAkB0zE,I,oBCkJlBmB,I,kNA7QX15E,MAAQ,CACJiK,aAAa,G,EAGjB0vE,aAAe,SAAC1mE,EAAShS,GAAiB,IAC9B+F,EAAyBiM,EAAzBjM,QAAS5I,EAAgB6U,EAAhB7U,GAAI4b,EAAY/G,EAAZ+G,QAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,IAAM4/D,EACF,kBAAC,GAAD,CACI54E,UAAU,cACVuE,IAAG,UAAKyB,EAAL,YAAgB5I,EAAhB,SACH2I,OAAQC,EACRoH,UAAWhQ,IAIbwkC,EAAUi3C,aAAW5mE,GACrBhD,EAAO4iD,aAAQ5/C,EAAW2vB,EAAU,KAAOg3C,EAAY,SAAA/6E,GAAC,OAAIA,IAElE,OACI,oCACI,kBAAC,KAAD,CACIkD,KAAK,UACLgF,OAAQC,EACRoH,UAAWhQ,EACX2+B,MAAO/iB,EAAQ+iB,MACf97B,YAAaA,EACbsM,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCmzB,UAAW,EAAKA,YAClB3wB,GAAQA,EAAKlK,OAAS,GACpB,yBAAK/E,UAAW,gBACXiP,IAMrB,IAAK,eACD,OACI,kBAAC6pE,GAAA,EAAD,CACI/3E,KAAK,UACLgF,OAAQC,EACRoH,UAAWhQ,EACXoO,MAAOwN,EAAQxN,MACfvL,YAAaA,EACbsM,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCmzB,UAAW,EAAKA,YAG5B,IAAK,eACD,OACI,kBAACm5C,GAAA,EAAD,CACIh4E,KAAK,UACLgF,OAAQC,EACRoH,UAAWhQ,EACX0sB,MAAO9Q,EAAQ8Q,MACf7pB,YAAaA,EACbsM,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCmzB,UAAW,EAAKA,YAG5B,IAAK,kBACD,IAAMg5C,EACF,kBAAC,GAAD,CACI54E,UAAU,cACVuE,IAAG,UAAKyB,EAAL,YAAgB5I,EAAhB,SACH2I,OAAQC,EACRoH,UAAWhQ,IAIbwkC,EAAUi3C,aAAW5mE,GACrBhD,EAAO4iD,aAAQ5/C,EAAW2vB,EAAU,KAAOg3C,EAAY,SAAA/6E,GAAC,OAAIA,IAElE,OACI,oCACI,kBAACm7E,GAAA,EAAD,CACIj4E,KAAK,UACLgF,OAAQC,EACRoH,UAAWhQ,EACXgZ,SAAU4C,EAAQ5C,SAClBnW,YAAaA,EACbsM,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCmzB,UAAW,EAAKA,YAClB3wB,GAAQA,EAAKlK,OAAS,GACpB,yBAAK/E,UAAW,gBACXiP,IAQzB,OAAO,M,EAiBXgqE,iCAAmC,SAAArzE,GAAW,IAClCqM,EAAY,EAAKxS,MAAjBwS,QADiC,EAEP,EAAKjT,MAA/Bk1B,EAFiC,EAEjCA,SAAUglD,EAFuB,EAEvBA,YAEdhlD,IAEAjiB,EAAQjM,UAAYJ,EAAOG,QAAUkM,EAAQ7U,KAAOwI,EAAOwH,UACvD8rE,EACA,EAAKx5E,SAAS,CAAEw5E,aAAa,GAAS,WAClCj+D,WAAW,WACP,EAAKvb,SAAS,CAAEw5E,aAAa,KAC9B,KAGP,EAAKx5E,SAAS,CAAEw5E,aAAa,IAE1BA,GACP,EAAKx5E,SAAS,CAAEw5E,aAAa,M,EAIrCC,6BAA+B,SAAAvzE,GACtB,EAAK5G,MAAMk1B,UAEhB,EAAKx0B,SAAS,CAAEw0B,UAAU,K,EAG9By2C,8BAAgC,SAAA/kE,GAAW,IAC/BqM,EAAY,EAAKxS,MAAjBwS,QACSlM,EAA0BkM,EAAnCjM,QAAqBoH,EAAc6E,EAAlB7U,GAEjB82B,EAAatuB,EAAbsuB,SAEJnuB,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,WACjD,EAAK1N,SAAS,CAAEw0B,WAAUglD,aAAa,K,EAI/Cv5C,sB,sCAAwB,WAAM7+B,GAAN,mBAAAuI,EAAA,qDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAGc,EAAKvK,MAArBiK,YAGJ,EAAKvJ,SAAS,CAAEuJ,aAAa,KAEvBE,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QACZ+rE,EACF10E,EAAME,QAAmC,MAAzBF,EAAME,OAAOo4E,SAAmBt4E,EAAME,OAAOi6D,KAAOn6D,EAAME,OAAOi6D,KAAO,KAE5F,EAAKv7D,SAAS,CACVuJ,aAAa,EACbusE,WACArsE,OACAD,SApBY,yC,wDAyBxBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,K,EAGjC22B,UAAY,SAAA9+B,GACR,KAAI8Q,KAAao8C,cAAc1hD,KAAO,GAAtC,CAEIxL,IACAA,EAAMwI,iBACNxI,EAAMyI,mBALO,IAQT0I,EAAY,EAAKxS,MAAjBwS,QACR,GAAKA,EAAL,CATiB,IAWTjM,EAAgBiM,EAAhBjM,QAAS5I,EAAO6U,EAAP7U,GAEjBwiC,aAAU55B,EAAS5I,M,EAGvBi8E,gBAAkB,SAAAv4E,GAGd,IAAM0X,EAAYC,OAAOC,eAAey5C,WACxC,GAAK4jB,aAAiBv9D,GAAtB,CAJuB,IAQfvG,EAAY,EAAKxS,MAAjBwS,QACSlM,EAA0BkM,EAAnCjM,QAAqBoH,EAAc6E,EAAlB7U,GAEzB,GAAwC,IAApCwU,KAAao8C,cAAc1hD,KAA/B,CAEA,IAAM4nB,GAAYtiB,KAAao8C,cAAczoD,IAA3B,iBAAyCQ,EAAzC,sBAA6DqH,IAC/E4oE,aAAcjwE,EAAQqH,EAAW8mB,GAEjCpzB,EAAMwI,iBACNxI,EAAMyI,qB,mFArHNqI,KAAaxL,GAAG,iCAAkCzH,KAAKs6E,kCACvDrnE,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,+BAEpD/4D,KAAaxL,GAAG,6BAA8BzH,KAAKw6E,gC,6CAInDvnE,KAAavL,IAAI,iCAAkC1H,KAAKs6E,kCACxDrnE,KAAavL,IAAI,8BAA+B1H,KAAKgsE,+BAErD/4D,KAAavL,IAAI,6BAA8B1H,KAAKw6E,gC,+BA8G9C,IAAD,EAC8Cx6E,KAAKc,MAAhDwS,EADH,EACGA,QAASqH,EADZ,EACYA,SAAUrZ,EADtB,EACsBA,YAAaE,EADnC,EACmCA,OADnC,EAE+DxB,KAAKK,MAAjEiK,EAFH,EAEGA,YAAausE,EAFhB,EAEgBA,SAAUtsE,EAF1B,EAE0BA,IAAKC,EAF/B,EAE+BA,KAAM+qB,EAFrC,EAEqCA,SAAUglD,EAF/C,EAE+CA,YAE5ClzE,EAAgBiM,EAAhBjM,QAAS5I,EAAO6U,EAAP7U,GAEbmP,EAAQ,GACRvM,EAAY,sBAMhB,OALIsZ,IACA/M,EAAQ,CAAEC,MAAO8M,EAAS9M,MAAOC,OAAQ6M,EAAS7M,OAASxM,GAC3DD,EAAY,cAIZ,oCACI,yBACIA,UAAWoE,IAAWpE,EAAW,CAAE,yBAA0Bk5E,IAAgBhlD,GAAW,CAAE,gBAAiBA,IAC3GhwB,QAASvF,KAAK06E,gBACdtvE,cAAepL,KAAKghC,sBACpBpzB,MAAOA,GACP,yBAAKvM,UAAU,sBAAsBrB,KAAKg6E,aAAa1mE,EAAShS,KAC9Di0B,GAAYglD,IACV,yBAAKl5E,UAAU,wBACX,yBAAKA,UAAU,6BACTk0B,GAAY,kBAAC,KAAD,CAAel0B,UAAU,8BAKvD,kBAAC,GAAD,CACI+F,OAAQC,EACRoH,UAAWhQ,EACX8M,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACd8rE,SAAUA,EACVr1E,OAAQA,S,GAlQJG,IAAMC,YCTxB+4E,I,kNASFC,uBAAyB,WACrB,EAAK1zE,e,mFARL0xC,KAAkBnxC,GAAG,6BAA8BzH,KAAK46E,0B,6CAIxDhiC,KAAkBlxC,IAAI,6BAA8B1H,KAAK46E,0B,+BAOnD,IAAD,EACkB56E,KAAKc,MAApBsU,EADH,EACGA,KAAM2sB,EADT,EACSA,KAGRzjC,EADW,IAAIkS,KAAY,IAAP4E,GAAaylE,iBAAkB,IAAIrqE,MAAOqqE,cAE9D,CACI14C,IAAK,UACLC,MAAO,OACPC,KAAM,WAEV,CACIF,IAAK,UACLC,MAAO,QAGjB,OACI,yBAAK/gC,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAImP,KAAY,IAAP4E,GAAa6sB,mBAAmB,CAACF,EAAKG,UAAW5jC,U,GA/B9DqD,IAAMC,YA0CbsD,iBAAkBy1E,ICvC3BG,I,kNACFz6E,MAAQ,CACJ06E,SAAU,M,EAGdC,eAAiB,SAAAvoB,GACb,EAAK1xD,SAAS,CACVg6E,SAAUtoB,K,EAIlBwoB,YAAc,SAAA94E,GACVA,EAAMyI,kBADa,IAGXswE,EAAgB,EAAKp6E,MAArBo6E,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB1oE,EAAmB0oE,EAAnB1oE,eAERw0B,aAASx0B,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAAgC,IACzBpL,EAAwB8zE,EAAxB9zE,QAASqH,EAAeysE,EAAfzsE,WAEjB0xB,aAAS/4B,EAASqH,K,wEAMpB,IAAD,EACsB1O,KAAKc,MAAxB2C,EADH,EACGA,EAAGy3E,EADN,EACMA,YAGLpzE,GAFe9H,KAAKK,MAAlB06E,SAEMK,aAAgBF,EAAaz3E,IAC3B43E,aAAsBH,IAClC,oCACKz3E,EAAE,cACH,0BAAMpC,UAAU,gBAAgBmV,IAAKxW,KAAKg7E,kBAMlD,OACI,yBAAK35E,UAAWoE,IAAW,iBAAkB,YACzC,6BAAMhC,EAAE,qBACR,yBAAKpC,UAAU,oBACVoC,EAAE,QAAU,IAeT,uBAAG8B,QAASvF,KAAKi7E,aAAcnzE,S,GAvEjCnG,IAAMC,YAmFbsD,iBAAkB41E,ICrF3BQ,GACF,WAAYC,EAAYC,GAAU,oBAC9Bx7E,KAAKu7E,WAAaA,EAClBv7E,KAAKw7E,QAAUA,GAIjBC,G,4FAeEC,EAAMC,EAAMC,EAAMC,EAAMx0D,EAAGy0D,EAAGC,GAC9B/7E,KAAK07E,KAAOA,EACZ17E,KAAK27E,KAAOA,EACZ37E,KAAK47E,KAAOA,EACZ57E,KAAK67E,KAAOA,EACZ77E,KAAKg8E,SAAW30D,EAChBrnB,KAAK6N,MAAQwZ,EACbrnB,KAAK8N,OAASguE,EACd97E,KAAK+7E,MAAQA,I,gCAIb,MAAM,QAAN,OAAe/7E,KAAK07E,KAApB,kBAAkC17E,KAAK27E,KAAvC,kBAAqD37E,KAAK47E,KAA1D,kBAAwE57E,KAAK67E,KAA7E,sBAA+F77E,KAAKg8E,SAApG,mBAAuHh8E,KAAK6N,MAA5H,oBAA6I7N,KAAK8N,OAAlJ,mBAAmK9N,KAAK+7E,MAAxK,4BAAiM/7E,KAAKi8E,eAAtM,4BAAwOj8E,KAAKk8E,oB,KA0atOC,G,WApaX,aAAe,oBACXn8E,KAAKo8E,SAAW,GAChBp8E,KAAKq8E,UAAY,IAAI51E,IACrBzG,KAAKs8E,aAAe,IACpBt8E,KAAKu8E,YAAa,EAClBv8E,KAAKw8E,MAAQ,E,wDAGLltB,EAAO/wD,EAAOk+E,GAEtB,IADA,IAAIC,EAAM,EACD/1E,EAAIpI,EAAOoI,EAAI81E,EAAK91E,IACzB+1E,GAAOptB,EAAM3oD,GAGjB,OAAO,IAAQ3G,KAAKw8E,MAAQE,I,gCAGtBlqE,EAAUmqE,GAKhB,GAJA38E,KAAKo8E,SAAW,GAChBp8E,KAAKq8E,UAAY,IAAI51E,IACrBzG,KAAKwS,SAAWA,EAEXA,EAAL,CAL8B,IAMtBpM,EAAWoM,EAAXpM,OACR,KAAIA,GAAU,GAAd,CAIApG,KAAK48E,WAAa,EAClB58E,KAAK68E,YAAc,EAEnB78E,KAAKw8E,MAAQG,EAAe38E,KAAKs8E,aACjCt8E,KAAKs8E,aAAeK,EAEYr9E,KAAK6lE,MAAM,IAAMnlE,KAAKw8E,OAWtD,IAXA,IACM/xC,EAAYnrC,KAAK6lE,MAAM,IAAMnlE,KAAKw8E,OAClCpvC,EAAW9tC,KAAK6lE,MAAM,GAAKnlE,KAAKw8E,OAChCM,EAAgBx9E,KAAK6lE,MAAM,GAAKnlE,KAAKw8E,OACrCO,EAAgB,IAAQ/8E,KAAKw8E,MAC/BQ,EAAqB,EACrBC,EAAc,GAEdtB,EAAO,EACPuB,GAAY,EAEPv2E,EAAI,EAAGA,EAAIP,EAAQO,IAAK,CAC7B,IAAM2M,EAAUd,EAAS7L,GADI,EAEZw1E,EAAgBgB,eAAe7pE,GAAxC+T,EAFqB,EAErBA,EAAGy0D,EAFkB,EAElBA,EAELnhE,EAAW,IAAI8gE,GACrB9gE,EAASyiE,OAASz2E,IAAM6L,EAASpM,OAAS,EAC1CuU,EAASyiC,YAAc/1B,EAAIy0D,EACvBnhE,EAASyiC,YAAc,IACvB6/B,GAAe,IACRtiE,EAASyiC,YAAc,GAC9B6/B,GAAe,IAEfA,GAAe,IAGnBD,GAAsBriE,EAASyiC,YAC3BziC,EAASyiC,YAAc,IACvB8/B,GAAY,GAGhBl9E,KAAKq8E,UAAUtsE,IAAIuD,EAASqH,GAC5B3a,KAAKo8E,SAASpsE,KAAK2K,GAGvB,IAAM0iE,EAAkBr9E,KAAKs8E,aAAeS,EAG5C,GAFAC,GAA0C52E,EAErC82E,GAAyB,IAAX92E,GAA2B,IAAXA,GAA2B,IAAXA,EA8I5C,CAEH,IADA,IAUIk3E,EACAC,EACAC,EACAC,EAbEC,EAAgB,IAAIp9D,MAAMtgB,KAAKo8E,SAASh2E,QACrCO,EAAI,EAAGA,EAAIP,EAAQO,IAEpB+2E,EAAc/2E,GADdq2E,EAAqB,IACF19E,KAAKm1B,IAAI,EAAKz0B,KAAKo8E,SAASz1E,GAAGy2C,aAE/B99C,KAAKC,IAAI,EAAKS,KAAKo8E,SAASz1E,GAAGy2C,aAEtDsgC,EAAc/2E,GAAKrH,KAAKm1B,IAAI,OAASn1B,KAAKC,IAAI,IAAKm+E,EAAc/2E,KAOrE,IAAMg3E,EAAW,GACjB,IAAKL,EAAY,EAAGA,EAAYI,EAAct3E,OAAQk3E,IAClDC,EAAaG,EAAct3E,OAASk3E,EAChCA,EAAY,GAAKC,EAAa,GAGlCI,EAAS3tE,KAAK,IAAIsrE,GAA4B,CAACgC,EAAWC,GAAa,CAACv9E,KAAK49E,YAAYF,EAAe,EAAGJ,GAAYt9E,KAAK49E,YAAYF,EAAeJ,EAAWI,EAAct3E,WAGpL,IAAKk3E,EAAY,EAAGA,EAAYI,EAAct3E,OAAS,EAAGk3E,IACtD,IAAKC,EAAa,EAAGA,EAAaG,EAAct3E,OAASk3E,EAAWC,IAChEC,EAAYE,EAAct3E,OAASk3E,EAAYC,EAC3CD,EAAY,GAAKC,GAAcP,EAAqB,IAAO,EAAI,IAAMQ,EAAY,GAGrFG,EAAS3tE,KAAK,IAAIsrE,GAA4B,CAACgC,EAAWC,EAAYC,GAAY,CAACx9E,KAAK49E,YAAYF,EAAe,EAAGJ,GAAYt9E,KAAK49E,YAAYF,EAAeJ,EAAWA,EAAYC,GAAav9E,KAAK49E,YAAYF,EAAeJ,EAAYC,EAAYG,EAAct3E,WAIpR,IAAKk3E,EAAY,EAAGA,EAAYI,EAAct3E,OAAS,EAAGk3E,IACtD,IAAKC,EAAa,EAAGA,EAAaG,EAAct3E,OAASk3E,EAAWC,IAChE,IAAKC,EAAY,EAAGA,EAAYE,EAAct3E,OAASk3E,EAAYC,EAAYC,IAC3EC,EAAaC,EAAct3E,OAASk3E,EAAYC,EAAaC,EACzDF,EAAY,GAAKC,EAAa,GAAKC,EAAY,GAAKC,EAAa,GAGrEE,EAAS3tE,KAAK,IAAIsrE,GAA4B,CAACgC,EAAWC,EAAYC,EAAWC,GAAa,CAACz9E,KAAK49E,YAAYF,EAAe,EAAGJ,GAAYt9E,KAAK49E,YAAYF,EAAeJ,EAAWA,EAAYC,GAAav9E,KAAK49E,YAAYF,EAAeJ,EAAYC,EAAYD,EAAYC,EAAaC,GAAYx9E,KAAK49E,YAAYF,EAAeJ,EAAYC,EAAaC,EAAWE,EAAct3E,WAQ7Y,IAHA,IAAIy3E,EAAU,KACVC,EAAc,EACdC,EAAY/9E,KAAKs8E,aAAe,EAAI,EAC/B31E,EAAI,EAAGA,EAAIg3E,EAASv3E,OAAQO,IAAK,CAItC,IAHA,IAAMq3E,EAAUL,EAASh3E,GACrBmH,EAAS,EACTmwE,EAAgBlyD,OAAOmyD,UAClBpuE,EAAI,EAAGA,EAAIkuE,EAAQxC,QAAQp1E,OAAQ0J,IACxChC,GAAUkwE,EAAQxC,QAAQ1rE,GACtBkuE,EAAQxC,QAAQ1rE,GAAKmuE,IACrBA,EAAgBD,EAAQxC,QAAQ1rE,IAIxC,IAAImqD,EAAO36D,KAAK6O,IAAIL,EAASiwE,GACzBC,EAAQzC,WAAWn1E,OAAS,IACxB43E,EAAQzC,WAAW,GAAKyC,EAAQzC,WAAW,IAAOyC,EAAQzC,WAAWn1E,OAAS,GAAK43E,EAAQzC,WAAW,GAAKyC,EAAQzC,WAAW,IAAQyC,EAAQzC,WAAWn1E,OAAS,GAAK43E,EAAQzC,WAAW,GAAKyC,EAAQzC,WAAW,MAClNthB,GAAQ,KAIZgkB,EAAgB7wC,IAChB6sB,GAAQ,MAGI,OAAZ4jB,GAAoB5jB,EAAO6jB,KAC3BD,EAAUG,EACVF,EAAc7jB,GAItB,GAAgB,OAAZ4jB,EACA,OAMJ,IAHA,IAAItjE,EAAQ,EACRsvB,EAAI,EAECljC,EAAI,EAAGA,EAAIk3E,EAAQtC,WAAWn1E,OAAQO,IAAK,CAChD,IAAIw3E,EAAIN,EAAQtC,WAAW50E,GACvBy3E,EAAaP,EAAQrC,QAAQ70E,GAC7B03E,EAAWr+E,KAAKs8E,aAChBgC,EAAW,KACf3C,EAAOr8E,KAAKm1B,IAAIknD,EAAMwC,EAAI,GAC1B,IAAK,IAAIruE,EAAI,EAAGA,EAAIquE,EAAGruE,IAAK,CACxB,IAAIyuE,EAAQb,EAAcnjE,GACtB1M,EAAQvO,KAAK6lE,MAAMoZ,EAAQH,GAC/BC,GAAYxwE,EACZ,IAAI2wE,EAAMx+E,KAAKo8E,SAAS7hE,GACpBwhE,EAAQ,EACF,IAANp1E,IACAo1E,GAlWE,GAoWFp1E,IAAMk3E,EAAQtC,WAAWn1E,OAAS,IAClC21E,GApWK,GAsWC,IAANjsE,IACAisE,GA1WG,GA+WHjsE,IAAMquE,EAAI,IACVpC,GA/WI,EAiXAuC,EAAWE,GAGnBA,EAAIzuE,IAAID,EAAGA,EAAGnJ,EAAGA,EAAGkH,EAAOuwE,EAAarB,EAAehB,GACvDxhE,IAEJ+jE,EAASzwE,OAASwwE,EAClBC,EAAStC,UAAYqC,EACrBx0C,GAAKu0C,EAGTp+E,KAAK48E,WAAa58E,KAAKs8E,aACvBt8E,KAAK68E,YAAchzC,EAAIkzC,OAxQvB,OAAQ32E,GACJ,KAAK,EACD,IAAMq4E,EAAYz+E,KAAKo8E,SAAS,GAC1BsC,EAAY1+E,KAAKo8E,SAAS,GAEhC,GAAoB,OAAhBa,GAAwBD,EAAqB,IAAMK,GAAmBoB,EAAUrhC,YAAcshC,EAAUthC,YAAc,GAAK,CAC3H,IAAMtvC,EAASxO,KAAKktB,MAAMltB,KAAKC,IAAIS,KAAKs8E,aAAemC,EAAUrhC,YAAa99C,KAAKC,IAAIS,KAAKs8E,aAAeoC,EAAUthC,YAAa2/B,EAAgB,KAASA,EAC3J0B,EAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAG/P,KAAKs8E,aAAcxuE,EAAQ6wE,GACrDD,EAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAG/P,KAAKs8E,aAAcxuE,EAAQ6wE,IAErD3+E,KAAK48E,WAAa58E,KAAKs8E,aACvBt8E,KAAK68E,YAAuB,EAAT/uE,OAChB,GAAoB,OAAhBmvE,GAAwC,OAAhBA,EAAsB,CACrD,IAAMpvE,EAAQ7N,KAAKs8E,aAAe,EAC5BxuE,EAASxO,KAAKktB,MAAMltB,KAAKC,IAAIsO,EAAQ4wE,EAAUrhC,YAAa99C,KAAKC,IAAIsO,EAAQ6wE,EAAUthC,YAAa2/B,KAAmBA,EAC7H0B,EAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAGlC,EAAOC,EAAQ6wE,IACzCD,EAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAGlC,EAAOC,EAAQ8wE,IACzCjD,EAAO,EAEP37E,KAAK48E,WAAa/uE,EAAQA,EAC1B7N,KAAK68E,YAAc/uE,MAChB,CACH,IAAI+wE,EAAcv/E,KAAKm1B,IAAI,GAAMz0B,KAAKs8E,aAAch9E,KAAKktB,MAAOxsB,KAAKs8E,aAAemC,EAAUrhC,aAAe,EAAMqhC,EAAUrhC,YAAc,EAAMshC,EAAUthC,eACvJ0hC,EAAa9+E,KAAKs8E,aAAeuC,EACrC,GAAIC,EAAa1xC,EAAU,CACvB,IAAM6sB,GAAO7sB,EAAW0xC,EACxBA,EAAa1xC,EACbyxC,GAAe5kB,GAGnB,IAAMnsD,GAASxO,KAAKC,IAAIw9E,EAAez9E,KAAKktB,MAAMltB,KAAKC,IAAIu/E,EAAaL,EAAUrhC,YAAayhC,EAAcH,EAAUthC,eAAiB2/B,EACxI0B,EAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAG+uE,EAAYhxE,GAAQ6wE,IAC9CD,EAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAG8uE,EAAa/wE,GAAQ8wE,IAC/CjD,EAAO,EAEP37E,KAAK48E,WAAakC,EAAaD,EAC/B7+E,KAAK68E,YAAc/uE,GAGvB,MAEJ,KAAK,EACD,IAAM2wE,GAAYz+E,KAAKo8E,SAAS,GAC1BsC,GAAY1+E,KAAKo8E,SAAS,GAC1B2C,GAAY/+E,KAAKo8E,SAAS,GAChC,GAAuB,MAAnBa,EAAY,GAChB,CACI,IAAM+B,GAAc1/E,KAAKC,IAAoB,GAAhBw9E,EAAqBz9E,KAAKktB,MAAMkyD,GAAUthC,YAAcp9C,KAAKs8E,cAAgByC,GAAU3hC,YAAcshC,GAAUthC,eACtI6hC,GAAelC,EAAgBiC,GAC/BE,GAAa5/E,KAAKm1B,IAAI2Y,EAAU9tC,KAAKC,IAAwB,GAApBS,KAAKs8E,aAAoBh9E,KAAKktB,MAAMltB,KAAKC,IAAIy/E,GAAcD,GAAU3hC,YAAa6hC,GAAeP,GAAUthC,gBAEpJ+hC,GAAY7/E,KAAKktB,MAAMltB,KAAKC,IAAIw9E,EAAgB0B,GAAUrhC,YAAc0/B,EAAe98E,KAAKs8E,aAAe4C,KACjHT,GAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAGovE,GAAW,EAAKR,IAC1CD,GAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAGmvE,GAAYD,GAAelC,EAAe6B,GACpEG,GAAUhvE,IAAI,EAAG,EAAG,EAAG,EAAGmvE,GAAYF,GAAcjC,EAAe6B,IACnEG,GAAU/C,SAAWh8E,KAAKs8E,aAE1BmC,GAAUxC,eAAiB,CAAC+C,GAAcjC,EAAekC,GAAelC,GAKpE2B,GAAU1C,SAAWh8E,KAAKs8E,aAAe6C,GACzCJ,GAAU7C,eAAiBiD,GAE/Bn/E,KAAKu8E,YAAa,EAClBZ,EAAO,EAEP37E,KAAK48E,WAAauC,GAAYD,GAC9Bl/E,KAAK68E,YAAc,MAGvB,CACI,IAAMuC,GAAc9/E,KAAKktB,MAAMltB,KAAKC,IAAIS,KAAKs8E,aAAemC,GAAUrhC,YAA+B,IAAjB2/B,IAA0BA,EAC9G0B,GAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAG/P,KAAKs8E,aAAc8C,GAAaT,GAE1D,IAAM9wE,GAAQ7N,KAAKs8E,aAAe,EAC5B2C,GAAe3/E,KAAKC,IAAIw9E,EAAgBqC,GAAa9/E,KAAKktB,MAAMltB,KAAKC,IAAIsO,GAAQ6wE,GAAUthC,YAAavvC,GAAQkxE,GAAU3hC,eAAiB2/B,EACjJ2B,GAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAGlC,GAAOoxE,GAAcN,GAC/CI,GAAUhvE,IAAI,EAAG,EAAG,EAAG,EAAGlC,GAAOoxE,GAAcL,IAC/CjD,EAAO,EAEP37E,KAAK48E,WAAa58E,KAAKs8E,aACvBt8E,KAAK68E,YAAcuC,GAAcH,GAGrC,MAEJ,KAAK,EACD,IAAMR,GAAYz+E,KAAKo8E,SAAS,GAC1BsC,GAAY1+E,KAAKo8E,SAAS,GAC1B2C,GAAY/+E,KAAKo8E,SAAS,GAC1BiD,GAAYr/E,KAAKo8E,SAAS,GAChC,GAAuB,MAAnBa,EAAY,GAAY,CACxB,IAAMqC,GAAKhgF,KAAKktB,MAAMltB,KAAKC,IAAIS,KAAKs8E,aAAemC,GAAUrhC,YAA6B,IAAhB2/B,IAAyBA,EACnG0B,GAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAG/P,KAAKs8E,aAAcgD,GAAIX,GAE7C7C,EAAIx8E,KAAKktB,MAAMxsB,KAAKs8E,cAAgBoC,GAAUthC,YAAc2hC,GAAU3hC,YAAciiC,GAAUjiC,cAAlG,IACMmiC,GAAKjgF,KAAKm1B,IAAI2Y,EAAU9tC,KAAKC,IAAwB,GAApBS,KAAKs8E,aAAoBR,EAAI4C,GAAUthC,cACxEoiC,GAAKlgF,KAAKm1B,IAAIn1B,KAAKm1B,IAAI2Y,EAA8B,IAApBptC,KAAKs8E,cAAsBR,EAAIuD,GAAUjiC,aAC1EqiC,GAAKz/E,KAAKs8E,aAAeiD,GAAKC,GACpC1D,EAAIx8E,KAAKC,IAAIw9E,EAAgBuC,GAAIxD,GACjCA,GAAKiB,EACL2B,GAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAGwvE,GAAIzD,EAAG6C,GACjCI,GAAUhvE,IAAI,EAAG,EAAG,EAAG,EAAG0vE,GAAI3D,EA3NzB,GA4NLuD,GAAUtvE,IAAI,EAAG,EAAG,EAAG,EAAGyvE,GAAI1D,EAAG8C,IACjCjD,EAAO,EAEP37E,KAAK48E,WAAa58E,KAAKs8E,aACvBt8E,KAAK68E,YAAcyC,GAAKxD,MACrB,CACGz0D,EAAI/nB,KAAKm1B,IAAI2Y,EAAU9tC,KAAKktB,MAAMuwD,GAAiB,EAAM2B,GAAUthC,YAAc,EAAM2hC,GAAU3hC,YAAc,EAAMiiC,GAAUjiC,eAArI,IACMkiC,GAAKhgF,KAAKC,IAAI,IAAMD,KAAKm1B,IAAIgW,EAAWpjB,EAAIq3D,GAAUthC,aAAe2/B,GACrE2C,GAAKpgF,KAAKC,IAAI,IAAMD,KAAKm1B,IAAIgW,EAAWpjB,EAAI03D,GAAU3hC,aAAe2/B,GACrE4C,GAAK,EAAML,GAAKI,GAChBH,GAAKjgF,KAAKktB,MAAMltB,KAAKC,IAAIw9E,EAAgB0B,GAAUrhC,YAAc0/B,EAAe98E,KAAKs8E,aAAej1D,IAE1Go3D,GAAU1uE,IAAI,EAAG,EAAG,EAAG,EAAGwvE,GAAID,GAAKI,GAAKC,GAAIhB,IAC5CD,GAAU3uE,IAAI,EAAG,EAAG,EAAG,EAAGsX,EAAGi4D,GAAIV,GACjCG,GAAUhvE,IAAI,EAAG,EAAG,EAAG,EAAGsX,EAAGq4D,GA5OzB,GA6OJX,GAAU/C,SAAWh8E,KAAKs8E,aAC1B+C,GAAUtvE,IAAI,EAAG,EAAG,EAAG,EAAGsX,EAAGs4D,GAAIf,IACjCS,GAAUrD,SAAWh8E,KAAKs8E,aAKtBoC,GAAU1C,SAAWh8E,KAAKs8E,aAAeiD,GACzCR,GAAU7C,eAAiBqD,GAC3BF,GAAUnD,eAAiBqD,GAE/Bd,GAAUxC,eAAiB,CAAEqD,GAAII,GAAIC,IACrC3/E,KAAKu8E,YAAa,EAClBZ,EAAO,EAEP37E,KAAK48E,WAAav1D,EAAIk4D,GACtBv/E,KAAK68E,YAAcyC,GAAKI,GAAKC,U,sCAoI3BrsE,GAClB,IAAI+T,EAAI,EACJy0D,EAAI,EACJ/jD,EAAQ,GACZ,OAAQzkB,EAAQ+G,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACgB/G,EAAQ+G,QAAjCxN,EADS,EACTA,MAAOq0B,EADE,EACFA,cACXr0B,EACAkrB,EAAQlrB,EAAMkrB,MACPmJ,GACPnJ,EAAM/nB,KAAKkxB,GAGf,MAEJ,IAAK,eAAiB,IAAD,EAC2B5tB,EAAQ+G,QAA5C8Q,EADS,EACTA,MAAO6N,EADE,EACFA,UAAWkI,EADT,EACSA,cAC1B,GAAI/V,EAAO,CAAC,IACAtd,EAAkBsd,EAAlBtd,MAAOC,EAAWqd,EAAXrd,OACfiqB,EAAM/nB,KAAK,CAAEnC,QAAOC,gBACbozB,EACPnJ,EAAM/nB,KAAKkxB,GACJlI,GACPjB,EAAM/nB,KAAKgpB,GAGf,MAEJ,IAAK,kBAAoB,IAAD,EACiB1lB,EAAQ+G,QAArC2e,EADY,EACZA,UAAWkI,EADC,EACDA,cACfA,EACAnJ,EAAM/nB,KAAKkxB,GACJlI,EACPjB,EAAM/nB,KAAKgpB,GAEXjB,EAAM/nB,KAAK,CAAEnC,MAAO,GAAIC,OAAQ,KAO5C,IAAMgzB,EAAYq7C,EAAgBl4C,aAAalM,EAAO,MAMtD,OALI+I,IACAzZ,EAAIyZ,EAAUjzB,MACdiuE,EAAIh7C,EAAUhzB,QAGX,CAAEuZ,IAAGy0D,O,mCAGI/jD,EAAO6nD,EAAMC,GAC7B,IAAK9nD,IAAUA,EAAM3xB,OAAQ,OAAO,KAIpC,IAFA,IAAI05E,EAAW,EACXC,EAAW,KACNp5E,EAAI,EAAGA,EAAIoxB,EAAM3xB,OAAQO,IAAK,CAAC,IAAD,EACHoxB,EAAMpxB,GAAvB0gB,EADoB,EAC3BxZ,MAAkBiuE,EADS,EACjBhuE,OAElB,GAAI+xE,EAAW,CACX,IAAMG,EAAclE,GAAKz0D,EAAIA,EAAIy0D,IAC5BiE,GAAaH,EAAO,KAAOA,EAAOE,GAAYA,EAAWE,KAC1DF,EAAWE,EACXD,EAAWhoD,EAAMpxB,QAGlB,CACH,IAAMq5E,EAAc34D,GAAKy0D,EAAIz0D,EAAIy0D,IAC5BiE,GAAaH,EAAO,KAAOI,GAAeJ,GAAQE,EAAWE,KAC9DF,EAAWE,EACXD,EAAWhoD,EAAMpxB,KAK7B,OAAOo5E,M,YCrcA76E,qBANf,SAAyBpE,GAAQ,IACrB2C,EAAM3C,EAAN2C,EAER,OAAO,yBAAKpC,UAAU,oBAAoBoC,EAAE,qB,OCejCw8E,OAjBf,SAAmBn/E,GAAQ,IACfyL,EAA8BzL,EAA9ByL,OAAQS,EAAsBlM,EAAtBkM,MAAO/C,EAAenJ,EAAfmJ,IAAK2D,EAAU9M,EAAV8M,MAE5B,OACI,yBACIvM,UAAWoE,IACP,YACA,CAAE,cAAe8G,GACjB,CAAE,aAAcS,GAChB,CAAE,WAAY/C,IAElB2D,MAAOA,KCObsyE,I,kNACF7/E,MAAQ,G,EAyDRi6E,iCAAmC,SAAArzE,GAAW,IAAD,EACV,EAAKnG,MAA5BsG,EADiC,EACjCA,OAAQwvB,EADyB,EACzBA,WADyB,EAEP,EAAKv2B,MAA/Bk1B,EAFiC,EAEjCA,SAAUglD,EAFuB,EAEvBA,YAEdhlD,IAEAnuB,IAAWH,EAAOG,QAAUwvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAM+H,EAAOwH,YAC1D8rE,EACA,EAAKx5E,SAAS,CAAEw5E,aAAa,EAAO4F,iBAAiB,GAAS,WAC1D7jE,WAAW,WACP,EAAKvb,SAAS,CAAEw5E,aAAa,EAAM4F,gBAAiBvpD,EAAWxwB,OAAS,GAAKwwB,EAAWA,EAAWxwB,OAAS,KAAOa,EAAOwH,aAC3H,KAGP,EAAK1N,SAAS,CAAEw5E,aAAa,EAAM4F,gBAAiBvpD,EAAWxwB,OAAS,GAAKwwB,EAAWA,EAAWxwB,OAAS,KAAOa,EAAOwH,YAEvH8rE,GACP,EAAKx5E,SAAS,CAAEw5E,aAAa,EAAO4F,iBAAiB,M,EAI7DnU,8BAAgC,SAAA/kE,GAAW,IAAD,EACP,EAAKnG,MAA5BsG,EAD8B,EAC9BA,OAAQwvB,EADsB,EACtBA,WACK3vB,EAAbsuB,SAEJnuB,IAAWH,EAAOG,QAAUwvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAM+H,EAAOwH,aAC9D,EAAK1N,SAAS,CAAEw0B,SAAUqB,EAAW33B,MAAM,SAAAC,GAAC,OAAI+T,KAAaolE,mBAAmBjxE,EAAQlI,Q,EAIhGs7E,6BAA+B,SAAAvzE,GACtB,EAAK5G,MAAMk1B,UAEhB,EAAKx0B,SAAS,CAAEw0B,UAAU,K,EAG9BkH,uBAAyB,SAAAx1B,GAAW,IACxBI,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WADc,EAEa,EAAK5N,MAAzCsG,EAFuB,EAEvBA,OAAQwvB,EAFe,EAEfA,WAAYt1B,EAFG,EAEHA,YACN8+E,EAAoB,EAAK//E,MAAvCggF,aAER,GAAIj5E,IAAWC,GACVuvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAMwP,IAAhC,CAEA,IAAM4xE,EAAU,IAAInE,GACpBmE,EAAQC,UAAU3pD,EAAWhnB,IAAI,SAAA1Q,GAAC,OAAI+T,KAAa1M,IAAIa,EAAQlI,KAAKoC,GAE/C,OACA8+E,EACjB,EAAKr/E,SAAS,CAAEs/E,aAFC,KAEaC,YAE9B,EAAKv/E,SAAS,CAAEu/E,c,EAIxB5F,gBAAkB,WAGd,IAAM7gE,EAAYC,OAAOC,eAAey5C,WACxC,GAAK4jB,aAAiBv9D,GAAtB,CAJoB,MAQW,EAAK/Y,MAA5BsG,EARY,EAQZA,OAAQwvB,EARI,EAQJA,WAGhB,GAFqB,EAAKv2B,MAAlBk1B,SAGJ,IAAK,IAAI5uB,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IACnC0wE,aAAcjwE,EAAQwvB,EAAWjwB,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IACnC0wE,aAAcjwE,EAAQwvB,EAAWjwB,IAAI,K,qFA/H3BW,EAAWC,EAAWmU,GAAc,IAC9Ckb,EAAe52B,KAAKc,MAApB81B,WAD6C,EAEL52B,KAAKK,MAA7CggF,EAF6C,EAE7CA,aAAc9qD,EAF+B,EAE/BA,SAAUglD,EAFqB,EAErBA,YAEhC,OAAKT,aAAmBxyE,EAAUsvB,WAAYA,KAI1CrvB,EAAU84E,eAAiBA,IAI3B94E,EAAUguB,WAAaA,GAIvBhuB,EAAUgzE,cAAgBA,M,0CAwB9BtnE,KAAaxL,GAAG,iCAAkCzH,KAAKs6E,kCACvDrnE,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,+BAEpD/4D,KAAaxL,GAAG,6BAA8BzH,KAAKw6E,8BACnDvnE,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,6CAI7CxpB,KAAavL,IAAI,iCAAkC1H,KAAKs6E,kCACxDrnE,KAAavL,IAAI,8BAA+B1H,KAAKgsE,+BAErD/4D,KAAavL,IAAI,6BAA8B1H,KAAKw6E,8BACpDvnE,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,+BAgFxC,IAAD,EACsBz8B,KAAKc,MAA1B0/E,EADD,EACCA,SAAUh/E,EADX,EACWA,OADX,EAE6FxB,KAAKc,MAA/FsG,EAFH,EAEGA,OAAQwvB,EAFX,EAEWA,WAAYt1B,EAFvB,EAEuBA,YAAam/E,EAFpC,EAEoCA,oBAAqBv2E,EAFzD,EAEyDA,UAAWmgD,EAFpE,EAEoEA,SAFpE,KAE8E5mD,EAU/EzD,KAAKK,OARLggF,EAJC,EAIDA,aACA9qD,EALC,EAKDA,SAEAmvB,GAPC,EAMD61B,YANC,EAOD71B,OAMI47B,GAbH,EAQDzJ,SARC,EASDvsE,YATC,EAUDE,KAVC,EAWDD,IAEgBvK,KAAKK,MAAjBigF,SACR,IAAKA,EACD,OAAO,KAGX,IAAK1pD,EAAWxwB,OACZ,OAAO,KAGX,IAAIqI,EAAYmoB,EAAWA,EAAWxwB,OAAS,GACzCkN,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,gDAgBrB,IAxCK,IA0BG+G,EAA0E/G,EAA1E+G,QAASy5B,EAAiExgC,EAAjEwgC,YAAa1+B,EAAoD9B,EAApD8B,KAAMqjB,EAA8CnlB,EAA9CmlB,oBAAqBioD,EAAyBptE,EAAzBotE,aAAc/sE,EAAWL,EAAXK,OAEjE0lE,EAAavlC,IAAgB7Y,aAAc7zB,GAE3C6yE,EACF,kBAAC,GAAD,CACI54E,UAAU,cACVuE,IAAG,UAAKwB,EAAL,YAAeqH,EAAf,SACHrH,OAAQA,EACRwvB,WAAYA,IAGdqM,EAAUi3C,aAAW5mE,GACvBhD,EAAO,KACF3J,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IAAK,CACxC,IAAMg6E,EAAI1tE,KAAa1M,IAAIa,EAAQwvB,EAAWjwB,IACxClD,EAAIyvD,aAAQytB,EAAK19C,EAAU,KAAOg3C,EAAYx2E,GACpD,GAAIA,GAAKA,EAAE2C,OAAQ,CACf,GAAa,OAATkK,EAAe,CACfA,EAAO,KACP,MAEAA,EAAO7M,EACPgL,EAAYmoB,EAAWjwB,IAInC,IAAMi6E,EAAsB,OAATtwE,GAAiBA,EAAKlK,OAAS,EAC5Cy6E,EACF,kBAAC,GAAD,CACIx/E,UAAWoE,IAAW,YAAa,CAC/B,eAAgBm7E,IAEpBx5E,OAAQA,EACRwvB,WAAYA,EACZwiD,YAAap5E,KAAK8gF,kBAIpBC,EAAcC,aAAmB55E,EAAQqH,GACzCwyE,EAAYv7E,QAAQ+yB,GACpByoD,EAAgBlmD,cAAc5zB,MAAagD,cAAShD,KAAYiyE,GAChE8H,GAAaD,GAAiBh3E,GAAc62E,GAAeE,EAE3DG,EAAYnmD,aAAc7zB,GAC1Bi6E,EAAYrmD,cAAc5zB,GAM5ByyC,EAAO,KACX,GAAI2mC,EACA,GAAIp2E,cAAShD,IAAWs5E,EACpB,OAAQA,EAAavF,OAAO,UACxB,IAAK,iCACDthC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAACmxC,UAAWuiC,EAAavF,OAAOmG,YAAax3E,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,2BACD1nC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQ24C,EAAavF,OAAO1oE,eAAgB3I,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,8BACD1nC,EAAO,kBAAC,KAAD,CAAU7sC,OAAK,EAAC5F,OAAQs5E,EAAavF,OAAO9zE,QAASyC,SAAU9J,KAAKwhF,wBAKnF3nC,EADOwnC,EACA,kBAAC,GAAD,CAAWr0E,OAAK,IAChBo0E,EACA,kBAAC,GAAD,CAAWp0E,OAAK,IAChB8mC,EACA,kBAAC,GAAD,CAAW9mC,OAAK,IAChB2G,EAAOhL,QACP,kBAACmxC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQp0B,EAAOhL,QAASmB,SAAU9J,KAAKuhF,mBAEvD,kBAAC,KAAD,CAAUv0E,OAAK,EAAC5F,OAAQA,EAAQ0C,SAAU9J,KAAKwhF,mBAI9D,IAAM5zE,EAAQ,CAAEC,MAAOyyE,EAAQ1D,WAAa,EAAI,GAC1C6E,EAAkC,mBAArBpnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DqnE,GAAed,IAAoC,qBAArBvmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExH0B,EAAQukE,EAAQ9tE,SAAS5C,IAAI,SAAA1Q,GAAC,OAChC,kBAAC,GAAD,CACI0G,IAAK1G,EAAET,GACP6U,QAASpU,EACTyb,SAAU2lE,EAAQjE,UAAU91E,IAAIrH,GAChCoC,YAAaA,EACbE,OAAQA,MAGhB,OACI,6BACK6oD,GAAY,kBAAC,GAAD,CAASj1C,KAAMA,IAC5B,yBACI/T,UAAWoE,IAAW,UAAW,gBAAiB,CAC9C,kBAAmByE,GAAas2E,GAAYkB,EAC5C,iBAAkB7nC,EAClB,cAAew/B,EACf,mBAAoB9jD,EAEpB,sBAAuBrrB,IAAcs2E,EACrC,iBAAkBt2E,IAAcs2E,EAChC,sBAAuBt2E,GAAas2E,IAAakB,EACjD,8BAA+Bx3E,GAAas2E,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa3hF,KAAKgwB,gBAClB4xD,WAAY5hF,KAAK6hF,eACjBj2E,YAAa5L,KAAKwvB,gBAClBjqB,QAASvF,KAAK06E,gBACdoH,eAAgB9hF,KAAK+hF,mBACrB32E,cAAepL,KAAKghC,uBACnBy/C,GAAuB,kBAAC,GAAD,MACxB,yBAAKp/E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWoE,IAAW,kBAAmB,CAAE,MAASi/C,KACpD7K,EACD,yBACIx4C,UAAWoE,IACP,kBAAmB,CACnB,iBAAkBg8E,EAClB,qBAAsBA,GAAcpI,IAExCzrE,MAAOA,GACN6zE,IAAgBv3E,IAAcg3E,GAAkBH,IAC7C,yBAAK1/E,UAAU,iBACV6I,IAAc62E,GACX,kBAAC37C,GAAA,EAAD,CAAezxB,OAAQA,EAAQunE,YAAawF,EAActgD,UAAQ,EAAC6G,UAAQ,IAE9E85C,GAAe,kBAAC,GAAD,CAAS7F,YAAawF,KAG7CO,GACG,kBAAC,GAAD,CACI75E,OAAQA,EACRqH,UAAWgqB,EACXlzB,QAASvF,KAAKgiF,mBAGtB,yBAAK3gF,UAAWoE,IACZ,QACA,CAAE,gBAAiBm7E,GACnB,CAAE,cAAeO,KAEjB,yBAAK9/E,UAAU,gBAAgBuM,MAAO,CAAEC,MAAOyyE,EAAQ1D,aAClD7gE,IAGT,yBACI1a,UAAWoE,IAAW,eAAgB,CAClC,sBAAwC,IAAjB46E,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1B/vE,GAEJmxE,GAAcZ,GAEnB,yBAAKx/E,UAAU,0BAEnB,yBAAKA,UAAU,0B,gDA7SHP,EAAOT,GAAQ,IACnCiB,EAAoCR,EAApCQ,YAAa8F,EAAuBtG,EAAvBsG,OAAQwvB,EAAe91B,EAAf81B,WAE7B,GAAIA,IAAev2B,EAAMw5E,eAAgB,CACrC,IAAMyG,EAAU,IAAInE,GAGpB,OAFAmE,EAAQC,UAAU3pD,EAAWhnB,IAAI,SAAA1Q,GAAC,OAAI+T,KAAa1M,IAAIa,EAAQlI,KAAKoC,GAE7D,CACHg/E,UACAzG,eAAgBjjD,GAIxB,OAAO,S,GAvCKj1B,IAAMC,YAyV1Bs+E,GAAMl4E,aAAe,CACjB1G,YAAa2gF,KACb/3E,WAAW,EACXs2E,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGChC,UClWTiC,I,kNACF9hF,MAAQ,G,EA8DRi6E,iCAAmC,SAAArzE,GAAW,IAAD,EACV,EAAKnG,MAA5BsG,EADiC,EACjCA,OAAQwvB,EADyB,EACzBA,WADyB,EAEP,EAAKv2B,MAA/Bk1B,EAFiC,EAEjCA,SAAUglD,EAFuB,EAEvBA,YAEdhlD,IAEAnuB,IAAWH,EAAOG,QAAUwvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAM+H,EAAOwH,YAC1D8rE,EACA,EAAKx5E,SAAS,CAAEw5E,aAAa,EAAO4F,iBAAiB,GAAS,WAC1D7jE,WAAW,WACP,EAAKvb,SAAS,CAAEw5E,aAAa,EAAM4F,gBAAiBvpD,EAAWxwB,OAAS,GAAKwwB,EAAWA,EAAWxwB,OAAS,KAAOa,EAAOwH,aAC3H,KAGP,EAAK1N,SAAS,CAAEw5E,aAAa,EAAM4F,gBAAiBvpD,EAAWxwB,OAAS,GAAKwwB,EAAWA,EAAWxwB,OAAS,KAAOa,EAAOwH,YAEvH8rE,GACP,EAAKx5E,SAAS,CAAEw5E,aAAa,EAAO4F,iBAAiB,M,EAI7DnU,8BAAgC,SAAA/kE,GAAW,IAAD,EACP,EAAKnG,MAA5BsG,EAD8B,EAC9BA,OAAQwvB,EADsB,EACtBA,WACK3vB,EAAbsuB,SAEJnuB,IAAWH,EAAOG,QAAUwvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAM+H,EAAOwH,aAC9D,EAAK1N,SAAS,CACVw0B,SAAUqB,EAAW33B,MAAM,SAAAC,GAAC,OAAI+T,KAAaolE,mBAAmBjxE,EAAQlI,KACxEkjF,aAAcxrD,EAAWxwB,OAAS,GAAK6M,KAAaolE,mBAAmBjxE,EAAQwvB,EAAWA,EAAWxwB,OAAS,O,EAK1Ho0E,6BAA+B,SAAAvzE,GAC3B,EAAKlG,SAAS,CAAEw0B,UAAU,EAAO6sD,cAAc,K,EAGnD3lD,uBAAyB,SAAAx1B,GAAW,IACxBI,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WADc,EAEa,EAAK5N,MAAzCsG,EAFuB,EAEvBA,OAAQwvB,EAFe,EAEfA,WACMwpD,GAHS,EAEH9+E,YACc,EAAKjB,MAAvCggF,cAER,GAAIj5E,IAAWC,GACVuvB,EAAWplB,KAAK,SAAAtS,GAAC,OAAIA,IAAMwP,IAAhC,CAEqB,OACA0xE,EACjB,EAAKr/E,SAAS,CAAEs/E,aAFC,OAIjB,EAAKn5E,gB,EAIbwzE,gBAAkB,WAGd,IAAM7gE,EAAYC,OAAOC,eAAey5C,WACxC,GAAK4jB,aAAiBv9D,GAAtB,CAJoB,MAQW,EAAK/Y,MAA5BsG,EARY,EAQZA,OAAQwvB,EARI,EAQJA,WAGhB,GAFqB,EAAKv2B,MAAlBk1B,SAGJ,IAAK,IAAI5uB,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IACnC0wE,aAAcjwE,EAAQwvB,EAAWjwB,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IACnC0wE,aAAcjwE,EAAQwvB,EAAWjwB,IAAI,K,qFAlI3BW,EAAWC,EAAWmU,GAAc,IAC9Ckb,EAAe52B,KAAKc,MAApB81B,WAD6C,EAE0B52B,KAAKK,MAA5EggF,EAF6C,EAE7CA,aAAc+B,EAF+B,EAE/BA,aAAc7sD,EAFiB,EAEjBA,SAAU4qD,EAFO,EAEPA,gBAAiB5F,EAFV,EAEUA,YAE/D,OAAKT,aAAmBxyE,EAAUsvB,WAAYA,KAI1CrvB,EAAU84E,eAAiBA,IAI3B94E,EAAUguB,WAAaA,IAIvBhuB,EAAU66E,eAAiBA,IAI3B76E,EAAUgzE,cAAgBA,GAI1BhzE,EAAU44E,kBAAoBA,Q,0CAqBlCltE,KAAaxL,GAAG,iCAAkCzH,KAAKs6E,kCACvDrnE,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,+BAEpD/4D,KAAaxL,GAAG,6BAA8BzH,KAAKw6E,8BACnDvnE,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,6CAI7CxpB,KAAavL,IAAI,iCAAkC1H,KAAKs6E,kCACxDrnE,KAAavL,IAAI,8BAA+B1H,KAAKgsE,+BAErD/4D,KAAavL,IAAI,6BAA8B1H,KAAKw6E,8BACpDvnE,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,+BA8ExC,IAAD,EACsBz8B,KAAKc,MAA1B0/E,EADD,EACCA,SAAUh/E,EADX,EACWA,OADX,EAE6FxB,KAAKc,MAA/FsG,EAFH,EAEGA,OAAQwvB,EAFX,EAEWA,WAAYt1B,EAFvB,EAEuBA,YAAam/E,EAFpC,EAEoCA,oBAAqBv2E,EAFzD,EAEyDA,UAAWmgD,EAFpE,EAEoEA,SAFpE,KAE8E5mD,EAY/EzD,KAAKK,OATLk1B,GALC,EAID8qD,aAJC,EAKD9qD,UACA6sD,EANC,EAMDA,aAEAjC,GARC,EAOD5F,YAPC,EAQD4F,iBACAz7B,EATC,EASDA,MATC,EAUDmyB,SAVC,EAWDvsE,YAXC,EAYDE,KAZC,EAaDD,IAGJ,IAAKqsB,EAAWxwB,OACZ,OAAO,KAGX,IAAIqI,EAAYmoB,EAAWA,EAAWxwB,OAAS,GACzCkN,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,gDAgBrB,IAtCK,IAwBG+G,EAA0E/G,EAA1E+G,QAASy5B,EAAiExgC,EAAjEwgC,YAAa1+B,EAAoD9B,EAApD8B,KAAMqjB,EAA8CnlB,EAA9CmlB,oBAAqBioD,EAAyBptE,EAAzBotE,aAAc/sE,EAAWL,EAAXK,OAEjE0lE,EAAavlC,IAAgB7Y,aAAc7zB,GAE3C6yE,EACF,kBAAC,GAAD,CACI54E,UAAU,cACVuE,IAAG,UAAKwB,EAAL,YAAeqH,EAAf,SACHrH,OAAQA,EACRwvB,WAAYA,IAGdqM,EAAUi3C,aAAW5mE,GACvBhD,EAAO,KACF3J,EAAI,EAAGA,EAAIiwB,EAAWxwB,OAAQO,IAAK,CACxC,IAAMg6E,EAAI1tE,KAAa1M,IAAIa,EAAQwvB,EAAWjwB,IACxClD,EAAIyvD,aAAQytB,EAAK19C,EAAU,KAAOg3C,EAAYx2E,GACpD,GAAIA,GAAKA,EAAE2C,OAAQ,CACf,GAAa,OAATkK,EAAe,CACfA,EAAO,KACP,MAEAA,EAAO7M,EACPgL,EAAYmoB,EAAWjwB,IAInC,IAAMi6E,EAAsB,OAATtwE,GAAiBA,EAAKlK,OAAS,EAC5Cy6E,EACF,kBAAC,GAAD,CACIx/E,UAAWoE,IAAW,YAAa,CAC/B,eAAe,IAEnB2B,OAAQA,EACRwvB,WAAYA,EACZwiD,YAAap5E,KAAK8gF,kBAIpBC,EAAcC,aAAmB55E,EAAQqH,GACzCwyE,EAAYv7E,QAAQ+yB,GACpByoD,EAAgBlmD,cAAc5zB,MAAagD,cAAShD,KAAYiyE,GAChE8H,GAAaD,GAAiBh3E,GAAc62E,GAAeE,EAE3DG,EAAYnmD,aAAc7zB,GAC1Bi6E,EAAYrmD,cAAc5zB,GAM5ByyC,EAAO,KACX,GAAI2mC,EACA,GAAIp2E,cAAShD,IAAWs5E,EACpB,OAAQA,EAAavF,OAAO,UACxB,IAAK,iCACDthC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAACmxC,UAAWuiC,EAAavF,OAAOmG,YAAax3E,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,2BACD1nC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQ24C,EAAavF,OAAO1oE,eAAgB3I,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,8BACD1nC,EAAO,kBAAC,KAAD,CAAU7sC,OAAK,EAAC5F,OAAQs5E,EAAavF,OAAO9zE,QAASyC,SAAU9J,KAAKwhF,wBAKnF3nC,EADOwnC,EACA,kBAAC,GAAD,CAAWr0E,OAAK,IAChBo0E,EACA,kBAAC,GAAD,CAAWp0E,OAAK,IAChB8mC,EACA,kBAAC,GAAD,CAAW9mC,OAAK,IAChB2G,EAAOhL,QACP,kBAACmxC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQp0B,EAAOhL,QAASmB,SAAU9J,KAAKuhF,mBAEvD,kBAAC,KAAD,CAAUv0E,OAAK,EAAC5F,OAAQA,EAAQ0C,SAAU9J,KAAKwhF,mBAI9D,IACMC,EAAkC,mBAArBpnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DqnE,GAAed,IAAoC,qBAArBvmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExH0B,EAAQ6a,EAAWhnB,IAAI,SAAA1Q,GAAC,OAAI+T,KAAa1M,IAAIa,EAAQlI,KAAI0Q,IAAI,SAAA+wE,GAAC,OAChE,kBAAC,GAAD,CACI/6E,IAAK+6E,EAAEliF,GACP6U,QAASqtE,EACThmE,SAAU,KACVrZ,YAAaA,EACbE,OAAQA,MAGhB,OACI,6BACK6oD,GAAY,kBAAC,GAAD,CAASj1C,KAAMA,IAC5B,yBACI/T,UAAWoE,IAAW,UAAW,gBAAiB,yBAA0B,CACxE,kBAAmByE,GAAas2E,GAAYkB,EAC5C,iBAAkB7nC,EAClB,cAAew/B,EACf,mBAAoB9jD,EACpB,8BAA+B6sD,EAE/B,iCAAkCjC,IAAoB5qD,EACtD,sBAAuBrrB,IAAcs2E,EACrC,iBAAkBt2E,IAAcs2E,EAChC,sBAAuBt2E,GAAas2E,IAAakB,EACjD,8BAA+Bx3E,GAAas2E,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa3hF,KAAKgwB,gBAClB4xD,WAAY5hF,KAAK6hF,eACjBj2E,YAAa5L,KAAKwvB,gBAClBjqB,QAASvF,KAAK06E,gBACdoH,eAAgB9hF,KAAK+hF,mBACrB32E,cAAepL,KAAKghC,uBACnBy/C,GAAuB,kBAAC,GAAD,MACxB,yBAAKp/E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWoE,IAAW,kBAAmB,CAAE,MAASi/C,KACpD7K,EACD,yBACIx4C,UAAWoE,IACP,kBAAmB,CACf,iBAAkBg8E,EAClB,qBAAsBA,GAAcpI,IAE5CzrE,MAlDV,IAmDW6zE,IAAgBv3E,IAAcg3E,GAAkBH,IAC7C,yBAAK1/E,UAAU,iBACV6I,IAAc62E,GACX,kBAAC37C,GAAA,EAAD,CAAezxB,OAAQA,EAAQunE,YAAawF,EAActgD,UAAQ,EAAC6G,UAAQ,IAE9E85C,GAAe,kBAAC,GAAD,CAAS7F,YAAawF,KAG7CO,GACG,kBAAC,GAAD,CACI75E,OAAQA,EACRqH,UAAWgqB,EACXlzB,QAASvF,KAAKgiF,mBAGtB,yBAAK3gF,UAAWoE,IACZ,QACA,iBACA,CAAE,iBAAiB,GACnB,CAAE,cAAe07E,KAEjB,yBAAK9/E,UAAU,iBACV0a,IAWR0lE,GAAcZ,GAEnB,yBAAKx/E,UAAU,0BAEnB,yBAAKA,UAAU,0B,gDAzSHP,EAAOT,GACSS,EAApCQ,YAAoCR,EAAvBsG,OADsB,IACdwvB,EAAe91B,EAAf81B,WAE7B,OAAIA,IAAev2B,EAAMw5E,eAEd,CACHA,eAAgBjjD,GAIjB,S,GA5Caj1B,IAAMC,YA6VlCugF,GAAcn6E,aAAe,CACzB1G,YAAa2gF,KACb/3E,WAAW,EACXs2E,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGCC,UCvSAE,I,mBA7EX,WAAYvhF,GAAQ,IAAD,uBACf,4CAAMA,KAeVwhF,uBAAyB,SAAAr7E,GAAW,IACxBs7E,EAAelpE,IAAfkpE,WAER,EAAKxhF,SAAS,CAAEwhF,gBAnBD,EAsBnBC,gBAAkB,SAAArgF,GACdA,EAAMwI,iBACNxI,EAAMyI,mBAxBS,EA2BnB63E,WAAa,SAAAtgF,GACTA,EAAMwI,iBACNxI,EAAMyI,kBACNlK,KAAgBsf,aAAa,CACzB,QAAS,uBACTyP,UAAU,IAGd,EAAK6xC,6BAA6Bn/D,EAAMugF,aAAa7gE,QAnCtC,EAsCnB8gE,gBAAkB,SAAAxgF,GACdA,EAAMwI,iBACNxI,EAAMyI,kBACNlK,KAAgBsf,aAAa,CACzB,QAAS,uBACTyP,UAAU,KA3CC,EA+CnB6xC,6BAA+B,SAAAz/C,GACN,IAAjBA,EAAMzb,QAEV1F,KAAgBsf,aAAa,CACzB,QAAS,wBACT6B,WApDW,IAGP0gE,EAAelpE,IAAfkpE,WAHO,OAKf,EAAKliF,MAAQ,CAAEkiF,cALA,E,iFASflpE,IAAS5R,GAAG,uBAAwBzH,KAAKsiF,0B,6CAIzCjpE,IAAS3R,IAAI,uBAAwB1H,KAAKsiF,0B,+BA6C1C,OADuBtiF,KAAKK,MAApBkiF,WAIJ,yBACIlhF,UAAU,oBACVuhF,YAAa5iF,KAAKwiF,gBAClBK,YAAa7iF,KAAK2iF,gBAClBG,OAAQ9iF,KAAKyiF,YACb,yBAAKphF,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,S,GA3DFM,IAAMC,Y,wCCoB9BmhF,I,kNACFnmD,SAAW,WAAO,IAAD,EACwF,EAAK97B,MAAlGsG,EADK,EACLA,OAAQqH,EADH,EACGA,UAAWd,EADd,EACcA,KAAmBq1E,GADjC,EACoB1hF,YADpB,EACiC0hF,kBAAkBC,EADnD,EACmDA,sBAAuBhiD,EAD1E,EAC0EA,UAEjF3tB,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAJR,IAML+G,EAAY/G,EAAZ+G,QACR,IAAKA,EAAS,OAAO,KAPR,IASLutB,EAAavtB,EAAbutB,SACR,IAAKA,EAAU,OAAO,KAVT,IAaTs7C,EAaAt7C,EAbAs7C,UACAp7E,EAYA8/B,EAZA9/B,MACA47B,EAWAkE,EAXAlE,YAEA72B,GASA+6B,EAVAx0B,IAUAw0B,EATA/6B,OACA82B,EAQAiE,EARAjE,UACAxY,EAOAyc,EAPAzc,MACAiS,EAMAwK,EANAxK,MACA3lB,EAKAmwB,EALAnwB,SACAuwB,EAIAJ,EAJAI,WACApE,EAGAgE,EAHAhE,WACAnjC,EAEAmnC,EAFAnnC,QACA2B,EACAwlC,EADAxlC,KAGJ,GAAI3B,EACA,MAAO,CACH,KACA,kBAAC0iF,GAAA,EAAD,CACI/7E,OAAQA,EACRqH,UAAWA,EACXhO,QAASA,EACTwgC,UAAWA,EACXz/B,OAAQC,KAAkB2hF,WAKtC,GAAIp7C,EACA,MAAO,CACH,KACA,kBAACq7C,GAAA,EAAD,CAAWj8E,OAAQA,EAAQqH,UAAWA,EAAW4uB,UAAW2K,EAAY/G,UAAWA,KAI3F,GAAI2C,EACA,MAAO,CACH,KACA,kBAAC0/C,GAAA,EAAD,CAAWl8E,OAAQA,EAAQqH,UAAWA,EAAWq1B,UAAWF,EAAY3C,UAAWA,KAI3F,GAAI7D,EACA,MAAO,CAAC,KAAM,kBAAC,KAAD,CAAOh2B,OAAQA,EAAQqH,UAAWA,EAAW2uB,MAAOA,EAAO6D,UAAWA,KAGxF,GAAIxpB,EACA,MAAO,CAAC,KAAM,kBAAC4iE,GAAA,EAAD,CAAUjzE,OAAQA,EAAQqH,UAAWA,EAAWgJ,SAAUA,EAAUwpB,UAAWA,KAGjG,GAAI0C,IACqB52B,YAAO42B,EAAUA,YAClBA,EAAU3K,WAC1B,MAAO,CACH,KACA,kBAACuqD,GAAA,EAAD,CAAWC,SAAS,EAAMp8E,OAAQA,EAAQqH,UAAWA,EAAWk1B,UAAWA,EAAW1C,UAAWA,KAK7G,GAAI9V,GACIA,EAAM6N,UACN,MAAO,CAAC,KAAM,kBAACohD,GAAA,EAAD,CAAOoJ,SAAS,EAAMp8E,OAAQA,EAAQqH,UAAWA,EAAW0c,MAAOA,EAAO8V,UAAWA,KAI3G,GAAIp0B,EAAO,CACP,IAAMi0B,EAAYa,aAAQ90B,EAAMkrB,MAAOpqB,GACjC81E,GACQ,YAATrhF,GAA+B,UAATA,GAA6B,uBAATA,GAA0C,qBAATA,KAC3E8gF,GAAap7E,GAAS47B,GAAeA,EAAYpzB,KAAKlK,OAAS,IAChE06B,IACCA,EAAUjzB,QAAUizB,EAAUhzB,QAAUxO,KAAKm1B,IAAIqM,EAAUjzB,MAAOizB,EAAUhzB,QAAUm0E,MACrFyB,EAAkBD,KAAgB//C,GAAeA,EAAYpzB,KAAKlK,OAAS,IAE3EwH,EACF61E,GAAcC,EACR,CACIC,MAAO,QACPC,WAAY,GAEhB,GAEV,MAAO,CACHH,EACI,kBAACtJ,GAAA,EAAD,CACI74E,YAAaoiF,EAAkBT,EAAwBD,EACvDp1E,MAAOA,EACPxG,OAAQA,EACRqH,UAAWA,EACX5B,MAAOA,EACPo0B,UAAWA,IAEf,KACHwiD,EAAkH,KAArG,kBAACtJ,GAAA,EAAD,CAAOqJ,SAAS,EAAMp8E,OAAQA,EAAQqH,UAAWA,EAAW5B,MAAOA,EAAOo0B,UAAWA,KAI3G,MAAO,CAAC,KAAM,O,EAGlB4iD,uB,sCAAyB,WAAM1hF,GAAN,yBAAAuI,EAAA,wDACrBvI,EAAMwI,iBACNxI,EAAMyI,kBAFe,EAIS,EAAK9J,MAA3BsG,EAJa,EAIbA,OAAQqH,EAJK,EAILA,UAEV6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GANpB,yCAOA,MAPA,UASb4L,EAAY/G,EAAZ+G,QATa,yCAUA,MAVA,UAYbutB,EAAavtB,EAAbutB,SAZa,0CAaC,MAbD,QAiBrBmpC,GAFgBnpC,EAARx0B,KAfa,0C,kIAoBX,IAAD,EACwBpT,KAAKc,MAA9BsG,EADC,EACDA,OAAQqH,EADP,EACOA,UAAWhL,EADlB,EACkBA,EAErB6P,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAJZ,IAMD+G,EAAY/G,EAAZ+G,QACR,IAAKA,EAAS,OAAO,KAPZ,IASDutB,EAAavtB,EAAbutB,SACR,IAAKA,EAAU,OAAO,KAVb,IAYDk8C,EAAoCl8C,EAApCk8C,qBAAsBZ,EAAct7C,EAAds7C,UACxBx/C,EAAuBkE,EAAvBlE,YAAa57B,EAAU8/B,EAAV9/B,MAEnB,GAA6B,kBAAzB47B,EAAY,SACZA,EAAcoB,aAAiBpB,QAC5B,GAA2B,kBAAhBA,GAA4Bw/C,IAA0C,YAA5BA,EAAU9oD,eAA2D,cAA5B8oD,EAAU9oD,eAAgC,OAIxG2pD,aAAwD,cAA5Bb,EAAU9oD,cAAgC,EAAI,EAAGsJ,EAAa,IAAjGsgD,GAJ+G,EAInI1zE,KAJmI,EAIzHkoB,UAClBkL,EAAcoB,aAAiB,CAAE,QAAS,gBAAiBx0B,KAAMozB,EAAalL,SAAUwrD,IAG5F,IAAMC,EACF,oCACKf,GAAa,yBAAK7hF,UAAU,sBAAsB6hF,GAClDp7E,GAAS,yBAAKzG,UAAU,kBAAkByG,GAC1C47B,GAAe,yBAAKriC,UAAU,wBAAwBqiC,IA7BtD,EAgCqC1jC,KAAK48B,WAhC1C,mBAgCFsnD,EAhCE,KAgCeC,EAhCf,KAiCHC,EAAqBN,EAAuB,GAC9C,kBAACppD,GAAA,EAAD,CACI2B,QAAQ,WACR15B,MAAM,UACNiC,QAAS,CACLy/E,gBAAiB,kBACjBnvD,SAAU,4BAEdgY,WAAS,EACT3nC,QAASvF,KAAK6jF,uBACdxiF,UAAU,mBACV,kBAACijF,GAAA,EAAD,KACI,0BAAMxiF,EAAE,w1BAEX2B,EAAE,gBAIX,OACI,oCACKygF,EACAD,EACAE,EACAC,K,+BAKH,IACEvD,EAAS7gF,KAAKc,MAAd+/E,KAER,OACI,oCACI,yBAAKx/E,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoBrB,KAAKk6E,eAE3C2G,O,GA7MKl/E,IAAMC,YA8N5BmhF,GAAQ/6E,aAAe,CACnB2F,KAAMi0B,KACNtgC,YAAa2gF,KACbe,iBAAkBuB,KAClBtB,sBAAuBuB,MAGZt/E,qBAAkB69E,ICxN3B0B,I,mBACF,WAAY3jF,GAAQ,IAAD,uBACf,4CAAMA,KAgGV05E,6BAA+B,SAAAvzE,GACtB,EAAK5G,MAAMk1B,UAEhB,EAAKx0B,SAAS,CAAEw0B,UAAU,KApGX,EAuGnBmvD,2BAA6B,SAAAz9E,GAAW,IAAD,EACL,EAAKnG,MAA3BsG,EAD2B,EAC3BA,OAAQqH,EADmB,EACnBA,UACRi2C,EAAU,EAAKrkD,MAAfqkD,MAEJt9C,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,YAC7Ci2C,EACA,EAAK3jD,SAAS,CAAE2jD,OAAO,GAAS,WAC5BpoC,WAAW,WACP,EAAKvb,SAAS,CAAE2jD,OAAO,KACxB,KAGP,EAAK3jD,SAAS,CAAE2jD,OAAO,MAnHhB,EAwHnB41B,iCAAmC,SAAArzE,GAAW,IAAD,EACX,EAAKnG,MAA3BsG,EADiC,EACjCA,OAAQqH,EADyB,EACzBA,UADyB,EAEP,EAAKpO,MAA/Bk1B,EAFiC,EAEjCA,SAAUglD,EAFuB,EAEvBA,YAEdhlD,IAEAnuB,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,UAC7C8rE,EACA,EAAKx5E,SAAS,CAAEw5E,aAAa,GAAS,WAClCj+D,WAAW,WACP,EAAKvb,SAAS,CAAEw5E,aAAa,KAC9B,KAGP,EAAKx5E,SAAS,CAAEw5E,aAAa,IAE1BA,GACP,EAAKx5E,SAAS,CAAEw5E,aAAa,MAzIlB,EA6InBvO,8BAAgC,SAAA/kE,GAAW,IAAD,EACR,EAAKnG,MAA3BsG,EAD8B,EAC9BA,OAAQqH,EADsB,EACtBA,UACR8mB,EAAatuB,EAAbsuB,SAEJnuB,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,WACjD,EAAK1N,SAAS,CAAEw0B,WAAUglD,aAAa,KAlJ5B,EAsJnB99C,uBAAyB,SAAAx1B,GAAW,IACxBI,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WADc,EAED,EAAK5N,MAA3BsG,EAFuB,EAEvBA,OAAQqH,EAFe,EAEfA,UACR4xE,EAAiB,EAAKhgF,MAAtBggF,aAEJj5E,IAAWC,IACXoH,IAAcC,IAEMi2E,aAAgBv9E,EAAQqH,KACxB4xE,EACpB,EAAKt/E,SAAS,CAAEs/E,aAAcsE,aAAgBv9E,EAAQqH,KAEtD,EAAKvH,iBAlKM,EAsKnBq6E,iBAAmB,SAAAx5C,GACfd,aAASc,GAAQ,IAvKF,EA0KnBy5C,iBAAmB,SAAAp6E,GACfg5B,aAASh5B,EAAQ,MAAM,IA3KR,EA8KnBszE,gBAAkB,WACd,GAAK,EAAKkK,UAAV,CAEA,IAAM/qE,EAAYC,OAAOC,eAAey5C,WACxC,GAAK4jB,aAAiBv9D,GAAtB,CAJoB,MAQU,EAAK/Y,MAA3BsG,EARY,EAQZA,OAAQqH,EARI,EAQJA,UAEV8mB,GAAYtiB,KAAao8C,cAAczoD,IAA3B,iBAAyCQ,EAAzC,sBAA6DqH,IAC/E4oE,aAAcjwE,EAAQqH,EAAW8mB,MAzLlB,EA4LnBurD,gBAAkB,SAAAj1E,GACdA,EAAElB,iBACFkB,EAAEjB,kBAFiB,MAIW,EAAK9J,MAA3BsG,EAJW,EAIXA,OAAQqH,EAJG,EAIHA,UAEKorB,aAAgBzyB,GAEjCsyD,aAAatyD,EAAQqH,GAKFspE,aAAsB3wE,EAAQqH,IAEjD6xB,aAAgBl5B,EAAQ,CAACqH,KA3Md,EA+MnBwyB,UAAY,SAAA9+B,GACJA,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAHO,MAMa,EAAK9J,MAA3BsG,EANS,EAMTA,OAAQqH,EANC,EAMDA,UAEhBwyB,aAAU75B,EAAQqH,IAvNH,EA0NnBszE,mBAAqB,WACjB,EAAKhhF,SAAS,CAAEw5E,aAAa,KA3Nd,EA8NnB/qD,gBAAkB,WACd,EAAKo1D,WAAY,GA/NF,EAkOnB50D,gBAAkB,WACd,EAAK40D,WAAY,GAnOF,EAsOnB/C,eAAiB,WACb,EAAKgD,UAAW,GAvOD,EA0OnB7C,iBAAmB,WAAO,IAAD,EACS,EAAKlhF,MAA3BsG,EADa,EACbA,OAAQqH,EADK,EACLA,UAChBq2E,aAAU19E,EAAQqH,IA5OH,EA+OnBuyB,sBA/OmB,sCA+OK,WAAM7+B,GAAN,mBAAAuI,EAAA,wDAChBvI,IACAA,EAAMwI,iBACNxI,EAAMyI,oBAGc,EAAKvK,MAArBiK,YANY,gBAShB,EAAKvJ,SAAS,CAAEuJ,aAAa,IATb,4BAWZ2I,KAAao8C,cAAc1hD,KAAO,GAXtB,iDAeVnD,EAAOrI,EAAM0I,QACbN,EAAMpI,EAAM2I,QACZ+rE,EACF10E,EAAME,QAAmC,MAAzBF,EAAME,OAAOo4E,SAAmBt4E,EAAME,OAAOi6D,KAAOn6D,EAAME,OAAOi6D,KAAO,KAE5F,EAAKv7D,SAAS,CACVuJ,aAAa,EACbusE,WACArsE,OACAD,QAxBY,0CA/OL,wDA4QnBQ,uBAAyB,SAAA5I,GACjBA,GACAA,EAAMyI,kBAGV,EAAK7J,SAAS,CAAEuJ,aAAa,KAjRd,MAGe,EAAKxJ,MAA3BsG,EAHO,EAGPA,OAAQqH,EAHD,EAGCA,UAHD,OAIf,EAAKpO,MAAQ,CACTiT,QAASL,KAAa1M,IAAIa,EAAQqH,GAClC4xE,aAAcsE,aAAgBv9E,EAAQqH,GACtC8mB,UAAU,EACVglD,aAAa,EACb71B,OAAO,EAEPp6C,aAAa,EACbusE,SAAU,KACVrsE,KAAM,EACND,IAAK,GAdM,E,mFAkBGjD,EAAWC,GAAY,IAAD,EAC8CvH,KAAKc,MAAnFsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UAAWykC,EADa,EACbA,aAAcutC,EADD,EACCA,oBAAqBD,EADtB,EACsBA,SAAUt2E,EADhC,EACgCA,UADhC,EAE4BlK,KAAKK,MAAjEiK,EAFgC,EAEhCA,YAAairB,EAFmB,EAEnBA,SAAUglD,EAFS,EAETA,YAAa71B,EAFJ,EAEIA,MAAO27B,EAFX,EAEWA,aAEnD,OAAI/4E,EAAUF,SAAWA,IAKrBE,EAAUmH,YAAcA,IAKxBnH,EAAU4rC,eAAiBA,IAK3B5rC,EAAUm5E,sBAAwBA,IAKlCn5E,EAAUk5E,WAAaA,IAKvBl5E,EAAU4C,YAAcA,IAKxB3C,EAAU+C,cAAgBA,IAK1B/C,EAAUguB,WAAaA,IAKvBhuB,EAAUgzE,cAAgBA,IAK1BhzE,EAAUm9C,QAAUA,GAKpBn9C,EAAU84E,eAAiBA,a,0CAU/BptE,KAAaxL,GAAG,iCAAkCzH,KAAKs6E,kCACvDrnE,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,+BACpD/4D,KAAaxL,GAAG,2BAA4BzH,KAAK0kF,4BACjDzxE,KAAaxL,GAAG,6BAA8BzH,KAAKw6E,8BACnDvnE,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,6CAI7CxpB,KAAavL,IAAI,iCAAkC1H,KAAKs6E,kCACxDrnE,KAAavL,IAAI,8BAA+B1H,KAAKgsE,+BACrD/4D,KAAavL,IAAI,2BAA4B1H,KAAK0kF,4BAClDzxE,KAAavL,IAAI,6BAA8B1H,KAAKw6E,8BACpDvnE,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,+BAsLxC,IACA+jD,EAAaxgF,KAAKc,MAAlB0/E,SADD,EAE8ExgF,KAAKc,MAAhF2C,EAFH,EAEGA,EAAG2D,EAFN,EAEMA,OAAQqH,EAFd,EAEcA,UAAWgyE,EAFzB,EAEyBA,oBAAqBv2E,EAF9C,EAE8CA,UAAWmgD,EAFzD,EAEyDA,SAAU7oD,EAFnE,EAEmEA,OAFnE,EAYDxB,KAAKK,MARLggF,EAJC,EAIDA,aACA9qD,EALC,EAKDA,SACAglD,EANC,EAMDA,YACA71B,EAPC,EAODA,MACAmyB,EARC,EAQDA,SACAvsE,EATC,EASDA,YACAE,EAVC,EAUDA,KACAD,EAXC,EAWDA,IAKE+I,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,gDAjBhB,IAmBG+G,EAA0E/G,EAA1E+G,QAASy5B,EAAiExgC,EAAjEwgC,YAAa1+B,EAAoD9B,EAApD8B,KAAMqjB,EAA8CnlB,EAA9CmlB,oBAAqBioD,EAAyBptE,EAAzBotE,aAAc/sE,EAAWL,EAAXK,OAEjE0lE,EAAavlC,IAAgB7Y,aAAc7zB,GAC3C6yE,EACF,kBAAC,GAAD,CACI54E,UAAU,cACVuE,IAAG,UAAKwB,EAAL,YAAeqH,EAAf,SACHrH,OAAQA,EACRqH,UAAWA,IAGboyE,EACF,kBAAC,GAAD,CACIx/E,UAAWoE,IAAW,YAAa,CAC/B,cAAes/E,aAAa39E,EAAQqH,KAExCrH,OAAQA,EACRqH,UAAWA,EACX2qE,YAAap5E,KAAK8gF,kBAIpB79C,EAAUi3C,aAAW5mE,GACrBhD,EAAO4iD,aAAQ5/C,EAAW2vB,EAAU,KAAOg3C,EAAYx2E,GACvDm9E,EAAsB,OAATtwE,GAAiBA,EAAKlK,OAAS,EAC5C26E,EAAcC,aAAmB55E,EAAQqH,GACzCwyE,EAAYv7E,QAAQ+yB,GACpByoD,EAAgBlmD,cAAc5zB,MAAagD,cAAShD,KAAYiyE,IAAgB1vC,cAAYviC,IAAWiyE,EACvG8H,GAAaD,GAAiBh3E,GAAc62E,GAAeE,EAC3DtkD,EAAQC,aAAStpB,EAAStT,KAAKihC,UAAW,CAAEkgD,WAAUP,aAAY3G,aAAY4G,SAC9EO,EAAYnmD,aAAc7zB,GAC1Bi6E,EAAYrmD,cAAc5zB,GAM5ByyC,EAAO,KACX,GAAI2mC,EACA,GAAIp2E,cAAShD,IAAWs5E,EACpB,OAAQA,EAAavF,OAAO,UACxB,IAAK,iCACDthC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAACmxC,UAAWuiC,EAAavF,OAAOmG,YAAax3E,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,2BACD1nC,EAAO,kBAACC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQ24C,EAAavF,OAAO1oE,eAAgB3I,SAAU9J,KAAKuhF,mBAClF,MAEJ,IAAK,8BACD1nC,EAAO,kBAAC,KAAD,CAAU7sC,OAAK,EAAC5F,OAAQs5E,EAAavF,OAAO9zE,QAASyC,SAAU9J,KAAKwhF,wBAKnF3nC,EADOwnC,EACA,kBAAC,GAAD,CAAWr0E,OAAK,IAChBo0E,EACA,kBAAC,GAAD,CAAWp0E,OAAK,IAChB8mC,EACA,kBAAC,GAAD,CAAW9mC,OAAK,IAChB2G,EAAOhL,QACP,kBAACmxC,GAAA,EAAD,CAAU9sC,OAAK,EAAC+6B,OAAQp0B,EAAOhL,QAASmB,SAAU9J,KAAKuhF,mBAEvD,kBAAC,KAAD,CAAUv0E,OAAK,EAAC5F,OAAQA,EAAQ0C,SAAU9J,KAAKwhF,mBAI9D,IAAM5zE,EAAQo3E,aAAgB59E,EAAQqH,GAChCgzE,EAAkC,mBAArBpnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DqnE,GAAed,IAAoC,qBAArBvmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAiB9H,OACI,6BACKgwC,GAAY,kBAAC,GAAD,CAASj1C,KAAMA,IAC5B,yBACI/T,UAAWoE,IAAW,UAAW,CAC7B,kBAAmByE,GAAas2E,GAAYkB,EAC5C,iBAAkB7nC,EAClB,cAAew/B,EACf,mBAAoB9jD,EACpB,sBAAuBglD,IAAgBhlD,EACvC,sBAAuBrrB,IAAcs2E,EACrC,iBAAkBt2E,IAAcs2E,EAChC,sBAAuBt2E,GAAas2E,IAAakB,EACjD,8BAA+Bx3E,GAAas2E,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa3hF,KAAKgwB,gBAClB4xD,WAAY5hF,KAAK6hF,eACjBj2E,YAAa5L,KAAKwvB,gBAClBjqB,QAASvF,KAAK06E,gBACdoH,eAAgB9hF,KAAK+hF,mBACrB32E,cAAepL,KAAKghC,uBACnBy/C,GAAuB,kBAAC,GAAD,MACxB,yBAAKp/E,UAAU,gBAIX,yBAAKA,UAAWoE,IAAW,kBAAmB,CAAE,MAASi/C,KACpD7K,EACD,yBACIx4C,UAAWoE,IAAW,kBAAmB,CACrC,iBAAkBg8E,EAClB,qBAAsBA,GAAcpI,IAExCzrE,MAAOA,GACN6zE,IAAgBv3E,IAAcg3E,GAAkBH,IAC7C,yBAAK1/E,UAAU,iBACV6I,IAAc62E,GACX,kBAAC37C,GAAA,EAAD,CAAezxB,OAAQA,EAAQunE,YAAawF,EAActgD,UAAQ,EAAC6G,UAAQ,IAE9E85C,GAAe,kBAAC,GAAD,CAAS7F,YAAawF,KAG7CO,GACG,kBAAC,GAAD,CACI75E,OAAQA,EACRqH,UAAWgqB,EACXlzB,QAASvF,KAAKgiF,mBAGrBrlD,EACD,yBACIt7B,UAAWoE,IAAW,eAAgB,CAClC,sBAAwC,IAAjB46E,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1B/vE,GAEJ2yB,GACG,kBAAC,GAAD,CACI77B,OAAQA,EACRqH,UAAWA,EACXwyB,UAAWjhC,KAAKihC,UAChB4/C,KAAM5G,IAGbwH,GAAcZ,GAEnB,yBAAKx/E,UAAU,4BAK3B,kBAAC,GAAD,CACI+F,OAAQA,EACRqH,UAAWA,EACXlD,eAAgB,CAAEhB,MAAKC,QACvBlH,KAAMgH,EACNzG,QAAS7D,KAAK+K,uBACd8rE,SAAUA,EACVr1E,OAAQA,S,GA/cNI,cAgetB6iF,GAAQz8E,aAAe,CACnBkrC,aAAc,KACdhpC,WAAW,EACXs2E,UAAU,EACVC,qBAAqB,EACrBp2B,UAAU,GASd,IAEe/2C,GAFCpO,YAAgB,CAAC,cAAe,SAAU,CAAE+/E,SAAS,GAArD//E,CAA6Du/E,I,SCxgBvES,I,OAAiB,CACnBr3E,MAAO,GACPC,OAAQ,GACRq3E,aAAc,MACdhoC,OAAQ,eAGNioC,G,YACF,WAAYtkF,GAAQ,IAAD,uBACf,4CAAMA,KAgDVw5E,iCAAmC,SAAArzE,GAAW,IAAD,EACX,EAAKnG,MAA3BsG,EADiC,EACjCA,OAAQqH,EADyB,EACzBA,UADyB,EAEP,EAAKpO,MAA/Bk1B,EAFiC,EAEjCA,SAAUglD,EAFuB,EAEvBA,YAEdhlD,IAEAnuB,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,UAC7C8rE,EACA,EAAKx5E,SAAS,CAAEw5E,aAAa,GAAS,WAClCj+D,WAAW,WACP,EAAKvb,SAAS,CAAEw5E,aAAa,KAC9B,KAGP,EAAKx5E,SAAS,CAAEw5E,aAAa,IAE1BA,GACP,EAAKx5E,SAAS,CAAEw5E,aAAa,MAlElB,EAsEnBwH,mBAAqB,WACjB,EAAKhhF,SAAS,CAAEw5E,aAAa,KAvEd,EA0EnBt5C,UAAY,SAAA9+B,GACJA,IACAA,EAAMwI,iBACNxI,EAAMyI,mBAHO,MAMa,EAAK9J,MAA3BsG,EANS,EAMTA,OAAQqH,EANC,EAMDA,UAEhBwyB,aAAU75B,EAAQqH,IAlFH,MAGe,EAAK3N,MAA3BsG,EAHO,EAGPA,OAAQqH,EAHD,EAGCA,UAHD,OAIf,EAAKpO,MAAQ,CACTiT,QAASL,KAAa1M,IAAIa,EAAQqH,GAClC8rE,aAAa,GANF,E,mFAUGjzE,EAAWC,GAAY,IAAD,EAC4BvH,KAAKc,MAAjEsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UAAWykC,EADa,EACbA,aAAcutC,EADD,EACCA,oBAAqBh9E,EADtB,EACsBA,EACtD82E,EAAgBv6E,KAAKK,MAArBk6E,YAER,OAAIjzE,EAAU7D,IAAMA,IAIhB6D,EAAUF,SAAWA,IAIrBE,EAAUmH,YAAcA,IAIxBnH,EAAU4rC,eAAiBA,IAI3B5rC,EAAUm5E,sBAAwBA,GAIlCl5E,EAAUgzE,cAAgBA,Q,0CAQ9BtnE,KAAaxL,GAAG,iCAAkCzH,KAAKs6E,oC,6CAIvDrnE,KAAavL,IAAI,iCAAkC1H,KAAKs6E,oC,+BAuClD,IAAD,EACwDt6E,KAAKc,MAA1DsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAAWgyE,EADtB,EACsBA,oBAAqBp2B,EAD3C,EAC2CA,SACxCkwB,EAAgBv6E,KAAKK,MAArBk6E,YAEFjnE,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KALhB,IAOG+G,EAAkB/G,EAAlB+G,QAASjF,EAAS9B,EAAT8B,KACjB,IAAKiF,EAAS,OAAO,KACrB,GAAyB,yBAArBA,EAAQ,SAAqC,OAAO,KATnD,IAWGxN,EAAUwN,EAAVxN,MAEFyD,EAAO+0E,aAAyB/xE,GAAS,GAE/C,OACI,6BACK+2C,GAAY,kBAAC,GAAD,CAASj1C,KAAMA,IAC5B,yBACI/T,UAAWoE,IAAW,kBAAmB,CAAE,sBAAuB80E,IAClEuH,eAAgB9hF,KAAK+hF,oBACpBtB,GAAuB,kBAAC,GAAD,MACxB,yBAAKp/E,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAMiP,KAGbzD,GACG,kBAACstE,GAAA,EAAD,CACI/yE,OAAQA,EACRqH,UAAWA,EACX5B,MAAOA,EACPvL,YAAa,GACbsM,MAAOs3E,GACPjkD,UAAWjhC,KAAKihC,kB,GAxHft/B,IAAMC,WAuInCwjF,GAAep9E,aAAe,CAC1BkC,WAAW,EACXs2E,UAAU,EACVC,qBAAqB,GAGzB,IAMe37E,GANCC,YACZC,cACAE,cACAC,cAGWL,CAAQsgF,ICjKjBE,I,mBACF,WAAYxkF,GAAQ,IAAD,uBACf,4CAAMA,KA0CVw3C,0BAA4B,SAAArxC,GAAW,IAC3Bs+E,EAAgBlsE,IAAhBksE,YAER,EAAKxkF,SAAS,CAAEwkF,iBA9CD,EAiDnB73C,qBAAuB,SAAAzmC,GAAW,IACVG,EAAWH,EAAvB0mC,WAER,EAAK5sC,SAAS,CAAEqG,YApDD,EAuDnBo+E,2BAA6B,SAAAv+E,GAAW,IAC5Bw+E,EAAiBpsE,IAAjBosE,aAER,EAAK1kF,SAAS,CAAE0kF,kBA1DD,IAGPr+E,EAAsCiS,IAAtCjS,OAAQq+E,EAA8BpsE,IAA9BosE,aAAcF,EAAgBlsE,IAAhBksE,YAHf,OAIf,EAAKllF,MAAQ,CACT+G,SACAq+E,eACAF,eAPW,E,mFAWGj+E,EAAWC,EAAWmU,GACxC,OAAInU,EAAUH,SAAWpH,KAAKK,MAAM+G,SAIhCG,EAAUk+E,eAAiBzlF,KAAKK,MAAMolF,eAItCl+E,EAAUg+E,cAAgBvlF,KAAKK,MAAMklF,aAIrCj+E,EAAU7D,IAAMzD,KAAKc,MAAM2C,M,0CAQ/B4V,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvCr0B,IAAS5R,GAAG,2BAA4BzH,KAAKwlF,4BAC7CnsE,IAAS5R,GAAG,0BAA2BzH,KAAKs4C,6B,6CAI5Cj/B,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxCr0B,IAAS3R,IAAI,2BAA4B1H,KAAKwlF,4BAC9CnsE,IAAS3R,IAAI,0BAA2B1H,KAAKs4C,6B,+BAqBvC,IAAD,EACgBt4C,KAAKc,MAAlB2C,EADH,EACGA,EADH,KACM2Q,MACmCpU,KAAKK,OAA3C+G,EAFH,EAEGA,OAFH,EAEWq+E,aAFX,EAEyBF,YAC9B,OAAIn+E,EAAe,KAIf,yBAAK/F,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoBoC,EAAE,qC,GAxE/B9B,IAAMC,YA+EjBsD,iBAAkBogF,I,qBC7DlBI,I,wLAjBD,IACEngF,EAAYvF,KAAKc,MAAjByE,QAER,OACI,yBAAKlE,UAAU,sBACX,kBAACqV,EAAA,EAAD,CAAYylB,eAAe,EAAMvwB,YAAarG,GAC1C,kBAAC,KAAD,Y,GAPW5D,IAAMC,Y,UC0QtB+jF,I,mBArQX,WAAY7kF,GAAQ,IAAD,8BACf,4CAAMA,KAuBV8kF,iCAAmC,SAAA3+E,GAAW,IAClC6Q,EAAS7Q,EAAT6Q,KACM+tE,EAAgB,EAAKxlF,MAA3ByX,KAER,IAAI+tE,GAAe/tE,EAAKiuD,YAAc8f,EAAY9f,UAAlD,CAEA,EAAKhlE,SAAS,CACV+W,KAAM0tD,KAAa1tD,KACnBiE,MAAO,EAAK+pE,SAAStgB,KAAa1tD,QAGtC,IAAM3K,EAAQC,KAAUC,WAChB24D,EAAaluD,EAAbkuD,SACR+f,YAAoB54E,EAAO64D,EAASA,YArCrB,EAwCnBggB,gCAAkC,SAAA/+E,GAAW,IACjC6Q,EAAS7Q,EAAT6Q,KAUR,GARA,EAAK/W,SAAS,CACV+W,OACAiE,MAAO,EAAK+pE,SAAShuE,GACrBmuE,iBAAkB,EAClB18B,aAAa,EACb28B,YAAY,IAGXpuE,EAAL,CAEA,IAAM3K,EAAQC,KAAUC,WAChB24D,EAAaluD,EAAbkuD,SACR+f,YAAoB54E,EAAO64D,EAASA,YAvDrB,EA0DnBhuC,WAAa,SAAAv3B,GACc,EAAKJ,MAApB6lF,YAEHzlF,GAELC,KAAgBsf,aAAa,CACzB,QAAS,0BACTvf,aAjEW,EAqEnB0lF,mBAAqB,SAAAC,GAAc,IACvBrqE,EAAU,EAAK1b,MAAf0b,MAEFtb,EAAUsb,EAAMrT,KAAK,SAAAxJ,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IACjD,GAAK3lF,EAAL,CAEA,IAAM0M,EAAQC,KAAUC,WACxBg5E,YAAmBl5E,EAAO1M,EAAS,MAEnC,IAAI6lF,EAAiB,EACjB,EAAKC,UAAY,EAAKA,SAAS1xE,UAC/ByxE,EAAiBhnF,KAAKs0B,MAAM,EAAK2yD,SAAS1xE,QAAQwd,YAAcm0D,QAG5C,EAAKC,oBAAoBL,EAAWrqE,EAAOuqE,GACnD3mF,QAAQ,SAAAT,GACpBmnF,YAAmBl5E,EAAOjO,EAAG,UArFlB,EAyFnBunF,oBAAsB,SAACL,EAAWpgB,EAAUsgB,GACxC,IAAKtgB,EAAU,MAAO,GAEtB,IAAM0gB,EAAU,GACVnsE,EAAQyrD,EAAS3nD,UAAU,SAAAnf,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IACvD,IAAe,IAAX7rE,EAAc,MAAO,GAEzB,IAAMosE,EAAMrnF,KAAKs0B,MAAMrZ,EAAQ+rE,GACzBM,EAASrsE,EAAQ+rE,EAEjBO,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ12E,KAAKs2E,EAAiBO,EAAUE,GAE5CL,EAAQ12E,KAAKs2E,EAAiBO,EAAUD,GACpCI,EAAaV,GACbI,EAAQ12E,KAAKs2E,EAAiBO,EAAUG,IAI5CD,GAAc,GACdL,EAAQ12E,KAAKs2E,EAAiBK,EAAMI,GAEpCC,EAAaV,GACbI,EAAQ12E,KAAKs2E,EAAiBK,EAAMK,GAGpCF,EAAUxnF,KAAK2nF,KAAKjhB,EAAS5/D,OAASkgF,KAClCS,GAAc,GACdL,EAAQ12E,KAAKs2E,EAAiBQ,EAAUC,GAE5CL,EAAQ12E,KAAKs2E,EAAiBQ,EAAUF,GACpCI,EAAaV,GACbI,EAAQ12E,KAAKs2E,EAAiBQ,EAAUE,IAIzCN,EAAQ92E,IAAI,SAAAjJ,GAAC,OAAIq/D,EAASr/D,MAnIlB,EAsInBsmE,iBAAmB,SAAA9qE,GACf,IAAMikF,EAAYr6D,OAAO5pB,EAAMw0C,cAAcyc,QAAQgzB,WAC/C3lF,EAAU,EAAKymF,WAAWd,GAC3B3lF,GAEA,EAAKmkF,YAEN,EAAKuC,qBAAuBf,IAC5B,EAAKe,mBAAqB,MAE9B,EAAKpmF,SAAS,CAAEN,YAChBC,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,YAEJ,EAAK0lF,mBAAmBC,KArJT,EAwJnB52D,gBAAkB,SAAArtB,GACd,IAAMikF,EAAYr6D,OAAO5pB,EAAMw0C,cAAcyc,QAAQgzB,WAC/C3lF,EAAU,EAAKymF,WAAWd,GAChC,GAAK3lF,EAAL,CAEA,EAAK0mF,mBAAqBf,EAC1B,IAAMpnF,EAAMwR,KAAKxR,MAqBjB,OAnBA,EAAK+B,SAAS,CAAEN,UAASslE,UAAW/mE,EAAKuqD,aAAa,EAAO28B,YAAY,IACzE5pE,WAAW,WACe,EAAKjc,MAAnB0lE,YACU/mE,IACd,EAAK+B,SAAS,CAAEwoD,aAAa,EAAM28B,YAAY,IAC/CxlF,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,cAGT,KAEH,EAAK0lF,mBAAmBC,GAExB,EAAKxB,WAAY,EACjBntE,SAASkE,iBAAiB,UAAW,EAAK2T,eAE1CntB,EAAMwI,iBACNxI,EAAMyI,mBACC,IAnLQ,EAsLnB0kB,cAAgB,WAEZ,EAAKvuB,SAAS,CAAEN,QADA,KACSslE,UAAW,EAAGxc,aAAa,IACpD7oD,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,QAJY,OAMhB,EAAKmkF,WAAY,EACjBntE,SAASoE,oBAAoB,UAAW,EAAKyT,gBA9L9B,EAiMnBw2D,SAAW,SAAAhuE,GACP,IAAMiE,EAAQ,GACd,IAAKjE,EAAM,OAAOiE,EAElB,IAAMqrE,EAAO,IAAI3gF,IACTu/D,EAA4BluD,EAA5BkuD,SAAUqhB,EAAkBvvE,EAAlBuvE,cAgBlB,OAfIrhB,GACAA,EAASA,SAASrmE,QAAQ,SAAAT,GACtB6c,EAAM/L,KAAK9Q,GACXkoF,EAAKr3E,IAAI7Q,EAAEuB,QAAQhC,GAAIS,EAAEuB,QAAQhC,MAGrC4oF,GACAA,EAAcrhB,SAASrmE,QAAQ,SAAAT,GACtBkoF,EAAKxgF,IAAI1H,EAAEuB,QAAQhC,MACpBsd,EAAM/L,KAAK9Q,GACXkoF,EAAKr3E,IAAI7Q,EAAEuB,QAAQhC,GAAIS,EAAEuB,QAAQhC,OAKtCsd,GAnNP,EAAKwqE,SAAW5kF,IAAMoU,YAEtB,EAAK1V,MAAQ,CACTyX,KAAM,KACNiE,MAAO,GACPkqE,iBAAkB,EAClB18B,aAAa,EACb28B,YAAY,GAVD,E,iFAef1gB,KAAa/9D,GAAG,gCAAiCzH,KAAKgmF,iCACtDxgB,KAAa/9D,GAAG,iCAAkCzH,KAAK4lF,oC,6CAIvDpgB,KAAa99D,IAAI,gCAAiC1H,KAAKgmF,iCACvDxgB,KAAa99D,IAAI,iCAAkC1H,KAAK4lF,oC,iCAoMjDQ,GAAY,IACXrqE,EAAU/b,KAAKK,MAAf0b,MAEFurE,EAAevrE,EAAMsC,UAAU,SAAAnf,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IAC3D,OAAyB,IAAlBkB,EAAsBvrE,EAAMurE,GAAgB,O,+BAG7C,IAAD,SACyCtnF,KAAKK,MAA3CyX,EADH,EACGA,KAAMiE,EADT,EACSA,MAAOtb,EADhB,EACgBA,QAAS8oD,EADzB,EACyBA,YAC9B,IAAKzxC,EAAM,OAAO,KAClB,IAAKiE,EAAO,OAAO,KACnB,IAAKA,EAAM3V,OAAQ,OAAO,KAE1B,IAAM+gC,EAAWprB,EAAMnM,IAAI,SAAA1Q,GAAC,OACxB,yBACImC,UAAU,0BACVuE,IAAK1G,EAAEuB,QAAQhC,GACf8oF,kBAAiBroF,EAAEuB,QAAQhC,GAC3BmP,MAAO,CAAEC,MAAO24E,MAA2B14E,OAAQ04E,OACnDjhF,QAAS,kBAAM,EAAKyyB,WAAW94B,IAC/Bo1B,aAAc,EAAK24C,iBACnBrhE,YAAa,EAAK4jB,iBAClB,kBAAC2zD,GAAA,EAAD,CACIv9E,IAAK1G,EAAEuB,QAAQhC,GACf4C,UAAU,kCACVZ,QAASvB,EACT4lD,UAAU,EACVt1C,MAAM,EACNlO,YAAakmF,MACbC,SAAO,EACPjmF,OAAQC,KAAkBimF,WAKtC,OACI,yBAAKlxE,IAAKxW,KAAKumF,SAAUllF,UAAU,mCAC9B8lC,EACAzhC,QAAQjF,IAAY8oD,GAAe,kBAACnpD,GAAA,EAAD,CAAgBK,QAASA,S,GAhQlDkB,IAAMC,Y,oOCoBjC,IAAM+lF,GAAqBC,OAAOC,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,qBAAsB,uBACtB/Z,KAAM,SAqnDKga,G,YAjnDX,WAAYrnF,GAAQ,IAAD,8BACf,4CAAMA,KA0LVupE,wBAA0B,SAAApjE,GAAW,IACzBI,EAAmCJ,EAAnCI,QAASqH,EAA0BzH,EAA1ByH,WAAY67D,EAActjE,EAAdsjE,UADG,EAEL,EAAKzpE,MAAxBsG,EAFwB,EAExBA,OAAQwL,EAFgB,EAEhBA,OAChB,GAAIxL,IAAWC,GACVuL,EAEL,GAAI23D,EAAW,CACX,IAAMj3D,EAAUL,KAAa1M,IAAIc,EAASqH,GAEpCK,EAAO,EAAK6F,QAAQC,QAEtBuzE,EAAiB90E,EAAQwgC,cAAgBu0C,aAAiB/0E,GAAWq0E,GAAmBG,iBAAmBH,GAAmBxZ,KAC9Hp/D,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,eAC3CozE,EAAiBT,GAAmBG,kBAGxC,IAAMQ,EAAWh1E,EAAQwgC,YAAc,CAAEy0C,mBAAmB,GAAU,GAEhEC,EAAU,CAACl1E,GACjB,EAAKm1E,oBAAqB,EAC1B,EAAKC,OAAOF,EAASF,EAAU,WAC3B,EAAKG,oBAAqB,EAC1B,EAAKE,qBAAqBP,EAAgB,EAAKhnF,YAGnD,IAAM+L,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOq7E,GAC3B,EAAKlzC,aAAakzC,OACf,CACH,EAAKI,cAAc,CAACl6E,IAEpB,IAAMiuB,EAAQ1pB,KAAa2pB,SAASx1B,GAChCu1B,IAAUA,EAAM0qC,OAAOjhE,QACvBgzD,iBA5NO,EAiOnBjhD,UAAY,SAAAhW,KAjOO,EA4OnB0mF,6BA5OmB,sCA4OY,WAAM5hF,GAAN,yBAAAyD,EAAA,yDACvB,EAAKo+E,iBADkB,iBAEfN,EAAY,EAAKnoF,MAAjBmoF,QAEC7hF,EAAI6hF,EAAQpiF,OAAS,EAJP,YAIUO,GAAK,GAJf,oBAKb2M,EAAUk1E,EAAQ7hF,IACpBuxE,aAAmB5kE,EAAQjM,QAASiM,EAAQ7U,IAN7B,uBAOfg7D,aAAYnmD,EAAQjM,QAASiM,EAAQ7U,IAPtB,0BAIkBkI,IAJlB,wCAcNjG,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAAS,EAAKvG,MAAMsG,OACpBwJ,MAAO,GACP6B,eAAgBhJ,KAAU0K,UAC1BzB,gBAAiB,EACjBC,OAAQ,EACR9B,MAAO,IACP+B,OAAQ,CAAE,QAAS,+BAtBI,QAcrB/R,EAdqB,OAyBlB8F,EAAI,EAzBc,aAyBXA,EAAI9F,EAAO2R,SAASpM,QAzBT,oBA0BjBkN,EAAUzS,EAAO2R,SAAS7L,IAC5BuxE,aAAmB5kE,EAAQjM,QAASiM,EAAQ7U,IA3BzB,wBA4BnBg7D,aAAYnmD,EAAQjM,QAASiM,EAAQ7U,IA5BlB,2BAyBiBkI,IAzBjB,0DA5OZ,wDA+QnB6+E,2BA/QmB,sCA+QU,WAAMv+E,GAAN,iBAAAyD,EAAA,wDACjBqE,EAAS9H,EAAT8H,KADiB,oDAGH,iBAAlBA,EAAK,SAHgB,uDAKjBy5E,EAAY,EAAKnoF,MAAjBmoF,UACOA,EAAQpiF,OAAS,GANP,kEAQnBgH,KAAUwQ,OAAV,qBAAiB,oCAAAlT,EAAA,0DACW,EAAK5J,MAA3BsG,EADW,EACXA,OAAQqH,EADG,EACHA,WACZrH,EAFe,sBAGTe,EAAOX,KAAUjB,IAAIa,IAHZ,iBAKHhF,EAAS+F,EAAT/F,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASG1B,KAAgBC,KAAK,CACvB,QAAS,oBACTgI,QAASvG,EAAKuG,QACdyL,OAAO,IAZR,6DAiBG1T,KAAgBC,KAAK,CACvB,QAAS,uBACT6H,eAAgBpG,EAAKoG,eACrB4L,OAAO,IApBR,6DAyBG1T,KAAgBC,KAAK,CACvB,QAAS,uBACTwI,cAAe/G,EAAK+G,cACpBiL,OAAO,IA5BR,4CAiCX,EAAKotE,iBAAiBp6E,EAAQ,EAAGqH,EAAW,GAjCjC,2CARE,0CA/QV,wDA8TnBuwD,0BAA4B,SAAA/3D,GACJA,EAAZ9C,UAEJ,EAAK4kF,gBAAgBppF,QAAQ,SAAAT,GAAC,OAAIA,MAClC,EAAK6pF,gBAAkB,KAlUZ,EAsUnBC,wBAA0B,SAAA/hF,GAAW,IACzBG,EAAsBH,EAAtBG,OAAQqH,EAAcxH,EAAdwH,UACRw6E,EAAiB,EAAK5oF,MAAtB4oF,aAER,GAAI,EAAKnoF,MAAMsG,SAAWA,EAA1B,CAIA,IAAMo5C,EAAWyoC,EAAa7iF,OAAS,EAAI6iF,EAAaA,EAAa7iF,OAAS,GAAK,KAC/Eo6C,GAAYA,EAASp5C,SAAWA,GAAUo5C,EAAS/xC,YAAcA,GAIrEw6E,EAAaj5E,KAAK,CAAE5I,SAAQqH,gBAnVb,EAsVnByhE,0BAA4B,SAAAjpE,GACxB,IAAM8H,EAAO,EAAK6F,QAAQC,QAEpBwsC,EAAmBtyC,EAAKgG,aACxBuxB,EAAgBv3B,EAAK+F,UAC3B,EAAK/T,SAAS,CAAEmoF,cAAc,GAAQ,WAC9Bn6E,EAAK+F,YAAcwxB,IACnBv3B,EAAK+F,WAAaxV,KAAK6O,IAAIkzC,EAAmBtyC,EAAKgG,kBA7V5C,EAkWnBo0E,0BAA4B,SAAAC,GACxB,IAAMr6E,EAAO,EAAK6F,QAAQC,QAE1B,EAAKwsC,iBAAmBtyC,EAAKgG,aAC7B,EAAKuxB,cAAgBv3B,EAAK+F,WAtWX,EAyWnBu0E,uBAAyB,SAAAD,GACrB,IAAMr6E,EAAO,EAAK6F,QAAQC,QAK1B,EAAK9T,SAAS,CAAEmoF,cAAc,GAAS,WAC/Bn6E,EAAK+F,YAAc,EAAKwxB,gBACxBv3B,EAAK+F,WAAaxV,KAAK6O,IAAI,EAAKkzC,iBAAmBtyC,EAAKgG,kBAjXjD,EAsXnBu0E,wBAA0B,SAAAriF,GACtB,EAAKlG,SAAS,CACVwoF,gBAAiBt2E,KAAao8C,cAAc1hD,KAAO,KAxXxC,EA4XnBojC,2BAA6B,SAAA9pC,GACN,EAAKnG,MAAhBsG,SAEOH,EAAOG,QAClB,EAAKrG,SAAS,CAAEiwC,aAAc/pC,EAAOuW,cAhY1B,EAoYnBif,uBAAyB,SAAAx1B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAohF,EAAY,EAAKnoF,MAAjBmoF,QACAnhF,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WAEjB,GAAItH,IAAWC,IAEsC,IAAjDmhF,EAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOiQ,IAAoB,CACpD,IAAM4E,EAAUL,KAAa1M,IAAIc,EAASqH,GAC1C,IAAK4E,EAAS,OAEd,IAAMnG,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAO,CAACmG,MAhZjB,EAoZnBk2E,6BAA+B,SAAAviF,GAAW,IAC9BqM,EAA4BrM,EAA5BqM,QAASy/B,EAAmB9rC,EAAnB8rC,eAEjB,GADmB,EAAKjyC,MAAhBsG,SACOkM,EAAQjM,QAAvB,CAaA,IAAM+gF,EAAiB90E,EAAQwgC,YACzB6zC,GAAmBG,iBACnBH,GAAmBO,qBAEzB,EAAKuB,eAAe12C,EAAgBz/B,EAAS,WACrC80E,IAAmBT,GAAmBO,sBACtC,EAAKS,qBAAqBP,EAAgB,EAAKhnF,UAGnD,EAAKsoF,sBAGT,IAAMv8E,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAO,CAACmG,IAC5B,EAAKgiC,aAAa,CAAChiC,MAlbJ,EAqbnBypB,mBAAqB,SAAA91B,GACjB,GAAK,EAAK6hF,iBAAV,CAD2B,IAGnBx1E,EAAYrM,EAAZqM,QAER,GADmB,EAAKxS,MAAhBsG,SACOkM,EAAQjM,QAGvB,GAAa,IADIiM,EAAT8B,KACR,CAEA,IAAMrG,EAAO,EAAK6F,QAAQC,QAEtBuzE,EAAiB90E,EAAQwgC,cAAgBu0C,aAAiB/0E,GAAWq0E,GAAmBG,iBAAmBH,GAAmBxZ,KAC9Hp/D,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,eAC3CozE,EAAiBT,GAAmBG,kBAGxC,IAAMQ,EAAWh1E,EAAQwgC,YAAc,CAAEy0C,mBAAmB,GAAU,GAEhEC,EAAU,CAACl1E,GACjB,EAAKm1E,oBAAqB,EAC1B,EAAKkB,eAAenB,EAASF,EAAU,WACnC,EAAKG,oBAAqB,EAC1B,EAAKE,qBAAqBP,EAAgB,EAAKhnF,YAGnD,IAAM+L,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOq7E,GAC3B,EAAKlzC,aAAakzC,MAjdH,EAodnB1rD,uBAAyB,SAAA71B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OACAC,EAAuCJ,EAAvCI,QAASm3D,EAA8Bv3D,EAA9Bu3D,aAAcplC,EAAgBnyB,EAAhBmyB,YAC3BhyB,IAAWC,GAEVm3D,GAEL,EAAKoqB,cAAcxvD,IA3dJ,EA2pBnBwwD,sBA3pBmB,sCA2pBK,WAAO/oF,EAAQgQ,GAAf,mBAAAnG,EAAA,qDACdm/E,EAAiB,EACnBC,EAAW,EAAKC,kBAAkBlpF,EAAQmpF,MAErCrjF,EAAI,EAJO,YAIJA,EAAIkjF,IAAmBC,EAJnB,iCAKD,EAAKnsE,aALJ,OAKhB9c,EALgB,OAMhBipF,EAAW,EAAKC,kBAAkBlpF,EAAQmpF,MAN1B,OAI6BrjF,IAJ7B,yDA3pBL,0DAqqBnBojF,kBAAoB,SAAClpF,EAAQgQ,GACzB,QAAKhQ,KACAA,EAAO2R,SAASpM,QAEdvF,EAAO2R,SAASpM,QAAUyK,IAzqBlB,EA4qBnB8M,WA5qBmB,qBA4qBN,4CAAAjT,EAAA,wDACDtD,EAAW,EAAKtG,MAAhBsG,OACAohF,EAAY,EAAKnoF,MAAjBmoF,QAFC,kBAGDj4E,EAHC,EAGDA,UAEHnJ,EALI,qDAMLmJ,EAAUiF,QANL,qDAQLjF,EAAU05E,oBARL,kCASQ,EAAKC,wBATb,oDAYHzjD,EAAgB+hD,GAAWA,EAAQpiF,OAAS,EAAIoiF,EAAQ,GAAG/pF,GAAK,EAChEoS,EAAQ23E,EAAQpiF,OAAS4jF,KAA2C,EAAtBA,KAA0BA,KAE1EnpF,EAAS,KACPspF,EAhBG,UAgBiB/iF,EAhBjB,YAgB2Bq/B,IAChC,EAAK2jD,aAAaxjF,IAAIujF,GAjBjB,iBAkBLtpF,EAAS,EAAKupF,aAAa7jF,IAAlB,UAAyBa,EAAzB,YAAmCq/B,IAlBvC,+BAoBLl2B,EAAUiF,SAAU,EApBf,UAqBU,EAAK60E,WAAWjjF,EAAQq/B,EAAe,EAAG51B,GACpDkP,QAAQ,WACLxP,EAAUiF,SAAU,IAvBvB,QAqBL3U,EArBK,kBA2BL0P,IAAc,EAAKA,UA3Bd,0DA+BJ1P,EAAO2R,SAASpM,QACjB,EAAKgkF,aAAar6E,IAAIo6E,EAAgBtpF,GAG1CoS,KAAaC,SAASrS,EAAO2R,UAC7B3R,EAAO2R,SAASo2D,UAEhB,EAAK0hB,WAAWzpF,EAAO2R,SAAU,SAAAnS,GACzBQ,EAAO2R,SAASpM,OAAS,IACzB,EAAKuiF,qBAAqBhB,GAAmBO,qBAAsB,EAAK9mF,UACxEkb,WAAW,WAAO,IACGiuE,EAAmB,EAAKlqF,MAAjCmoF,QACJ+B,EAAenkF,QAAgC,EAAtB4jF,MACzB,EAAKjpF,SAAS,CACVynF,QAAS+B,EAAevkD,MAAM,EAAyB,EAAtBgkD,SAG1C,MAEFnpF,EAAO2R,SAASpM,QACjB,EAAK8jF,0BAIP/8E,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAClC,EAAK8iC,aAAaz0C,EAAO2R,UAzDhB,kBA2DF3R,GA3DE,0CA5qBM,EA0uBnBqpF,sBA1uBmB,qBA0uBK,gDAAAx/E,EAAA,wDACZtD,EAAW,EAAKtG,MAAhBsG,OACAohF,EAAY,EAAKnoF,MAAjBmoF,QAFY,kBAGZj4E,EAHY,EAGZA,UAEHnJ,EALe,oDAOdojF,EAAet7C,aAAgB9nC,GAPjB,oDAUhBiB,EAAWqB,KAAgBnB,YAAYiiF,GAVvB,kCAYCriD,aAAgB/gC,GAZjB,QAYhBiB,EAZgB,kBAcfA,EAAS8mC,6BAdM,0DAkBpB5+B,EAAU05E,qBAAsB,EAlBZ,UAoBSvpF,KAAgBC,KAAK,CAC9C,QAAS,uBACT6H,eAAgBH,EAAS8mC,+BAtBT,WAoBds7C,EApBc,8DA0BhBl6E,EAAUiF,QA1BM,0DA4BdixB,EAAgB+hD,EAAQpiF,OAAS,GAAKoiF,EAAQ,GAAGnhF,UAAYojF,EAAehsF,GAAK+pF,EAAQ,GAAG/pF,GAAK,EACjGoS,EAA0B,IAAlB41B,EAA2C,EAAtBujD,KAA0BA,KAE7Dz5E,EAAUiF,SAAU,EA/BA,UAgCC,EAAK60E,WAAWI,EAAehsF,GAAIgoC,EAAe,EAAG51B,GACzEkP,QAAQ,WACLxP,EAAUiF,SAAU,IAlCJ,WAgCd3U,EAhCc,OAqChB0P,IAAc,EAAKA,UArCH,0DAyCpB0C,KAAaC,SAASrS,EAAO2R,UAC7B3R,EAAO2R,SAASo2D,UAChB,EAAK0hB,WAAWzpF,EAAO2R,SAAU,SAAAnS,GACzBQ,EAAO2R,SAASpM,OAAS,GACzB,EAAKuiF,qBAAqBhB,GAAmBO,qBAAsB,EAAK9mF,UAG5E,EAAKwoF,sBAAsB/oF,EAAQgQ,KAGjC1D,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAClC,EAAK8iC,aAAaz0C,EAAO2R,UArDL,kBAuDb3R,GAvDa,0CA1uBL,EAoyBnBqU,eApyBmB,qBAoyBF,0CAAAxK,EAAA,wDACLtD,EAAW,EAAKtG,MAAhBsG,OACAohF,EAAY,EAAKnoF,MAAjBmoF,QAFK,kBAGLj4E,EAHK,EAGLA,UAEK/I,KAAUjB,IAAIa,GALd,qDAQTmJ,EAAUiF,QARD,qDAST,EAAKszE,iBATI,0DAWPriD,EAAgB+hD,GAAWA,EAAQpiF,OAAS,EAAIoiF,EAAQA,EAAQpiF,OAAS,GAAG3H,GAAK,EACjFoS,EAAQ23E,EAAQpiF,OAAS4jF,KAA2C,EAAtBA,KAA0BA,KAE9Ez5E,EAAUiF,SAAU,EAdP,UAeQ,EAAK60E,WAAWjjF,EAAQq/B,EAAwB,EAAR51B,EAAWA,GACnEkP,QAAQ,WACLxP,EAAUiF,SAAU,IAjBf,WAeP3U,EAfO,OAoBT0P,IAAc,EAAKA,UApBV,0DAwBbkF,aAAwB5U,EAAQ,EAAKR,MAAMmoF,SAE3Cv1E,KAAaC,SAASrS,EAAO2R,UAC7B3R,EAAO2R,SAASo2D,UAChB,EAAK6f,oBAAqB,EAC1B,EAAKkB,eAAe9oF,EAAO2R,SAAU,GAAI,WACrC,EAAKi2E,oBAAqB,EACtB5nF,EAAO2R,SAASpM,OAAS,GACzBkW,WAAW,WAAO,IACGiuE,EAAmB,EAAKlqF,MAAjCmoF,QACJ+B,EAAenkF,OAA+B,EAAtB4jF,MACxB,EAAKjpF,SAAS,CACVynF,QAAS+B,EAAevkD,MAAMukD,EAAenkF,OAA+B,EAAtB4jF,OACvD,WACC,EAAKrB,qBAAqBhB,GAAmBO,qBAAsB,EAAK9mF,aAGjF,KAIL+L,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAClC,EAAK8iC,aAAaz0C,EAAO2R,UA/CZ,kBAiDN3R,GAjDM,0CApyBE,EAk6BnB6oF,kBAAoB,WAChB,IAAK,EAAKl3E,SAAU,OAAO,KAK3B,IAHA,IAAMA,EAAW,GACXk4E,EAAc,IAAIjkF,IAClBsV,EAAQ4uE,aAAY,EAAK/1E,QAAS,EAAKksC,UACpCn6C,EAAI,EAAGA,EAAIoV,EAAM3V,OAAQO,IAAK,CACnC,IAAMikF,EAAiB,EAAKp4E,SAASuJ,EAAMpV,IAC3C,GAAIikF,EAAgB,CAChB,IADgB,EACAA,EACkC9pF,MAA1CsG,EAFQ,EAERA,OAAQqH,EAFA,EAEAA,UAAWmoB,EAFX,EAEWA,WAC3B,GAAInoB,EAAW,CACX,IAAM7I,EAAG,UAAMwB,EAAN,YAAgBqH,GACzBi8E,EAAY36E,IAAInK,EAAKA,GACrB4M,EAASxC,KAAK,CAAE5I,SAAQqH,mBACrB,GAAImoB,EACP,IAAK,IAAI9mB,EAAI,EAAGA,EAAI8mB,EAAWxwB,OAAQ0J,IAAK,CACxC,IAAMlK,EAAG,UAAMwB,EAAN,YAAgBwvB,EAAW9mB,IACpC46E,EAAY36E,IAAInK,EAAKA,GACrB4M,EAASxC,KAAK,CAAE5I,SAAQqH,UAAWmoB,EAAW9mB,OAM9D,OAAK+6E,aAAU,EAAKC,UAAWJ,GASxB,MARHhqF,KAAgBsf,aAAa,CAAE,QAAS,6BAA8BxN,SAAUk4E,IAGhF,EAAKI,UAAYJ,EAEVl4E,IAj8BI,EAu8BnBu4E,oBAAsB,SAAAC,GAAiB,IAAD,EACP,EAAKlqF,MAAxBsG,EAD0B,EAC1BA,OACR,IAFkC,EAClBwL,QAIM,OALY,gBAI1B0zB,cACR,CAOA,IAAM3J,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,GAAKu1B,GACAA,EAAM0qC,UACP1qC,EAAM0qC,OAAOjhE,QAAU,GAA3B,CAIA,IAFA,IAAMoM,EAAW,GACXuJ,EAAQ4uE,aAAY,EAAK/1E,QAAS,EAAKksC,UACpCn6C,EAAI,EAAGA,EAAIoV,EAAM3V,OAAQO,IAAK,CACnC,IAAMikF,EAAiB,EAAKp4E,SAASuJ,EAAMpV,IAC3C,GAAIikF,EAAgB,CAChB,IADgB,EACAA,EACkC9pF,MAA1CsG,EAFQ,EAERA,OAAQqH,EAFA,EAEAA,UAAWmoB,EAFX,EAEWA,WAC3B,GAAInoB,EACA+D,EAASxC,KAAK,CAAE5I,SAAQqH,mBACrB,GAAImoB,EACP,IAAK,IAAI9mB,EAAI,EAAGA,EAAI8mB,EAAWxwB,OAAQ0J,IACnC0C,EAASxC,KAAK,CAAE5I,SAAQqH,UAAWmoB,EAAW9mB,MAM9D,GAAK0C,KACDA,EAASpM,QAAU,GAAvB,CAMA,IAJA,IAAM6kF,EAAQz4E,EAAS,GAAG/D,UACpBy8E,EAAQ14E,EAASA,EAASpM,OAAS,GAAGqI,UAExChQ,EAAK,EACAkI,EAAI,EAAGA,EAAIg2B,EAAM0qC,OAAOjhE,OAAQO,IAAK,CAC1C,IAAM0gE,EAAS1qC,EAAM0qC,OAAO1gE,GAC5B,GAAI0gE,EAAO5oE,IAAMwsF,GAAS5jB,EAAO5oE,IAAMysF,EAAO,CAC1CzsF,EAAK4oE,EAAO5oE,GACZ,OAIR,IAAKA,EAAI,CACL,IAAM0sF,EAAcxuD,EAAM0qC,OAAO1qC,EAAM0qC,OAAOjhE,OAAS,GAAG3H,GACpD2sF,EAAczuD,EAAM0qC,OAAO,GAAG5oE,GAEhC2sF,EAAcH,EACdxsF,EAAK2sF,EACED,EAAcD,IACrBzsF,EAAK0sF,GAxDqB,IA4D1B7f,EAAiCr4D,KAAjCq4D,cAAeL,EAAkBh4D,KAAlBg4D,cAEvB,GAAIxsE,KAAQwsE,GAAiBA,EAAc7jE,SAAWA,GAAU6jE,EAAcxsE,KAAOA,GAAK,CAGtF,GAAIusF,GAAgB1f,GAAiBA,EAAclkE,SAAWA,GAAUkkE,EAAc7sE,GAAKA,EAEvF,OAIJiC,KAAgBsf,aAAa,CAAE,QAAS,mCAAoC5Y,SAAQqH,UAAWhQ,SA9gCpF,EAohCnB4sF,2BAA6B,WAAO,IAAD,EACsB,EAAKhrF,MAAlDkoF,EADuB,EACvBA,kBAAmBU,EADI,EACJA,aAAcT,EADV,EACUA,QACnCz5E,EAAO,EAAK6F,QAAQC,QAEtB9F,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,MACtD,EAAK6zE,kBAAoBP,IACrB,EAAKjiD,gBAAkBv3B,EAAK+F,WAAa,EAAKwxB,eAAiB,EAAKglD,cAAgB9C,EACpF,EAAKznF,SAAS,CACVwnF,mBAAmB,EACnBU,aAAc,KAEVA,EAAa7iF,QACrB,EAAKrF,SAAS,CACVwnF,mBAAmB,KAK1BA,GACD,EAAKxnF,SAAS,CAAEwnF,mBAAmB,IAI3C,EAAK+C,YAAc9C,GA3iCJ,EA8iCnB7zE,aAAe,WACX,IAAM5F,EAAO,EAAK6F,QAAQC,QASpBm2E,EAAe,EAAK1kD,cAAgBv3B,EAAK+F,UAE/C,EAAK40E,oBAEA,EAAK6B,2BACN,EAAKR,oBAAoBC,GAG7B,EAAKK,6BAEsB,OAAvB,EAAK/kD,gBACD0kD,GAAgBj8E,EAAK+F,WAAaG,OAClC,EAAK0I,cAGJqtE,GAAiBj8E,EAAK+F,UAAY/F,EAAKgG,cAAgBhG,EAAKiG,aAAeC,OAC5E,EAAKC,kBAIb,EAAKoxB,cAAgBv3B,EAAK+F,WA5kCX,EA+kCnB6zE,qBAAuB,SAACP,EAAgBhnF,EAAUuZ,GAAc,IAAD,EAC7B,EAAK7Z,MADwB,KACnDsG,OADmD,EAC3CqH,UACkCrN,GAAY,CAC1D0T,UAAW,EACXE,aAAc,EACdD,aAAc,IALyC,EAEnDD,UAFmD,EAExCE,aAFwC,EAE1BD,aAejC,OAAQqzE,GACJ,KAAKT,GAAmBG,iBACpB,EAAK0D,iBACL,MAEJ,KAAK7D,GAAmBK,kBACpB,EAAKyD,kBACL,MAEJ,KAAK9D,GAAmBI,iBACpB,EAAK2D,iBACL,MAEJ,KAAK/D,GAAmBM,mBACpB,EAAK0D,iBAAiBhxE,GACtB,MAEJ,KAAKgtE,GAAmBO,qBACpB,EAAK0D,mBAAmBxqF,GACxB,MAEJ,KAAKumF,GAAmBxZ,QArnCb,EA2nCnByd,mBAAqB,SAAAxqF,GAAa,IACtB0T,EAA0C1T,EAA1C0T,UAAWE,EAA+B5T,EAA/B4T,aACbjG,GAD4C3N,EAAjB2T,aACpB,EAAKH,QAAQC,SAY1B9F,EAAK+F,UAAYA,GAAa/F,EAAKiG,aAAeA,IAzoCnC,EAmpCnB02E,eAAiB,WAiBb,IAjBoB,IAAD,EACW,EAAK5qF,MAA3BsG,EADW,EACXA,OACAohF,GAFW,EACH/5E,UACI,EAAKpO,MAAjBmoF,SACFz5E,EAAO,EAAK6F,QAAQC,QAatBg3E,GAXSrkF,KAAUjB,IAAIa,IAWZ,GACNT,EAAI,EAAGA,EAAI6hF,EAAQpiF,OAAQO,IAAK,CACrC,IAAImlF,EAAgB,EAAKC,SAASxlF,IAAII,GAClCiV,EAAOg0D,eAAqBkc,GAChC,GAAIlwE,GACIkwE,EAAchrF,MAAM2/E,oBAAqB,CACzC1xE,EAAK+F,UAAY8G,EAAK+pB,UAhBN,EAiBhBkmD,GAAW,EACX,OAaPA,GACD,EAAKL,kBAzrCM,EA6rCnBG,iBAAmB,SAAAhxE,GAOf,IAP2B,IAEnBlM,EAAsBkM,EAAtBlM,UAAWkE,EAAWgI,EAAXhI,OACX61E,EAAY,EAAKnoF,MAAjBmoF,QACFz5E,EAAO,EAAK6F,QAAQC,QAGjBlO,EAAI,EAAGA,EAAI6hF,EAAQpiF,OAAQO,IAAK,CACrC,IAAMmlF,EAAgB,EAAKC,SAASxlF,IAAII,GAClC8rD,EAAOmd,eAAqBkc,GAClC,GAAIr5B,GACIq5B,EAAchrF,MAAM2N,YAAcA,EAAW,CAC7CM,EAAK+F,UAAY29C,EAAK9sB,UAAYhzB,GACvB,EACX,SA3sCG,EAitCnB84E,gBAAkB,WAed,IAfqB,IAAD,EACU,EAAK3qF,MAA3BsG,EADY,EACZA,OAAQqH,EADI,EACJA,UACR+5E,EAAY,EAAKnoF,MAAjBmoF,QACFz5E,EAAO,EAAK6F,QAAQC,QAWtBg3E,GAAW,EACNllF,EAAI,EAAGA,EAAI6hF,EAAQpiF,OAAQO,IAAK,CACrC,IAAMmlF,EAAgB,EAAKC,SAASxlF,IAAII,GAClC8rD,EAAOmd,eAAqBkc,GAClC,GAAIr5B,IACIq5B,EAAchrF,MAAM2N,YAAcA,GAC/Bq9E,EAAchrF,MAAM81B,aAAqE,IAAvDk1D,EAAchrF,MAAM81B,WAAWuD,QAAQ1rB,IAAmB,CAC3FM,EAAKgG,aAAe09C,EAAK19C,aAEzBhG,EAAK+F,UAAY29C,EAAK9sB,UAGtB52B,EAAK+F,UAAY29C,EAAK9sB,UAAY52B,EAAKgG,aAAe,EAAM09C,EAAK19C,aAAe,EAEpF82E,GAAW,EACX,OAKPA,GACD,EAAKrK,iBAAiBp6E,EAAQA,EAAQqH,EAAWA,IApvCtC,EAowCnB+8E,eAAiB,WAAO,IAAD,EACW,EAAK1qF,MAC7BiO,GAFa,EACX3H,OADW,EACHqH,UACH,EAAKmG,QAAQC,SAUJ9F,EAAKiG,aAAejG,EAAKgG,eACzBhG,EAAK+F,YACvB/F,EAAK+F,UAAY/F,EAAKiG,aAAejG,EAAKgG,eAlxC/B,EAsyCnBs1E,WAAa,SAACjjF,EAAQq/B,EAAe9zB,EAAQ9B,GAAW,IAC5C+B,EAAW,EAAK9R,MAAhB8R,OAER,GAAIA,EAAQ,CACR,GAAsB,IAAlB6zB,GAAkC,IAAX9zB,GAAgB9B,IAAUm5E,KAAqB,CACtE,IAAMrtD,EAAQ1pB,KAAa2pB,SAASx1B,GACpC,GAAIu1B,GAASA,EAAM0qC,QAAU1qC,EAAM0qC,OAAOjhE,OAAS,EAC/C,OAAO8K,QAAQmS,QAAQ,CACnB,QAAS,WACT7Q,SAAS,YAAKmqB,EAAM0qC,UAKhC,OAAO3mE,KAAgBC,KAAK,CACxB,QAAS,qBACT0G,QAASD,EACTsL,gBAAiB+zB,EACjB9zB,SACA9B,QACA+B,SACAH,eAAgB,KAChB7B,MAAO,OAIf,OAAOlQ,KAAgBC,KAAK,CACxB,QAAS,iBACT0G,QAASD,EACTsL,gBAAiB+zB,EACjB9zB,SACA9B,WAr0CW,EAy0CnBm7E,cAz0CmB,qBAy0CH,oCAAAthF,EAAA,uDACkB,EAAK5J,MAA3BsG,EADI,EACJA,OAAQqH,EADJ,EACIA,UACR+5E,EAAY,EAAKnoF,MAAjBmoF,QAEFrgF,EAAOX,KAAUjB,IAAIa,GAEvBohF,EAAQh3E,KAAK,SAAAtS,GAAC,OAAIA,EAAEmI,UAAYD,GAAUlI,EAAET,KAAOgQ,IAAcA,GAAatG,GAAQA,EAAKuW,aAAajgB,KAAOS,EAAET,KACjH,EAAK+sF,iBAEL,EAAKhK,iBAAiBp6E,EAAQA,EAAQqH,EAAWA,GATzC,yCAz0CG,EAs1CnBw9E,oBAAsB,SAAA9pF,GAClBA,EAAMwI,iBACNxI,EAAMyI,kBAFqB,IAInBxD,EAAW,EAAKtG,MAAhBsG,OACHkrD,aAAqBlrD,IAErBjF,EAAMugF,cACNvgF,EAAMugF,aAAawJ,MAAM16E,KAAK,SAAAtS,GAAC,MAAU,UAANA,KAExCwB,KAAgBsf,aAAa,CACzB,QAAS,uBACTyP,UAAU,EACVizD,aAAcvgF,EAAMugF,gBAn2CT,EAu2CnByJ,sBAAwB,SAAAhqF,GAAU,IACtB8mF,EAAiB,EAAK5oF,MAAtB4oF,aAER,GAAIA,EAAa7iF,OAAS,EAAG,CACzB,IAAMgmF,EAAYnD,EAAaoD,MAC/B,GAAID,EAAW,CAAC,IACJhlF,EAAsBglF,EAAtBhlF,OAAQqH,EAAc29E,EAAd39E,UACZrH,IAAW,EAAKtG,MAAMsG,QACtBg5B,aAASh5B,EAAQqH,SAIzB,EAAKu9E,iBAh3CT,EAAK5B,aAAe,IAAI3jF,IACxB,EAAK8J,UAAY,CACb6E,KAAM,IAAI5E,KACVgF,SAAS,EACT6H,WAAW,EACX4sE,qBAAqB,GAGzB,EAAK5pF,MAAQ,CACTmJ,WAAY,EACZkqC,cAAe,KACfw1C,cAAc,EACdV,QAAS,GACTx3C,cAAc,EACdu4C,iBAAiB,EACjB+C,mBAAoB,EACpB/D,mBAAmB,EACnBU,aAAc,IAGlB,EAAKr0E,QAAUjT,IAAMoU,YACrB,EAAK+qC,SAAWn/C,IAAMoU,YACtB,EAAKw2E,oBAAsB5qF,IAAMoU,YAEjC,EAAKgzE,gBAAkB,GACvB,EAAKgD,SAAW,IAAItlF,IAEpB,EAAKijF,kBAAoBlqD,aAAS,EAAKkqD,kBAAmB,KAC1D,EAAKqB,oBAAsBvrD,aAAS,EAAKurD,oBAAqB,KA/B/C,E,8EAkCD,IACN3jF,EAAWpH,KAAKc,MAAhBsG,OACAohF,EAAYxoF,KAAKK,MAAjBmoF,QAEFrgF,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,EALL,IAOLuW,EAAiBvW,EAAjBuW,aACR,OAAKA,GAEE8pE,EAAQpiF,OAAS,GAAKoiF,EAAQA,EAAQpiF,OAAS,GAAG3H,IAAMigB,EAAajgB,K,8CAoBxDyC,EAAWC,GAC/B,IAAM4N,EAAO/O,KAAK4U,QAAQC,QAGpBzT,EAAW,CACb0T,UAH8C/F,EAA1C+F,UAIJE,aAJ8CjG,EAA/BiG,aAKfD,aAL8ChG,EAAjBgG,cASjC,OADA/U,KAAKoB,SAAWA,EACTA,I,yCAGQF,EAAWC,EAAWC,GAAW,IAAD,EACjBpB,KAAKc,MAA3BsG,EADuC,EACvCA,OAAQqH,EAD+B,EAC/BA,UACczO,KAAKK,MAA3BkoF,kBAEKvoF,KAAK4U,QAAQC,QAWtB3T,EAAUkG,SAAWA,GAAUlG,EAAUuN,YAAcA,GACvDzO,KAAKwhF,iBAAiBp6E,EAAQlG,EAAUkG,OAAQqH,EAAWvN,EAAUuN,a,4CAIvDnH,EAAWC,GAAY,IAAD,EACVvH,KAAKc,MAA3BsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UADwB,EAEsDzO,KAAKK,MAA3F6oF,EAFgC,EAEhCA,aAAcV,EAFkB,EAElBA,QAAS/4D,EAFS,EAETA,SAAUuhB,EAFD,EAECA,aAAcu4C,EAFf,EAEeA,gBAAiBhB,EAFhC,EAEgCA,kBAExE,OAAIjhF,EAAUF,SAAWA,IAKrBE,EAAUmH,YAAcA,IAKxBlH,EAAUghF,oBAAsBA,IAKhChhF,EAAU2hF,eAAiBA,KAK1BsD,aAAcjlF,EAAUihF,QAASA,KAKlCjhF,EAAUkoB,WAAaA,IAKvBloB,EAAUypC,eAAiBA,GAK3BzpC,EAAUgiF,kBAAoBA,U,0CASjB,IAAD,EACcvpF,KAAKc,MAA3BsG,EADQ,EACRA,OAAQqH,EADA,EACAA,UAChBzO,KAAKwhF,iBAAiBp6E,EAAQ,KAAMqH,EAAW,MAE/C4K,IAAS5R,GAAG,0BAA2BzH,KAAKg/D,2BAC5C3lD,IAAS5R,GAAG,2BAA4BzH,KAAKwlF,4BAC7Ch+E,KAAUC,GAAG,2BAA4BzH,KAAK+wC,4BAC9C99B,KAAaxL,GAAG,6BAA8BzH,KAAKspF,yBACnDr2E,KAAaxL,GAAG,8BAA+BzH,KAAKspF,yBACpDr2E,KAAaxL,GAAG,wBAAyBzH,KAAKgpF,yBAC9C/1E,KAAaxL,GAAG,6BAA8BzH,KAAK6oF,8BACnD51E,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,oBACzC9pB,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,wBAC7CxpB,KAAaxL,GAAG,wBAAyBzH,KAAKqqE,yBAC9Cp3D,KAAaxL,GAAG,6BAA8BzH,KAAKwpF,8BACnDv2E,KAAaxL,GAAG,0BAA2BzH,KAAKwpF,8BAChD34D,KAAYppB,GAAG,0BAA2BzH,KAAKkwE,2BAC/Cr/C,KAAYppB,GAAG,0BAA2BzH,KAAKmpF,2BAC/Ct4D,KAAYppB,GAAG,uBAAwBzH,KAAKqpF,0B,6CAI5ChwE,IAAS3R,IAAI,0BAA2B1H,KAAKg/D,2BAC7C3lD,IAAS3R,IAAI,2BAA4B1H,KAAKwlF,4BAC9Ch+E,KAAUE,IAAI,2BAA4B1H,KAAK+wC,4BAC/C99B,KAAavL,IAAI,6BAA8B1H,KAAKspF,yBACpDr2E,KAAavL,IAAI,8BAA+B1H,KAAKspF,yBACrDr2E,KAAavL,IAAI,wBAAyB1H,KAAKgpF,yBAC/C/1E,KAAavL,IAAI,6BAA8B1H,KAAK6oF,8BACpD51E,KAAavL,IAAI,mBAAoB1H,KAAK+8B,oBAC1C9pB,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,wBAC9CxpB,KAAavL,IAAI,wBAAyB1H,KAAKqqE,yBAC/Cp3D,KAAavL,IAAI,6BAA8B1H,KAAKwpF,8BACpDv2E,KAAavL,IAAI,0BAA2B1H,KAAKwpF,8BACjD34D,KAAYnpB,IAAI,0BAA2B1H,KAAKkwE,2BAChDr/C,KAAYnpB,IAAI,0BAA2B1H,KAAKmpF,2BAChDt4D,KAAYnpB,IAAI,uBAAwB1H,KAAKqpF,0B,+EAsS1BjiF,EAAQ2sC,EAAgBtlC,EAAW4qC,G,oHAChDlxC,EAAOX,KAAUjB,IAAIa,GACrBqlF,EAAejlF,KAAUjB,IAAIwtC,GAEnC/zC,KAAKuQ,UAAY,CACb6E,KAAM,IAAI5E,KACVgF,SAAS,EACT6H,WAAW,EACX4sE,qBAAqB,GAEjB15E,EAAcvQ,KAAduQ,UAERvQ,KAAKsmC,cAAgB,KACrBtmC,KAAK+oF,gBAAkB,GAEjB2D,EAAiB,MAEnBvkF,E,wBACI4rC,IAAmB3sC,GAAWpH,KAAKc,MAAM8R,QACzClS,KAAgBC,KAAK,CACjB,QAAS,WACT0G,QAASD,IAIXisC,GAAU5kC,GAAatG,EAAKiqC,aAAe,EAC7C3L,EAAgB,EAChB4M,GAAUlrC,EAAKwkF,2BACflmD,EAAgBt+B,EAAKwkF,2BACdl+E,EACPg4B,EAAgBh4B,EACTi+E,IACPjmD,EAAgBimD,EAAej+E,WAE7BkE,EAAS0gC,GAAU5kC,GAAai+E,GAAkB,EAAI1C,KAAsB,EAC5En5E,EAAQwiC,GAAU5kC,GAAai+E,EAAiB,EAAI1C,KAAsBA,KAEhFz5E,EAAUiF,SAAU,E,UACCxV,KAAKqqF,WAAWliF,EAAK1J,GAAIgoC,EAAe9zB,EAAQ9B,GACpEO,MAAM,SAAAiD,GACH,MAAO,CACH,QAAS,WACT7B,SAAU,GACV8C,YAAa,KAElByK,QAAQ,WACPxP,EAAUiF,SAAU,I,WARlB3U,E,OAWF0P,IAAcvQ,KAAKuQ,U,sDAIvB0C,KAAaC,SAASrS,EAAO2R,UAC7B3R,EAAO2R,SAASo2D,UAEZ0jB,EAAqBtsF,KAAKK,MAAMisF,mBAChCllF,IAAW2sC,E,oBACXu4C,EAAqBvgE,OAAOmyD,YACxB/1E,GAAQA,EAAKiqC,aAAe,G,iBACnBzrC,EAAI9F,EAAO2R,SAASpM,OAAS,E,aAAGO,GAAK,G,oBAClClI,EAAOoC,EAAO2R,SAAS7L,GAAvBlI,MAEHoC,EAAO2R,SAAS7L,GAAGmtC,aACpBr1C,EAAK0J,EAAKwkF,4BACVluF,EAAK6tF,G,iBAELA,EAAqB7tF,E,4DAPoBkI,I,wBAarD2lF,EAAqBA,IAAuBvgE,OAAOmyD,UAAY,EAAIoO,E,QAGnElE,EAAiBT,GAAmBG,iBACpCr5E,EACA25E,EAAiBT,GAAmBK,kBAC7B30C,GAAUi5C,EACjBlE,EAAiBT,GAAmBI,iBAC7B2E,IACPtE,EAAiBT,GAAmBM,oBAGxCjoF,KAAKurF,2BAA4B,EACjCvrF,KAAK0f,QAAQ4sE,EAAoBzrF,EAAO2R,SAAU,WAC9C,EAAKm2E,qBAAqBP,EAAgB,EAAKhnF,SAAUsrF,GACrDj+E,GACAm+E,aAAiBxlF,EAAQqH,GAE7B/P,sBAAsB,WAClB,EAAK6sF,2BAA4B,IAGrC,EAAK3B,sBAAsB/oF,EAAQgQ,KAIjC1D,EAAQC,KAAUC,WACxBy5B,YAAoB35B,EAAOtM,EAAO2R,UAClCxS,KAAKs1C,aAAaz0C,EAAO2R,UAEzBZ,YAAiBzE,EAAO,CAAC/F,IACzBylF,YAAiB1/E,EAAO/F,GAEpB2sC,IAAmB3sC,GAAWpH,KAAKc,MAAM8R,QAEzCk6E,aAAa1lF,G,wBAGjBmJ,EAAUiF,SAAU,EACpBxV,KAAK0f,QAAQ,EAAG,GAAI,WAChBnP,EAAUiF,SAAU,I,QAIxBu+B,IAAmB3sC,GAAWpH,KAAKc,MAAM8R,QACrC65E,IACA/rF,KAAgBC,KAAK,CACjB,QAAS,YACT0G,QAAS0sC,IAGPg5C,EAAgBC,aAAiBhtF,KAAKoB,SAAUpB,KAAK8gD,WAErDxtC,EAAUtT,KAAKwS,SAASu6E,EAAcxyE,UAC9B,EACoBjH,EAAQxS,MAA9BsG,EADC,EACDA,OAAQqH,EADP,EACOA,UAEhBjH,KAAU6T,kBAAkB04B,EAAgB,CAAE3sC,SAAQqH,YAAWkE,OAAQo6E,EAAcp6E,W,+IAM1FH,GACT,GAAKA,GACmB,IAApBA,EAASpM,QACRoM,EAAS,GAAGnL,QAAjB,CAEA,IAAM4lF,EAAa,WACfvsF,KAAgBC,KAAK,CACjB,QAAS,eACT0G,QAASmL,EAAS,GAAGnL,QACrB+xB,YAAa5mB,EAAS5C,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,QAIrCqb,OAAOozE,SACPD,IAEAjtF,KAAK+oF,gBAAgB/4E,KAAKi9E,M,gDAIRz6E,GAEtB,IAAK,IAAI7L,EAAI6L,EAASpM,OAAS,EAAGO,GAAK,EAAGA,IAAK,CAC3C,IAAI2M,EAAUd,EAAS7L,GACvB,GAAI2M,GAAWA,EAAQ+G,QACnB,OAAQ/G,EAAQ+G,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACDra,KAAKmtF,gBAAgB75E,GADpB,mBACZ7U,EADY,KAEjB,GAFiB,KAGHwlC,aAAa3wB,EAAQ+G,QAAQxN,MAAMkrB,OACpClV,MACLzV,KAAUggF,oBAAoB3uF,EAAI6U,GAG1C,MAEJ,IAAK,iBAAmB,IAAD,EACHtT,KAAKqtF,kBAAkB/5E,GADpB,mBACd7U,EADc,KAEnB,GAFmB,KAGL6U,EAAQ+G,QAAQ5Z,QAAQA,QACzBoiB,MACLzV,KAAUggF,oBAAoB3uF,EAAI6U,O,8BAyMtDg5E,EAAoB9D,EAASjpE,GACjCvf,KAAKe,SAAS,CAAEurF,qBAAoB9D,WAAWjpE,K,qCAGpC+tE,EAAch6E,EAASiM,GAClC,GAAKjM,EAAL,CAKA,IAAIk1E,EAAO,YAAOxoF,KAAKK,MAAMmoF,SACvBjuE,EAAQiuE,EAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAO6uF,KAC/B,IAAX/yE,EACAiuE,EAAQ92E,OAAO6I,EAAO,EAAGjH,GAEzBk1E,EAAUxoF,KAAKK,MAAMmoF,QAGzBxoF,KAAKe,SAAS,CAAEynF,WAAWjpE,QAZnBA,GAAUA,M,6BAefipE,EAASF,EAAU/oE,GACC,IAAnBipE,EAAQpiF,OAKZpG,KAAKe,SAAS,CACVynF,QAASA,EAAQjzE,OAAOvV,KAAKK,MAAMmoF,SAASv4E,KAAK,SAACvF,EAAGwF,GACjD,OAAIxF,EAAEjM,GAAKyR,EAAEzR,IACD,EACDiM,EAAEjM,GAAKyR,EAAEzR,GACT,EAGJ,KAEZ8gB,GAdKA,GAAUA,M,iCAiBXipE,EAASjpE,GACO,IAAnBipE,EAAQpiF,OAKZpG,KAAKe,SAAS,CACVynF,QAASA,EAAQjzE,OAAOvV,KAAKK,MAAMmoF,UACpCjpE,GANCA,GAAYA,M,qCASLipE,EAASF,EAAU/oE,GACP,IAAnBipE,EAAQpiF,OAKZpG,KAAKe,S,uVAAL,EACIynF,QAASxoF,KAAKK,MAAMmoF,QAAQjzE,OAAOizE,IAChCF,GACJ/oE,GAPKA,GAAUA,M,oCAUR6Z,EAAa7Z,GAAW,IAC1BipE,EAAYxoF,KAAKK,MAAjBmoF,QACR,GAAuB,IAAnBA,EAAQpiF,OAAZ,CAKA,IAAMwJ,EAAM,IAAInJ,IAAI2yB,EAAYxpB,IAAI,SAAA1Q,GAAC,MAAI,CAACA,EAAGA,MAC7Cc,KAAKe,SAAS,CAAEynF,QAASA,EAAQ51E,OAAO,SAAA1T,GAAC,OAAK0Q,EAAIhJ,IAAI1H,EAAET,OAAQ8gB,QALxDA,GAAUA,M,uCA6dLjM,EAASm4D,EAAa8hB,EAASC,GAC5C,IAAKl6E,EAAS,OAAO,EADsC,IAGnDjM,EAA8DiM,EAA9DjM,QAAS+N,EAAqD9B,EAArD8B,KAAM0+B,EAA+CxgC,EAA/CwgC,YAAangC,EAAkCL,EAAlCK,OAAiB+sE,GAAiBptE,EAA1B+G,QAA0B/G,EAAjBotE,cAErD,QAAI6M,MAIAC,MAIAvyD,aAAc5zB,IAKdokE,IACC4c,aAAiB5c,IACmB,mBAAjCA,EAAYpxD,QAAQ,UACa,qBAAjCoxD,EAAYpxD,QAAQ,WACnBozE,aAAa95E,EAAQ83D,EAAY93D,SAClCmgC,IAAgB23B,EAAY33B,aAC3B1pC,cAAS/C,KAAaqmF,aAAkBhN,EAAcjV,EAAYiV,eACnEtrE,EAAOq2D,EAAYr2D,KAAOu4E,U,sCAItBr6E,EAASm4D,EAAa8hB,GAClC,GAAIA,EACA,OAAO,EAGX,IAAMn4E,EAAO,IAAI5E,KAAoB,IAAf8C,EAAQ8B,MACxBw4E,EAAWniB,EAAc,IAAIj7D,KAAwB,IAAnBi7D,EAAYr2D,MAAeA,EAEnE,OACIA,EAAKylE,gBAAkB+S,EAAS/S,eAChCzlE,EAAKy4E,aAAeD,EAASC,YAC7Bz4E,EAAKy/D,YAAc+Y,EAAS/Y,Y,+BAQ1B,IAAD,SACsB70E,KAAKc,MAAxBsG,EADH,EACGA,OAAQwL,EADX,EACWA,OADX,EAEqF5S,KAAKK,MAAvFmoF,EAFH,EAEGA,QAAS8D,EAFZ,EAEYA,mBAAoBt7C,EAFhC,EAEgCA,aAAcu4C,EAF9C,EAE8CA,gBAAiBhB,EAF/D,EAE+DA,kBAMpE,GAFAvoF,KAAK+rF,SAAS7qE,QAEV8vB,EACAhxC,KAAKwS,SAAW,SACb,CACHxS,KAAKwS,SAAW,GAChB,IAFG,kBAGC,IAAMc,EAAUk1E,EAAQ7hF,GAChBU,EAAuDiM,EAAvDjM,QAASymF,EAA8Cx6E,EAA9Cw6E,eAAgB50D,EAA8B5lB,EAA9B4lB,IAAK7e,EAAyB/G,EAAzB+G,QAClC0zE,GAD2Dz6E,EAAhBwgC,aAC9B,GACjB,GAAuB,MAAnBg6C,GAA2B50D,GAA6B,iBAArB7e,EAAQ,UAAoD,iBAArBA,EAAQ,UA8C/E,GAAuB,MAAnByzE,IAA2B50D,IAA6B,oBAArB7e,EAAQ,UAAuD,iBAArBA,EAAQ,UAA8B,CAE1H,IADA,IAAM2zE,EAAQ,CAAC16E,GACNxD,EAAInJ,EAAI,EAAGmJ,EAAInJ,EAAIsnF,MAAwBn+E,EAAI04E,EAAQpiF,QACxDoiF,EAAQ14E,GAAGg+E,iBAAmBA,EADkCh+E,IAEhEk+E,EAAMh+E,KAAKw4E,EAAQ14E,IAM3B,GAAIk+E,EAAM5nF,OAAS,EAAG,CAClB,IAAMlH,EAAIoU,EACJm4D,EAAc9kE,EAAI,EAAI6hF,EAAQ7hF,EAAI,GAAK,KACvCunF,EAAcvnF,EAAIqnF,EAAM5nF,OAASoiF,EAAQpiF,OAASoiF,EAAQ7hF,EAAIqnF,EAAM5nF,QAAU,KAE9EikD,EAAW,EAAK8jC,gBAAgBjvF,EAAGusE,EAAmB,IAAN9kE,GAEhD6mF,EAAgBlB,IAAuBptF,EAAET,GACzC2vF,IAAoBF,GAAc5B,IAAuB4B,EAAYzvF,GACrEyL,EAAY,EAAKmkF,iBAAiBnvF,EAAGusE,EAAmB,IAAN9kE,EAAS6mF,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAahvF,GAAG,EAAOkvF,GAE7D5N,GAAY0N,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY7zE,QAAQ,UACa,qBAAjC6zE,EAAY7zE,QAAQ,WACnBozE,aAAavuF,EAAEyU,OAAQu6E,EAAYv6E,SACnCvJ,cAASlL,EAAEmI,WAAaqmF,aAAkBxuF,EAAEwhF,aAAcwN,EAAYxN,eACvExhF,EAAE40C,cAAgBo6C,EAAYp6C,aAC9Bw6C,EAEP,EAAK97E,SAASxC,KACV,kBAAC,GAAD,CACIpK,IAAG,kBAAayB,EAAb,2BAAuCymF,EAAvC,iBAA8DzjC,EAA9D,kBAAgFngD,EAAhF,iBAAkGs2E,GACrGhqE,IAAK,SAAA/E,GAAE,OAAIu8E,EAAMruF,QAAQ,SAACT,EAAGqb,GAAY,EAAKwxE,SAASh8E,IAAIpJ,EAAI4T,EAAO9I,MACtErK,OAAQC,EACRuvB,WAAYo3D,EAAMp+E,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,KAC7ByL,UAAWA,EACXs2E,SAAUA,EACVC,oBAAqBuN,EAAMp+E,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,KAAI+S,KAAK,SAAAtS,GAAC,OAAIA,EAAET,KAAO6tF,IAC7DjiC,SAAUA,EACV7oD,OAAQoR,EAAS,SAAW,UAEpCjM,GAAMqnF,EAAM5nF,OAAS,EACrB2nF,GAAa,QA1F+F,CAEhH,IADA,IAAMC,EAAQ,CAAC16E,GACNxD,EAAInJ,EAAI,EAAGmJ,EAAInJ,EAAIsnF,MAAwBn+E,EAAI04E,EAAQpiF,QACxDoiF,EAAQ14E,GAAGg+E,iBAAmBA,EADkCh+E,IAEhEk+E,EAAMh+E,KAAKw4E,EAAQ14E,IAM3B,GAAIk+E,EAAM5nF,OAAS,EAAG,CAClB,IAAMlH,EAAIoU,EACJm4D,EAAc9kE,EAAI,EAAI6hF,EAAQ7hF,EAAI,GAAK,KACvCunF,EAAcvnF,EAAIqnF,EAAM5nF,OAASoiF,EAAQpiF,OAASoiF,EAAQ7hF,EAAIqnF,EAAM5nF,QAAU,KAE9EikD,EAAW,EAAK8jC,gBAAgBjvF,EAAGusE,EAAmB,IAAN9kE,GAEhD6mF,EAAgBlB,IAAuBptF,EAAET,GACzC2vF,IAAoBF,GAAc5B,IAAuB4B,EAAYzvF,GACrEyL,EAAY,EAAKmkF,iBAAiBnvF,EAAGusE,EAAmB,IAAN9kE,EAAS6mF,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAahvF,GAAG,EAAOkvF,GAE7D5N,GAAY0N,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY7zE,QAAQ,UACa,qBAAjC6zE,EAAY7zE,QAAQ,WACnBozE,aAAavuF,EAAEyU,OAAQu6E,EAAYv6E,SACnCvJ,cAASlL,EAAEmI,WAAaqmF,aAAkBxuF,EAAEwhF,aAAcwN,EAAYxN,eACvExhF,EAAE40C,cAAgBo6C,EAAYp6C,aAC9Bw6C,EAEP,EAAK97E,SAASxC,KACV,kBAAC,GAAD,CACIpK,IAAG,kBAAayB,EAAb,2BAAuCymF,EAAvC,iBAA8DzjC,EAA9D,kBAAgFngD,EAAhF,iBAAkGs2E,GACrGhqE,IAAK,SAAA/E,GAAE,OAAIu8E,EAAMruF,QAAQ,SAACT,EAAGqb,GAAY,EAAKwxE,SAASh8E,IAAIpJ,EAAI4T,EAAO9I,MACtErK,OAAQC,EACRuvB,WAAYo3D,EAAMp+E,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,KAC7ByL,UAAWA,EACXs2E,SAAUA,EACVC,oBAAqBuN,EAAMp+E,IAAI,SAAA1Q,GAAC,OAAIA,EAAET,KAAI+S,KAAK,SAAAtS,GAAC,OAAIA,EAAET,KAAO6tF,IAC7DjiC,SAAUA,EACV7oD,OAAQoR,EAAS,SAAW,UAEpCjM,GAAMqnF,EAAM5nF,OAAS,EACrB2nF,GAAa,GAkDrB,IAAKA,EAAY,CAOb,IAAM7uF,EAAIoU,EACJm4D,EAAc9kE,EAAI,EAAI6hF,EAAQ7hF,EAAI,GAAK,KACvCunF,EAAcvnF,EAAI6hF,EAAQpiF,OAAS,EAAIoiF,EAAQ7hF,EAAI,GAAK,KAExD0jD,EAAW,EAAK8jC,gBAAgBjvF,EAAGusE,EAAmB,IAAN9kE,GAElDg6E,EAAI,KACR,GAAI0H,aAAiBnpF,GACjByhF,EACI,kBAAC,GAAD,CACI/6E,IAAG,kBAAa1G,EAAEmI,QAAf,eAA6BnI,EAAET,GAA/B,iBAA0C4rD,GAC7C7zC,IAAK,SAAA/E,GAAE,OAAI,EAAKs6E,SAASh8E,IAAIpJ,EAAG8K,IAChCrK,OAAQlI,EAAEmI,QACVoH,UAAWvP,EAAET,GACbgiF,oBAAqB6L,IAAuBptF,EAAET,GAC9C4rD,SAAUA,EACV7oD,OAAQoR,EAAS,SAAW,aAGjC,CACH,IAAM46E,EAAgBlB,IAAuBptF,EAAET,GACzC2vF,EAAoBF,GAAe5B,IAAuB4B,EAAYzvF,GACtEyL,EAAY,EAAKmkF,iBAAiBnvF,EAAGusE,EAAmB,IAAN9kE,EAAS6mF,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAahvF,GAAG,EAAOkvF,GAE7D5N,GAAY0N,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY7zE,QAAQ,UACa,qBAAjC6zE,EAAY7zE,QAAQ,WACnBozE,aAAavuF,EAAEyU,OAAQu6E,EAAYv6E,SACpCvJ,cAASlL,EAAEmI,WAAaqmF,aAAkBxuF,EAAEwhF,aAAcwN,EAAYxN,eACtExhF,EAAE40C,cAAgBo6C,EAAYp6C,aAC9Bw6C,EAEP3N,EACI,kBAAC,GAAD,CACI/6E,IAAG,kBAAa1G,EAAEmI,QAAf,eAA6BnI,EAAET,GAA/B,iBAA0C4rD,EAA1C,kBAA4DngD,EAA5D,iBAA8Es2E,GACjFhqE,IAAK,SAAA/E,GAAE,OAAI,EAAKs6E,SAASh8E,IAAIpJ,EAAG8K,IAChCrK,OAAQlI,EAAEmI,QACVoH,UAAWvP,EAAET,GACby0C,aAAch0C,EAAE8zC,cAChB9oC,UAAWA,EACXs2E,SAAUA,EACVC,oBAAqB6L,IAAuBptF,EAAET,GAC9C4rD,SAAUA,EACV7oD,OAAQoR,EAAS,SAAW,SAKxC,EAAKJ,SAASxC,KAAK2wE,GA7JxB,KAEMh6E,EAAI,EAAGA,EAAI6hF,EAAQpiF,OAAQO,IAAM,EAAjCA,GAgKb,OACI,yBACItF,UAAWoE,IAAW,gBAAiB,CACnC,iCAAkC8jF,IAEtC3G,YAAa5iF,KAAKisF,qBAClB,yBAAKz1E,IAAKxW,KAAK4U,QAASvT,UAAU,wBAAwBoV,SAAUzW,KAAK2U,cACrE,yBAAKtT,UAAU,sBACf,yBAAKmV,IAAKxW,KAAK8gD,SAAUz/C,UAAU,uBAC9BrB,KAAKwS,WAGd,kBAAC,GAAD,CAAWpL,OAAQA,IACnB,kBAAC,GAAD,MACCmhF,GACG,kBAAC,GAAD,CAAkB/xE,IAAKxW,KAAKusF,oBAAqBhnF,QAASvF,KAAKmsF,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,U,gDAtjDoBrrF,EAAOT,GACnC,OAAIS,EAAMsG,SAAW/G,EAAMmJ,YAAc1I,EAAM2N,YAAcpO,EAAMqzC,cACxD,CACHlqC,WAAY1I,EAAMsG,OAClBssC,cAAe5yC,EAAM2N,UACrBuiC,cAAc,EACdu4C,iBAAiB,EACjB+C,mBAAoBxrF,EAAMsG,SAAW/G,EAAMmJ,WAAa,EAAInJ,EAAMisF,mBAClE/D,kBACIznF,EAAMsG,SAAW/G,EAAMmJ,aAAenJ,EAAMkoF,mBAAqBloF,EAAM4oF,aAAa7iF,OAAS,GACjG6iF,aAAcnoF,EAAMsG,SAAW/G,EAAMmJ,WAAa,GAAKnJ,EAAM4oF,cAI9D,S,GA9DYtnF,IAAMC,WC5B3B2sF,I,mBACF,WAAYztF,GAAQ,IAAD,uBACf,4CAAMA,KAsCVg8B,uBAAyB,SAAA71B,GAAW,IACxBG,EAAW,EAAKtG,MAAhBsG,OAER,GAAIA,IADgBH,EAAZI,QACR,CAEA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GAC9BonF,EAAc7xD,GAASA,EAAM0qC,OAAOjhE,OAASu2B,EAAM0qC,OAAOjhE,OAAS,EAEzE,EAAKrF,SAAS,CACVytF,kBAhDW,EAoDnBnkB,wBAA0B,SAAApjE,GAAW,IACzBG,EAAW,EAAKtG,MAAhBsG,OAER,GAAIA,IADgBH,EAAZI,QACR,CAEA,IAAMs1B,EAAQ1pB,KAAa2pB,SAASx1B,GAC9BonF,EAAc7xD,GAASA,EAAM0qC,OAAOjhE,OAASu2B,EAAM0qC,OAAOjhE,OAAS,EAEzE,EAAKrF,SAAS,CACVytF,kBA7DW,EAiEnBxiB,8BAAgC,SAAA/kE,GAC5B,EAAKlG,SAAS,CACV0tF,cAAex7E,KAAao8C,cAAc1hD,QAnE/B,EAuEnBtK,YAAc,WACgB,EAAKhD,MAAvBouF,cACY,GAChBx2D,eAGJmhC,gBA1EA,IAAMz8B,EAAQ1pB,KAAa2pB,SAAS97B,EAAMsG,QAH3B,OAKf,EAAK/G,MAAQ,CACTouF,cAAex7E,KAAao8C,cAAc1hD,KAC1C6gF,YAAa7xD,GAASA,EAAM0qC,OAAOjhE,OAASu2B,EAAM0qC,OAAOjhE,OAAS,GAPvD,E,mFAWGkB,EAAWC,EAAWmU,GAAc,IAAD,EACd1b,KAAKK,MAApCouF,EAD6C,EAC7CA,cAD6C,EAC9BD,YAEvB,OAAIjnF,EAAUknF,gBAAkBA,IAI5BlnF,EAAUinF,aACH,K,0CAOXv7E,KAAaxL,GAAG,6BAA8BzH,KAAKgsE,+BACnD/4D,KAAaxL,GAAG,8BAA+BzH,KAAKgsE,+BACpD/4D,KAAaxL,GAAG,wBAAyBzH,KAAKqqE,yBAC9Cp3D,KAAaxL,GAAG,uBAAwBzH,KAAK88B,0B,6CAI7C7pB,KAAavL,IAAI,6BAA8B1H,KAAKgsE,+BACpD/4D,KAAavL,IAAI,8BAA+B1H,KAAKgsE,+BACrD/4D,KAAavL,IAAI,wBAAyB1H,KAAKqqE,yBAC/Cp3D,KAAavL,IAAI,uBAAwB1H,KAAK88B,0B,+BA4CxC,IACEr5B,EAAMzD,KAAKc,MAAX2C,EADH,EAEkCzD,KAAKK,MAApCouF,EAFH,EAEGA,cAAeD,EAFlB,EAEkBA,YAEnB1mF,EAAQrE,EAAE,kBAOd,OANoB,IAAhB+qF,EACA1mF,EAAQrE,EAAE,iBACH+qF,EAAc,IACrB1mF,EAAK,UAAM0mF,EAAN,YAAqB/qF,EAAE,oBAI5B,yBAAKpC,UAAWoE,IAAW,iBAAkB,CAAE,2BAA4BgpF,EAAgB,KACvF,kBAAC/3E,EAAA,EAAD,CACIrV,UAAU,sCACVkE,QAASvF,KAAKqD,aACd,kBAAC,GAAD,OAEJ,yBAAKhC,UAAU,0BACX,kBAAC,GAAD,CAAeg5C,MAAOo0C,IACtB,yBAAKptF,UAAWoE,IAAW,gBAAiB,SACxC,0BAAMpE,UAAU,yBAAyByG,U,GAtG9BnG,IAAMC,YAmH1BsD,iBAAkBqpF,ICnH3BG,I,kNAEFruF,MAAQ,G,EAyBRsuF,yBAA2B,SAAA1nF,GACW,EAAKnG,MAA/BsG,SACWH,EAAXG,QAIR,EAAKrG,SAAS,CACV6tF,QAAQ,K,EAIhBC,0BAA4B,SAAA5nF,GACxB,EAAKlG,SAAS,CACV6tF,QAAQ,K,EAIhBE,e,qBAAiB,4BAAApkF,EAAA,qDACLtD,EAAW,EAAKtG,MAAhBsG,OAERkgE,aAAoBlgE,EAAQ,MAHf,yC,mFA1Bb6L,KAAaxL,GAAG,yBAA0BzH,KAAK2uF,0BAC/C17E,KAAaxL,GAAG,0BAA2BzH,KAAK6uF,6B,6CAIhD57E,KAAavL,IAAI,yBAA0B1H,KAAK2uF,0BAChD17E,KAAavL,IAAI,0BAA2B1H,KAAK6uF,6B,+BA0B3C,IAAD,EACiB7uF,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EAEhB,IADmBzD,KAAKK,MAAhBuuF,OACK,OAAO,KAEpB,IAAMG,EAAgBjX,aAAe1wE,GAAU3D,EAAE,oBAAsBA,EAAE,sBAEzE,OACI,yBAAKpC,UAAU,mBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,CAAsB+F,OAAQA,IAC9B,kBAAC,GAAD,CAAcA,OAAQA,EAAQwL,OAAQ,CAAE,QAAS,gCACjD,kBAAC,GAAD,CAAevN,QAAS0pF,EAAexoB,UAAWvmE,KAAK8uF,uB,gDA5D3ChuF,EAAOT,GAAQ,IACnCmJ,EAAenJ,EAAfmJ,WACApC,EAAWtG,EAAXsG,OACR,OAAIoC,IAAepC,EACR,CACHoC,WAAYpC,EACZwnF,QAAQ,GAIT,S,GAdcjtF,IAAMC,YAkFpBsD,iBAAkBwpF,I,0CCzE3BM,G,2MACF3uF,MAAQ,CACJq2C,SAAU,M,EAGdmb,gBAAkB,SAAA1vD,GACd,EAAK6kC,WAAW7kC,EAAMw0C,gB,EAG1B3P,WAAa,SAAA0P,GACT,EAAK31C,SAAS,CAAE21C,c,EAGpBrzC,YAAc,WACV,EAAKtC,SAAS,CAAE21C,SAAU,Q,EAG9Bvf,eAAiB,WACb,EAAK9zB,cADc,IAGXI,EAAM,EAAK3C,MAAX2C,EAEF2zB,EAAO,EAAK63D,gBAAgBzpB,KAAa0pB,YAC1C93D,IAEL5B,GAAK4B,GAEL,EAAKC,sBAAsB5zB,EAAE,iB,EAGjCwrF,gBAAkB,SAAAC,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB5qF,EAAS4qF,EAAT5qF,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMgkC,EAAoBhiC,KAAYC,IAAI,YAE1C,OAAQ+hC,EAAoBA,EAAkBhmC,MAAQ,yBAA2B,eAAiBgC,G,EAGtG+yB,sBAAwB,SAAA/jB,GAAY,IAAD,EACY,EAAKxS,MAAxCw2B,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBhkB,EAAS,CACtCmkB,iBAAkBC,KAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,QACJvB,aAAW,QACX1B,MAAM,UACNtB,UAAU,4BACVkE,QAAS,kBAAMgyB,EAAcC,KAC7B,kBAAC7gB,EAAA,EAAD,W,EAMhBw4E,YAAc,WACV,EAAK9rF,cAEL,IAAM+zB,EAAO,EAAK63D,gBAAgBzpB,KAAa0pB,YAC/C,GAAK93D,EAAL,CAEA12B,KAAgBsf,aAAa,CACzB,QAAS,yBACTkvE,WAAY,OAGhB,IAAMh3D,EAAsB,CACxB,QAAS,mBACT5nB,KAAM,CACF,QAAS,gBACTA,KAAM8mB,EACNoB,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,GAGjB7B,aAAQgB,K,wEAGF,IAAD,EACoBl4B,KAAKc,MAAtB2C,EADH,EACGA,EAAGpC,EADN,EACMA,UACHq1C,EAAa12C,KAAKK,MAAlBq2C,SAER,OACI,oCACI,kBAAChgC,EAAA,EAAD,CACIrV,UAAWA,EACXgD,aAAW,QACXf,KAAMoC,QAAQgxC,GACdnxC,QAASvF,KAAK6xD,iBACd,kBAAC9W,GAAD,OAEJ,kBAACtD,GAAA,EAAD,CACIh5C,GAAG,mBACHi4C,SAAUA,EACVpzC,KAAMoC,QAAQgxC,GACdgB,mBAAoB,KACpBC,sBAAoB,EACpBy3C,qBAAqB,EACrBx3C,qBAAqB,EACrBpsC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhB7H,QAAS7D,KAAKqD,aACd,kBAAC0I,GAAA,EAAD,CAAUxG,QAASvF,KAAKm3B,gBACpB,kBAACnrB,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,eAE7B,kBAACsI,GAAA,EAAD,CAAUxG,QAASvF,KAAKmvF,aACpB,kBAACnjF,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACE,GAAA,EAAD,CAAczJ,QAASgB,EAAE,0B,GA7Hb9B,IAAMC,WA4I3BkD,GALCC,YACZG,cACA01B,gBAGW91B,CAAQkqF,ICzIjBK,I,mBACF,WAAYvuF,GAAQ,IAAD,8BACf,4CAAMA,KAiDVwuF,iCAAmC,SAAAroF,GAAW,IAClCioF,EAAe1pB,KAAf0pB,WAER,EAAKnuF,SAAS,CAAEmuF,gBArDD,EAwDnBK,6BAA+B,SAAAtoF,GAAW,IAC9BioF,EAAejoF,EAAfioF,WAQR,GANA,EAAKnuF,SAAS,CAAEmuF,cAAc,WAC1B5yE,WAAW,WACP,EAAK3H,gBACN,KAGHu6E,EAAY,CACZ,IAAM/hF,EAAQC,KAAUC,WACxBmiF,YAAsBriF,EAAO+hF,KAnElB,EAuEnB7rF,YAAc,WACV3C,KAAgBsf,aAAa,CACzB,QAAS,yBACTkvE,WAAY,QA1ED,EA8EnBr0C,WAAa,WAAO,IACRq0C,EAAe,EAAK7uF,MAApB6uF,WACR,GAAKA,EAAL,CAFe,IAIPO,EAAiBP,EAAjBO,aAER/uF,KAAgBC,KAAK,CACjB,QAAS,mBACT+uF,OAAQR,EAAWzwF,GACnBgxF,cAAeA,IAGnB,EAAKpsF,gBA1FU,EA6FnB8iF,mBAAqB,SAAAC,GAAc,IAGzB3lF,EAFiB,EAAKJ,MAApB6uF,WACAlpB,SACiBt9D,KAAK,SAAAxJ,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IACpD,GAAK3lF,EAAL,CAEA,IAAM0M,EAAQC,KAAUC,WACxBg5E,YAAmBl5E,EAAO1M,EAAS,MAEX,EAAKgmF,oBAAoBL,GACjCzmF,QAAQ,SAAAT,GACpBmnF,YAAmBl5E,EAAOjO,EAAG,UAxGlB,EA4GnBunF,oBAAsB,SAAAL,GAAc,IACxB8I,EAAe,EAAK7uF,MAApB6uF,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBlpB,EAAakpB,EAAblpB,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAM0gB,EAAU,GACVnsE,EAAQyrD,EAAS3nD,UAAU,SAAAnf,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IACvD,IAAe,IAAX7rE,EAAc,MAAO,GAEzB,IACMosE,EAAMrnF,KAAKs0B,MAAMrZ,EADE,GAEnBqsE,EAASrsE,EAFU,EAInBssE,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ12E,KAXS,EAWe62E,EAAUE,GAE9CL,EAAQ12E,KAba,EAaW62E,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ12E,KAfS,EAee62E,EAAUG,IAI9CD,GAAc,GACdL,EAAQ12E,KApBa,EAoBW22E,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ12E,KAvBa,EAuBW22E,EAAMK,GAGtCF,EAAUxnF,KAAK2nF,KAAKjhB,EAAS5/D,OA1BR,KA2BjB2gF,GAAc,GACdL,EAAQ12E,KA5BS,EA4Be82E,EAAUC,GAE9CL,EAAQ12E,KA9Ba,EA8BW82E,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ12E,KAhCS,EAgCe82E,EAAUE,IAI3CN,EAAQ92E,IAAI,SAAAjJ,GAAC,OAAIq/D,EAASr/D,MA3JlB,EAiMnB2oB,cAAgB,WAEZ,EAAKvuB,SAAS,CAAEN,QADA,OAEhBC,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,QAJY,OAMhB,EAAKmkF,WAAY,EACjBntE,SAASoE,oBAAoB,UAAW,EAAKyT,gBAzM9B,EA4MnB29C,iBAAmB,SAAA9qE,GACf,IAAMikF,EAAYr6D,OAAO5pB,EAAMw0C,cAAcyc,QAAQgzB,WAC/C3lF,EAAU,EAAKymF,WAAWd,GAC3B3lF,GAEA,EAAKmkF,YAEV,EAAK7jF,SAAS,CAAEN,YAChBC,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,YAEJ,EAAK0lF,mBAAmBC,KAxNT,EA2NnB52D,gBAAkB,SAAArtB,GACd,IAAMikF,EAAYr6D,OAAO5pB,EAAMw0C,cAAcyc,QAAQgzB,WAC/C3lF,EAAU,EAAKymF,WAAWd,GAChC,GAAK3lF,EAcL,OAZA,EAAKM,SAAS,CAAEN,YAChBC,KAAgBsf,aAAa,CACzB,QAAS,6BACTvf,YAEJ,EAAK0lF,mBAAmBC,GAExB,EAAKxB,WAAY,EACjBntE,SAASkE,iBAAiB,UAAW,EAAK2T,eAE1CntB,EAAMwI,iBACNxI,EAAMyI,mBACC,GA5OQ,EA+OnB+J,aAAe,WACX,IAAM0F,EAAU,EAAKs1E,WAAW96E,QAChC,GAAKwF,EAAL,CAIA,IAAMu1E,EAAYv1E,EAAQrF,aAAeqF,EAAQtF,aAC3CD,EAAY86E,GAAmC,IAAtBv1E,EAAQvF,UACjC+6E,EAAeD,GAAcv1E,EAAQvF,UAAYuF,EAAQtF,eAAkBsF,EAAQrF,aACnFmpB,EAASyxD,GAAav1E,EAAQvF,UAAY,GAAMuF,EAAQvF,UAAYuF,EAAQtF,aAAgBsF,EAAQrF,aAE1G,EAAKjU,SAAS,CACV+T,YACA+6E,eACA1xD,aA7PW,EAiQnB2xD,iBAAmB,SAACnjF,EAAQojF,GAAiB,IACjCl7E,EAAY,EAAK86E,WAAjB96E,QACR,IAAKA,EAAS,OAAO,EAErB,IAAMm7E,EAAcn7E,EAAQo7E,wBACtB1lF,EAAMwlF,EAAYxlF,IAAMylF,EAAYzlF,IACpC2lF,EAASH,EAAYG,OAASF,EAAYE,OAEhD,QAAI3lF,EAAMylF,EAAYliF,WAKlBoiF,GAAWF,EAAYliF,SA3Q3B,EAAK6hF,WAAahuF,IAAMoU,YAExB,EAAK1V,MAAQ,CACT6uF,WAAY1pB,KAAa0pB,WACzB9I,UAAW,EACXjoD,QAAQ,EACRrpB,WAAW,EACX+6E,cAAc,GAVH,E,mFAcGvoF,EAAWC,EAAWmU,GAAc,IAAD,EACY1b,KAAKK,MAA9D6uF,EAD6C,EAC7CA,WAAYzuF,EADiC,EACjCA,QAAS09B,EADwB,EACxBA,OAAQrpB,EADgB,EAChBA,UAAW+6E,EADK,EACLA,aAEhD,OAAIX,IAAe3nF,EAAU2nF,aAIzBzuF,IAAY8G,EAAU9G,UAItB09B,IAAW52B,EAAU42B,SAIrBrpB,IAAcvN,EAAUuN,WAIxB+6E,IAAiBtoF,EAAUsoF,kB,0CAQ/BrqB,KAAa/9D,GAAG,yBAA0BzH,KAAKuvF,8BAC/C/pB,KAAa/9D,GAAG,6BAA8BzH,KAAKsvF,oC,6CAInD9pB,KAAa99D,IAAI,yBAA0B1H,KAAKuvF,8BAChD/pB,KAAa99D,IAAI,6BAA8B1H,KAAKsvF,oC,iCAwI7ClJ,GAAY,IACX8I,EAAelvF,KAAKK,MAApB6uF,WACR,IAAKA,EAAY,OAAO,KAFN,IAIVlpB,EAAakpB,EAAblpB,SAEFshB,EAAethB,EAAS3nD,UAAU,SAAAnf,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO2nF,IAC9D,OAAyB,IAAlBkB,EAAsBthB,EAASshB,GAAgB,O,+BAyFhD,IAAD,OACG7jF,EAAMzD,KAAKc,MAAX2C,EADH,EAE4DzD,KAAKK,MAA9D6uF,EAFH,EAEGA,WAAYzuF,EAFf,EAEeA,QAAS09B,EAFxB,EAEwBA,OAAQrpB,EAFhC,EAEgCA,UAAW+6E,EAF3C,EAE2CA,aAChD,IAAKX,EAAY,OAAO,KAHnB,IAKGpnF,EAAkConF,EAAlCpnF,MAAOk+D,EAA2BkpB,EAA3BlpB,SAAUypB,EAAiBP,EAAjBO,aAEnB1zE,EAAQiqD,EAASp2D,IAAI,SAAA1Q,GAAC,OACxB,yBACImC,UAAU,0BACVuE,IAAK1G,EAAEuB,QAAQhC,GACf8oF,kBAAiBroF,EAAEuB,QAAQhC,GAC3B61B,aAAc,EAAK24C,iBACnBrhE,YAAa,EAAK4jB,iBAClB,kBAAC2zD,GAAA,EAAD,CACIv9E,IAAK1G,EAAEuB,QAAQhC,GACf4C,UAAU,kCACVZ,QAASvB,EACT4lD,UAAU,EACVt1C,MAAM,EACNlO,YAAakmF,MACbC,SAAO,EACPjmF,OAAQC,KAAkB0uF,YAC1BC,eAAgB,EAAKN,mBAEzB,yBAAKzuF,UAAU,iCAAiCnC,EAAEoB,UAI1D,OACI,kBAAC,IAAD,CACIe,UAAWoE,IACP,qBACA,CAAE,4BAA6B04B,GAC/B,CAAE,gCAAiCrpB,GACnC,CAAE,mCAAoC+6E,IAE1CvsF,MAAI,EACJI,QAASC,IACTC,mBAAoB,EACpBC,QAAS7D,KAAKqD,YACdS,kBAAgB,gCAChBc,QAAS,CAAEmsD,MAAO,6BAClB,kBAAC,IAAD,CACI1vD,UAAWoE,IAAW,2BAA4B,CAAE,8BAA+BC,QAAQjF,KAC3F82D,mBAAiB,GACjB,kBAAC7gD,EAAA,EAAD,CACIrS,aAAW,QACXkB,QAASvF,KAAKqD,aACd,kBAACsT,EAAA,EAAD,OAEJ,kBAACylB,GAAA,EAAD,CAAYC,QAAQ,KAAK59B,GAAG,gCAAgC4C,UAAU,sCAAsCi7B,QAAM,GAC7Gx0B,GAEL,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CACI0O,IAAKxW,KAAK2vF,WACV/qF,QAAS,CAAEC,KAAMY,IAAW,kCAAmC,sBAC/Dk8E,YAAa3hF,KAAKgwB,gBAClB4xD,WAAY5hF,KAAK6hF,eACjBprE,SAAUzW,KAAK2U,cACdoH,GAEL,kBAAC0e,GAAA,EAAD,CAAep5B,UAAWoE,IAAW,6BAA8B,CAAE,8BAA+BC,QAAQjF,MACxG,kBAACi6B,GAAA,EAAD,CAAQr5B,UAAU,mCAAmCwkD,kBAAgB,EAACxpB,QAAQ,YAAY15B,MAAO8sF,EAAe,YAAc,UAAWlqF,QAASvF,KAAK66C,YACnIp3C,EAAfgsF,EAAiB,iBAAsB,iBAG/C,kBAACrvF,GAAA,EAAD,CAAgBK,QAASA,S,GA7VXkB,IAAMC,YAqWtBsD,iBAAkBmqF,ICtJlBgB,I,mBAvNX,WAAYvvF,GAAQ,IAAD,8BACf,4CAAMA,KA6CVwvF,2BAA6B,SAAArpF,GAAW,IAC5B6/C,EAAc,EAAKzmD,MAAnBymD,UACR,GAAKA,EAAL,CAFmC,IAI3BrvC,EAAaqvC,EAAbrvC,SACR,GAAKA,EAAL,CALmC,IAOjBvK,EAASuK,EAAnBA,SACR,GAAKvK,EAAL,CARmC,IAU3BP,EAAW1F,EAAX0F,OAER,GAAIO,EAAKzO,KAAOkO,EAAhB,CAIA,GAAI,EAAK4jF,cACL,GAAI,EAAKA,cAAczpC,YAAcA,EAEjC,GADa,IAAIt2C,KAAS,EAAK+/E,cAAclxF,KAClC,IAIP,YAHAid,WAAW,WACP,EAAKpV,eACN,KAMf,EAAKA,mBA1EU,EA6EnB2/C,oCAAsC,SAAA5/C,GAAW,IACrC6/C,EAAc,EAAKzmD,MAAnBymD,UACR,GAAKA,EAAL,CAF4C,IAIpCrvC,EAAaqvC,EAAbrvC,SACR,GAAKA,EAAL,CAL4C,IAOpCuhB,EAAcvhB,EAAduhB,UACR,GAAKA,EAAL,CAR4C,IAUpC9rB,EAAS8rB,EAAT9rB,KACR,GAAKA,EAAL,CAX4C,IAapCP,EAAW1F,EAAX0F,OAEJO,EAAKzO,KAAOkO,IAIhB,EAAK4jF,cAAgB,CACjBzpC,YACAznD,KAAM,IAAImR,MAEd,EAAKtJ,oBApGU,EAuGnBspF,6BAA+B,SAAAvpF,GAAW,IAC9B6/C,EAAc7/C,EAAd6/C,UAER,EAAKypC,cAAgB,CACjBzpC,YACAznD,KAAM,IAAImR,MAEd,EAAKzP,SAAS,CACV+lD,eA/GW,EAmHnB2pC,oCAAsC,SAAAxpF,GAClC,EAAKC,eApHU,EAuHnBwmC,qBAAuB,SAAAzmC,GACnB,EAAKlG,SAAS,CACVqG,OAAQH,EAAO0mC,WACfl/B,UAAWxH,EAAOkyC,iBA1HP,EA8HnBqyC,eAAiB,WACb,EAAKkF,aAAalF,kBA/HH,EAkInBQ,cAAgB,WACZ,EAAK0E,aAAa1E,iBAnIH,EAsInBP,gBAAkB,WACd,EAAKiF,aAAajF,mBApIlB,EAAKprF,MAAQ,CACT+G,OAAQiS,IAASoF,YACjBhQ,UAAW4K,IAAS+/B,eACpBq1C,cAAe,EACf3nC,UAAW,KACX6pC,aAAc,MARH,E,mFAYGrpF,EAAWC,GAAY,IAAD,EACgBvH,KAAKK,MAArD+G,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UAAWggF,EADa,EACbA,cAAe3nC,EADF,EACEA,UAC1C,OAAIv/C,EAAUH,SAAWA,IAGrBG,EAAUkH,YAAcA,IAGxBlH,EAAUknF,gBAAkBA,GAG5BlnF,EAAUu/C,YAAcA,M,0CAQ5BztC,IAAS5R,GAAG,oCAAqCzH,KAAKywF,qCACtDp3E,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvClmC,KAAUC,GAAG,6BAA8BzH,KAAKwwF,8BAChDpjF,KAAU3F,GAAG,2BAA4BzH,KAAKswF,4BAC9CljF,KAAU3F,GAAG,oCAAqCzH,KAAK6mD,uC,6CAIvDxtC,IAAS3R,IAAI,oCAAqC1H,KAAKywF,qCACvDp3E,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxClmC,KAAUE,IAAI,6BAA8B1H,KAAKwwF,8BACjDpjF,KAAU1F,IAAI,2BAA4B1H,KAAKswF,4BAC/CljF,KAAU1F,IAAI,oCAAqC1H,KAAK6mD,uC,+BA+FlD,IAAD,SAiCoC7mD,KAAKK,MAAtC+G,EAjCH,EAiCGA,OAAQqH,EAjCX,EAiCWA,UAAWq4C,EAjCtB,EAiCsBA,UAC3B,IAAK1/C,EACD,OAAQ,KAGZ,IAAIwG,EAAQ,KACRd,EAAM,KACV,GAAIg6C,EAAW,CAAC,IACJrvC,EAAaqvC,EAAbrvC,SACR,GAAIA,EAAU,CAAC,IACHuhB,EAA8BvhB,EAA9BuhB,UAAqB9rB,EAASuK,EAAnBA,SACfvK,IACAJ,EAAMC,YAAOG,KAGZJ,GAAOksB,IACRlsB,EAAMC,YAAOisB,EAAU9rB,OAI/BU,EAAQ,CACJ2zB,gBAAiBz0B,EAAG,cAAUA,EAAV,KAAmB,MAM/C,OACI,yBAAKzL,UAAU,iBAAiBuM,MAAOA,GACnC,yBAAKvM,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQ+F,OAAQA,IAChB,kBAAC,GAAD,CAAcoP,IAAK,SAAAA,GAAG,OAAK,EAAKk6E,aAAel6E,GAAMpP,OAAQA,EAAQqH,UAAWA,IAChF,kBAAC,GAAD,CAAQrH,OAAQA,KAEpB,kBAAC,GAAD,CAAgBA,OAAQA,IACxB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAlNYxF,c,SCNtBgvF,I,OAAc,IAAInqF,KAElBoqF,G,iLACQ,IAAD,EACwB7wF,KAAKc,MAA1BgwF,EADH,EACGA,aAAcpgB,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,IAIGqgB,EAAwBrgB,EAAxBqgB,YAAaC,EAAWtgB,EAAXsgB,OACrB,GAAKD,EAAL,CAEAH,GAAY1vE,QACZ,IAAM+vE,EAASF,EAAYnhF,IAAI,SAAC1Q,EAAGqb,GAAJ,OAAcq2D,aAAa1xE,EAAGwxE,EAAIn2D,EAAO,SAAA/D,GAASo6E,GAAY7gF,IAAI7Q,EAAGsX,OAEpG,OACI,6BAASA,IAAKs6E,EAAcI,IAAKF,EAAS,MAAQ,OAC7CC,Q,GAbKtvF,IAAMwK,eA+BbrH,GAPCC,YACZC,cACAmsF,KAKWrsF,CAAQ+rF,ICvCRhvF,gBACX,0BAAMC,EAAE,4bACR,QCCEsvF,I,mBACF,WAAYtwF,GAAQ,IAAD,8BACf,4CAAMA,KAiCV+I,YAAc,SAAA1H,GACVA,EAAMyI,mBAnCS,EAsCnB+J,aAAe,WACX,IAAMwpB,EAAS,EAAKmkB,UAAUztC,QAC9B,GAAKspB,EAAL,CAEA,IAAM5zB,EAA2B,IAArB4zB,EAAOrpB,WAAmBqpB,EAAOnpB,aAAempB,EAAOppB,aAC7Dm7E,EAAS/xD,EAAOrpB,UAAYqpB,EAAOppB,eAAiBopB,EAAOnpB,cAAgBmpB,EAAOnpB,aAAempB,EAAOppB,aAE9G,EAAKhU,SAAS,CACVwJ,MACA2lF,aA5CJ,EAAK7vF,MAAQ,CACTkK,KAAK,EACL2lF,QAAQ,GAGZ,EAAK5tC,UAAY3gD,IAAMoU,YARR,E,mFAWGzO,EAAWC,EAAWmU,GAAc,IAC9CpL,EAAStQ,KAAKc,MAAdwP,KAD6C,EAE7BtQ,KAAKK,MAArBkK,EAF6C,EAE7CA,IAAK2lF,EAFwC,EAExCA,OAEb,OAAI5oF,EAAUgJ,OAASA,IACnB/I,EAAUgD,MAAQA,GAClBhD,EAAU2oF,SAAWA,K,0CAMzBlwF,KAAK2U,iB,yCAGUzT,EAAWC,EAAWC,GAAW,IACxCkP,EAAStQ,KAAKc,MAAdwP,KAEJpP,EAAUoP,OAASA,GACnBtQ,KAAK2U,iB,+BAqBH,IACErE,EAAStQ,KAAKc,MAAdwP,KADH,EAEmBtQ,KAAKK,MAArBkK,EAFH,EAEGA,IAAK2lF,EAFR,EAEQA,OAEb,OACI,yBAAK7uF,UAAU,gBAAgBkE,QAASvF,KAAK6J,aACzC,yBACI2M,IAAKxW,KAAKsiD,UACVjhD,UAAWoE,IACP,oBACA,wBAAyB,CACrB,4BAA6B8E,EAC7B,+BAAgC2lF,EAChC,8BAA+B3lF,IAAQ2lF,IAE/Cz5E,SAAUzW,KAAK2U,cACf,yBAAKtT,UAAU,sBAAsBiP,S,GApE9B3O,IAAMC,YA+EjCwvF,GAAappF,aAAe,GAEbopF,U,SCuKAC,G,YA7OX,WAAYvwF,GAAQ,IAAD,8BACf,4CAAMA,KA+DVwwF,+BAAiC,SAAArqF,GAAW,IAChCkpB,EAAclpB,EAAdkpB,UACHA,IAEY,EAAK9vB,MAAd6M,KACCzO,KAAO0xB,EAAUxjB,QAE1BjM,KAAgBsf,aAAa,CACzB,QAAS,uCACT3F,QAAS,SAzEE,EAwFnBs4D,wBAA0B,SAAA1rE,GAAW,IACzB0F,EAAW1F,EAAX0F,OADwB,EAER,EAAK7L,MAArB67B,EAFwB,EAExBA,MAAOhvB,EAFiB,EAEjBA,KACPT,EAAS,EAAK7M,MAAd6M,KAER,GAAIA,GAAQA,EAAKzO,KAAOkO,EAAQ,CAAC,IAAD,EAC+B4kF,YAAc50D,EAAOhvB,GADpD,mBACrBE,EADqB,KACdC,EADc,KACNZ,EADM,KACAk3D,EADA,KACUyO,EADV,KAG5B,EAAK9xE,SAAS,CACV8M,QACAC,SACAZ,OACAJ,IAAKC,YAAOG,GACZ2lE,oBACAzO,eAtGO,EA2GnBotB,iCAAmC,SAAAvqF,GAAW,IAClC0F,EAAW1F,EAAX0F,OACAqsB,EAAc,EAAK34B,MAAnB24B,UAEJA,GAAaA,EAAU9rB,KAAKzO,KAAOkO,GACnC,EAAKzF,eA7GT,EAAKqqE,SAAW5vE,IAAMoU,YAEtB,EAAK1V,MAAQ,GALE,E,iFA+Cf+M,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3CvlE,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3CvlE,KAAU3F,GAAG,4BAA6BzH,KAAK2yE,yBAC/CvlE,KAAU3F,GAAG,iCAAkCzH,KAAKwxF,kCACpDpkF,KAAU3F,GAAG,qCAAsCzH,KAAKwxF,kCACxD3gE,KAAYppB,GAAG,+BAAgCzH,KAAKsxF,kC,6CAIpDlkF,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5CvlE,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5CvlE,KAAU1F,IAAI,4BAA6B1H,KAAK2yE,yBAChDvlE,KAAU1F,IAAI,iCAAkC1H,KAAKwxF,kCACrDpkF,KAAU1F,IAAI,qCAAsC1H,KAAKwxF,kCACzD3gE,KAAYnpB,IAAI,+BAAgC1H,KAAKsxF,kC,yCAgBtCpwF,EAAWC,EAAWC,GAAW,IACxC0L,EAAQ9M,KAAKK,MAAbyM,IAER,GAAI3L,EAAU2L,MAAQA,EAAK,CACvB,IAAMqgB,EAASntB,KAAKuxE,SAAS18D,QAC7B,IAAKsY,EAAQ,OAEbA,EAAOvL,U,+BAgCL,IAAD,SAC2B5hB,KAAKc,MAA7B67B,EADH,EACGA,MAAOpE,EADV,EACUA,QAASnlB,EADnB,EACmBA,IACxB,IAAKupB,EAAO,OAAO,KAFd,MAcD38B,KAAKK,MATLwN,EALC,EAKDA,MACAC,EANC,EAMDA,OACAZ,EAPC,EAODA,KACAJ,EARC,EAQDA,IACAs3D,EATC,EASDA,SACAprC,EAVC,EAUDA,UACAkI,EAXC,EAWDA,cACAuwD,EAZC,EAYDA,UACA5e,EAbC,EAaDA,kBAEJ,IAAK3lE,EAAM,OAAO,KAElB,IAAMi0B,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EswD,EAAe3kF,YAAOisB,GAExBq6C,EAAaxlE,EACbylE,EAAcxlE,EACZ0uE,EAAQmV,KAA8BryF,KAAKm1B,IAAI4+C,EAAYC,GAC3DjsD,EAAIgsD,EAAaC,EAAcqe,KAA8BryF,KAAKs0B,MAAMy/C,EAAamJ,GACrFV,EAAIxI,EAAcD,EAAase,KAA8BryF,KAAKs0B,MAAM0/C,EAAckJ,GAC5FnJ,EAAahsD,EACbisD,EAAcwI,EAEd,IAAIzhE,EAAU,KACR7Y,EAASsL,EAAM,4BAAQA,IAAKA,EAAK1K,KAAMgiE,IAAc,KACrDvvC,EAAQ+8D,aAAS54D,EAAWkI,EAAemyC,EAAYC,GAE7D,OAAQ32C,EAAM,UACV,IAAK,QACDtiB,EACI,yBAAKhZ,UAAU,gCACX,kBAACkyB,GAAA,EAAD,CACI/c,IAAKxW,KAAKuxE,SACVlwE,UAAU,oCACVsL,OAAQO,EAAKzO,GACboP,MAAOwlE,EACPvlE,OAAQwlE,EACRue,OAAQhf,EAAqB6e,GAAgBvwD,EAAW,KACxDnT,OAAQ,WACJ,EAAKjtB,SAAS,CAAE0wF,WAAW,MAG9BjwF,IAEHiwF,IAAc5e,GAAqBh+C,GAG7C,MAEJ,IAAK,YAaDxa,EACI,yBAAKhZ,UAAU,gCACX,2BACImV,IAAKxW,KAAKuxE,SACVlwE,UAAU,oCACVkE,QAASvF,KAAK8xF,mBACd/sC,MAAI,EACJiwB,UAAQ,EACRnnE,MAAOwlE,EACPvlE,OAAQwlE,EACRtlD,OAAQ,WACJ,EAAKjtB,SAAS,CAAE0wF,WAAW,MAG9BjwF,IAEHiwF,GAAa58D,GAGvB,MAEJ,QACIxa,EACI,yBAAKhZ,UAAU,6BAA6ByL,IAAKA,EAAKyB,IAAI,GAAGhJ,QAASvF,KAAK8xF,qBAKvF,OACI,yBAAKzwF,UAAU,wBACVgZ,GACCw4D,GAAqB,kBAAC7rB,GAAA,EAAD,CAAc95C,KAAMA,EAAMm1C,OAAQ,IACxD9pB,KAAaw5D,aAAYx5D,EAAQjoB,QAAUyhF,aAAYx5D,EAAQy5D,SAAW5+E,IACvE,kBAAC,GAAD,CACI9C,KACI,oCACI,kBAAC2hF,GAAA,EAAD,CAAS3hF,KAAMioB,EAAQjoB,KAAM0hF,OAAQz5D,EAAQy5D,SAC7C,kBAACntD,GAAA,EAAD,CAAUzxB,IAAKA,W,gDApNXtS,EAAOT,GAAQ,IACnCs8B,EAA8B77B,EAA9B67B,MAAOhvB,EAAuB7M,EAAvB6M,KAAuB7M,EAAjBy3B,QAAiBz3B,EAARsS,IAE9B,GAAIupB,IAAUt8B,EAAM6xF,UAAW,CAC3B,IAAMl5D,EAAYm5D,YAAmBx1D,GAC/BuE,EAAgBkxD,YAAuBz1D,GAFlB,EAI8B40D,YAAc50D,EAAOhvB,GAJnD,mBAItBE,EAJsB,KAIfC,EAJe,KAIPZ,EAJO,KAIDk3D,EAJC,KAISyO,EAJT,KAK3B3lE,EAAOE,KAAU7G,IAAI2G,EAAKzO,KAAOyO,EACjC,IAAIJ,EAAMC,YAAOG,GAEjB,IAAKJ,GAAO+lE,EAAmB,CAAC,IACpB1nD,EAAUwR,EAAVxR,MACJA,IACAre,EAAG,6BAAyBI,EAAKzO,GAA9B,iBAAyCyO,EAAKS,KAA9C,sBAAgEwd,EAAMknE,YAIjF,MAAO,CACHH,UAAWv1D,EAEX21D,MAAO,EACPb,WAAW,EACX5jF,QACAC,SACAZ,OACAJ,MACAtL,OAjBS,KAkBTqxE,oBACAzO,WACAprC,YACAkI,iBAIR,OAAO,S,GA5C6Bv/B,IAAMC,WCuBnC2wF,I,kNAhCX1oF,YAAc,SAAA1H,GACVA,EAAMyI,kBADa,MAGW,EAAK9J,MAA3Bo0B,EAHW,EAGXA,SAAU3vB,EAHC,EAGDA,QAEd2vB,GAEJ3vB,EAAQpD,I,wEAGF,IAAD,EACkDnC,KAAKc,MAApDo0B,EADH,EACGA,SAAUs9D,EADb,EACaA,KAAMhtF,EADnB,EACmBA,SAAUnE,EAD7B,EAC6BA,UAAWuM,EADxC,EACwCA,MAEvCglC,EAAKntC,IACPyvB,EAAW,+BAAiC,sBAC5C,CAAEs9D,KAAMA,GACRnxF,GAGJ,OACI,yBAAKA,UAAWuxC,EAAIhlC,MAAOA,EAAOrI,QAASvF,KAAK6J,aAC3CrE,O,GAtBe7D,IAAMC,YCwBvB6wF,I,wLAxBD,IAAD,EAC8BzyF,KAAKc,MAAhCgH,EADH,EACGA,MAAOc,EADV,EACUA,SAAUgF,EADpB,EACoBA,MAEzB,OACI,yBAAKvM,UAAU,2BAA2BuM,MAAOA,GAC7C,yBAAKvM,UAAU,oCACX,8BAAOyG,GACNpC,QAAQkD,IACL,qCAEKA,S,GAXOjH,IAAMC,YC6B3B8wF,I,kNAlCX7oF,YAAc,SAAA1H,GACVA,EAAMyI,kBADa,MAGW,EAAK9J,MAA3ByE,EAHW,EAGXA,QAHW,EAGF2vB,UAIjB3vB,EAAQpD,I,wEAGF,IAAD,EAC0CnC,KAAKc,MAA5Co7B,EADH,EACGA,QAAS12B,EADZ,EACYA,SAAU0vB,EADtB,EACsBA,SAAUptB,EADhC,EACgCA,MAErC,OACI,yBACIzG,UAAWoE,IAAW,6BAA8B,CAChD,qCAAsCy2B,EACtC,sCAAuChH,IAE3CptB,MAAOA,EACPvC,QAASvF,KAAK6J,aACbrE,O,GAtBqB7D,IAAMC,YCStC+wF,G,2MACFtyF,MAAQ,G,EA4ERuyF,aAAe,SAAA3rF,GAAW,IACd0F,EAAW,EAAK7L,MAAhB6L,OACAO,EAASjG,EAATiG,KAEJA,EAAKzO,KAAOkO,GAEZO,EAAKmE,MAAMwhF,0BACX,EAAKC,mB,EAIbngB,wBAA0B,SAAA1rE,GAAW,IACzB0F,EAAW,EAAKtM,MAAhBsM,OAEJA,IAAW1F,EAAO0F,QAClB,EAAK5L,SAAS,CACVm0B,SAAUy9D,EAA0BI,aAAapmF,M,EAS7D9C,YAAc,SAAA1H,GACVA,EAAMyI,kBADa,IAGXrF,EAAY,EAAKzE,MAAjByE,QACa,EAAKlF,MAAlB60B,UAGR3vB,EAAQpD,I,kFA3FOjB,EAAWC,EAAWC,GACjCF,EAAUyL,SAAW3M,KAAKc,MAAMsG,QAChCpH,KAAK8yF,oB,wCAIM,IAAD,OAENnmF,EAAW3M,KAAKc,MAAhB6L,OAER,IADaS,KAAU0V,QAAQnW,GAC/B,CAKA,IAAMO,EAAOE,KAAU7G,IAAIoG,GAC3B,GAAKO,EAAL,CAVc,IAeNmE,EAAUnE,EAAVmE,MACR,GAAKA,GACAA,EAAMwhF,yBAAX,CAGA,IAAM1lF,EAAQC,KAAUC,WACxBD,KAAU4lF,aAAa7lF,EAAOD,EAAM,KAAM,WAEtC,EAAKnM,SAAS,CACVm0B,SAAUy9D,EAA0BI,aAAapmF,Y,0CAMzD3M,KAAK8yF,kBAEL1lF,KAAU3F,GAAG,aAAczH,KAAK4yF,cAEhCxlF,KAAU3F,GAAG,4BAA6BzH,KAAK2yE,yBAC/CvlE,KAAU3F,GAAG,uBAAwBzH,KAAK2yE,yBAC1CvlE,KAAU3F,GAAG,2BAA4BzH,KAAK2yE,yBAC9CvlE,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3CvlE,KAAU3F,GAAG,uBAAwBzH,KAAK2yE,yBAC1CvlE,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,2B,6CAI3CvlE,KAAU1F,IAAI,aAAc1H,KAAK4yF,cAEjCxlF,KAAU1F,IAAI,4BAA6B1H,KAAK2yE,yBAChDvlE,KAAU1F,IAAI,uBAAwB1H,KAAK2yE,yBAC3CvlE,KAAU1F,IAAI,2BAA4B1H,KAAK2yE,yBAC/CvlE,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5CvlE,KAAU1F,IAAI,uBAAwB1H,KAAK2yE,yBAC3CvlE,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,2B,+BAsCtC,IAAD,EACgD3yE,KAAKc,MAAlDgH,EADH,EACGA,MAAOtC,EADV,EACUA,SAAoBytF,EAD9B,EACoB/9D,SACjBA,EAAal1B,KAAKK,MAAlB60B,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,GAAY+9D,EAAenrF,MAAOA,EAAOvC,QAASvF,KAAK6J,aACrFrE,GAAY,kBAAC,KAAD,U,gDAnHO1E,EAAOT,GAAQ,IACnCsM,EAAW7L,EAAX6L,OAGR,OAAIA,IAFwBtM,EAApB6yF,gBAGG,CACHA,gBAAiBvmF,EACjBA,SACAuoB,SAAUy9D,EAA0BI,aAAapmF,IAIlD,S,GAfyBhL,IAAMC,WAAxC+wF,GAkGKI,aAAe,SAAApmF,GAClB,OAAQjH,QAAQ0H,KAAU0V,QAAQnW,KAgC3BgmF,UClHTQ,I,mBACF,WAAYryF,GAAQ,IAAD,8BACf,4CAAMA,KAsBVqX,UAAY,SAAAhW,GACR,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAAV,CALiB,MASS,EAAKlP,MAAvBka,EATS,EASTA,MAAO02E,EATE,EASFA,OACf,IAAKA,EAAQ,OAAO,KACpB,IAAe,IAAX12E,EAAc,OAAO,KAEzB,IAAMk1D,EAAQwhB,EAAO12E,GACfoiB,EAAQy2D,aAAc3jB,GAC5B,GAAK9yC,EAAL,CAGA,OADgBx6B,EAARyD,KAEJ,IAAK,SAID,OAHA,EAAKvC,cACLlB,EAAMyI,uBACNzI,EAAMwI,iBAGV,IAAK,YAID,OAHA,EAAKqoE,aACL7wE,EAAMyI,uBACNzI,EAAMwI,iBAGV,IAAK,aAID,OAHA,EAAK0oF,iBACLlxF,EAAMyI,uBACNzI,EAAMwI,iBAKqB,UAAnBgyB,EAAM,UAElBj8B,KAAgBsf,aAAa,CAAE,QAAS,4BAA6B7d,aAhE1D,EA2FnBkxF,eAAiB,SAAAlxF,GACTA,GACAA,EAAMyI,kBAFY,MAKI,EAAKvK,MAAvBka,EALc,EAKdA,MAAO02E,EALO,EAKPA,OACTl7B,EAAYx7C,EAAQ,EAE1B,GAAK,EAAK+4E,iBAAiB/4E,EAAO02E,GAElC,OAAO,EAAKsC,UAAUx9B,IArGP,EA+GnBid,WAAa,SAAA7wE,GACLA,GACAA,EAAMyI,kBAFQ,MAKQ,EAAKvK,MAAvBka,EALU,EAKVA,MAAO02E,EALG,EAKHA,OACTl7B,EAAYx7C,EAAQ,EAE1B,GAAK,EAAKi5E,aAAaj5E,EAAO02E,GAE9B,OAAO,EAAKsC,UAAUx9B,IAzHP,EA4HnBw9B,UAAY,SAAAh5E,GAAU,IACV02E,EAAW,EAAK5wF,MAAhB4wF,OAER,QAAI12E,EAAQ,OACRA,GAAS02E,EAAO7qF,UAEpB,EAAKrF,SACD,CACIwZ,QACA+4E,iBAAkB,EAAKA,iBAAiB/4E,EAAO02E,GAC/CuC,aAAc,EAAKA,aAAaj5E,EAAO02E,KAI/CwC,YAA4Bl5E,EAAO02E,IAC5B,KA3IQ,EA8InB5tF,YAAc,WACVqwF,aAA4B,MADZ,MAGU,EAAKrzF,MAAvBka,EAHQ,EAGRA,MAAO02E,EAHC,EAGDA,QACA,IAAX12E,GACAo5E,YAAkCp5E,EAAO02E,IAnJ9B,EAuJnB5wD,cAAgB,WAAO,IACX1D,EAAU,EAAK77B,MAAf67B,MAEFzE,EAAsB07D,aAAqBj3D,EAAO,MACnDzE,GAELhB,aAAQgB,IA7JO,EAgKnB27D,WAAa,WAAO,IACRl3D,EAAU,EAAK77B,MAAf67B,MAERm3D,YAAUn3D,EAAO,OAnKF,EAsKnBo3D,uBAAyB,SAAA5xF,GACrB,EAAK6xF,gBAAkB7xF,EAAMw0C,eAvKd,EA0KnBs9C,mBAAqB,SAAA9xF,GAAU,IACnB6xF,EADkB,gBAClBA,gBACR,EAAKA,gBAAkB,KAEnB7xF,EAAMw0C,gBAAkBq9C,GAE5B,EAAK3wF,eA7KL,EAAKhD,MAAQ,CACTka,OAAQ,EACR+4E,kBAAkB,EAClBE,cAAc,EACdvC,OAAQ,IAGZ,EAAKp7E,gBAAkB,IAAIC,IAAgB,EAAKqC,WAVjC,E,iFAcfnY,KAAK8T,cAELmC,IAAgBC,IAAIlW,KAAK6V,mB,6CAIzBI,IAAgBE,OAAOnW,KAAK6V,mB,oCAgDjB,IAAD,EACY7V,KAAKc,MAAnB4vE,EADE,EACFA,GAAI/zC,EADF,EACEA,MAENs0D,EAASiD,aAAexjB,EAAIyjB,MAC5B55E,EAAQ02E,EAAO5yE,UAAU,SAAAnf,GAAC,OAAIk0F,aAAcl0F,KAAOy9B,IAEzD38B,KAAKe,SAAS,CACVkwF,SACA12E,QACA+4E,iBAAkBtzF,KAAKszF,iBAAiB/4E,EAAO02E,GAC/CuC,aAAcxzF,KAAKwzF,aAAaj5E,EAAO02E,KAG3CwC,YAA4Bl5E,EAAO02E,K,uCAGtB12E,EAAO02E,GACpB,OAAe,IAAX12E,GAEcA,EAAQ,EACP02E,EAAO7qF,S,mCAgBjBmU,EAAO02E,GAChB,OAAe,IAAX12E,GAEcA,EAAQ,GACN,I,+BAuEd,IAAD,EACeva,KAAKc,MAAjB6M,EADH,EACGA,KAAMlK,EADT,EACSA,EADT,EAEqDzD,KAAKK,MAAvDka,EAFH,EAEGA,MAAO02E,EAFV,EAEUA,OAAQuC,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAKrC,EAAQ,OAAO,KACpB,IAAe,IAAX12E,EAAc,OAAO,KAEzB,IAAMk1D,EAAQwhB,EAAO12E,GACfoiB,EAAQy2D,aAAc3jB,GACtBl3C,EAAU67D,aAAgB3kB,GAC1Br8D,EAAMihF,aAAY5kB,GATnB,EAWyB8hB,YAAc50D,EAAOhvB,GAX9C,mBAWiBT,GAXjB,gBAaDpF,EAAQ,GACW,UAAnB60B,EAAM,WACN70B,EAAQrE,EAAE,gBAES,UAAnBk5B,EAAM,SACN70B,EAAQrE,EAAE,eACgB,cAAnBk5B,EAAM,WACb70B,EAAQrE,EAAE,cAEd,IAAM6wF,EAAWrD,EAAO7qF,OAExB,OACI,yBAAK/E,UAAWoE,IAAW,4BAA6B,yBACpD,yBAAKpE,UAAU,uBACX,kBAAC,GAAD,CACIyG,MAAOA,EACPc,SAAU0rF,EAAW,GAAK/5E,GAAS,EAAIg6E,KAAOC,aAAa,KAAMj6E,EAAQ,EAAG+5E,GAAY,KACxF1mF,MAAO,CAAEg2E,WAAY,OAEzB,kBAAC,GAAD,CAA2B97E,MAAOrE,EAAE,QAASkJ,OAAQO,EAAKzO,GAAI8G,QAASvF,KAAK6zF,aAC5E,kBAAC,GAAD,CAAyB/rF,MAAOrE,EAAE,WAAY8B,QAASvF,KAAKqgC,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBv4B,MAAOrE,EAAE,SAAU8B,QAASvF,KAAKqD,aACtD,kBAACsT,EAAA,EAAD,QAGR,yBAAKtV,UAAU,uBAAuBuK,YAAa5L,KAAK+zF,uBAAwBxuF,QAASvF,KAAKi0F,oBAC1F,yBAAK5yF,UAAU,4BACX,kBAAC,GAAD,CAAmB6zB,UAAWs+D,EAAchB,MAAI,EAACjtF,QAASvF,KAAKgzE,YAC3D,kBAAC,GAAD,QAGR,yBAAK3xE,UAAU,+BACX,kBAAC,GAAD,CAA+Bs7B,MAAOA,EAAOhvB,KAAMA,EAAM4qB,QAASA,EAASnlB,IAAKA,KAEpF,yBAAK/R,UAAU,6BACX,kBAAC,GAAD,CAAmB6zB,UAAWo+D,EAAkBd,MAAI,EAACjtF,QAASvF,KAAKqzF,gBAC/D,kBAAC,GAAD,CAAoBzlF,MAAO,CAAE+kC,UAAW,4B,GAvO/BhxC,IAAMC,YA2P5BkD,GALCC,YACZG,cACAisF,KAGWrsF,CAAQquF,I,SC5PjBsB,I,mBACF,WAAY3zF,GAAQ,IAAD,8BACf,4CAAMA,KA0EV4zF,uCAAyC,SAAAztF,GAAW,IACxCoT,EAAYpT,EAAZoT,QACR,GAAKA,EAAL,CAF+C,IAOvCsiB,EAAqCtiB,EAArCsiB,MAAOpE,EAA8Ble,EAA9Bke,QAASnlB,EAAqBiH,EAArBjH,IAAKo9D,EAAgBn2D,EAAhBm2D,YAEzB,EAAK1vE,MAAM0vE,cAAgBA,GAE/B,EAAKzvE,SAAS,CAAE47B,QAAOpE,UAASnlB,aAR5B,EAAKrS,SAAS,CAAE47B,MAAO,KAAMpE,QAAS,KAAMnlB,IAAK,QA9EtC,EAyFnBuhF,6BAzFmB,sCAyFY,WAAM1tF,GAAN,yBAAAyD,EAAA,wDACnB0I,EAAQnM,EAARmM,IACF0hB,EAAS8/D,KAAiBC,aAFL,EAGU,EAAK/zF,MAAlC0vE,EAHmB,EAGnBA,YAAkBskB,EAHC,EAGN1hF,IAEjB0hB,IAAW07C,EALY,qDAOvBA,IAAep9D,EAAIrB,WAAW+iF,GAPP,oBAQjBC,EAAO,IAAI1xD,IAAIjwB,GAAK2hF,KACtB3hF,EAAI+mB,QAAQ,OAAS/mB,EAAIhN,OAAS,EATf,wBAUnB,EAAK0O,UAAU,UAVI,+BAaZigF,IAAQ,EAAKC,aAAaD,EAAM,UAbpB,mDAmB3BhkB,GAAgB39D,GAnBW,0CAzFZ,wDA0MnB+E,UAAY,SAAAhW,GACR,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAIV,OAAQpN,EAAMyD,KACV,IAAK,SAMD,GALAzD,EAAMyI,kBACNzI,EAAMwI,iBAEY,EAAKtK,MAAfs8B,MAIJ,YADA+2D,aAA4B,MAIhC,EAAKrwF,gBA/NE,EAyOnB8oE,WAAa,WAAO,IAAD,EACgB,EAAK9rE,MAA5BszE,EADO,EACPA,QADO,EACEic,UAEb,EAAK96E,UAAU,UAIf6+D,EACAjzE,KAAgBsf,aAAa,CACzB,QAAS,gCAKjB,EAAK3c,eAvPU,EA0PnBsR,aAAe,WACX,IAAMmC,EAAU,EAAKm+E,iBAAiBpgF,QACtC,EAAK9T,SAAS,CACV6uF,UAAW94E,EAAQhC,UAAY,KAGnC,EAAK40E,qBA7PL,EAAK7zE,gBAAkB,IAAIC,IAAgB,EAAKqC,WAChD,EAAK+8E,WAAavzF,IAAMoU,YACxB,EAAKk/E,iBAAmBtzF,IAAMoU,YAE9B,EAAK1V,MAAQ,GAEb,EAAKqpF,kBAAoBlqD,aAAS,EAAKkqD,kBAAmB,KAT3C,E,mFA2BGpiF,EAAWC,EAAWmU,GAAc,IAC9C80D,EAAgBxwE,KAAKc,MAArB0vE,YAD6C,EAEDxwE,KAAKK,MAAjDuvF,EAF6C,EAE7CA,UAAWjc,EAFkC,EAElCA,QAASh3C,EAFyB,EAEzBA,MAAOpE,EAFkB,EAElBA,QAASnlB,EAFS,EAETA,IAE5C,OAAIo9D,IAAgBlpE,EAAUkpE,cAI1Bof,IAAcroF,EAAUqoF,YAIxBjc,IAAYpsE,EAAUosE,UAItBh3C,IAAUp1B,EAAUo1B,QAIpBpE,IAAYhxB,EAAUgxB,SAItBnlB,IAAQ7L,EAAU6L,U,0CAQtBpT,KAAKm1F,SAAU,EACfn1F,KAAK2U,eACL3U,KAAKo1F,cAAcp1F,KAAKc,MAAM2uE,MAAO,UAErCx5D,IAAgBC,IAAIlW,KAAK6V,iBACzB++E,KAAiBntF,GAAG,6BAA8BzH,KAAK20F,8BACvDC,KAAiBntF,GAAG,uCAAwCzH,KAAK00F,0C,6CAIjE10F,KAAKm1F,SAAU,EACfl/E,IAAgBE,OAAOnW,KAAK6V,iBAC5B++E,KAAiBltF,IAAI,6BAA8B1H,KAAK20F,8BACxDC,KAAiBltF,IAAI,uCAAwC1H,KAAK00F,0C,oCAuCxDjlB,EAAOpzD,GACjB,IAAKozD,EAAO,OAAO,EAEnB,IAAKmhB,GAAa,OAAO,EAEzB,IAAMp6E,EAAMo6E,GAAYrqF,IAAIkpE,GAC5B,IAAKj5D,EAAK,OAAO,EAEjB,IAAMM,EAAU84D,KAASylB,YAAY7+E,GACrC,OAAOxW,KAAKs1F,gBAAgBx+E,EAASuF,K,sCAGzBvF,EAASuF,GACrB,IAAKvF,EAAS,OAAO,EAErB,IAAMy+E,EAAU,GACZC,GAAW,EACXC,EAAiB3+E,EACrB,IACI2+E,EAAiBA,EAAe54B,YAEI,YAA5B44B,EAAep5B,SACfk5B,EAAQvlF,KAAKylF,GACsB,YAA5BA,EAAep5B,WACtBm5B,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQ51F,QAAQ,SAAAT,GAAC,OAAKA,EAAEoE,MAAO,IAE/BwT,EAAQ8qC,eAAe,CACnB6tB,MAAO,SACPpzD,cAGG,I,mCAGE04E,EAAM14E,GACf,IAAK04E,EAAM,OAAO,EAElB,IAAMj+E,EAAUW,SAASwV,eAAe8nE,EAAK/iF,OAAO,IAEpD,OAAOhS,KAAKs1F,gBAAgBx+E,EAASuF,K,gCAG/BA,GACN,IAAMvF,EAAU9W,KAAKi1F,iBAAiBpgF,QAEtC,OAAQwH,GACJ,IAAK,SACDvH,GAAUgC,GACV,MAEJ,QACIA,EAAQyF,SAAS,CACbhS,IAAK,EACL8R,gB,yCAMGnb,EAAWC,EAAWC,GAAW,IAAD,EACXpB,KAAKc,MAAjC0vE,EADuC,EACvCA,YAAoBp9D,GADmB,EAC1Bq8D,MAD0B,EACnBr8D,KAEtB2hF,EAAO,IAAI1xD,IAAIjwB,GAAK2hF,KACtB7zF,EAAUsvE,cAAgBA,IACtBtvE,EAAUkS,MAAQA,EACdA,EAAI+mB,QAAQ,OAAS/mB,EAAIhN,OAAS,EAClCpG,KAAK8U,UAAU,QACRigF,EACP/0F,KAAKg1F,aAAaD,EAAM,QAExB/0F,KAAK8U,UAAU,QAGfigF,EACA/0F,KAAKg1F,aAAaD,EAAM,QAExB/0F,KAAK8U,UAAU,UAIvB9U,KAAK2U,kB,oCAgCTu8D,aAAsB,Q,0CA8BtB,GAAKlxE,KAAKm1F,QAAV,CADgB,IAGR3kB,EAAgBxwE,KAAKc,MAArB0vE,YACR,GAAKA,EAAL,CAOA,IAXgB,IAMRugB,EAAgBvgB,EAAhBugB,YAEFE,EAAS,IAAIxqF,IACbsV,EAAQ4uE,aAAY3qF,KAAKi1F,iBAAkBj1F,KAAKk1F,YAE7CvuF,EAAI,EAAGA,EAAIoV,EAAM3V,OAAQO,IAAK,CACnC,IAAM8oE,EAAQshB,EAAYh1E,EAAMpV,IAChCsqF,EAAOlhF,IAAI0/D,EAAOA,GAEEimB,aAAejmB,GACvB9vE,QAAQ,SAAAT,GAAC,OAAI+xF,EAAOlhF,IAAI7Q,EAAGA,KAG3CwB,KAAgBsf,aAAa,CACzB,QAAS,2BACTixE,e,+BAIE,IACEzgB,EAAgBxwE,KAAKc,MAArB0vE,YADH,EAE+CxwE,KAAKK,MAAxCuvF,GAFZ,EAEGjc,QAFH,EAEYic,WAAWjzD,EAFvB,EAEuBA,MAAOpE,EAF9B,EAE8BA,QAASnlB,EAFvC,EAEuCA,IAC5C,OAAKo9D,EAGD,kBAACmlB,GAAA,EAAUC,SAAX,CAAoBtzF,MAAOkuE,GACvB,yBAAKh6D,IAAKxW,KAAKi1F,iBAAkB5zF,UAAU,iBAAiBoV,SAAUzW,KAAK2U,cACvE,yBAAKtT,UAAU,6BAA6BkE,QAASvF,KAAKmsE,YACtD,kBAAC,GAAD,CACI9qE,UAAU,6BACVuM,MAAO,CAAEmuB,WAAY,cACrBx2B,QAASvF,KAAKmsE,YACd,kBAAC,GAAD,CACIv+D,MAAO,CACHqwB,WAAY,2BACZ0U,UAAWi9C,EAAY,gBAAkB,oBAKzD,yBAAKvuF,UAAU,iCACX,6BACI,kBAAC,GAAD,CAASmV,IAAKxW,KAAKk1F,eAG3B,yBAAK7zF,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8BkE,QAASvF,KAAKqD,aACrE,kBAACsT,EAAA,EAAD,SAIXgmB,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAOhvB,KAAMkoF,KAAet9D,QAASA,EAASnlB,IAAKA,KA7B3E,Q,gDAnRGtS,EAAOT,GACnC,OAAIS,EAAM0vE,cAAgBnwE,EAAMy1F,gBACrB,CACHA,gBAAiBh1F,EAAM0vE,YACvBmD,QAASihB,KAAiBjhB,UAC1Bic,WAAW,EACXjzD,MAAO,KACPpE,QAAS,KACTnlB,IAAK,MAIN,S,GAzBazR,IAAMC,YAuUnBsD,iBAAkBuvF,IC7SlBsB,I,mBAvCX,WAAYj1F,GAAQ,qEACVA,I,sEAGA,IAAD,EACyBd,KAAKc,MAA3BsG,EADH,EACGA,OAAQqH,EADX,EACWA,UAEV6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAJhB,IAMG8B,EAAiB9B,EAAjB8B,KAAMzB,EAAWL,EAAXK,OAERqiF,EAAWphB,aAAYx/D,GAEvB6gF,EAActiF,EAAOhL,QAAU,kBAACmxC,GAAA,EAAD,CAAU/R,OAAQp0B,EAAOhL,UAAc,kBAAC,KAAD,CAAUvB,OAAQA,IAE9F,OACI,yBAAK/F,UAAU,cACX,yBAAKA,UAAU,sBACV40F,EACD,yBAAK50F,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC+jC,GAAA,EAAD,CAAezxB,OAAQA,KAE3B,yBAAKtS,UAAU,uBACX,8BAAO20F,W,GA1BXr0F,IAAMC,YCOxBs0F,I,mBACF,WAAYp1F,GAAQ,IAAD,8BACf,4CAAMA,KAyEVwwF,+BAAiC,SAAArqF,GAAW,IAChCkpB,EAAclpB,EAAdkpB,UACHA,IAEY,EAAK9vB,MAAd6M,KACCzO,KAAO0xB,EAAUxjB,QAE1BjM,KAAgBsf,aAAa,CACzB,QAAS,iCACT3F,QAAS,SAnFE,EAkGnBs4D,wBAA0B,SAAA1rE,GAAW,IAAD,EACI,EAAKnG,MAAjCsG,EADwB,EACxBA,OAAQqH,EADgB,EAChBA,UAAWd,EADK,EACLA,KAE3B,GAAIvG,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,UAAW,CAAC,IAAD,EACH0nF,YAAa/uF,EAAQqH,EAAWd,GAD7B,mBACvDE,EADuD,KAChDC,EADgD,KACxCZ,EADwC,KAClCk3D,EADkC,KACxByO,EADwB,KAG5D3lE,EAAOE,KAAU7G,IAAI2G,EAAKzO,KAAOyO,EACjC,IAAIJ,EAAMC,YAAOG,IAEZJ,GAAO+lE,GACJujB,aAAehvF,EAAQqH,KACvB3B,EAAG,6BAAyBI,EAAKzO,GAA9B,iBAAyCyO,EAAKS,KAA9C,sBAAgEy2D,IAI3E,EAAKrjE,SAAS,CACV8M,QACAC,SACAZ,OACAJ,MACAtL,OAZS,KAaTqxE,oBACAzO,eAxHO,EA6HnBotB,iCAAmC,SAAAvqF,GAAW,IAAD,EACX,EAAKnG,MAA3BsG,EADiC,EACjCA,OAAQqH,EADyB,EACzBA,UAEhB,GAAIrH,IAAWH,EAAOG,QAAUqH,IAAcxH,EAAOwH,UAAW,CAC5D,IAAMuqB,EAAYq9D,YAAkBjvF,EAAQqH,GAC5C,EAAK1N,SAAS,CACVi4B,gBAnIO,EAwInByD,uBAAyB,SAAAx1B,GAAW,IAAD,EACQ,EAAKnG,MAApCsG,EADuB,EACvBA,OAAQqH,EADe,EACfA,UAAWd,EADI,EACJA,KAAMlK,EADF,EACEA,EACzB4D,EAAwBJ,EAAxBI,QAASqH,EAAezH,EAAfyH,WAEjB,GAAItH,IAAWC,GAAWoH,IAAcC,EAAY,CAChD,IAAM4E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACnC6B,EAAO4iD,aAAQ5/C,EAAS,KAAM7P,GAFY,EAIW0yF,YAAa/uF,EAAQqH,EAAWd,GAJ3C,mBAIzCE,EAJyC,KAIlCC,EAJkC,KAI1BZ,EAJ0B,KAIpBk3D,EAJoB,KAIVyO,EAJU,KAK5C/lE,EAAMC,YAAOG,IAEZJ,GAAO+lE,GACJujB,aAAehvF,EAAQqH,KACvB3B,EAAG,6BAAyBI,EAAKzO,GAA9B,iBAAyCyO,EAAKS,KAA9C,sBAAgEy2D,IAI3E,EAAKrjE,SAAS,CACV8M,QACAC,SACAZ,OACAJ,MACAtL,OAZS,KAaTqxE,oBACAzO,WACA9zD,WAjKO,EAsKnBwhF,mBAAqB,SAAA3vF,GACbA,GAAOA,EAAMyI,mBAvKF,EA0KnBf,YAAc,SAAA1H,GACVA,EAAMwI,iBACNxI,EAAMyI,kBAFa,IAKXpJ,EAAW,EAAKnB,MAAhBmB,OACHA,GAELA,EAAO80F,kBA/KP,EAAKj2F,MAAQ,GAEb,EAAKkxE,SAAW5vE,IAAMoU,YALP,E,iFAuDf3I,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3CvlE,KAAU3F,GAAG,wBAAyBzH,KAAK2yE,yBAC3CvlE,KAAU3F,GAAG,4BAA6BzH,KAAK2yE,yBAC/CvlE,KAAU3F,GAAG,iCAAkCzH,KAAKwxF,kCACpDpkF,KAAU3F,GAAG,qCAAsCzH,KAAKwxF,kCACxDv+E,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,wBAC7C5L,KAAYppB,GAAG,+BAAgCzH,KAAKsxF,kC,6CAIpDlkF,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5CvlE,KAAU1F,IAAI,wBAAyB1H,KAAK2yE,yBAC5CvlE,KAAU1F,IAAI,4BAA6B1H,KAAK2yE,yBAChDvlE,KAAU1F,IAAI,iCAAkC1H,KAAKwxF,kCACrDpkF,KAAU1F,IAAI,qCAAsC1H,KAAKwxF,kCACzDv+E,KAAavL,IAAI,uBAAwB1H,KAAKy8B,wBAC9C5L,KAAYnpB,IAAI,+BAAgC1H,KAAKsxF,kC,yCAgBtCpwF,EAAWC,EAAWC,GAAW,IACxC0L,EAAQ9M,KAAKK,MAAbyM,IAER,GAAI3L,EAAU2L,MAAQA,EAAK,CACvB,IAAMqgB,EAASntB,KAAKuxE,SAAS18D,QAC7B,IAAKsY,EAAQ,OAEbA,EAAOvL,U,+BAyFL,IAAD,SACyB5hB,KAAKc,MAA3BsG,EADH,EACGA,OAAQqH,EADX,EACWA,UADX,EAcDzO,KAAKK,MAXLwN,EAHC,EAGDA,MACAC,EAJC,EAIDA,OACAZ,EALC,EAKDA,KACAJ,EANC,EAMDA,IACA+lE,EAPC,EAODA,kBACAzO,EARC,EAQDA,SACA9zD,EATC,EASDA,KACA4wB,EAVC,EAUDA,cACAlI,EAXC,EAWDA,UACAiK,EAZC,EAYDA,QACAwuD,EAbC,EAaDA,UAGJ,IAAKvkF,EAAM,OAAO,KAElB,IAAMi0B,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EswD,EAAe3kF,YAAOisB,EAAYA,EAAU9rB,KAAO,MAEnDqpF,EAAUC,aAAepvF,EAAQqH,GACjCgoF,EAAUL,aAAehvF,EAAQqH,GACjCioF,EAAcC,aAAmBvvF,EAAQqH,GAE3C4kE,EAAaxlE,EACbylE,EAAcxlE,EACZ0uE,EAAQmV,KAA8BryF,KAAKm1B,IAAI4+C,EAAYC,GAC3DjsD,EAAIgsD,EAAaC,EAAcqe,KAA8BryF,KAAKs0B,MAAMy/C,EAAamJ,GACrFV,EAAIxI,EAAcD,EAAase,KAA8BryF,KAAKs0B,MAAM0/C,EAAckJ,GAC5FnJ,EAAahsD,EACbisD,EAAcwI,EAEd,IAAIzhE,EAAU,KACR7Y,EAASsL,EAAM,4BAAQA,IAAKA,EAAK1K,KAAMgiE,IAAc,KACrDvvC,EAAQ+8D,aAAS54D,EAAWkI,EAAemyC,EAAYC,GAE7D,GAAImjB,EACAp8E,EACI,yBAAKhZ,UAAU,gCACX,kBAACkyB,GAAA,EAAD,CACI/c,IAAKxW,KAAKuxE,SACVlwE,UAAU,oCACVsL,OAAQO,EAAKzO,GACboP,MAAOwlE,EACPvlE,OAAQwlE,EACRue,OAAQhf,EAAqB6e,GAAgBvwD,EAAW,KACxDnT,OAAQ,WACJ,EAAKjtB,SAAS,CAAE0wF,WAAW,MAG9BjwF,IAEHiwF,IAAc5e,GAAqBh+C,QAG1C,GAAI6hE,EAePr8E,EACI,yBAAKhZ,UAAU,gCACX,2BACImV,IAAKxW,KAAKuxE,SACVlwE,UAAU,oCACVkE,QAASvF,KAAK8xF,mBACd/sC,MAAI,EACJiwB,UAAQ,EACRnnE,MAAOwlE,EACPvlE,OAAQwlE,EACRtlD,OAAQ,WACJ,EAAKjtB,SAAS,CAAE0wF,WAAW,MAG9BjwF,IAEHiwF,GAAa58D,QAGpB,GAAIoO,GAAWA,EAAQ2zD,UAAW,CAAC,IACrBxjF,EAAQ6vB,EAAnB2zD,UAEN,OAAQ3zD,EAAQigD,WACZ,IAAK,OAGL,IAAK,aAGL,IAAK,UACD,MAEJ,IAAK,SACD9vE,GAAG,kBAAe0G,OAAOu0C,SAASjrB,UAClC,MAEJ,IAAK,UACDhwB,GAAO,mHACP,MAEJ,IAAK,QACDA,GAAO,uDAWfiH,EACI,yBAAKhZ,UAAU,gCACX,4BAAQyL,IAAKsG,EAAKvF,MAAOwlE,EAAYvlE,OAAQwlE,EAAaujB,YAAa,EAAGC,iBAAiB,EAAMC,UAAU,KAAKnpF,MAAO,CAAE6pD,WAAY,iBAI7Ip9C,EACI,yBAAKhZ,UAAU,6BAA6ByL,IAAKA,EAAKyB,IAAI,GAAGhJ,QAASvF,KAAK8xF,qBAInF,OACI,oCACI,yBAAKzwF,UAAU,wBACVgZ,GACCw4D,GAAqB,kBAAC7rB,GAAA,EAAD,CAAc95C,KAAMA,EAAMm1C,OAAQ,KAE5D/xC,GAAQA,EAAKlK,OAAS,IAAMqwF,IAAYF,GAAW,kBAAC,GAAD,CAAcjmF,KAAMA,Q,gDA3TpDxP,EAAOT,GAAQ,IACnC+G,EAA+BtG,EAA/BsG,OAAQqH,EAAuB3N,EAAvB2N,UAAWd,EAAY7M,EAAZ6M,KAAMlK,EAAM3C,EAAN2C,EAEjC,GAAI2D,IAAW/G,EAAMmJ,YAAciF,IAAcpO,EAAMqzC,cAAe,CAClE,IAAM1a,EAAYq9D,YAAkBjvF,EAAQqH,GACtCyyB,EAAgB81D,YAAsB5vF,EAAQqH,GAE9C6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACnC6B,EAAO4iD,aAAQ5/C,EAAS,KAAM7P,GAL8B,EAOT0yF,YAAa/uF,EAAQqH,EAAWd,GAPvB,mBAO7DE,EAP6D,KAOtDC,EAPsD,KAO9CZ,EAP8C,KAOxCk3D,EAPwC,KAO9ByO,EAP8B,KAQlE3lE,EAAOE,KAAU7G,IAAI2G,EAAKzO,KAAOyO,EACjC,IAAIJ,EAAMC,YAAOG,GAWjB,OATKJ,GAAO+lE,GACJujB,aAAehvF,EAAQqH,KACvB3B,EAAG,6BAAyBI,EAAKzO,GAA9B,iBAAyCyO,EAAKS,KAA9C,sBAAgEy2D,IAOpE,CACH56D,WAAYpC,EACZssC,cAAejlC,EAEf6jF,MAAO,EACPb,WAAW,EACX5jF,QACAC,SACAZ,OACAJ,MACAtL,OApBS,KAqBTqxE,oBACAzO,WACA9zD,OACA0oB,YACAkI,gBACA+B,QAnBgB3vB,EAAZ+G,QACAutB,UAsBZ,OAAO,S,GApDkBjmC,IAAMC,YAgVxBsD,iBAAkBgxF,ICjT3Be,I,mBACF,WAAYn2F,GAAQ,IAAD,uBACf,4CAAMA,KAsFVqX,UAAY,SAAAhW,GAAU,IACViF,EAAW,EAAKtG,MAAhBsG,OACAyjE,EAAqB,EAAKxqE,MAA1BwqE,iBAER,KAAIlnE,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAAV,CAIA,IAAMud,EAAoBrV,SAASqV,mBAAqBrV,SAASsV,sBAAwBtV,SAASuV,wBAGlG,OADgB7qB,EAARyD,KAEJ,IAAK,SAKD,OAHA,EAAKvC,cACLlB,EAAMyI,uBACNzI,EAAMwI,iBAGV,IAAK,YACD,IAAKmiB,EAID,OAHA,EAAKumE,iBACLlxF,EAAMyI,uBACNzI,EAAMwI,iBAGV,MAEJ,IAAK,aACD,IAAKmiB,EAID,OAHA,EAAKkmD,aACL7wE,EAAMyI,uBACNzI,EAAMwI,iBAOFyrF,aAAehvF,EAAQyjE,IAEnCnqE,KAAgBsf,aAAa,CAAE,QAAS,4BAA6B7d,YApI1D,EAwInBs6B,uBAAyB,SAAAx1B,GAAW,IACxBI,EAAkDJ,EAAlDI,QAASqH,EAAyCzH,EAAzCyH,WAAYw8B,EAA6BjkC,EAA7BikC,YAAaC,EAAgBlkC,EAAhBkkC,YAClC/jC,EAAW,EAAKtG,MAAhBsG,OAFuB,EAGU,EAAK/G,MAAtCwqE,EAHuB,EAGvBA,iBAAkBqsB,EAHK,EAGLA,WAE1B,GAAI9vF,IAAWC,EAAf,CAEA,IAAMiM,EAAUL,KAAa1M,IAAIc,EAASqH,GAC1C,GAAK4E,EAAL,CAKA,GAHA6jF,YAAuB,CAAC7jF,IAEL8jF,aAAelsD,KAAiBksD,aAAejsD,GAClD,CACZ,GACI,EAAKq9C,QAAQpiF,QAAU,IACtB,EAAKixF,kBACFjsD,aAAQ18B,EAAY,EAAK85E,QAAQ,GAAG/pF,GAAI,EAAK+pF,QAAQ,EAAKA,QAAQpiF,OAAS,GAAG3H,KACpF,CAGE,IAFA,IAAI64F,GAAW,EACX9O,EAAU,GACL7hF,EAAI,EAAGA,EAAI,EAAK6hF,QAAQpiF,OAAQO,IACjC,EAAK6hF,QAAQ7hF,GAAGlI,GAAKiQ,EACrB85E,EAAQx4E,KAAK,EAAKw4E,QAAQ7hF,KAErB2wF,IACDA,GAAW,EACX9O,EAAQx4E,KAAKsD,IAEjBk1E,EAAQx4E,KAAK,EAAKw4E,QAAQ7hF,KAGlC,EAAK6hF,QAAUA,EAGnB,IAAMjuE,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IACnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC28E,WAAYA,EAAa,IAKjC,IADuBE,aAAelsD,IAAgBksD,aAAejsD,GAClD,CACf,IAAIosD,EAAa,EAAK/O,QAGtB,GAFA,EAAKA,QAAU,EAAKA,QAAQ51E,OAAO,SAAA1T,GAAC,OAAIA,EAAET,KAAOiQ,IAE7Cm8D,IAAqBn8D,EAAY,CACjC,IAAM8oF,EAAY,IAAI/wF,IACtB+wF,EAAUznF,IAAIrB,EAAYA,GAE1B,EAAK+oF,gBAAgBF,EAAYC,GACjC,EAAKz2F,SAAS,CACVm2F,WAAY53F,KAAKm1B,IAAIyiE,EAAa,EAAG,SAEtC,CACH,IAAM38E,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IACnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC28E,WAAY53F,KAAKm1B,IAAIyiE,EAAa,EAAG,UArMlC,EA2MnBp6D,uBAAyB,SAAA71B,GAAW,IACxBI,EAAuCJ,EAAvCI,QAAS+xB,EAA8BnyB,EAA9BmyB,YAAaolC,EAAiBv3D,EAAjBu3D,aACtBp3D,EAAW,EAAKtG,MAAhBsG,OAFuB,EAGU,EAAK/G,MAAtCwqE,EAHuB,EAGvBA,iBAAkBqsB,EAHK,EAGLA,WAE1B,GAAK14B,GACDp3D,IAAWC,EAAf,CAEA,IAAMmwF,EAAYp+D,EAAYub,OAAO,SAAC+iD,EAAaC,GAE/C,OADAD,EAAY3nF,IAAI4nF,EAAWA,GACpBD,GACR,IAAIjxF,KAED8wF,EAAa,EAAK/O,QACpBoP,EAAeL,EAAWnxF,OAE9B,EAAKoiF,QAAU,EAAKA,QAAQ51E,OAAO,SAAA1T,GAAC,OAAKs4F,EAAU5wF,IAAI1H,EAAET,MACzDm5F,GAAgB,EAAKpP,QAAQpiF,OAE7B,EAAKrF,SAAS,CAAEm2F,WAAY53F,KAAKm1B,IAAIyiE,EAAaU,EAAc,KAE3D,EAAKpP,QAAQpiF,OAKdoxF,EAAU5wF,IAAIikE,IACd,EAAK4sB,gBAAgBF,EAAYC,GALjCK,aAAsB,QAjOX,EA0OnB96D,mBAAqB,SAAA91B,GAAW,IACpBG,EAAW,EAAKtG,MAAhBsG,OADmB,EAEc,EAAK/G,MAAtCwqE,EAFmB,EAEnBA,iBAAkBqsB,EAFC,EAEDA,WAElB5jF,EAAYrM,EAAZqM,QACR,GAAKA,GACA8jF,aAAe9jF,EAAQ+G,UAExB/G,EAAQjM,UAAYD,GACnB,EAAKiwF,iBAAV,CAEA,EAAK7O,QAAU,CAACl1E,GAASiC,OAAO,EAAKizE,SACrC,IAAMjuE,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAEnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC28E,WAAYA,EAAa,MA3Pd,EA+PnB9wD,UAAY,SAACh/B,EAAQqH,GACjB,IAAM6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,KAFU,IAIvB+G,EAAY/G,EAAZ+G,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OAvRA,EA4RnBy9E,YA5RmB,qBA4RL,gDAAAptF,EAAA,0DACoB,EAAK5J,MAA3BsG,EADE,EACFA,OAAQqH,EADN,EACMA,UAEVmE,EAAS,EAAKwzB,UAAUh/B,EAAQqH,GAElC5N,EAAS,CACT,QAAS,WACT2R,SAAU,GACV8C,YAAa,IAEb1C,EAVM,gCAWSlS,KAAgBC,KAAK,CAChC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiBjE,EACjBkE,QAASolF,KACTlnF,MAAO,EAAIknF,KACXnlF,OAAQA,IAnBN,OAWN/R,EAXM,iBAuBV4U,aAAwB5U,EAAQ,EAAK2nF,SACrCv1E,KAAaC,SAASrS,EAAO2R,UAE7B,EAAKg2E,QAAU3nF,EAAO2R,SACtB,EAAK6kF,iBAA8C,IAA3Bx2F,EAAO2R,SAASpM,OAEhCykE,EAAqB,EAAKxqE,MAA1BwqE,iBACFtwD,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAEnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,MAG7B,IAAXA,EArCM,iBAsCN,EAAKiuE,QAAU,CAACv1E,KAAa1M,IAAIa,EAAQyjE,IACzCmtB,YAA0B,EAAG,EAAKxP,SAvC5B,2BAyCNwP,YAA0Bz9E,EAAO,EAAKiuE,SAEhC51E,EAAS,EAAKwzB,UAAUh/B,EAAQqH,GA3ChC,mDA8CA6lF,EAAW,KACbj6C,EAAQ,EA/CN,IAAA3vC,EAAA,qCAAAA,EAAA,qEAiDmBhK,KAAgBC,KAAK,CACtC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiB,EAAK81E,QAAQpiF,OAAS,EAAI,EAAKoiF,QAAQ,GAAG/pF,GAAK,EAChEkU,QAAS,GACT9B,MAAO,IACP+B,OAAQA,IAzDV,OAiDI/R,EAjDJ,OA2DFw5C,GAASx5C,EAAO2R,SAASpM,OAEzBqP,aAAwB5U,EAAQ,EAAK2nF,SACrCv1E,KAAaC,SAASrS,EAAO2R,UAE7B,EAAKg2E,QAAU3nF,EAAO2R,SAAS+C,OAAO,EAAKizE,SAC3C,EAAK6O,iBAA8C,IAA3Bx2F,EAAO2R,SAASpM,OAEhCykE,EAAqB,EAAKxqE,MAA1BwqE,iBACFtwD,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAEnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC88E,iBAAkB,EAAKA,iBACvBH,WAAYr2F,EAAOyU,cA1ErB,oDAgDE,EAAK+hF,oBAAoBh9C,EAAQi6C,GAhDnC,uHA5RK,EA4WnBjxF,YAAc,WACVw0F,aAAsB,MADN,IAGRhtB,EAAqB,EAAKxqE,MAA1BwqE,iBACFtwD,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,KACpC,IAAXtwD,GACA09E,YAAgC19E,EAAO,EAAKiuE,UAlXjC,EAsXnBqL,WAAa,WAAO,IACRzsF,EAAW,EAAKtG,MAAhBsG,OACAyjE,EAAqB,EAAKxqE,MAA1BwqE,iBAEFv3D,EAAUL,KAAa1M,IAAIa,EAAQyjE,GACzC,GAAKv3D,EAAL,CALe,IAOP+G,EAAY/G,EAAZ+G,QACR,GAAKA,EAAL,CAEA,IAAIsiB,EAAQ,KACZ,OAAQtiB,EAAQ,UACZ,IAAK,mBAGDsiB,EAFsBtiB,EAAdspB,UAGR,MAEJ,IAAK,yBAGDhH,EAFkBtiB,EAAVxN,MAGR,MAEJ,IAAK,kBAGD8vB,EAFqBtiB,EAAb5C,SAGR,MAEJ,IAAK,eAGDklB,EAFkBtiB,EAAVxN,MAGR,MAEJ,IAAK,cAAgB,IACT+6B,EAAavtB,EAAbutB,SACR,IAAKA,EAAU,OAFC,IAIRjE,EAAsCiE,EAAtCjE,UAAWlsB,EAA2BmwB,EAA3BnwB,SAAU5K,EAAiB+6B,EAAjB/6B,MAAOse,EAAUyc,EAAVzc,MAEpC,GAAIwY,EAAW,CACXhH,EAAQgH,EACR,MAGJ,GAAIlsB,EAAU,CACVklB,EAAQllB,EACR,MAGJ,GAAI5K,EAAO,CACP8vB,EAAQ9vB,EACR,MAGJ,GAAIse,EAAO,CACPwR,EAAQxR,EACR,MAEJ,MAEJ,IAAK,eAGDwR,EAFkBtiB,EAAV8Q,MAOhB2oE,YAAUn3D,EAAOrpB,MA7bF,EAgcnB+sB,cAAgB,WAAO,IACXj5B,EAAW,EAAKtG,MAAhBsG,OACAyjE,EAAqB,EAAKxqE,MAA1BwqE,iBAERvqC,aAAgBl5B,EAAQ,CAACyjE,KApcV,EAucnB7/D,aAAe,WACX,EAAKktF,oBAxcU,EA2cnB5E,iBAAmB,SAAA/4E,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKiuE,QAAQpiF,QA/cjB,EAkdnBitF,eAAiB,SAAAlxF,GACTA,GACAA,EAAMyI,kBAFY,IAKdigE,EAAqB,EAAKxqE,MAA1BwqE,iBAEF9U,EADQ,EAAKyyB,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IACzB,EAE1B,OAAO,EAAK0oB,UAAUx9B,EAAW,WACzBA,IAAc,EAAKyyB,QAAQpiF,OAAS,GACpC,EAAK+xF,kBA7dE,EAkenBA,aAlemB,qBAkeJ,wCAAAztF,EAAA,0DACmB,EAAK5J,MAA3BsG,EADG,EACHA,OAAQqH,EADL,EACKA,UACRo8D,EAAqB,EAAKxqE,MAA1BwqE,iBAEFj4D,EAAS,EAAKwzB,UAAUh/B,EAAQqH,GAElC5N,EAAS,CACT,QAAS,WACT2R,SAAU,GACV8C,YAAa,IAEb1C,EAXO,gCAYQlS,KAAgBC,KAAK,CAChC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiBm4D,EACjBl4D,OAAQ,EACR9B,MAAOknF,KACPnlF,OAAQA,IApBL,OAYP/R,EAZO,cAwBX4U,aAAwB5U,EAAQ,EAAK2nF,SACrCv1E,KAAaC,SAASrS,EAAO2R,UAE7B,EAAKg2E,QAAU,EAAKA,QAAQjzE,OAAO1U,EAAO2R,UAEpC+H,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAEnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC28E,WAAYr2F,EAAOyU,cAlCZ,0CAleI,EAwgBnBk+E,aAAe,SAAAj5E,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GA5gBL,EA+gBnBy4D,WAAa,SAAA7wE,GACLA,GACAA,EAAMyI,kBAFQ,IAKVigE,EAAqB,EAAKxqE,MAA1BwqE,iBAEF9U,EADQ,EAAKyyB,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IACzB,EAE1B,OAAO,EAAK0oB,UAAUx9B,EAAW,WACX,IAAdA,GACA,EAAKqiC,cA1hBE,EA+hBnBA,SA/hBmB,qBA+hBR,wCAAA1tF,EAAA,0DACuB,EAAK5J,MAA3BsG,EADD,EACCA,OAAQqH,EADT,EACSA,UACRo8D,EAAqB,EAAKxqE,MAA1BwqE,iBAEFj4D,EAAS,EAAKwzB,UAAUh/B,EAAQqH,GAElC5N,EAAS,CACT,QAAS,WACT2R,SAAU,GACV8C,YAAa,IAEb1C,EAXG,gCAYYlS,KAAgBC,KAAK,CAChC,QAAS,qBACT0G,QAASD,EACTwJ,MAAO,GACP6B,eAAgB,EAChBC,gBAAiBm4D,EACjBl4D,QAASolF,KACTlnF,MAAOknF,KAAoB,EAC3BnlF,OAAQA,IApBT,OAYH/R,EAZG,cAwBP4U,aAAwB5U,EAAQ,EAAK2nF,SACrCv1E,KAAaC,SAASrS,EAAO2R,UAE7B,EAAK6kF,iBAA8C,IAA3Bx2F,EAAO2R,SAASpM,OACxC,EAAKoiF,QAAU3nF,EAAO2R,SAAS+C,OAAO,EAAKizE,SAErCjuE,EAAQ,EAAKiuE,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAEnD,EAAK9pE,SAAS,CACVyyF,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,GACxC88E,iBAAkB,EAAKA,iBACvBH,WAAYr2F,EAAOyU,cApChB,0CA/hBQ,EAukBnBi+E,UAAY,SAACh5E,EAAOgF,GAChB,QAAIhF,EAAQ,OACRA,GAAS,EAAKiuE,QAAQpiF,UAE1B,EAAKrF,SACD,CACI8pE,iBAAkB,EAAK2d,QAAQjuE,GAAO9b,GACtC+0F,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,IAE5CgF,GAGJy4E,YAA0Bz9E,EAAO,EAAKiuE,UAC/B,KArlBQ,EAwlBnBiP,gBAAkB,SAACF,EAAYC,GAK3B,IAL0C,IAClC3sB,EAAqB,EAAKxqE,MAA1BwqE,iBAEFtwD,EAAQg9E,EAAWl5E,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,IAC7CwtB,EAAS,EACJ1xF,EAAI4T,EAAQ,EAAG5T,GAAK,EAAGA,IAC5B,GAAI6wF,IAAcA,EAAU5wF,IAAI2wF,EAAW5wF,GAAGlI,IAAK,CAC/C45F,EAASd,EAAW5wF,GAAGlI,GACvB,MAGR,IAAK45F,EACD,IAAK,IAAI1xF,EAAI4T,EAAQ,EAAG5T,EAAI4wF,EAAWnxF,OAAQO,IAC3C,GAAI6wF,IAAcA,EAAU5wF,IAAI2wF,EAAW5wF,GAAGlI,IAAK,CAC/C45F,EAASd,EAAW5wF,GAAGlI,GACvB,MAKZ,GAAK45F,EAAL,CAEA,IAAMtiC,EAAY,EAAKyyB,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAO45F,IAEvD,OAAO,EAAK9E,UAAUx9B,EAAW,WACX,IAAdA,EACA,EAAKqiC,WACEriC,IAAc,EAAKyyB,QAAQpiF,OAAS,GAC3C,EAAK+xF,mBApnBE,EAynBnBD,iBAAmB,WACf,EAAKn3F,SAAS,CAAEu3F,0BAA0B,KA1nB3B,EA6nBnBC,kBAAoB,WAChB,EAAKx3F,SAAS,CAAEu3F,0BAA0B,KA9nB3B,EAioBnBz9C,WAAa,WACT,EAAK95C,SAAS,CAAEu3F,0BAA0B,IAD3B,IAGPlxF,EAAW,EAAKtG,MAAhBsG,OAHO,EAI4B,EAAK/G,MAAxCwqE,EAJO,EAIPA,iBAAkB2tB,EAJX,EAIWA,aAEpBllF,EAAUL,KAAa1M,IAAIa,EAAQyjE,GACzC,GAAKv3D,EAAL,CAPe,IASPmtB,EAA+DntB,EAA/DmtB,6BAA8BC,EAAiCptB,EAAjCotB,8BACjBD,GAAgCC,IAGrDhgC,KAAgBC,KAAK,CACjB,QAAS,iBACT0G,QAASD,EACTgyB,YAAa,CAACyxC,GACd4tB,OAAQ/3D,GAAgC83D,MAlpB7B,EAspBnBE,yBAA2B,SAAAv2F,GACvB,EAAKpB,SAAS,CAAEy3F,aAAcr2F,EAAME,OAAO65B,WAvpB5B,EA0pBnBy8D,mBAAqB,WAAO,IAGpBC,EAAiB,uBACrB,OAHuB,EAAKv4F,MAApBo3D,YAIJ,IAAK,uBACDmhC,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB,EAAK73F,SAAS,CACV02D,WAAYmhC,KA9qBD,EAkrBnB3vB,eAAiB,SAAC7hE,EAAQqH,GACtB,IAAM6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,OAAO,EAFe,IAI5BwkB,EAA8BxkB,EAA9BwkB,iBAAkBzd,EAAY/G,EAAZ+G,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOyd,IA9rBA,EAmsBnBi8D,uBAAyB,SAAA5xF,GACrB,EAAK6xF,gBAAkB7xF,EAAMw0C,eApsBd,EAusBnBs9C,mBAAqB,SAAA9xF,GAAU,IACnB6xF,EADkB,gBAClBA,gBACR,EAAKA,gBAAkB,KAEnB7xF,EAAMw0C,gBAAkBq9C,GAE5B,EAAK3wF,eA1sBL,EAAKwS,gBAAkB,IAAIC,IAAgB,EAAKqC,WAChD,EAAKqwE,QAAU,GAJA,MAMe,EAAK1nF,MAA3BsG,EANO,EAMPA,OAAQqH,EAND,EAMCA,UAND,OAQf,EAAKpO,MAAQ,CACTo3D,WAAY,uBACZjuD,WAAYpC,EACZssC,cAAejlC,EACfo8D,iBAAkBp8D,EAClB+kF,cAAc,EACdF,kBAAkB,EAClBgF,0BAA0B,EAC1BE,cAAc,GAhBH,E,mFAoBGlxF,EAAWC,GAAY,IAAD,EACVvH,KAAKc,MAA3BsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UADwB,EAUpCzO,KAAKK,MAPLo3D,EAHoC,EAGpCA,WACAoT,EAJoC,EAIpCA,iBACAytB,EALoC,EAKpCA,yBACAjB,EANoC,EAMpCA,iBACA7D,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACA4D,EAToC,EASpCA,WAGJ,OAAI3vF,EAAUkwD,aAAeA,IAIzBnwD,EAAUF,SAAWA,IAIrBE,EAAUmH,YAAcA,IAIxBlH,EAAUsjE,mBAAqBA,IAI/BtjE,EAAUsxF,kBAAoBvF,IAI9B/rF,EAAUisF,eAAiBA,IAI3BjsF,EAAU8vF,mBAAqBA,IAI/B9vF,EAAU2vF,aAAeA,GAIzB3vF,EAAU+wF,2BAA6BA,W,0CAQ3Ct4F,KAAK83F,cAEL7hF,IAAgBC,IAAIlW,KAAK6V,iBACzB5C,KAAaxL,GAAG,uBAAwBzH,KAAK88B,wBAC7C7pB,KAAaxL,GAAG,mBAAoBzH,KAAK+8B,oBACzC9pB,KAAaxL,GAAG,uBAAwBzH,KAAKy8B,0B,6CAI7CxmB,IAAgBE,OAAOnW,KAAK6V,iBAC5B5C,KAAavL,IAAI,uBAAwB1H,KAAK88B,wBAC9C7pB,KAAavL,IAAI,mBAAoB1H,KAAK+8B,oBAC1C9pB,KAAavL,IAAI,uBAAwB1H,KAAKy8B,0B,+BA4nBxC,IAAD,EACiBz8B,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EADX,EAWDzD,KAAKK,MARLo3D,EAHC,EAGDA,WACAoT,EAJC,EAIDA,iBACAytB,EALC,EAKDA,yBACAE,EANC,EAMDA,aACAnB,EAPC,EAODA,iBACA7D,EARC,EAQDA,aACAF,EATC,EASDA,iBACA4D,EAVC,EAUDA,WAGA38E,GAAS,EACT28E,GAAcG,IACd98E,EAAQva,KAAKwoF,QAAQnqE,UAAU,SAAAnf,GAAC,OAAIA,EAAET,KAAOosE,KAEjD,IAAMypB,EAAWh1F,KAAKm1B,IAAIz0B,KAAKwoF,QAAQpiF,OAAQ8wF,GAGvCx2D,EADQztB,KAAa1M,IAAIa,EAAQyjE,GACjCnqC,6BAEFsoC,EAAegP,aAAoB5wE,EAAQyjE,GAC3C5B,EAAiBjpE,KAAKipE,eAAe7hE,EAAQyjE,GAE/CiuB,EAA4B,GAE5BA,EADA1C,aAAehvF,EAAQyjE,GACKpnE,EAAE,yBACvBkzF,aAAmBvvF,EAAQyjE,GACNpnE,EAAE,uBAEFA,EAAE,yBAElC,IAAMs1F,EAAqBT,EACvB,kBAAC,IAAD,CACI50F,QAASC,IACTC,mBAAoB,EACpBN,KAAMg1F,EACNz0F,QAAS7D,KAAKu4F,kBACdz0F,kBAAgB,qBAChB,kBAAC,IAAD,CAAarF,GAAG,qBAAqBgF,EAAE,YACvC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KAAoB69C,GACnBp4D,GACG,kBAACl8B,EAAA,EAAD,CACIG,MAAOlB,EAAE,gBACTgB,QACI,kBAACu3B,GAAA,EAAD,CAAUr5B,MAAM,UAAUL,MAAM,YAAYiC,SAAUvE,KAAK04F,2BAE/Dx8D,QAASs8D,KAIrB,kBAAC/9D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAASvF,KAAKu4F,kBAAmB51F,MAAM,WAC1Cc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAASvF,KAAK66C,WAAYl4C,MAAM,WACnCc,EAAE,SAIf,KA9DC,EAgEmC0yF,YAAa/uF,EAAQyjE,EAAkBmuB,MAhE1E,mBAgEiB9rF,GAhEjB,gBAkECP,GAlED,KAkEUO,EAAOA,EAAKzO,GAAK,GAC5BqJ,EAAQrE,EAAE,eASd,OARI+yF,aAAepvF,EAAQyjE,GACvB/iE,EAAQ,GACDsuF,aAAehvF,EAAQyjE,GAC9B/iE,EAAQrE,EAAE,eACHkzF,aAAmBvvF,EAAQyjE,KAClC/iE,EAAQrE,EAAE,cAIV,yBAAKpC,UAAWoE,IAAW,eAAgBgyD,IACvC,yBAAKp2D,UAAU,uBACX,kBAAC,GAAD,CAAW+F,OAAQA,EAAQqH,UAAWo8D,IACtC,kBAAC,GAAD,CACI/iE,MAAOA,EACPc,SAAU0rF,EAAW,GAAK/5E,GAAS,EAAIg6E,KAAOC,aAAa,KAAMF,EAAW/5E,EAAO+5E,GAAY,OAEnG,kBAAC,GAAD,CAA2BxsF,MAAOrE,EAAE,QAASkJ,OAAQA,EAAQuoB,SAAUshE,aAAepvF,EAAQyjE,GAAmBtlE,QAASvF,KAAK6zF,aAC/H,kBAAC,GAAD,CACI/rF,MAAOrE,EAAE,WACTyxB,UAAW+zC,EACX1jE,QAASvF,KAAKqgC,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBv4B,MAAOrE,EAAE,UAAWyxB,UAAW8zC,EAAczjE,QAASvF,KAAKgL,cAChF,kBAACiB,GAAD,OAEJ,kBAAC,GAAD,CAAyBnE,MAAOrE,EAAE,SAAU8B,QAASvF,KAAKqD,aACtD,kBAACsT,EAAA,EAAD,QAGR,yBAAKtV,UAAU,uBAAuBuK,YAAa5L,KAAK+zF,uBAAwBxuF,QAASvF,KAAKi0F,oBAC1F,yBAAK5yF,UAAU,4BACX,kBAAC,GAAD,CAAmB6zB,UAAWo+D,EAAkBd,MAAI,EAACjtF,QAASvF,KAAKqzF,gBAC/D,kBAAC,GAAD,QAIR,yBAAKhyF,UAAU,+BACX,kBAAC,GAAD,CACI+F,OAAQA,EACRqH,UAAWo8D,EACXl9D,KAAMqrF,KACNzzF,QAASvF,KAAKqzF,kBAItB,yBAAKhyF,UAAU,6BACX,kBAAC,GAAD,CAAmB6zB,UAAWs+D,EAAchB,MAAI,EAACjtF,QAASvF,KAAKgzE,YAC3D,kBAAC,GAAD,CAAoBplE,MAAO,CAAE+kC,UAAW,uBAIpD,yBAAKtxC,UAAU,wBACd03F,O,GA10BSp3F,IAAMC,YAq1BjBsD,iBAAkB+xF,ICjxBlBgC,I,mBA1GX,WAAYn4F,GAAQ,IAAD,uBACf,4CAAMA,KA0CV4L,uBAAyB,SAAAzF,GAAW,IAAD,EACL,EAAKnG,MAAvBsG,EADuB,EACvBA,OAAQyF,EADe,EACfA,MAEhB,GAAIzF,IAAWH,EAAOG,QAAUyF,EAAM5C,IAAIxL,KAAOwI,EAAO0F,OAAQ,CAC5D,IAAMO,EAAOE,KAAU7G,IAAIU,EAAO0F,SAAW,EAAKtM,MAAM6M,KACxD,EAAKnM,SAAS,CACVmM,WAjDO,EAsDnBgsF,uBAAyB,SAAAjyF,GAAW,IAAD,EACL,EAAKnG,MAAvBsG,EADuB,EACvBA,OAAQyF,EADe,EACfA,MAGhB,GAFe29B,aAAcpjC,KAEdH,EAAO8gC,QAAUl7B,EAAM5C,IAAIxL,KAAOwI,EAAO0F,OAAQ,CAC5D,IAAMO,EAAOE,KAAU7G,IAAIU,EAAO0F,SAAW,EAAKtM,MAAM6M,KACxD,EAAKnM,SAAS,CACVmM,WA7DO,EAkEnB4kF,mBAAqB,SAAA3vF,GACbA,GAAOA,EAAMyI,kBADS,IAGlB/G,EAAY,EAAK/C,MAAjB+C,QAERA,GAAWA,EAAQ1B,IAvEJ,EA0EnBg3F,iBAAmB,SAAAh3F,GACXA,GAAOA,EAAMyI,kBADO,IAGhBwuF,EAAe,EAAKt4F,MAApBs4F,WAERA,GAAcA,EAAWj3F,IA/EV,MAGW,EAAKrB,MAAvBsG,EAHO,EAGPA,OAAQyF,EAHD,EAGCA,MAELK,EAASL,EAAd5C,IALS,OAMfiD,EAAOE,KAAU7G,IAAI2G,EAAKzO,KAAOyO,EAEjC,EAAK7M,MAAQ,CACTmJ,WAAYpC,EACZs6B,UAAW70B,EACXgB,MAAOwrF,MACPvrF,OAAQurF,MACRnsF,KAAMA,GAbK,E,iFAkCfE,KAAU3F,GAAG,uBAAwBzH,KAAK0M,wBAC1CU,KAAU3F,GAAG,uBAAwBzH,KAAKk5F,0B,6CAI1C9rF,KAAU1F,IAAI,uBAAwB1H,KAAK0M,wBAC3CU,KAAU1F,IAAI,uBAAwB1H,KAAKk5F,0B,+BA0CrC,IACEhsF,EAASlN,KAAKK,MAAd6M,KACR,IAAKA,EAAM,OAAO,KAElB,IAAM2V,EAAOzV,KAAU0V,QAAQ5V,EAAKzO,KAAOyO,EAAK2V,KAC1C/V,EAAMM,KAAUksF,WAAWz2E,GAEjC,OACI,yBAAKxhB,UAAU,uBAAuBkE,QAASvF,KAAK8xF,oBAChD,yBAAKzwF,UAAU,6BAA6ByL,IAAKA,EAAKyB,IAAI,GAAGhJ,QAASvF,KAAKm5F,mBAC3E,kBAACnyC,GAAA,EAAD,CAAc95C,KAAMA,Q,gDA3EApM,EAAOT,GAAQ,IACnC+G,EAAkBtG,EAAlBsG,OAAQyF,EAAU/L,EAAV+L,MAEhB,OAAIzF,IAAW/G,EAAMmJ,YAAcqD,IAAUxM,EAAMqhC,UACxC,CACHl4B,WAAYpC,EACZs6B,UAAW70B,EACXgB,MAAOwrF,MACPvrF,OAAQurF,MACRnsF,KAAML,EAAM5C,KAIb,S,GA/ByBtI,IAAMC,YC2B/B23F,G,iLA5BD,IAAD,EAC2Bv5F,KAAKc,MAA7BsG,EADH,EACGA,OAAQgO,EADX,EACWA,KAAMxH,EADjB,EACiBA,MAEtB,OACI,yBAAKvM,UAAU,aAAauM,MAAOA,GAC/B,yBAAKvM,UAAU,sBACX,kBAAC,KAAD,CAAU+F,OAAQA,EAAQO,mBAAmB,IAC7C,yBAAKtG,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC+jC,GAAA,EAAD,CAAezxB,OAAQ,CAAE,QAAS,oBAAqBtM,QAASD,MAEnEgO,GACG,yBAAK/T,UAAU,uBACX,8BAAO+T,W,GAdRzT,IAAMC,W,iOCqB/B43F,G,YACF,WAAY14F,GAAQ,IAAD,uBACf,4CAAMA,KA6EVuO,cAAgB,SAAAlN,GACZ,KAAIwB,IAAa2L,OAAOlJ,OAAS,KAI7BjE,EAAMoN,YAIV,OAAQpN,EAAMyD,KACV,IAAK,SAID,OAHA,EAAKvC,cACLlB,EAAMwI,sBACNxI,EAAMyI,kBAGV,IAAK,YAID,OAHA,EAAKooE,aACL7wE,EAAMyI,uBACNzI,EAAMwI,iBAGV,IAAK,aAID,OAHA,EAAK0oF,iBACLlxF,EAAMyI,uBACNzI,EAAMwI,mBAvGC,EA6GnBmtF,YA7GmB,qBA6GL,8BAAAptF,EAAA,wDACFtD,EAAW,EAAKtG,MAAhBsG,OAEH4zB,cAAc5zB,GAHT,iEAKW1G,KAAgBC,KAAK,CACtC,QAAS,uBACTgI,QAAS6hC,aAAcpjC,GACvBuL,OAAQ,EACR9B,MAAO,MATD,OAKJhQ,EALI,OAYV,EAAK2nF,QAAU3nF,EAAO44F,OACtB,EAAKpC,iBAA4C,IAAzBx2F,EAAO44F,OAAOrzF,OAExB,EAEd,EAAKrF,SAAS,CACVqd,aAHU,EAIVo1E,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMV4D,WAAYr2F,EAAOyU,cAGvBokF,YAAiCtyF,EATnB,EASkC,EAAKohF,SAxB3C,0CA7GK,EAwInBnlF,YAAc,WACVulC,aAA6B,OAzId,EA4InBirD,WAAa,WAAO,IACRzsF,EAAW,EAAKtG,MAAhBsG,OADO,EAEsB,EAAK/G,MAAlC+d,EAFO,EAEPA,aAAc84E,EAFP,EAEOA,WAEhB/uF,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,EAAL,CAEA,IAAIoS,GAAS,EACT28E,IACA38E,EAAQ6D,GAGZ,IAAMvR,EACF0N,EAAQ,GAAKA,EAAQ,EAAKiuE,QAAQpiF,OAASuzF,aAAgB,EAAKnR,QAAQjuE,IAAUu0B,aAAiB1nC,GACvG,GAAKyF,GACAA,EAAM5C,IAAX,CAEA,IAAMiD,EAAOE,KAAU7G,IAAIsG,EAAM5C,IAAIxL,KAAOoO,EAAM5C,IAC7CiD,GAEL0sF,YAAe1sF,EAAMA,EAAKzO,GAAK,OAAQ0J,EAAM,kBAAMiF,KAAUysF,oBAAoBzyF,EAAQ8F,EAAKzO,SAhK/E,EAmKnB4hC,cAAgB,WAAO,IACXj5B,EAAW,EAAKtG,MAAhBsG,OADU,EAEmB,EAAK/G,MAAlC+d,EAFU,EAEVA,aAEJ7D,GAAS,EAJK,EAEI28E,aAIlB38E,EAAQ6D,GAGZ,IAAI07E,EAAY,KAGhB,GADkB,EAAKtR,SAAWjuE,GAAS,GAAKA,EAAQ,EAAKiuE,QAAQpiF,OACtD,CACX,IAAMyG,EAAQ8sF,aAAgB,EAAKnR,QAAQjuE,IAC3C,IAAK1N,EAAO,OAFD,IAIAK,EAASL,EAAd5C,IACN,IAAKiD,EAAM,OAEX4sF,EAAY,CACR,QAAS,cACTr7F,GAAIyO,EAAKzO,QAEV,CACH,IAAMs7F,EAAYjrD,aAAiB1nC,GACnC,IAAK2yF,EAAW,OAFb,IAIU7sF,EAAS6sF,EAAd9vF,IACR,IAAKiD,EAAM,OAEX,IAAM2V,EAAOzV,KAAU0V,QAAQ5V,EAAKzO,IACpC,IAAKokB,EAAM,OAEXi3E,EAAY,CACR,QAAS,gBACT14D,KAAMve,EACNve,KAAM,IAId,GAAKw1F,EAAL,CAEA,IAAM5hE,EAAsB,CACxB,QAAS,oBACTrrB,MAAOitF,EACP9gE,UAAW,KACXC,uBAAwB,GACxBprB,MAAOwrF,MACPvrF,OAAQurF,MACR9gE,QAAS,CACL,QAAS,gBACTjoB,KAAM,GACNkoB,SAAU,MAEdU,IAAK,GAGThC,aAAQgB,KA5NO,EA+NnBltB,aA/NmB,qBA+NJ,gDAAAN,EAAA,wDACHtD,EAAW,EAAKtG,MAAhBsG,OADG,EAOP,EAAK/G,MAJL+d,EAHO,EAGPA,aACA84E,EAJO,EAIPA,WACA1D,EALO,EAKPA,aACAF,EANO,EAMPA,iBAGA/4E,GAAS,EACT28E,IACA38E,EAAQ6D,GAGNvR,EAAQ0N,EAAQ,GAAKA,EAAQ,EAAKiuE,QAAQpiF,OAASuzF,aAAgB,EAAKnR,QAAQjuE,IAAUu0B,aAAiB1nC,GAdtG,oDAiBH3I,EAAOoO,EAAPpO,GAjBG,oEAoBLiC,KAAgBC,KAAK,CACvB,QAAS,qBACTq5F,iBAAkBv7F,IAtBX,WAyBX,EAAK+pF,QAAQ92E,OAAO6I,EAAO,GACtB,EAAKiuE,QAAQpiF,OA1BP,wBA2BP,EAAK/C,cA3BE,8BA+BX,EAAKtC,SAAS,CACVm2F,WAAYA,EAAa,KAGzB1D,EAnCO,wBAoCDz9B,EAAY33C,EAAe,EApC1B,kBAsCA,EAAKm1E,UAAUx9B,EAAW,CAAEmhC,WAAYA,EAAa,GAAK,WAC3C,IAAdnhC,GACA,EAAKqiC,cAxCN,YA6CP9E,EA7CO,wBA8CDv9B,EAAY33C,EA9CX,kBAgDA,EAAKm1E,UAAUx9B,EAAW,CAAEmhC,WAAYA,EAAa,GAAK,WACzDnhC,IAAc,EAAKyyB,QAAQpiF,OAAS,GACpC,EAAK+xF,kBAlDN,0CA/NI,EAuRnB7E,iBAAmB,SAAA/4E,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKiuE,QAAQpiF,QA3RjB,EA8RnBitF,eAAiB,SAAAlxF,GACTA,GACAA,EAAMyI,kBAFY,IAMhBmrD,EADmB,EAAK11D,MAAtB+d,aACyB,EAEjC,OAAO,EAAKm1E,UAAUx9B,EAAW,GAAK,WAC9BA,IAAc,EAAKyyB,QAAQpiF,OAAS,GACpC,EAAK+xF,kBAxSE,EA6SnBA,aA7SmB,qBA6SJ,sBAAAztF,EAAA,wHA7SI,EAiTnB8oF,aAAe,SAAAj5E,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GArTL,EAwTnBy4D,WAAa,SAAA7wE,GACLA,GACAA,EAAMyI,kBAFQ,IAMZmrD,EADmB,EAAK11D,MAAtB+d,aACyB,EAEjC,OAAO,EAAKm1E,UAAUx9B,EAAW,GAAK,WAChB,IAAdA,GACA,EAAKqiC,cAlUE,EAuUnBA,SAvUmB,qBAuUR,sBAAA1tF,EAAA,wHAvUQ,EA2UnB6oF,UAAY,SAACh5E,EAAO0/E,EAAK16E,GACrB,GAAIhF,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS,EAAKiuE,QAAQpiF,OAAQ,OAAO,EAEzC,EAAKrF,S,uVAAL,EAEQqd,aAAc7D,GACX0/E,EAHX,CAIQzG,aAAc,EAAKA,aAAaj5E,GAChC+4E,iBAAkB,EAAKA,iBAAiB/4E,KAE5CgF,GAX8B,IAc1BnY,EAAW,EAAKtG,MAAhBsG,OAGR,OADAsyF,YAAiCtyF,EAAQmT,EAAO,EAAKiuE,UAC9C,GAzVP,EAAKA,QAAU,GACf,EAAK3yE,gBAAkB,IAAIC,IAAgB,EAAKzG,eAJjC,MAMY,EAAKvO,MAAxBsG,EANO,EAMPA,OAAQuF,EAND,EAMCA,OAND,OAQf,EAAKtM,MAAQ,CACTmJ,WAAYpC,EACZ8yF,WAAYvtF,EACZyR,aAAc,EACdo1E,cAAc,EACdF,kBAAkB,EAClBgF,0BAA0B,GAdf,E,mFAkBGhxF,EAAWC,GAAY,IAAD,EACVvH,KAAKc,MAA3BsG,EADgC,EAChCA,OAAQqH,EADwB,EACxBA,UADwB,EASpCzO,KAAKK,MANL85F,EAHoC,EAGpCA,cACA7G,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACA6D,EANoC,EAMpCA,iBACAH,EAPoC,EAOpCA,WACAoB,EARoC,EAQpCA,yBAGJ,OAAIhxF,EAAUF,SAAWA,IAIrBE,EAAUmH,YAAcA,IAIxBlH,EAAU4yF,gBAAkBA,IAI5B5yF,EAAUsxF,kBAAoBvF,IAI9B/rF,EAAUisF,eAAiBA,IAI3BjsF,EAAU8vF,mBAAqBA,IAI/B9vF,EAAU2vF,aAAeA,GAIzB3vF,EAAU+wF,2BAA6BA,U,0CAO1B,IACTlxF,EAAWpH,KAAKc,MAAhBsG,OACFyF,EAAQiiC,aAAiB1nC,GAC/B2nC,YAA8B3nC,EAAQ,CAACyF,IAEvC7M,KAAK83F,YAAYjrF,GAEjBoJ,IAAgBC,IAAIlW,KAAK6V,mB,6CAIzBI,IAAgBE,OAAOnW,KAAK6V,mB,+BAoRtB,IAAD,EACiB7V,KAAKc,MAAnBsG,EADH,EACGA,OAAQ3D,EADX,EACWA,EADX,EAODzD,KAAKK,MAJL+d,EAHC,EAGDA,aACAo1E,EAJC,EAIDA,aACAF,EALC,EAKDA,iBACA4D,EANC,EAMDA,WAGA38E,GAAS,EACT28E,IACA38E,EAAQ6D,GAGZ,IAAMg8E,EAAY7/E,GAAS,GAAKA,EAAQva,KAAKwoF,QAAQpiF,OAC/Ci0F,EAAeD,EAAYT,aAAgB35F,KAAKwoF,QAAQjuE,IAAU,KAClE+/E,EAAkBD,EAAeA,EAAapwF,IAAM,KAEpD4C,GADmBytF,EAAkBA,EAAgBz3E,MAAQzV,KAAU0V,QAAQw3E,EAAgB77F,IAAM,MAC1E47F,EAAevrD,aAAiB1nC,GAC3DmzF,EAAmBH,EAAYp6F,KAAKwoF,QAAQjuE,GAAS,KAC9CrN,EAASL,EAAd5C,IACFy/B,EAAOt/B,cAAShD,GAEtB,OACI,yBAAK/F,UAAWoE,IAAW,eAAgB,yBACvC,yBAAKpE,UAAU,uBACX,kBAAC,GAAD,CAAkB+F,OAAQA,EAAQgO,KAAMolF,aAAwBD,KAChE,kBAAC,GAAD,CACIzyF,MAAOrE,EAAE,eACTmF,SAAUsuF,EAAa,GAAK38E,GAAS,EAAIg6E,KAAOC,aAAa,KAAMj6E,EAAQ,EAAG28E,GAAc,OAEhG,yBAAKtpF,MAAO,CAAEC,MAAO,MACrB,kBAAC,GAAD,CAA2B/F,MAAOrE,EAAE,QAASkJ,OAAQO,EAAKzO,GAAI8G,QAASvF,KAAK6zF,aAC5E,kBAAC,GAAD,CAA2B/rF,MAAOrE,EAAE,WAAYkJ,OAAQO,EAAKzO,GAAI8G,QAASvF,KAAKqgC,eAC3E,kBAAC,GAAD,OAEHqJ,GACG,kBAAC,GAAD,CAAyB5hC,MAAOrE,EAAE,UAAW8B,QAASvF,KAAKgL,cACvD,kBAACiB,GAAD,OAGR,kBAAC,GAAD,CAAyBnE,MAAOrE,EAAE,SAAU8B,QAASvF,KAAKqD,aACtD,kBAACsT,EAAA,EAAD,QAGR,yBAAKtV,UAAU,uBAAuBkE,QAASvF,KAAKqzF,gBAChD,yBAAKhyF,UAAU,4BACX,kBAAC,GAAD,CAAmB6zB,UAAWs+D,EAAchB,MAAI,EAACjtF,QAASvF,KAAKgzE,YAC3D,kBAAC,GAAD,QAIR,yBAAK3xE,UAAU,+BACX,kBAAC,GAAD,CAA2B+F,OAAQA,EAAQyF,MAAOA,EAAOhJ,QAAS7D,KAAKqD,YAAa+1F,WAAYp5F,KAAKqzF,kBAGzG,yBAAKhyF,UAAU,6BACX,kBAAC,GAAD,CAAmB6zB,UAAWo+D,EAAkBd,MAAI,EAACjtF,QAASvF,KAAKqzF,gBAC/D,kBAAC,GAAD,CAAoBzlF,MAAO,CAAE+kC,UAAW,4B,GA1ZnChxC,IAAMC,WAuaxBsD,iBAAkBs0F,IClb3BiB,I,kNACFp6F,MAAQ,G,EAqBRq6F,mBAAqB,WAAO,IAChBjC,EAAW,EAAKp4F,MAAhBo4F,OAER,EAAK13F,SAAS,CAAE03F,QAASA,K,wEAGnB,IAAD,EAC0Bz4F,KAAKc,MAA5BsG,EADH,EACGA,OAAQvD,EADX,EACWA,QAASJ,EADpB,EACoBA,EADpB,EAEuCzD,KAAKK,MAAzCs6F,EAFH,EAEGA,wBAAyBlC,EAF5B,EAE4BA,OAEjC,OACI,kBAAC,IAAD,CACI/0F,QAASC,IACTL,MAAM,EACNM,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,EAAO40F,IAC9B30F,kBAAgB,uBAChB,kBAAC,IAAD,CAAarF,GAAG,uBAAuB6N,aAAkBlF,GAAQ,EAAO3D,IACxE,kBAAC,IAAD,KACI,yBAAKpC,UAAU,yBACX,kBAAC,KAAD,CAAU+F,OAAQA,IAClB,6BACI,kBAAC6zC,GAAA,EAAD,CAAmBx8C,GAAG,6BAAtB,wCAIIk8F,GACI,kBAACn2F,EAAA,EAAD,CACIC,QACI,kBAACu3B,GAAA,EAAD,CAAUE,QAASu8D,EAAQl0F,SAAUvE,KAAK06F,mBAAoB/3F,MAAM,YAExEgC,MACIq2B,cAAc5zB,GAAd,0BACyBkF,aAAkBlF,GAAQ,EAAO3D,IACpD,yBAEVmK,MAAO,CAAEg2E,WAAY,QAO7C,kBAACnpD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAO40F,IAAS91F,MAAM,WAChDc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAM40F,IAAS91F,MAAM,WAC/Cc,EAAE,Y,gDAnES3C,EAAOT,GAAQ,IACnC+G,EAAWtG,EAAXsG,OACAoC,EAAenJ,EAAfmJ,WAI8BmxF,EAFzBnzF,KAAUjB,IAAIa,GAEnBs5B,6BAER,OAAIl3B,IAAepC,EACR,CACHoC,WAAYpC,EACZuzF,0BACAlC,OAAQkC,GAIT,S,GAnBkBh5F,IAAMC,YAmFxBsD,iBAAkBu1F,IClF3BG,G,2MACFv6F,MAAQ,G,EA+BRq6F,mBAAqB,WAAO,IAChBjC,EAAW,EAAKp4F,MAAhBo4F,OAER,EAAK13F,SAAS,CAAE03F,QAASA,K,wEAGnB,IAAD,EACsCz4F,KAAKc,MAAxCsG,EADH,EACGA,OAAQwvB,EADX,EACWA,WAAY/yB,EADvB,EACuBA,QAASJ,EADhC,EACgCA,EADhC,EAEuCzD,KAAKK,MAAzCs6F,EAFH,EAEGA,wBAAyBlC,EAF5B,EAE4BA,OAE3Bp+C,EAAQzjB,EAAaA,EAAWxwB,OAAS,EAE3CyuD,EAAwBpxD,EAAJ,IAAV42C,EAAgB,gCAAqC,+BAKnE,OAJIxjB,cAAazvB,KAAY6zB,aAAc7zB,KACvCytD,EAAwBpxD,EAAJ,IAAV42C,EAAgB,oCAAyC,oCAInE,kBAAC,IAAD,CACI32C,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS,kBAAMA,GAAQ,EAAO40F,IAC9B30F,kBAAgB,uBAChB,kBAAC,IAAD,CAAarF,GAAG,uBAAuB81F,KAAOC,aAAa,sBAAuBD,KAAOsG,mBAAmB,WAAYxgD,KACxH,kBAAC,IAAD,KACI,kBAACY,GAAA,EAAD,KACK4Z,IAEFh+B,cAAazvB,IAAWuzF,GACvB,kBAACn2F,EAAA,EAAD,CACIC,QAAS,kBAACu3B,GAAA,EAAD,CAAUE,QAASu8D,EAAQl0F,SAAUvE,KAAK06F,mBAAoB/3F,MAAM,YAC7EgC,MACIq2B,cAAc5zB,GACRzB,GAAQlC,EAAG,gBAAiB6I,aAAkBlF,GAAQ,EAAO3D,IAC7DA,EAAE,mBAKxB,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAO40F,IAAS91F,MAAM,WAChDc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAM40F,IAAS91F,MAAM,WAC/Cc,EAAE,Y,gDA1ES3C,EAAOT,GAAQ,IACnC+G,EAAuBtG,EAAvBsG,OAAQwvB,EAAe91B,EAAf81B,WACRptB,EAA+BnJ,EAA/BmJ,WAAYqwE,EAAmBx5E,EAAnBw5E,eAEhB8gB,GAA0B,EAJY,uBAK1C,YAAsB/jE,EAAtB,+CAAkC,CAAC,IAA1BnoB,EAAyB,QACxB6E,EAAUL,KAAa1M,IAAIa,EAAQqH,GACzC,IAAK6E,EAAS,CACVqnF,GAA0B,EAC1B,MAEJ,IAAKrnF,EAAQotB,6BAA8B,CACvCi6D,GAA0B,EAC1B,QAbkC,kFAiB1C,OAAInxF,IAAepC,GAAUyyE,IAAmBjjD,EACrC,CACHptB,WAAYpC,EACZyyE,eAAgBjjD,EAChB+jE,0BACAlC,OAAQkC,GAIT,S,GA7BoBh5F,IAAMC,WA2F1BsD,iBAAkB01F,IC7F3BE,G,2MACFC,oBAAsB,SAAC3zF,EAAQ3D,GAC3B,IAAM0E,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAClB,IAAKA,EAAK/F,KAAM,OAAO,KAEvB,OAAQ+F,EAAK/F,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+C+F,EAAKL,MAApD,KAEJ,IAAK,qBACD,IAAMyB,EAAaG,KAAgBnD,IAAI4B,EAAK/F,KAAK+G,eACjD,OAAII,EACOA,EAAWqlD,WAAX,iDACyCzmD,EAAKL,MAD9C,oDAEuCK,EAAKL,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoDwE,aAAkBlF,GAAQ,EAAO3D,GAArF,KAIR,OAAO,M,wEAGD,IAAD,EAC0BzD,KAAKc,MAA5BsG,EADH,EACGA,OAAQvD,EADX,EACWA,QAASJ,EADpB,EACoBA,EAEzB,OACI,kBAAC,IAAD,CACIC,QAASC,IACTL,MAAM,EACNM,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBAChB,kBAAC,IAAD,CAAarF,GAAG,uBAAuB6N,aAAkBlF,GAAQ,EAAO3D,IACxE,kBAAC,IAAD,KACI,yBAAKpC,UAAU,yBACX,kBAAC,KAAD,CAAU+F,OAAQA,IAClB,kBAAC6zC,GAAA,EAAD,CAAmBx8C,GAAG,6BACjBuB,KAAK+6F,oBAAoB3zF,EAAQ3D,MAI9C,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,IAAQlB,MAAM,WACxCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,IAAOlB,MAAM,UAAUg4B,WAAS,GAC1Dl3B,EAAE,a,GArDG9B,IAAMC,WAkErBsD,iBAAkB41F,ICjE3BE,I,kNACF36F,MAAQ,G,EAiBRq6F,mBAAqB,WAAO,IAChBjC,EAAW,EAAKp4F,MAAhBo4F,OAER,EAAK13F,SAAS,CAAE03F,QAASA,K,wEAGnB,IAAD,EAC0Bz4F,KAAKc,MAA5BsG,EADH,EACGA,OAAQvD,EADX,EACWA,QAASJ,EADpB,EACoBA,EACjBg1F,EAAWz4F,KAAKK,MAAhBo4F,OAEFtwF,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO,KAElB,IAAImI,EAAO,GACX,OAAQnI,EAAK/F,KAAK,UACd,IAAK,kBACL,IAAK,iBACDkO,EAAO7M,EAAE,uBACT,MAEJ,IAAK,qBACD6M,EAAO7M,EAAE,mBACT,MAEJ,IAAK,qBAEG6M,EADA2qB,aAAc7zB,GACP3D,EAAE,0BAEFA,EAAE,mBAMrB,OACI,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS,kBAAMA,GAAQ,EAAO40F,IAC9B30F,kBAAgB,gBAChB,kBAAC,IAAD,CAAarF,GAAG,gBAAgBgF,EAAE,YAClC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KACK3qC,GAEL,oCAEQ0qB,cAAc5zB,IACV,kBAAC5C,EAAA,EAAD,CACIC,QACI,kBAACu3B,GAAA,EAAD,CAAUE,QAASu8D,EAAQl0F,SAAUvE,KAAK06F,mBAAoB/3F,MAAM,YAExEgC,MAAK,uBAAkB2H,aAAkBlF,GAAQ,EAAO3D,QAM5E,kBAACg3B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAO40F,IAAS91F,MAAM,WAChDc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,EAAM40F,IAAS91F,MAAM,WAC/Cc,EAAE,Y,gDA/ES3C,EAAOT,GAAQ,IACnC+G,EAAsBtG,EAAtBsG,OAAQqH,EAAc3N,EAAd2N,UACRjF,EAA8BnJ,EAA9BmJ,WAAYkqC,EAAkBrzC,EAAlBqzC,cAEpB,OAAIlqC,IAAepC,GAAUssC,IAAkBjlC,EACpC,CACHjF,WAAYpC,EACZyyE,eAAgBprE,EAChBgqF,QAASz9D,cAAc5zB,IAIxB,S,GAfgBzF,IAAMC,YAgGtBsD,iBAAkB81F,I,UCtClBC,I,mBAnEX,WAAYn6F,GAAQ,IAAD,8BACf,4CAAMA,KAeVo6F,YAAc,WACV,IAAMl8F,EAAM,IAAIwR,KACV2qF,EAAU,EAAKC,OAASp8F,EACxBsD,EAAQ,IAAO64F,EAAU,EAAKr6F,MAAMyjB,QAAW,IAOrD,GALA,EAAKxjB,SAAS,CACVo6F,QAASA,EAAU,EAAIA,EAAU,EACjC74F,MAAOA,EAAQ,IAAM,IAAMA,IAG3BtD,GAAO,EAAKo8F,QACR,EAAKC,QAAS,CACd7mB,cAAc,EAAK6mB,SACnB,EAAKA,QAAU,KAFD,IAINC,EAAc,EAAKx6F,MAAnBw6F,UACJA,GACAA,MA9BZ,EAAKj7F,MAAQ,CACT86F,QAAS,EAAKr6F,MAAMyjB,QAAU,IAC9BjiB,MAAO,GALI,E,iFAUftC,KAAKnB,UAAY,IAAI2R,KACrBxQ,KAAKo7F,OAASp7F,KAAKnB,UACnBmB,KAAKo7F,OAAOG,gBAAgBv7F,KAAKo7F,OAAOI,kBAAoBx7F,KAAKc,MAAMyjB,SACvEvkB,KAAKq7F,QAAUrhC,YAAYh6D,KAAKk7F,YAAa,O,6CA2BzCl7F,KAAKq7F,UACL7mB,cAAcx0E,KAAKq7F,SACnBr7F,KAAKq7F,QAAU,Q,+BAIb,IAAD,EACsBr7F,KAAKK,MAAxBiC,EADH,EACGA,MAAO64F,EADV,EACUA,QAEf,OACI,yBAAK95F,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYsB,MAAM,YAAYw4F,EAAU,KAAMM,YAElD,yBAAKp6F,UAAU,+BACX,kBAACq6F,GAAA,EAAD,CAAkB/tF,KAAM,GAAIrL,MAAO,IAAMA,EAAO+5B,QAAQ,iB,GAxD5C16B,IAAMC,YCMhC+5F,I,wLAEQ,IAAD,EAC6B37F,KAAKc,MAA/B2N,EADH,EACGA,UAAW5K,EADd,EACcA,QAASJ,EADvB,EACuBA,EAEtB6M,EAAmB7M,EAAZgL,EAAc,oBAAyB,yBAEpD,OACI,kBAAC,IAAD,CACI/K,QAASC,IACTC,mBAAoB,EACpBN,MAAM,EACNO,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,gBAChB,kBAAC,IAAD,CAAarF,GAAG,gBAAgBgF,EAAE,YAClC,kBAAC,IAAD,KACI,kBAACw3C,GAAA,EAAD,KACK3qC,IAGT,kBAACmqB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,IAAQlB,MAAM,WACxCc,EAAE,WAEP,kBAACi3B,GAAA,EAAD,CAAQn1B,QAAS,kBAAM1B,GAAQ,IAAOlB,MAAM,WACvCc,EAAE,a,GAzBM9B,IAAMC,YAuCxBsD,iBAAkBy2F,I,2jBC7B3BC,G,2MACFv7F,MAAQ,CACJo1C,UAAW,KACXzE,aAAc,KACdzQ,eAAgB,KAChBs7D,WAAY,KACZrtF,aAAc,M,EAmBlBstF,2BAA6B,SAAA70F,GAAW,IAC5BG,EAAsBH,EAAtBG,OAAQqH,EAAcxH,EAAdwH,UAEZrE,cAAShD,IACT,EAAKoH,aAAe,CAChBpH,SACAqH,aAEJ,EAAKstF,4BAA2B,GAAM,IAEtC,EAAKh7F,SAAS,CACVyN,aAAc,CACVpH,SACAqH,gB,EAMhButF,yBAA2B,SAAA/0F,GAAW,IAC1BG,EAAsBH,EAAtBG,OAAQqH,EAAcxH,EAAdwH,UAEZrE,cAAShD,IACT,EAAKy0F,WAAa,CACdz0F,SACAqH,aAEJ,EAAKwtF,0BAAyB,GAAM,IAEpC,EAAKl7F,SAAS,CACV86F,WAAY,CACRz0F,SACAqH,gB,EAMhBytF,6BAA+B,SAAAj1F,GAAW,IAC9BG,EAAuBH,EAAvBG,OAAQwvB,EAAe3vB,EAAf2vB,WAEhB,EAAK71B,SAAS,CACVw/B,eAAgB,CACZn5B,SACAwvB,iB,EAKZrZ,wBAA0B,SAAAtW,GAAW,IACzBG,EAAWH,EAAXG,OAER,EAAKrG,SAAS,CAAE00C,UAAY,CAAEruC,a,EAGlC2pC,2BAA6B,SAAA9pC,GAAW,IAC5BG,EAAWH,EAAXG,OAER,EAAKrG,SAAS,CAAEiwC,aAAe,CAAE5pC,a,EAGrC+0F,2BAA6B,SAACt7F,EAAQ43F,GAAY,IACtCh1F,EAAM,EAAK3C,MAAX2C,EAGR,GADyB,EAAKpD,MAAtB2wC,eAGR,EAAKjwC,SAAS,CAAEiwC,aAAc,OAEzBnwC,GAAL,CAEA,IAAMuG,EAASiS,IAASoF,YAClBnL,EAAU7P,EAAE,sBACZqlB,EAAU,CACZ,QAAS,oBACTzhB,QAASD,EACT+gB,uBAAuB,EACvBswE,UAGJ,EAAKphE,sBAAsBjwB,EAAQ,2BAA4BkM,EAAS,CAACwV,M,EAG7EszE,oBAAsB,SAAAv7F,GAAW,IACrB40C,EAAc,EAAKp1C,MAAnBo1C,UACR,GAAKA,EAAL,CAF4B,IAIpBruC,EAAWquC,EAAXruC,OACFe,EAAOX,KAAUjB,IAAIa,GAC3B,GAAKe,IAEL,EAAKpH,SAAS,CAAE00C,UAAW,OAEtB50C,GAAL,CAEA,IAAMyS,EAAU,EAAK+oF,yBAAyBj1F,GACxC6gB,EAAW,GACjB,OAAQ9f,EAAK/F,KAAK,UACd,IAAK,qBACG8lB,aAAa9gB,IACb6gB,EAASjY,KAAK,CAAE,QAAS,YAAa3I,QAASD,IAEnD6gB,EAASjY,KAAK,CAAE,QAAS,oBAAqB3I,QAASD,EAAQ+gB,uBAAuB,IAE1F,IAAK,qBACGC,aAAUhhB,GACV6gB,EAASjY,KAAK,CACV,QAAS,sBACT3I,QAASD,EACTuB,QAASc,KAAU0K,UACnBkU,OAAQ,CACJ,QAAS,0BACTC,WAAW,KAGZJ,aAAa9gB,IACpB6gB,EAASjY,KAAK,CAAE,QAAS,YAAa3I,QAASD,IAGvD,IAAK,kBACL,IAAK,iBACD6gB,EAASjY,KAAK,CAAE,QAAS,oBAAqB3I,QAASD,EAAQ+gB,uBAAuB,IAI9F,EAAKkP,sBAAsBjwB,EAAQ,wBAAyBkM,EAAS2U,M,EAGzEq0E,6BAA+B,SAACz7F,EAAQ43F,GAAY,IACxCl4D,EAAmB,EAAKlgC,MAAxBkgC,eACR,GAAKA,EAAL,CAF+C,IAIvCn5B,EAAuBm5B,EAAvBn5B,OAAQwvB,EAAe2J,EAAf3J,WAEhBqB,eACA,EAAKl3B,SAAS,CAAEw/B,eAAgB,OAE3B1/B,GAELH,KAAgBC,KAAK,CACjB,QAAS,iBACT0G,QAASD,EACTgyB,YAAaxC,EACb6hE,a,EAIR4D,yBAA2B,SAAAj1F,GAAW,IAC1B3D,EAAM,EAAK3C,MAAX2C,EAEF0E,EAAOX,KAAUjB,IAAIa,GAC3B,IAAKe,EAAM,OAAO1E,EAAE,mBACpB,IAAK0E,EAAK/F,KAAM,OAAOqB,EAAE,mBAEzB,OAAQ0E,EAAK/F,KAAK,UACd,IAAK,qBACD,OAAOqB,EAAE,mBAEb,IAAK,qBACD,IAAM8F,EAAaG,KAAgBnD,IAAI4B,EAAK/F,KAAK+G,eACjD,OAAII,EACOA,EAAWqlD,WAAa,eAAiB,aAG7CnrD,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oB,EAGb4zB,sBAAwB,SAACjwB,EAAQm1F,EAAkBjpF,EAAS2U,GAAc,IAC9DxkB,EAAM,EAAK3C,MAAX2C,EACR,GAAK84F,EAAL,CAEA,IAAM32F,EAAG,UAAM22F,EAAN,mBAAiCn1F,GACpCwwB,EAAM,sCAAG,4BAAAltB,EAAA,8DAEE/D,EAAI,EAFN,YAESA,EAAIshB,EAAS7hB,QAFtB,gCAGG1F,KAAgBC,KAAKsnB,EAASthB,IAHjC,OAE8BA,IAF9B,sCAMPjG,KAAgBsf,aAAa,CAAE,QAASu8E,EAAkBn1F,SAAQoW,YAAY,IANvE,uEAAH,qDALyD,EAkB1B,EAAK1c,MAAxCw2B,EAlB6D,EAkB7DA,gBAAiBC,EAlB4C,EAkB5CA,cAEzB72B,KAAgBsf,aAAa,CAAE,QAASu8E,EAAkBn1F,SAAQoW,YAAY,IAC9E,IAAMga,EAAWF,EAAgBhkB,EAAS,CACtCkpF,SAAS,EACT52F,MACA+xB,kBAAkB,EAClBC,OAAQ,CACJ,kBAAClhB,EAAA,EAAD,CACI9Q,IAAI,WACJjD,MAAM,UACNtB,UAAU,mBACV,kBAAC,GAAD,CACIkjB,QAASmT,KACT4jE,UAAW,WACP1jE,IACAL,EAAcC,OAG1B,kBAACkD,GAAA,EAAD,CACI90B,IAAI,OACJjD,MAAM,UACNgL,KAAK,QACLpI,QAAS,WA1BjB7E,KAAgBsf,aAAa,CAAE,QAASu8E,EAAkBn1F,SAAQoW,YAAY,IA4BlE+Z,EAAcC,KAEjB/zB,EAAE,c,EAMnBw4F,yBAA2B,SAACp7F,EAAQ43F,GAAY,IACtCoD,EAAe,EAAKx7F,MAApBw7F,WAEN,GADAA,EAAaA,GAAc,EAAKA,WAChC,CAH2C,MAKbA,EAAtBz0F,EALmC,EAKnCA,OAAQqH,EAL2B,EAK3BA,UAEhBwpB,eACA,EAAKl3B,SAAS,CAAE86F,WAAY,OAC5B,EAAKA,WAAa,KAEbh7F,G7OjRN,SAAoBuG,EAAQqH,GAA8D,IAAnDguF,EAAkD,wDAArBC,EAAqB,wDAC5Fh8F,KAAgBC,KAAK,CACjB,QAAS,iBACT0G,QAASD,EACTsH,WAAYD,EACZkuF,qBAAsBF,EACtBG,cAAeF,I6O6QfG,CAAiBz1F,EAAQqH,GAAW,GAAQgqF,K,EAGhDsD,2B,sCAA6B,WAAMl7F,GAAN,uBAAA6J,EAAA,wDAEzB8D,GADMA,EAAiB,EAAKnO,MAAtBmO,eACyB,EAAKA,aAFX,oDAKjBpH,GALiB,EAKKoH,GAAtBpH,OAAQqH,EALS,EAKTA,UAEhBwpB,eACA,EAAKl3B,SAAS,CAAEyN,aAAc,OAC9B,EAAKA,aAAe,KAEf3N,EAXoB,uDAarBi3E,aAAe1wE,GAbM,qBAcjBqH,EAdiB,kCAeXquF,GAAmB11F,EAAQqH,GAfhB,uCAiBjB2qD,eAjBiB,UAmBXzqD,GAAiBvH,GAnBN,uCAsBrBgyD,eAEMh4B,EAAO55B,KAAUwjE,cAAc5jE,GAxBhB,UAyBf1G,KAAgBsf,aAAa,CAC/B,QAAS,gCACT5Y,SACA2jE,WAAW,MAAM3pC,EAAP,GAAgB,CAAEoqC,UAAU,MA5BrB,0C,yIAjQzBnyD,IAAS5R,GAAG,+BAAgCzH,KAAKud,yBACjDlE,IAAS5R,GAAG,kCAAmCzH,KAAK+wC,4BACpD13B,IAAS5R,GAAG,6BAA8BzH,KAAKk8F,8BAC/C7iF,IAAS5R,GAAG,yBAA0BzH,KAAKg8F,0BAC3C3iF,IAAS5R,GAAG,2BAA4BzH,KAAK87F,8B,6CAI7CziF,IAAS3R,IAAI,+BAAgC1H,KAAKud,yBAClDlE,IAAS3R,IAAI,kCAAmC1H,KAAK+wC,4BACrD13B,IAAS3R,IAAI,6BAA8B1H,KAAKk8F,8BAChD7iF,IAAS3R,IAAI,yBAA0B1H,KAAKg8F,0BAC5C3iF,IAAS3R,IAAI,2BAA4B1H,KAAK87F,8B,+BAsRxC,IAAD,EACyE97F,KAAKK,MAA3Eo1C,EADH,EACGA,UAAWzE,EADd,EACcA,aAAczQ,EAD5B,EAC4BA,eAAgBs7D,EAD5C,EAC4CA,WAAYrtF,EADxD,EACwDA,aAC7D,GAAIinC,EAAW,CAAC,IACJruC,EAAWquC,EAAXruC,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACRvD,QAAS7D,KAAKo8F,sBAEnB,GAAIprD,EAAc,CAAC,IACd5pC,EAAW4pC,EAAX5pC,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACRvD,QAAS7D,KAAKm8F,6BAEnB,GAAI57D,EAAgB,CAAC,IAChBn5B,EAAuBm5B,EAAvBn5B,OAAQwvB,EAAe2J,EAAf3J,WAEhB,OACI,kBAAC,GAAD,CACIxvB,OAAQA,EACRwvB,WAAYA,EACZ/yB,QAAS7D,KAAKs8F,+BAEnB,GAAIT,EAAY,CAAC,IACZz0F,EAAsBy0F,EAAtBz0F,OAAQqH,EAAcotF,EAAdptF,UAEhB,OACI,kBAAC,GAAD,CACIrH,OAAQA,EACRqH,UAAWA,EACX5K,QAAS7D,KAAKi8F,2BAEnB,GAAIztF,EAAc,CAAC,IACdpH,EAAsBoH,EAAtBpH,OAAQqH,EAAcD,EAAdC,UAEhB,OACI,kBAAC,GAAD,CACIrH,OAAQA,EACRqH,UAAWA,EACX5K,QAAS7D,KAAK+7F,6BAI1B,OAAO,S,GA3VOp6F,IAAMwK,eAoWbrH,GALCC,YACZ61B,gBACA11B,cAGWJ,CAAQ82F,IClWjBmB,G,YACF,WAAYj8F,GAAQ,IAAD,uBACf,4CAAMA,KA6CV4sC,qBAAuB,SAAAzmC,GACnB,EAAKlG,SAAS,CACVqG,OAAQH,EAAO0mC,WACfl/B,UAAWxH,EAAOkyC,iBAjDP,EAqDnBm4C,+BAAiC,SAAArqF,GAAW,IAChCkpB,EAAclpB,EAAdkpB,UAER,EAAKpvB,SAAS,CACVovB,eAzDW,EA6DnB9L,wBAA0B,SAAApd,GAAW,IACzBqd,EAAiBrd,EAAjBqd,aAER,EAAKvjB,SAAS,CAAEujB,kBAhED,EAmEnB04E,iCAAmC,SAAA/1F,GAAW,IAClCoT,EAAYpT,EAAZoT,QAER,EAAKtZ,SAAS,CACVk8F,mBAAoB5iF,KAvET,EA2EnB6iF,uBAAyB,SAAAj2F,GAAW,IACxBG,EAA6BH,EAA7BG,OAAQqH,EAAqBxH,EAArBwH,UAAW2L,EAAUnT,EAAVmT,MAE3B,EAAKonE,iBAAiBp6E,EAAQqH,EAAW2L,IA9E1B,EAiFnB+iF,uBAAyB,SAAAl2F,GAAW,IACxB8gC,EAAkB9gC,EAAlB8gC,OAAQ3tB,EAAUnT,EAAVmT,MAEhB,EAAKmnE,iBAAiBx5C,EAAQ3tB,IApFf,EAuFnBq2E,oCAAsC,SAAAxpF,GAAW,IACrCm2F,EAAyB/jF,IAAzB+jF,qBAER,EAAKr8F,SAAS,CAAEq8F,0BA1FD,EA6FnB3rC,iCAAmC,SAAAxqD,GAAW,IAClCyqD,EAAuBr4C,IAAvBq4C,mBAER,EAAK3wD,SAAS,CAAE2wD,wBAhGD,EAmGnB2rC,wCAA0C,SAAAp2F,GAAW,IACzCq2F,EAA8BjkF,IAA9BikF,0BAER,EAAKv8F,SAAS,CAAEu8F,+BAtGD,EAyGnBC,sBAAwB,SAAAt2F,GAAW,IACvB8zB,EAAS9zB,EAAT8zB,KAER,EAAKh6B,SAAS,CAAEm6E,YAAangD,KA5Gd,EA+GnBymD,iBAAmB,SAACp6E,GAA6C,IAArCqH,EAAoC,uDAAxB,KAAM2L,EAAkB,wDACtD2jB,EAAgB1kB,IAASoF,YACzB++E,EAAsBnkF,IAASg3B,aAC/Bw6B,EAAmBxxD,IAAS+/B,eAE9Bh/B,EACIojF,IAAwBp2F,GACxB1G,KAAgBsf,aAAa,CACzB,QAAS,2BACT5Y,WAOR22B,IAAkB32B,GAAUqH,GAAao8D,IAAqBp8D,GAC9D,EAAKgvF,iBAAiB5oF,QAAQ42E,kBAC1Bh9E,GACAm+E,aAAiBxlF,EAAQqH,IAEtBsvB,IAAkB32B,GAAWqH,EAGpC/N,KAAgBie,UAAUvX,EAAQqH,GAFlC,EAAKgvF,iBAAiB5oF,QAAQm3E,iBArInB,EA2InBzK,iBA3ImB,sCA2IA,WAAOx5C,EAAQ3tB,GAAf,eAAA1P,EAAA,wDACVq9B,EADU,iEAGIrnC,KAAgBC,KAAK,CACpC,QAAS,oBACTgI,QAASo/B,EACT3zB,OAAO,IANI,OAGTjM,EAHS,OASf,EAAKq5E,iBAAiBr5E,EAAK1J,GAAI,KAAM2b,GATtB,yCA3IA,0DAsJnB6O,kBAAoB,SAACS,GACjB,EAAK3oB,SAAS,CACV2oB,eArJJ,EAAK+zE,iBAAmB97F,IAAMoU,YAHf,IAKPqnF,EAAsF/jF,IAAtF+jF,qBAAsB1rC,EAAgEr4C,IAAhEq4C,mBAAoB4rC,EAA4CjkF,IAA5CikF,0BAA2Bh5E,EAAiBjL,IAAjBiL,aAL9D,OAOf,EAAKjkB,MAAQ,CACT+8F,uBACA1rC,qBACA4rC,4BACAh5E,eACA42D,YAAa,KACb+hB,mBAAoB,KACpB9sE,UAAW,KACX/oB,OAAQiS,IAASoF,aAfN,E,iFAoBfhV,KAAUhC,GAAG,uBAAwBzH,KAAKm9F,wBAC1C31F,KAAUC,GAAG,uBAAwBzH,KAAKk9F,wBAE1C7jF,IAAS5R,GAAG,oCAAqCzH,KAAKywF,qCACtDp3E,IAAS5R,GAAG,iCAAkCzH,KAAKyxD,kCACnDp4C,IAAS5R,GAAG,wBAAyBzH,KAAKqkB,yBAC1ChL,IAAS5R,GAAG,wCAAyCzH,KAAKq9F,yCAC1DhkF,IAAS5R,GAAG,sBAAuBzH,KAAKu9F,uBACxClkF,IAAS5R,GAAG,qBAAsBzH,KAAK0tC,sBACvCknD,KAAiBntF,GAAG,iCAAkCzH,KAAKg9F,kCAC3DnsE,KAAYppB,GAAG,+BAAgCzH,KAAKsxF,kC,6CAIpD7nF,KAAU/B,IAAI,uBAAwB1H,KAAKm9F,wBAC3C31F,KAAUE,IAAI,uBAAwB1H,KAAKk9F,wBAE3C7jF,IAAS3R,IAAI,oCAAqC1H,KAAKywF,qCACvDp3E,IAAS3R,IAAI,iCAAkC1H,KAAKyxD,kCACpDp4C,IAAS3R,IAAI,wBAAyB1H,KAAKqkB,yBAC3ChL,IAAS3R,IAAI,wCAAyC1H,KAAKq9F,yCAC3DhkF,IAAS3R,IAAI,sBAAuB1H,KAAKu9F,uBACzClkF,IAAS3R,IAAI,qBAAsB1H,KAAK0tC,sBACxCknD,KAAiBltF,IAAI,iCAAkC1H,KAAKg9F,kCAC5DnsE,KAAYnpB,IAAI,+BAAgC1H,KAAKsxF,kC,+BAgH/C,IAAD,EAUDtxF,KAAKK,MARL48F,EAFC,EAEDA,mBACAG,EAHC,EAGDA,qBACA1rC,EAJC,EAIDA,mBACA4rC,EALC,EAKDA,0BACApiB,EANC,EAMDA,YACA/qD,EAPC,EAODA,UACA/oB,EARC,EAQDA,OACAsiB,EATC,EASDA,UAGJ,MAAkB,UAAdA,EACO,kBAAC,GAAD,CAAUT,kBAAmBjpB,KAAKipB,kBAAmBS,UAAWA,IAIvE,oCACI,yBACIroB,UAAWoE,IAAW,OAAQ,CAC1B,oBAAqB23F,KAExBh2F,EAAS,KAAO,kBAAC,GAAD,MAChBA,EAAS,kBAAC,GAAD,CAAeoP,IAAKxW,KAAKy9F,mBAAuB,KACzDL,GAAwB,kBAAC,GAAD,OAE7B,kBAAC,GAAD,MACCH,GAAsB,kBAAC,GAAkBA,GACzCvrC,GAAsB,kBAAC,GAAgBA,GACvC4rC,GAA6B,kBAAC,GAAuBA,GACrDpiB,GAAe,kBAAC,GAAkBA,GAClC/qD,GAAa,kBAAC,GAAcA,Q,GA5LtBxuB,IAAMC,WAoMvBkD,GAAUC,YACZ24F,KACArzE,IAGWvlB,aAAQi4F","file":"static/js/3.a6ce94a6.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.4221bb55.png\";","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatLetters, isMeChat, isDeletedPrivateChat, getChatTypeId } from '../../../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../../../Utils/File';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../../../Utils/Chat';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n} from '../../../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../../../Actions/Chat';\nimport { openChat } from '../../../../Actions/Client';\nimport { viewMessages } from '../../../../Actions/Message';\nimport ApplicationStore from '../../../../Stores/ApplicationStore';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport OptionStore from '../../../../Stores/OptionStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    render() {\n        const { chatId } = this.props;\n        return (\n            <div className='dialog-wrapper'>\n                <ChatTile chatId={chatId}/>\n                <div className='dialog-inner-wrapper'>\n                    <div className='tile-first-row'>\n                        <DialogTitle chatId={chatId} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","import { DeleteForever } from '@material-ui/icons'\nimport React from 'react'\n\nconst SelectedItem = ({ list, chatId, onSelect, children, style }) => {\n  const toggle = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onSelect(chatId)\n  }\n  return (\n    <div className='selectedItem_root' onClickCapture={toggle} style={style}>\n      <div style={{ pointerEvents: 'none' }}>{children}</div>\n      {list.includes(chatId) ? <DeleteForever/> : null}\n    </div>\n  )\n}\nexport default SelectedItem\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../../Additional/KeyboardManager';\nimport CloseIcon from '../../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SectionHeader from '../../../ColumnLeft/SectionHeader'\n// import Chat from '../../Tile/Chat';\n// import TopChat from '../../Tile/TopChat';\n// import RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\n// import FoundPublicChat from '../../Tile/FoundPublicChat';\nimport { loadChatsContent, loadUsersContent } from '../../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../../Utils/Language';\nimport { orderCompare } from '../../../../Utils/Common';\nimport { getChatOrder } from '../../../../Utils/Chat';\nimport { modalManager } from '../../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../../Constants';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport MessageStore from '../../../../Stores/MessageStore';\nimport UserStore from '../../../../Stores/UserStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Search.css';\nimport Chat from '../../../Tile/Chat'\nimport RecentlyFoundChat from '../../../Tile/RecentlyFoundChat'\nimport TopChat from '../../../Tile/TopChat'\nimport Dialog from '../Tile/Dialog'\nimport SelectedItem from '../Tile/SelectedItem'\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t, list, onSelectChat } = this.props;\n        const { top, recentlyFound, local } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                          <Dialog key={x} chatId={x} />\n                      </SelectedItem>\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n              ))\n            : [];\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowBackIcon from '../../../Assets/Icons/Back'\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../../Utils/Common';\nimport AppStore from '../../../Stores/ApplicationStore';\n// import '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.props.onCloseSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n        let content = null\n        if (openSearch) {\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <div onClick={this.handleCloseSearch}><ArrowBackIcon/></div>\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../../../Utils/Chat'\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from './Tile/Dialog';\nimport DialogPlaceholder from './Tile/DialogPlaceholder';\nimport VirtualizedList from '../../Additional/VirtualizedList';\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common';\nimport { scrollTop } from '../../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatPinned } from '../../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport SupergroupStore from '../../../Stores/SupergroupStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n// import './DialogsList.css';\nimport FilterStore from '../../../Stores/FilterStore';\nimport SelectedItem from './Tile/SelectedItem'\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden } = this.props;\n\n        return (\n            <div className='dialog-list-item' onClick={() => this.onSelectMessage(chatId)}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems, list } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n        if (nextProps.list !== list) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { list, onSelectChat } = this.props\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return (\n            <SelectedItem key={x} list={list} onSelect={onSelectChat} chatId={x} style={style}>\n                <DialogListItem onSelectMessage={this.props.onSelectMessage} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)}  />\n            </SelectedItem>\n        )\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\n\nimport { openChat } from '../../../Actions/Client';\nimport { getArchiveTitle } from '../../../Utils/Archive';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport CacheStore from '../../../Stores/CacheStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogListRef = React.createRef();\n    this.archiveListRef = React.createRef();\n    this.dialogsHeaderRef = React.createRef();\n\n    this.state = {\n      cache: null,\n\n      showArchive: false,\n      archiveTitle: null,\n\n      mainItems: [],\n\n      timeout: defaultTimeout,\n      openSearch: false,\n\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    if (nextState.cache !== cache) {\n      return true;\n    }\n\n    if (nextState.showArchive !== showArchive) {\n      return true;\n    }\n\n    if (nextState.archiveTitle !== archiveTitle) {\n      return true;\n    }\n\n    if (nextState.mainItems !== mainItems) {\n      return true;\n    }\n\n    if (nextState.openSearch !== openSearch) {\n      return true;\n    }\n\n    if (nextState.searchChatId !== searchChatId) {\n      return true;\n    }\n\n    if (nextState.searchText !== searchText) {\n      return true;\n    }\n    if (nextProps.list !== this.props.list) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.loadCache();\n\n    AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  componentWillUnmount() {\n    AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  onUpdateChatFilters = () => {\n    this.handleSaveCache();\n  };\n\n  onClientUpdatePageWidth = update => {\n    const { isSmallWidth } = update;\n\n    if (!isSmallWidth) return;\n\n    const { openSearch, } = this.state;\n    if (openSearch) {\n      this.setState({\n        openSearch: false,\n        timeout: 0\n      }, () => {\n        this.setState({\n          timeout: defaultTimeout\n        });\n      });\n    }\n  };\n\n  async loadCache() {\n    const cache = (await CacheStore.load()) || {};\n\n    const { chats, archiveChats } = cache;\n\n    FilterStore.filters = FilterStore.filters || CacheStore.filters;\n    this.setState({\n      cache,\n\n      showArchive: archiveChats && archiveChats.length > 0,\n      archiveTitle: getArchiveTitle()\n    });\n\n    this.loadChatContents((chats || []).map(x => x.id));\n\n    TdLibController.clientUpdate({\n      '@type': 'clientUpdateCacheLoaded'\n    });\n  }\n\n  async saveCache() {\n    const promises = [];\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListMain' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListArchive' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    const [mainChats, archiveChats] = await Promise.all(promises);\n\n    const { filters } = FilterStore;\n\n    CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n  }\n\n  onUpdateChatOrder = () => {\n    const { showArchive: prevShowArchive } = this.state;\n\n    const { current: mainCurrent } = this.dialogListRef;\n    if (mainCurrent && mainCurrent.loading) {\n      return;\n    }\n\n    const { current: archiveCurrent } = this.archiveListRef;\n    if (archiveCurrent && archiveCurrent.loading) {\n      return;\n    }\n\n    const archiveList = ChatStore.chatList.get('chatListArchive');\n    const showArchive = archiveList && archiveList.size > 0;\n\n    this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n      if (!prevShowArchive && showArchive) {\n        const { current } = this.dialogListRef;\n        if (current.listRef) {\n          const { current: listCurrent } = current.listRef;\n          if (listCurrent && listCurrent.scrollTop > 0) {\n            current.scrollTop += 68;\n          }\n        }\n      }\n    });\n\n    if (prevShowArchive && !showArchive) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateCloseArchive'\n      });\n    }\n  };\n\n  onClientUpdateThemeChange = () => {\n    this.forceUpdate();\n  };\n\n  onClientUpdateSearchChat = update => {\n    const { isSmallWidth } = AppStore;\n    if (isSmallWidth) return;\n\n    const { chatId, query } = update;\n    const { openSearch, searchChatId, searchText } = this.state;\n\n    if (openSearch && chatId === searchChatId && query === searchText) {\n      return;\n    }\n\n    const header = this.dialogsHeaderRef.current;\n    this.setState(\n      {\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null,\n      },\n      () => {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      }\n    );\n  };\n\n  handleHeaderClick = () => {\n    this.dialogListRef.current.scrollToTop();\n  };\n\n  handleSearch = visible => {\n    this.setState({\n      openSearch: visible,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  toggleChat = (chatId) => {\n    const { list, setList } = this.props\n    let newList\n    if (list.includes(chatId)) {\n      newList = list.filter(id => id !== chatId)\n    } else {\n      newList = [...list, chatId]\n    }\n    setList(newList)\n  }\n  onSelectChat = this.toggleChat\n\n  handleSelectMessage = (chatId) => {\n    this.toggleChat(chatId)\n    // openChat(chatId, messageId);\n    //\n    // const searchChatId = openSearch ? this.state.searchChatId : 0;\n    // const searchText = openSearch ? this.state.searchText : null;\n\n    // this.setState({\n    //   openSearch,\n    //   searchChatId,\n    //   searchText\n    // });\n  };\n\n  handleCloseSearch = () => {\n    if (!this.state.openSearch) {\n      this.props.setOpenList(false)\n      return\n    }\n    this.setState({\n      openSearch: false,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  handleSearchTextChange = text => {\n    this.setState({\n      searchText: text,\n      query: null\n    });\n  };\n\n  handleSaveCache = () => {\n    this.saveCache();\n  };\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore();\n    loadChatsContent(store, chatIds);\n  }\n\n  render() {\n    const { list } = this.props\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      timeout,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    const mainCacheItems = cache ? cache.chats || [] : null;\n    return (\n      <>\n        <div className='dialogs'>\n          <div className='sidebar-page'>\n            <DialogsHeader\n              ref={this.dialogsHeaderRef}\n              openSearch={openSearch}\n              timeout={timeout !== 0}\n              onClick={this.handleHeaderClick}\n              onSearch={this.handleSearch}\n              onCloseSearch={this.handleCloseSearch}\n              onSearchTextChange={this.handleSearchTextChange}\n            />\n            <div className='dialogs-content'>\n              <div className='dialogs-content-internal'>\n                <DialogsList\n                  type='chatListMain'\n                  ref={this.dialogListRef}\n                  cacheItems={mainCacheItems}\n                  items={mainItems}\n                  showArchive={showArchive}\n                  archiveTitle={archiveTitle}\n                  onSelectChat={this.onSelectChat}\n                  open={true}\n                  onSaveCache={this.handleSaveCache}\n                  list={list}\n                />\n              </div>\n              <CSSTransition\n                classNames='search'\n                timeout={timeout}\n                in={openSearch}\n                mountOnEnter={true}\n                unmountOnExit={true}>\n                <Search\n                  chatId={searchChatId}\n                  text={searchText}\n                  onSelectChat={this.onSelectChat}\n                  onClose={this.handleCloseSearch}\n                  list={list}\n                />\n              </CSSTransition>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dialogs;\n","import List from './List'\nexport default List\n","class StorageVal {\n  constructor(key) {\n    this.key = key\n    this.readed = false\n    this.value = null\n  }\n\n  getVal() {\n    if (!this.readed) {\n      this.value = JSON.parse(localStorage.getItem(this.key))\n      this.readed = true\n    }\n    return this.value\n  }\n  setVal (value) {\n    this.value = value\n    localStorage.setItem(this.key, JSON.stringify(this.value))\n  }\n}\n\nexport const securityStatus = new StorageVal('securityStatus')\nexport const pin = new StorageVal('pin')\nexport const chatList = new StorageVal('chatList')\n","import withTheme from '@material-ui/core/styles/withTheme'\nimport { Backspace } from '@material-ui/icons'\nimport logo from '../../Assets/Icons/logo.png'\nimport React from 'react'\nimport cn from 'classnames'\nimport { compose } from '../../Utils/HOC'\n\nconst KeyBoardCommon = ({ pin, onNumber, onDel, onOk, theme }) => {\n  const rootCN = cn('security_pin_root', theme.palette.type === 'dark' ? 'security_pin_dark' : 'security_pin_light')\n\n\n  const textElements = [...pin.replace(/./g, '●')]\n    .map(t => <div className='security_pin_text_item'>{t}</div>)\n  return (\n    <div className={rootCN}>\n      <img src={logo} className='security_pin_logo' />\n      <div className='security_pin_text'>\n        {textElements}\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(1)}>\n          <div>1</div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(2)}>\n          <div>2</div>\n          <div className='security_pin_alf'>ABC</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(3)}>\n          <div>3</div>\n          <div className='security_pin_alf'>DEF</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(4)}>\n          <div>4</div>\n          <div className='security_pin_alf'>GHI</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(5)}>\n          <div>5</div>\n          <div className='security_pin_alf'>JKL</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(6)}>\n          <div>6</div>\n          <div className='security_pin_alf'>NMO</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(7)}>\n          <div>7</div>\n          <div className='security_pin_alf'>PQRS</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(8)}>\n          <div>8</div>\n          <div className='security_pin_alf'>TUV</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(9)}>\n          <div>9</div>\n          <div className='security_pin_alf'>WXYZ</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onDel}>\n          <div><Backspace/></div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(0)}>\n          <div>0</div>\n          <div className='security_pin_alf'>+</div>\n        </div>\n        <div className='security_pin_number' onClick={onOk}>\n          <div>OK</div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst enhance = compose(\n  withTheme\n);\n\n\nexport default enhance(KeyBoardCommon)\n","import withTheme from '@material-ui/core/styles/withTheme'\nimport { Backspace } from '@material-ui/icons'\nimport cn from 'classnames'\nimport React from 'react'\nimport './KeyBoardIos.css'\nimport { compose } from '../../Utils/HOC'\n\nconst KeyBoardIos = ({ pin, onNumber, onDel, onOk, theme, size }) => {\n  var w = window.innerWidth * 0.9;\n  const boxStyle = {\n    width: w,\n  }\n  const btn = {\n    width: w/4.3,\n    height: w/4.3,\n  }\n\n  const textElements = [...pin.replace(/./g, '●'), ...Array(size - pin.length).fill('○').join('')]\n    .map(t => <div className='ios_pin_text_item'>{t}</div>)\n\n\n  const rootCN = cn('ios_pin_root', theme.palette.type === 'dark' ? 'ios_pin_dark' : 'ios_pin_light')\n  return (\n    <div className={rootCN}>\n      <div style={boxStyle}>\n        <div className='ios_pin_text'>\n          {textElements}\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(1)}>\n            <div>1</div>\n            <div className='ios_pin_alf'>&nbsp;</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(2)}>\n            <div>2</div>\n            <div className='ios_pin_alf'>ABC</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(3)}>\n            <div>3</div>\n            <div className='ios_pin_alf'>DEF</div>\n          </div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(4)}>\n            <div>4</div>\n            <div className='ios_pin_alf'>GHI</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(5)}>\n            <div>5</div>\n            <div className='ios_pin_alf'>JKL</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(6)}>\n            <div>6</div>\n            <div className='ios_pin_alf'>NMO</div>\n          </div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(7)}>\n            <div>7</div>\n            <div className='ios_pin_alf'>PQRS</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(8)}>\n            <div>8</div>\n            <div className='ios_pin_alf'>TUV</div>\n          </div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(9)}>\n            <div>9</div>\n            <div className='ios_pin_alf'>WXYZ</div>\n          </div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onDel}><Backspace/></div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(0)}>0</div>\n          <div className='ios_pin_number' style={btn} onClick={onOk}>OK</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst enhance = compose(\n  withTheme\n);\n\nexport default enhance(KeyBoardIos)\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat'\nimport { loadChatsContent } from '../../../Utils/File'\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common'\nimport { chatListEquals, getChatOrder, hasChatList } from '../../../Utils/Chat'\nimport AppStore from '../../../Stores/ApplicationStore'\nimport ChatStore from '../../../Stores/ChatStore'\nimport FileStore from '../../../Stores/FileStore'\nimport SupergroupStore from '../../../Stores/SupergroupStore'\nimport TdLibController from '../../../Controllers/TdLibController'\nimport FilterStore from '../../../Stores/FilterStore'\n\nconst CHAT_SLICE_LIMIT = 25\n\nclass ChatsLoader {\n  setState = (patch, cb) => {\n    this.state = {\n      ...this.state,\n      ...patch,\n    }\n    return cb()\n  }\n  onUpdateChats = () => {\n  }\n\n  constructor(props) {\n    this.hiddenChats = new Map()\n\n    const { authorizationState } = AppStore\n\n    this.state = {\n      authorizationState,\n      chats: null,\n      fistSliceLoaded: false,\n      chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n      params: {\n        loading: false,\n        completed: false,\n      },\n    }\n  }\n\n  Mount() {\n    const res = this.loadFirstSlice()\n\n    AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState)\n\n    ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete)\n    ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat)\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder)\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder)\n    ChatStore.on('updateChatPosition', this.onUpdateChatPosition)\n\n    FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList)\n\n    SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup)\n    return res\n  }\n\n  Unmount() {\n    AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState)\n\n    ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete)\n    ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat)\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder)\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder)\n    ChatStore.off('updateChatPosition', this.onUpdateChatPosition)\n\n    FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList)\n\n    SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup)\n  }\n\n  onClientUpdateChatList = update => {\n    const { chatList } = update\n\n    this.setState({\n      chatList,\n      params: {\n        loading: false,\n        completed: false,\n      },\n    }, () => {\n      this.loadFirstSlice()\n    })\n  }\n\n  onUpdateSupergroup = update => {\n\n\n  }\n\n  onClientUpdateLeaveChat = update => {\n    const { inProgress, chatId } = update\n\n    if (inProgress) {\n      this.hiddenChats.set(chatId, chatId)\n    } else {\n      this.hiddenChats.delete(chatId)\n    }\n  }\n\n  onUpdateAuthorizationState = update => {\n    const { authorization_state: authorizationState } = update\n\n    this.setState({ authorizationState }, () => this.loadFirstSlice())\n  }\n\n  onFastUpdatingComplete = update => {\n    this.onLoadNext(true)\n  }\n\n  loadFirstSlice = async () => {\n    const { authorizationState } = this.state\n    if (!isAuthorizationReady(authorizationState)) return\n\n    return new Promise(resolve => FileStore.initDB(() => this.onLoadNext(true).then(resolve)))\n  }\n\n  saveCache = () => {\n    // const { onSaveCache, type } = this.props;\n    // const { chatList } = this.state;\n    // if (type !== 'chatListMain') return;\n    // if (chatList['@type'] !== 'chatListMain') return;\n    //\n    // if (onSaveCache) onSaveCache();\n  }\n\n  onUpdateChatPosition = update => {\n    const { chatList } = this.state\n    const { position } = update\n\n    if (!chatListEquals(chatList, position.list)) {\n      return\n    }\n\n    this.onUpdateChatOrder(update)\n  }\n\n  onUpdateChatOrder = update => {\n    const { chats, chatList, params } = this.state\n    if (!chats) return\n\n    const { loading } = params\n    if (loading && !chats.length) return\n\n    const { chat_id } = update\n\n    const chat = ChatStore.get(chat_id)\n    if (!chat) {\n      return\n    }\n\n    if (!hasChatList(chat_id, chatList)) {\n      return\n    }\n\n    const order = getChatOrder(chat_id, chatList)\n    const currentIndex = chats.findIndex(x => x === chat_id)\n    if (currentIndex === -1 && order === '0') {\n      return\n    }\n\n    const chatIds = []\n    for (let i = 0; i < chats.length; i++) {\n      const chat = ChatStore.get(chats[i])\n      const chatOrder = getChatOrder(chats[i], chatList)\n      if (chat && chatOrder !== '0') {\n        chatIds.push(chat.id)\n      }\n    }\n\n    const newChatIds = []\n    if (order === '0') {\n      // unselect deleted chat\n      if (chat_id === AppStore.getChatId() && !chat.last_message) {\n        TdLibController.setChatId(0)\n        changeChatDetailsVisibility(false)\n      }\n    } else {\n      if (currentIndex === -1) {\n        if (loading) {\n          console.error('[vl] skip add while getChats', update)\n          // TODO: check and add if within loaded part\n        } else {\n          newChatIds.push(chat_id)\n        }\n      }\n    }\n\n    this.reorderChats(chatIds, newChatIds, () => {\n      this.loadChatContents(newChatIds)\n      this.saveCache()\n    })\n  }\n\n  reorderChats(chatIds, newChatIds = [], callback) {\n    const { chatList } = this.state\n\n    const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n      return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList))\n    })\n\n    if (!ChatsLoader.isDifferentOrder(this.state.chats, orderedChatIds)) {\n      if (callback) callback()\n      return\n    }\n\n    this.setState({ chats: orderedChatIds }, callback)\n  }\n\n  static isDifferentOrder(oldChatIds, newChatIds) {\n    if (oldChatIds.length === newChatIds.length) {\n      for (let i = 0; i < oldChatIds.length; i++) {\n        if (oldChatIds[i] !== newChatIds[i]) return true\n      }\n\n      return false\n    }\n\n    return true\n  }\n\n  async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n    const { chats, chatList, params } = this.state\n\n    // console.log('[folders] onLoadNext', chatList, limit);\n    if (params.loading) {\n      // console.log('[folders] onLoadNext cancel loading', chatList);\n      return\n    }\n\n    if (params.completed) {\n      // console.log('[folders] onLoadNext cancel loaded', chatList);\n      return\n    }\n\n    let offsetOrder = '9223372036854775807' // 2^63 - 1\n    let offsetChatId = 0\n    if (!replace && chats && chats.length > 0) {\n      const chat = ChatStore.get(chats[chats.length - 1])\n      if (chat) {\n        offsetOrder = getChatOrder(chat.id, chatList)\n        offsetChatId = chat.id\n      }\n    }\n\n    // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n    params.loading = true\n    const result = await TdLibController.send({\n      '@type': 'getChats',\n      chat_list: chatList,\n      offset_chat_id: offsetChatId,\n      offset_order: offsetOrder,\n      limit: CHAT_SLICE_LIMIT,\n    }).finally(() => {\n      params.loading = false\n      if (replace) {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList })\n      }\n    })\n    // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n    if (params !== this.state.params) {\n      // console.log('[folders] onLoadNext cancel', chatList);\n      return\n    }\n\n    if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n      result.chat_ids.shift()\n    }\n\n    params.completed = !result.chat_ids.length\n\n    if (replace) {\n      await this.replaceChats(result.chat_ids, () => {\n        this.loadChatContents(result.chat_ids)\n        this.saveCache()\n\n        if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n          return this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length)\n        }\n      })\n    } else {\n      // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n      await this.appendChats(result.chat_ids, () => {\n        // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n        this.loadChatContents(result.chat_ids)\n\n        if (result.chat_ids.length && result.chat_ids.length < limit) {\n          return this.onLoadNext(false, limit - result.chat_ids.length)\n        }\n      })\n    }\n  }\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore()\n    loadChatsContent(store, chatIds)\n  }\n\n  appendChats(chatIds, callback) {\n    if (chatIds.length === 0) {\n      if (callback) callback()\n      return\n    }\n\n    const { chats } = this.state\n\n    const newChats = (chats || []).concat(chatIds)\n    return this.setState({ chats: newChats }, callback)\n  }\n\n  replaceChats(chats, callback) {\n    return this.setState({ chats }, callback)\n  }\n}\n\nexport default ChatsLoader\n","import React, { useState } from 'react'\nimport TdLibController from '../../Controllers/TdLibController'\nimport ChatStore from '../../Stores/ChatStore'\nimport UserStore from '../../Stores/UserStore'\nimport { isChatMember, isCreator } from '../../Utils/Chat'\nimport * as store from '../../Stores/Secret'\nimport KeyBoardCommon from './KeyBoardCommon'\nimport KeyBoardIos from './KeyBoardIos'\nimport ChatsLoader from './List/ChatsLoader'\n\nfunction iOS() {\n  return [\n      'iPad Simulator',\n      'iPhone Simulator',\n      'iPod Simulator',\n      'iPad',\n      'iPhone',\n      'iPod'\n    ].includes(navigator.platform)\n    // iPad on iOS 13 detection\n    || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n}\n\nconst getRequests = (chatId) => {\n  const chat = ChatStore.get(chatId);\n  if (!chat) {\n    console.warn('no chat for: ', chatId)\n    return []\n  }\n  const requests = [];\n  switch (chat.type['@type']) {\n    case 'chatTypeBasicGroup': {\n      if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n      break;\n    }\n    case 'chatTypeSupergroup': {\n      if (isCreator(chatId)) {\n        requests.push({\n          '@type': 'setChatMemberStatus',\n          chat_id: chatId,\n          user_id: UserStore.getMyId(),\n          status: {\n            '@type': 'chatMemberStatusCreator',\n            is_member: false\n          }\n        });\n      } else if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      break;\n    }\n    case 'chatTypePrivate':\n    case 'chatTypeSecret': {\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n    }\n  }\n  return requests\n}\nconst wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nconst leaveChats = async (list) => {\n  const chatLoader = new ChatsLoader({ type: 'chatListMain' })\n  await chatLoader.Mount()\n  await wait(500)\n  let loads = 50\n  while (list.some(id => !ChatStore.get(id)) && loads >= 0) {\n    await chatLoader.onLoadNext()\n    await wait(200)\n    loads--\n  }\n\n  await chatLoader.Mount()\n  const requests = list.flatMap(getRequests)\n  for (const request of requests) {\n    try {\n      const res = await TdLibController.send(request)\n      console.log(res)\n    } catch (e) {\n      console.log(e, request)\n    }\n  }\n}\n\n\nconst Pin = ({ pin: masterPin, list, onUpdatePinStatus }) => {\n  const [pin, setPin] = useState('')\n  const onNumber = (number) => () => {\n    if (pin.length >=masterPin.length) {\n      return\n    }\n    setPin(`${pin}${number}`)\n  }\n  const onDel = () => {\n    setPin(pin.substr(0, pin.length - 1 ))\n  }\n  const onOk = async () => {\n    if (pin === masterPin) {\n      onUpdatePinStatus('on')\n    } else {\n      console.log('ALARM!!!!', list)\n      await leaveChats(list)\n      setTimeout(() => {\n        onUpdatePinStatus('error')\n      }, 300)\n      store.chatList.setVal([])\n    }\n  }\n  const iosPatform = iOS()\n\n  if (iosPatform) {\n    return <KeyBoardIos onDel={onDel} onNumber={onNumber} onOk={onOk} pin={pin} size={masterPin.length}  />\n  } else {\n    return <KeyBoardCommon onDel={onDel} onNumber={onNumber} onOk={onOk} pin={pin} />\n  }\n}\n\nexport default Pin\n","import Setup from './Setup'\n\nexport default Setup\n","import { DeleteForever, Lock } from '@material-ui/icons'\nimport React, { useRef, useState } from 'react'\nimport './Security.css'\nimport ThemePicker from '../ColumnLeft/ThemePicker'\nimport List from './List'\nimport * as store from '../../Stores/Secret'\nimport Pin from './Pin'\n\nconst Setup = ({ pinStatus, onUpdatePinStatus}) => {\n  const [status, setSecurityStatus] = useState(store.securityStatus.getVal())\n  const [warn, setWarn] = useState()\n  const [pin, setPin] = useState(store.pin.getVal() || '')\n  const [list, setList] = useState(store.chatList.getVal() || [])\n  const [openList, setOpenList] = useState(false)\n\n  const themePickerRef = useRef(null)\n\n  const handleAppearance = () => {\n    themePickerRef.current.open();\n  };\n\n  const saveSettings = () => {\n    if (!/\\d{4,}/.test(pin) ) {\n      setWarn('PIN меньше 4 цифр')\n      return false\n    }\n    store.chatList.setVal(list)\n    store.pin.setVal(pin)\n\n    setWarn(`настройки сохранены\\nчаты: ${list.length}, PIN: ${pin}`)\n    return true\n  }\n  const changeStatus = () => {\n    if (status === 'enabled') {\n      store.securityStatus.setVal('off')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn('PIN Off')\n    } else if (saveSettings()) {\n      onUpdatePinStatus('ok')\n      store.securityStatus.setVal('enabled')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn(`PIN On: ${pin}`)\n    }\n  }\n  const enabled = status === 'enabled'\n\n  if (enabled && !pinStatus) {\n    return <Pin onUpdatePinStatus={onUpdatePinStatus} pin={pin} list={list} />\n  }\n\n  if (openList) {\n    return <List setOpenList={setOpenList} setList={setList} list={list}/>\n  }\n\n\n  return (\n    <div className='security_root'>\n      <div className='security_setup_row'>\n        Setup\n      </div>\n      <div onClick={changeStatus} className={`security_setup_row ${enabled? 'security_enabled' : 'security_disabled'}`}>\n        <div> {enabled ? 'Выключить Пинкод' : 'Включить Пинкод' } </div>\n        <div>{enabled ? <DeleteForever/> : null}</div>\n      </div>\n      <div className='security_setup_row'>\n        PIN:\n        <input className='security_setup_pin' value={pin} onChange={e => setPin(e.target.value)} type=\"text\"/>\n      </div>\n      <div className='security_setup_row' onClick={() => setOpenList(true)}>\n        <div>Настроить чаты</div>\n        <div>{list.length}</div>\n      </div>\n      <div className='security_setup_row' onClick={saveSettings}>\n        Сохранить настройки\n      </div>\n      <div className='security_setup_row' onClick={handleAppearance}>\n        Изменить тему\n      </div>\n      <ThemePicker ref={themePickerRef} />\n      {\n        enabled && (\n          <div className='security_setup_row' onClick={() => onUpdatePinStatus(null)}>\n            <div>Перейти на пин</div>\n            <Lock />\n          </div>\n        )\n      }\n      { warn && <div className='security_warn'><pre>{warn}</pre></div> }\n    </div>\n  )\n}\nexport default Setup\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList } = this.state;\n        const isSmallWidth = false\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport Back from '../../Assets/Icons/Back';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleBack = () => {\n        TdLibController.setChatId(0);\n    }\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        <IconButton\n                          className='header-left-back-button'\n                          aria-label='Back'\n                          onClick={this.handleBack}>\n                            <Back />\n                        </IconButton>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        {/*<div className='message-padding'>*/}\n                        {/*    <CheckMarkIcon className='message-select-tick' />*/}\n                        {/*</div>*/}\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        {/*<div className='message-padding' />*/}\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (history.some(x => x.chat_id === chatId && x.id === messageId || !messageId && chat && chat.last_message.id === x.id)) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        if (!chatId) {\n            return  null\n        }\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport Security from './Security';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            chatId: AppStore.getChatId(),\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n    onUpdatePinStatus = (pinStatus) => {\n        this.setState({\n            pinStatus\n        })\n    }\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            chatId,\n            pinStatus,\n        } = this.state;\n\n        if (pinStatus !== 'error') {\n            return <Security onUpdatePinStatus={this.onUpdatePinStatus} pinStatus={pinStatus} />\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    {chatId ? null : <Dialogs />}\n                    {chatId ? <DialogDetails ref={this.dialogDetailsRef} /> : null}\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}