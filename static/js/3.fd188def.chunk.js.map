{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Components/ColumnLeft/SectionHeader.js","Utils/Language.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Delete.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/TopChat.js","Components/Security/List/Tile/ChatTile.js","Components/Security/List/Tile/DialogTitle.js","Actions/Message.js","Components/Security/List/Tile/Dialog.js","Components/Security/List/Tile/SelectedItem.js","Components/Security/List/Search/Search.js","Assets/Icons/Back.js","Assets/Icons/Search.js","Components/Security/List/Search/SearchInput.js","Components/Security/List/DialogsHeader.js","Components/Security/List/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Components/Security/List/DialogsList.js","Utils/Archive.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/Security/List/List.js","Components/Security/List/index.js","Stores/Secret.js","Components/Security/Pin.js","Components/Security/index.js","Components/Security/Setup.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","SectionHeader","command","multiline","onClick","children","classNames","Boolean","sprintf","t","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DialogTitle","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","chat_id","nextProps","nextState","ChatStore","on","off","showSavedMessages","isVerified","isChatVerified","title","getChatTitle","defaultProps","withTranslation","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","user_id","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","UserStore","SupergroupStore","externalSubtitle","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","RecentlyFoundChat","contextMenu","top","left","handleContextMenu","event","a","preventDefault","stopPropagation","clientX","clientY","handleCloseContextMenu","handleDelete","onDelete","ListItem","button","onContextMenu","Popover","open","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","e","MenuList","MenuItem","ListItemIcon","Delete","ListItemText","primary","PureComponent","TopChat","shortTitle","getChatShortTitle","dialog","showOnline","ChatTile","onClientUpdateChatBlob","fileId","loaded","photo","src","getSrc","small","onUpdateChatPhoto","file","store","FileStore","getStore","loadChatContent","letters","getChatLetters","handleSelect","handleLoad","size","style","width","height","tileLoaded","typeId","getChatTypeId","tileColor","abs","pointer","onLoad","draggable","alt","unpinMessage","messageId","message_id","unpinAllMessages","Dialog","hidden","SelectedItem","list","console","log","req","warn","requests","isChatMember","push","remove_from_chat_list","isCreator","getMyId","status","is_member","getRequests","pointerEvents","some","DeleteForever","Search","handleKeyDown","modalManager","modals","isComposing","target","blur","handleClose","concatSearchResults","results","arr","map","chat_ids","j","set","sort","b","orderCompare","getChatOrder","searchText","text","sessionId","Date","savedMessages","promises","localPromise","query","limit","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","Promise","all","catch","local","toUpperCase","savedMessagesStrings","el","includes","splice","recentlyFound","loadChatsContent","trimmedText","trim","startsWith","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","sender_user_id","from_message_id","offset","filter","chat_list","offset_date","offset_chat_id","offset_message_id","MessageStore","setItems","linkMessage","url","messageLinkInfo","message","chats","users","sender","keys","loadUsersContent","loadContent","topPromise","category","recentlyFoundPromise","savedMessagesPromise","force","error","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","current","scrollTop","offsetHeight","scrollHeight","SCROLL_PRECISION","onLoadPrevious","getOffset","date","concatMessages","total_count","concat","loading","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","createRef","searchOrLoadContent","KeyboardManager","add","remove","onSelectChat","topChats","recentlyFoundChats","localChats","ref","onScroll","IconButton","aria-label","Close","SearchInput","keyCode","onChange","element","innerText","nativeEvent","stopImmediatePropagation","onBackspace","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","handleInput","inputRef","onFocus","hint","showIcon","placeholder","contentEditable","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","onInput","DialogsHeader","onUpdateAuthorizationState","authorizationState","authorization_state","handleSearch","onSearch","openSearch","isAuthorizationReady","handleSearchTextChange","onSearchTextChange","searchInputRef","handleCloseSearch","onCloseSearch","handleFocus","AppStore","getAuthorizationState","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","focus","focusInput","popup","content","DialogPlaceholder","index","titleWidth","contentWidth","cos","position","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","items","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","behavior","setTimeout","scrollTo","reset","chatList","filters","onUpdate","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogListItem","DialogsList","onClientUpdateChatList","params","completed","loadFirstSlice","onClientUpdateLeaveChat","inProgress","hiddenChats","delete","onLoadNext","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","currentIndex","findIndex","chatIds","chatOrder","newChatIds","getChatId","last_message","setChatId","changeChatDetailsVisibility","reorderChats","loadChatContents","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","FilterStore","callback","orderedChatIds","isDifferentOrder","replace","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offset_order","finally","clientUpdate","shift","replaceChats","appendChats","newChats","isChatPinned","Array","oldChatIds","getArchiveTitle","archive","chatsOrder","manager","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","debounce","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","user","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","defaultTimeout","enter","enteringScreen","exit","leavingScreen","List","onUpdateChatFilters","handleSaveCache","onClientUpdatePageWidth","isSmallWidth","timeout","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateThemeChange","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","handleHeaderClick","scrollToTop","visible","toggleChat","setList","c","setOpenList","mainItems","loadCache","onClientUpdateSettings","onClientUpdateArchive","onClientUpdateContacts","onClientUpdateNewGroup","onClientUpdateNewChannel","CacheStore","mainChats","mainCacheItems","CSSTransition","in","mountOnEnter","unmountOnExit","StorageVal","readed","securityStatus","pin","leaveChats","flatMap","request","res","Pin","masterPin","onUpdatePinStatus","useState","setPin","onNumber","number","onOk","setVal","Backspace","Setup","pinStatus","getVal","setSecurityStatus","setWarn","openList","saveSettings","test","enabled","Lock","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","oldTop","normalizePosition","handleLoadedData","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","mouseDownRoot","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","handleMouseDown","dragging","draggingTime","handleChange","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleBlur","connectPlayer","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","tabIndex","Hint","onMouseEnter","onMouseLeave","Slider","max","step","classes","rail","track","thumb","active","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","selected","copy","navigator","clipboard","writeText","copyOld","successful","createElement","readOnly","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","Error","removeChild","ForwardDialog","getPublicMessageLink","getChatsPromise","messageIds","isSupergroup","getChatUsername","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","color","getForwardPhotoSize","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","canSendMessages","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","transitionDuration","aria-labelledby","aria-describedby","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","Checkbox","edge","checked","disableRipple","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","padding","scroll","filtersRef","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","deleteMessages","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Share","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","openMedia","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","charCodeAt","SharedLink","webPage","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","offsetTop","offsetParent","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","getRowHeight","migrateCompleted","getFilter","handleVirtScroll","prevScrollTop","loadIncomplete","lastMessages","fromMessageId","requestId","currentParams","isValidMessage","incompleteResults","loadMessageContents","onLoadMigratedNext","handleOpen","openUser","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","mediaRef","counters","migratedCounters","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","member","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","wordWrap","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","getChatUserId","minHeight","SharedMediaHeader","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","onUpdateUser","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","unread_count","isPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","handleMainClick","handleWheel","deltaY","LocalizationStore","onWheel","Archive","innerListRef","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","handleDialogEnter","headerRef","openSettings","meChatId","openContacts","openNewGroup","openNewChannel","paper","onEnter","Dialogs","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleBack","handleSearchChat","localize","str","showProgressAnimation","Back","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","LStore","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","handleLeaveContinue","getLeaveChatNotification","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.fd188def.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatLetters, isMeChat, isDeletedPrivateChat, getChatTypeId } from '../../../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../../../Utils/File';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../../../Utils/Chat';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n} from '../../../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../../../Actions/Chat';\nimport { openChat } from '../../../../Actions/Client';\nimport { viewMessages } from '../../../../Actions/Message';\nimport ApplicationStore from '../../../../Stores/ApplicationStore';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport OptionStore from '../../../../Stores/OptionStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    render() {\n        const { chatId } = this.props;\n        return (\n            <div className='dialog-wrapper'>\n                <ChatTile chatId={chatId}/>\n                <div className='dialog-inner-wrapper'>\n                    <div className='tile-first-row'>\n                        <DialogTitle chatId={chatId} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","import { DeleteForever } from '@material-ui/icons'\nimport React from 'react'\nimport ChatStore from '../../../../Stores/ChatStore'\nimport UserStore from '../../../../Stores/UserStore'\nimport { isChatMember, isCreator } from '../../../../Utils/Chat'\n\nconst getRequests = (chatId) => {\n  const chat = ChatStore.get(chatId);\n  if (!chat) {\n    console.warn('no chat for: ', chatId)\n    return false\n  }\n\n  const requests = [];\n  switch (chat.type['@type']) {\n    case 'chatTypeBasicGroup': {\n      if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n      break;\n    }\n    case 'chatTypeSupergroup': {\n      if (isCreator(chatId)) {\n        requests.push({\n          '@type': 'setChatMemberStatus',\n          chat_id: chatId,\n          user_id: UserStore.getMyId(),\n          status: {\n            '@type': 'chatMemberStatusCreator',\n            is_member: false\n          }\n        });\n      } else if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      break;\n    }\n    case 'chatTypePrivate':\n    case 'chatTypeSecret': {\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n    }\n  }\n  return requests\n}\n\nconst SelectedItem = ({ list, chatId, onSelect, children, style }) => {\n  const toggle = (e) => {\n    console.log(chatId)\n    e.preventDefault()\n    e.stopPropagation()\n    const req = getRequests(chatId)\n    if (!req) {\n      return\n    }\n    onSelect({ id: chatId, req })\n  }\n  return (\n    <div className='selectedItem_root' onClick={toggle} style={style}>\n      <div style={{ pointerEvents: 'none' }}>{children}</div>\n      {list.some(chat => chat.id === chatId) ? <DeleteForever/> : null}\n    </div>\n  )\n}\nexport default SelectedItem\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../../Additional/KeyboardManager';\nimport CloseIcon from '../../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SectionHeader from '../../../ColumnLeft/SectionHeader'\n// import Chat from '../../Tile/Chat';\n// import TopChat from '../../Tile/TopChat';\n// import RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\n// import FoundPublicChat from '../../Tile/FoundPublicChat';\nimport { loadChatsContent, loadUsersContent } from '../../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../../Utils/Language';\nimport { orderCompare } from '../../../../Utils/Common';\nimport { getChatOrder } from '../../../../Utils/Chat';\nimport { modalManager } from '../../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../../Constants';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport MessageStore from '../../../../Stores/MessageStore';\nimport UserStore from '../../../../Stores/UserStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Search.css';\nimport Chat from '../../../Tile/Chat'\nimport RecentlyFoundChat from '../../../Tile/RecentlyFoundChat'\nimport TopChat from '../../../Tile/TopChat'\nimport Dialog from '../Tile/Dialog'\nimport SelectedItem from '../Tile/SelectedItem'\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t, list, onSelectChat } = this.props;\n        const { top, recentlyFound, local } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                          <Dialog key={x} chatId={x} />\n                      </SelectedItem>\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n              ))\n            : [];\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowBackIcon from '../../../Assets/Icons/Back'\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../../Utils/Common';\nimport AppStore from '../../../Stores/ApplicationStore';\n// import '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.props.onCloseSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n        let content = null\n        if (openSearch) {\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <div onClick={this.handleCloseSearch}><ArrowBackIcon/></div>\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../../../Utils/Chat'\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from './Tile/Dialog';\nimport DialogPlaceholder from './Tile/DialogPlaceholder';\nimport VirtualizedList from '../../Additional/VirtualizedList';\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common';\nimport { scrollTop } from '../../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatPinned } from '../../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport SupergroupStore from '../../../Stores/SupergroupStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n// import './DialogsList.css';\nimport FilterStore from '../../../Stores/FilterStore';\nimport SelectedItem from './Tile/SelectedItem'\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden } = this.props;\n\n        return (\n            <div className='dialog-list-item' onClick={() => this.onSelectMessage(chatId)}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems, list } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n        if (nextProps.list !== list) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { list, onSelectChat } = this.props\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return (\n            <SelectedItem key={x} list={list} onSelect={onSelectChat} chatId={x} style={style}>\n                <DialogListItem onSelectMessage={this.props.onSelectMessage} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)}  />\n            </SelectedItem>\n        )\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\n\nimport { openChat } from '../../../Actions/Client';\nimport { getArchiveTitle } from '../../../Utils/Archive';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport CacheStore from '../../../Stores/CacheStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogListRef = React.createRef();\n    this.archiveListRef = React.createRef();\n    this.dialogsHeaderRef = React.createRef();\n\n    this.state = {\n      cache: null,\n\n      showArchive: false,\n      archiveTitle: null,\n\n      mainItems: [],\n\n      timeout: defaultTimeout,\n      openSearch: false,\n\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    if (nextState.cache !== cache) {\n      return true;\n    }\n\n    if (nextState.showArchive !== showArchive) {\n      return true;\n    }\n\n    if (nextState.archiveTitle !== archiveTitle) {\n      return true;\n    }\n\n    if (nextState.mainItems !== mainItems) {\n      return true;\n    }\n\n    if (nextState.openSearch !== openSearch) {\n      return true;\n    }\n\n    if (nextState.searchChatId !== searchChatId) {\n      return true;\n    }\n\n    if (nextState.searchText !== searchText) {\n      return true;\n    }\n    if (nextProps.list !== this.props.list) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.loadCache();\n\n    AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  componentWillUnmount() {\n    AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  onUpdateChatFilters = () => {\n    this.handleSaveCache();\n  };\n\n  onClientUpdatePageWidth = update => {\n    const { isSmallWidth } = update;\n\n    if (!isSmallWidth) return;\n\n    const { openSearch, } = this.state;\n    if (openSearch) {\n      this.setState({\n        openSearch: false,\n        timeout: 0\n      }, () => {\n        this.setState({\n          timeout: defaultTimeout\n        });\n      });\n    }\n  };\n\n  async loadCache() {\n    const cache = (await CacheStore.load()) || {};\n\n    const { chats, archiveChats } = cache;\n\n    FilterStore.filters = FilterStore.filters || CacheStore.filters;\n    this.setState({\n      cache,\n\n      showArchive: archiveChats && archiveChats.length > 0,\n      archiveTitle: getArchiveTitle()\n    });\n\n    this.loadChatContents((chats || []).map(x => x.id));\n\n    TdLibController.clientUpdate({\n      '@type': 'clientUpdateCacheLoaded'\n    });\n  }\n\n  async saveCache() {\n    const promises = [];\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListMain' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListArchive' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    const [mainChats, archiveChats] = await Promise.all(promises);\n\n    const { filters } = FilterStore;\n\n    CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n  }\n\n  onUpdateChatOrder = () => {\n    const { showArchive: prevShowArchive } = this.state;\n\n    const { current: mainCurrent } = this.dialogListRef;\n    if (mainCurrent && mainCurrent.loading) {\n      return;\n    }\n\n    const { current: archiveCurrent } = this.archiveListRef;\n    if (archiveCurrent && archiveCurrent.loading) {\n      return;\n    }\n\n    const archiveList = ChatStore.chatList.get('chatListArchive');\n    const showArchive = archiveList && archiveList.size > 0;\n\n    this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n      if (!prevShowArchive && showArchive) {\n        const { current } = this.dialogListRef;\n        if (current.listRef) {\n          const { current: listCurrent } = current.listRef;\n          if (listCurrent && listCurrent.scrollTop > 0) {\n            current.scrollTop += 68;\n          }\n        }\n      }\n    });\n\n    if (prevShowArchive && !showArchive) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateCloseArchive'\n      });\n    }\n  };\n\n  onClientUpdateThemeChange = () => {\n    this.forceUpdate();\n  };\n\n  onClientUpdateSearchChat = update => {\n    const { isSmallWidth } = AppStore;\n    if (isSmallWidth) return;\n\n    const { chatId, query } = update;\n    const { openSearch, searchChatId, searchText } = this.state;\n\n    if (openSearch && chatId === searchChatId && query === searchText) {\n      return;\n    }\n\n    const header = this.dialogsHeaderRef.current;\n    this.setState(\n      {\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null,\n      },\n      () => {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      }\n    );\n  };\n\n  handleHeaderClick = () => {\n    this.dialogListRef.current.scrollToTop();\n  };\n\n  handleSearch = visible => {\n    this.setState({\n      openSearch: visible,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  toggleChat = (chat) => {\n    const { list, setList } = this.props\n    let newList\n    if (list.some(c => c.id === chat.id)) {\n      newList = list.filter(c => c.id !== chat.id)\n    } else {\n      newList = [...list, chat]\n    }\n    setList(newList)\n  }\n  onSelectChat = this.toggleChat\n\n  handleSelectMessage = (chatId) => {\n    this.toggleChat(chatId)\n    // openChat(chatId, messageId);\n    //\n    // const searchChatId = openSearch ? this.state.searchChatId : 0;\n    // const searchText = openSearch ? this.state.searchText : null;\n\n    // this.setState({\n    //   openSearch,\n    //   searchChatId,\n    //   searchText\n    // });\n  };\n\n  handleCloseSearch = () => {\n    if (!this.state.openSearch) {\n      this.props.setOpenList(false)\n      return\n    }\n    this.setState({\n      openSearch: false,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  handleSearchTextChange = text => {\n    this.setState({\n      searchText: text,\n      query: null\n    });\n  };\n\n  handleSaveCache = () => {\n    this.saveCache();\n  };\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore();\n    loadChatsContent(store, chatIds);\n  }\n\n  render() {\n    const { list } = this.props\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      timeout,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    const mainCacheItems = cache ? cache.chats || [] : null;\n    return (\n      <>\n        <div className='dialogs'>\n          <div className='sidebar-page'>\n            <DialogsHeader\n              ref={this.dialogsHeaderRef}\n              openSearch={openSearch}\n              timeout={timeout !== 0}\n              onClick={this.handleHeaderClick}\n              onSearch={this.handleSearch}\n              onCloseSearch={this.handleCloseSearch}\n              onSearchTextChange={this.handleSearchTextChange}\n            />\n            <div className='dialogs-content'>\n              <div className='dialogs-content-internal'>\n                <DialogsList\n                  type='chatListMain'\n                  ref={this.dialogListRef}\n                  cacheItems={mainCacheItems}\n                  items={mainItems}\n                  showArchive={showArchive}\n                  archiveTitle={archiveTitle}\n                  onSelectChat={this.onSelectChat}\n                  open={true}\n                  onSaveCache={this.handleSaveCache}\n                  list={list}\n                />\n              </div>\n              <CSSTransition\n                classNames='search'\n                timeout={timeout}\n                in={openSearch}\n                mountOnEnter={true}\n                unmountOnExit={true}>\n                <Search\n                  chatId={searchChatId}\n                  text={searchText}\n                  onSelectChat={this.onSelectChat}\n                  onClose={this.handleCloseSearch}\n                  list={list}\n                />\n              </CSSTransition>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dialogs;\n","import List from './List'\nexport default List\n","class StorageVal {\n  constructor(key) {\n    this.key = key\n    this.readed = false\n    this.value = null\n  }\n\n  getVal() {\n    if (!this.readed) {\n      this.value = JSON.parse(localStorage.getItem(this.key))\n      this.readed = true\n    }\n    return this.value\n  }\n  setVal (value) {\n    this.value = value\n    localStorage.setItem(this.key, JSON.stringify(this.value))\n  }\n}\n\nexport const securityStatus = new StorageVal('securityStatus')\nexport const pin = new StorageVal('pin')\nexport const chatList = new StorageVal('chatList')\n","import { Backspace } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport TdLibController from '../../Controllers/TdLibController'\nimport * as store from '../../Stores/Secret'\n\nconst leaveChats = async (list) => {\n  const requests = list.flatMap(chat => chat.req)\n  for (const request of requests) {\n    try {\n      const res = await TdLibController.send(request)\n      console.log(res)\n    } catch (e) {\n      console.log(e, request)\n    }\n  }\n}\n\nconst Pin = ({ pin: masterPin, list, onUpdatePinStatus }) => {\n  const [pin, setPin] = useState('')\n  const onNumber = (number) => () => {\n    if (pin.length >=masterPin.length) {\n      return\n    }\n    setPin(`${pin}${number}`)\n  }\n  const onDel = () => {\n    setPin(pin.substr(0, pin.length - 1 ))\n  }\n  const onOk = async () => {\n    if (pin === masterPin) {\n      onUpdatePinStatus('on')\n    } else {\n      console.log('ALARM!!!!', list)\n      await leaveChats(list)\n      setTimeout(() => {\n        onUpdatePinStatus('error')\n      }, 300)\n      store.chatList.setVal([])\n    }\n    // setPin(pin)\n  }\n\n  return (\n    <div className='security_pin_root'>\n      <div className='security_pin_text'>\n        {pin.replace(/./g, '*')}\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(1)}>1</div>\n        <div className='security_pin_number' onClick={onNumber(2)}>2</div>\n        <div className='security_pin_number' onClick={onNumber(3)}>3</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(4)}>4</div>\n        <div className='security_pin_number' onClick={onNumber(5)}>5</div>\n        <div className='security_pin_number' onClick={onNumber(6)}>6</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(7)}>7</div>\n        <div className='security_pin_number' onClick={onNumber(8)}>8</div>\n        <div className='security_pin_number' onClick={onNumber(9)}>9</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onDel}><Backspace/></div>\n        <div className='security_pin_number' onClick={onNumber(0)}>0</div>\n        <div className='security_pin_number' onClick={onOk}>OK</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pin\n","import Setup from './Setup'\n\nexport default Setup\n","import { DeleteForever, Lock } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport './Security.css'\nimport List from './List'\nimport * as store from '../../Stores/Secret'\nimport Pin from './Pin'\n\nconst Setup = ({ pinStatus, onUpdatePinStatus}) => {\n  const [status, setSecurityStatus] = useState(store.securityStatus.getVal())\n  const [warn, setWarn] = useState()\n  const [pin, setPin] = useState(store.pin.getVal() || '')\n  const [list, setList] = useState(store.chatList.getVal() || [])\n  const [openList, setOpenList] = useState(false)\n\n  const saveSettings = () => {\n    if (!/\\d{4,}/.test(pin) ) {\n      setWarn('PIN меньше 4 цифр')\n      return false\n    }\n    store.chatList.setVal(list)\n    store.pin.setVal(pin)\n\n    setWarn(`настройки сохранены\\nчаты: ${list.length}, PIN: ${pin}`)\n    return true\n  }\n  const changeStatus = () => {\n    if (status === 'enabled') {\n      store.securityStatus.setVal('off')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn('PIN Off')\n    } else if (saveSettings()) {\n      onUpdatePinStatus('ok')\n      store.securityStatus.setVal('enabled')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn(`PIN On: ${pin}`)\n    }\n  }\n  const enabled = status === 'enabled'\n\n  if (enabled && !pinStatus) {\n    return <Pin onUpdatePinStatus={onUpdatePinStatus} pin={pin} list={list} />\n  }\n\n  if (openList) {\n    return <List setOpenList={setOpenList} setList={setList} list={list}/>\n  }\n\n\n  return (\n    <div className='security_root'>\n      <div className='security_setup_row'>\n        Setup\n      </div>\n      <div onClick={changeStatus} className={`security_setup_row ${enabled? 'security_enabled' : 'security_disabled'}`}>\n        <div> {enabled ? 'Выключить Пинкод' : 'Включить Пинкод' } </div>\n        <div>{enabled ? <DeleteForever/> : null}</div>\n      </div>\n      <div className='security_setup_row'>\n        PIN:\n        <input className='security_setup_pin' value={pin} onChange={e => setPin(e.target.value)} type=\"text\"/>\n      </div>\n      <div className='security_setup_row' onClick={() => setOpenList(true)}>\n        <div>Настроить чаты</div>\n        <div>{list.length}</div>\n      </div>\n      <div className='security_setup_row' onClick={saveSettings}>\n        Сохранить настройки\n      </div>\n      {\n        enabled && (\n          <div className='security_setup_row' onClick={() => onUpdatePinStatus(null)}>\n            <div>Перейти на пин</div>\n            <Lock />\n          </div>\n        )\n      }\n      { warn && <div className='security_warn'><pre>{warn}</pre></div> }\n    </div>\n  )\n}\nexport default Setup\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList } = this.state;\n        const isSmallWidth = false\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport Back from '../../Assets/Icons/Back';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleBack = () => {\n        TdLibController.setChatId(0);\n    }\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        <IconButton\n                          className='header-left-back-button'\n                          aria-label='Back'\n                          onClick={this.handleBack}>\n                            <Back />\n                        </IconButton>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        {/*<div className='message-padding'>*/}\n                        {/*    <CheckMarkIcon className='message-select-tick' />*/}\n                        {/*</div>*/}\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        {/*<div className='message-padding' />*/}\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (history.some(x => x.chat_id === chatId && x.id === messageId || !messageId && chat && chat.last_message.id === x.id)) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        if (!chatId) {\n            return  null\n        }\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport Security from './Security';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            chatId: AppStore.getChatId(),\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n    onUpdatePinStatus = (pinStatus) => {\n        this.setState({\n            pinStatus\n        })\n    }\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            chatId,\n            pinStatus,\n        } = this.state;\n\n        if (pinStatus !== 'error') {\n            return <Security onUpdatePinStatus={this.onUpdatePinStatus} pinStatus={pinStatus} />\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    {chatId ? null : <Dialogs />}\n                    {chatId ? <DialogDetails ref={this.dialogDetailsRef} /> : null}\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}