{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Assets/Icons/logo.png","Components/ColumnLeft/SectionHeader.js","Utils/Language.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Delete.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/TopChat.js","Components/Security/List/Tile/ChatTile.js","Components/Security/List/Tile/DialogTitle.js","Actions/Message.js","Components/Security/List/Tile/Dialog.js","Components/Security/List/Tile/SelectedItem.js","Components/Security/List/Search/Search.js","Assets/Icons/Back.js","Assets/Icons/Search.js","Components/Security/List/Search/SearchInput.js","Components/Security/List/DialogsHeader.js","Components/Security/List/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Components/Security/List/DialogsList.js","Utils/Archive.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/Security/List/List.js","Components/Security/List/index.js","Stores/Secret.js","Components/Security/KeyBoardCommon.js","Components/Security/KeyBoardIos.js","Components/Security/List/ChatsLoader.js","Components/Security/Pin.js","Components/Security/index.js","Components/Security/Setup.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","module","exports","SectionHeader","command","multiline","onClick","children","classNames","Boolean","sprintf","t","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DialogTitle","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","chat_id","nextProps","nextState","ChatStore","on","off","showSavedMessages","isVerified","isChatVerified","title","getChatTitle","defaultProps","withTranslation","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","user_id","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","UserStore","SupergroupStore","externalSubtitle","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","RecentlyFoundChat","contextMenu","top","left","handleContextMenu","event","a","preventDefault","stopPropagation","clientX","clientY","handleCloseContextMenu","handleDelete","onDelete","ListItem","button","onContextMenu","Popover","open","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","e","MenuList","MenuItem","ListItemIcon","Delete","ListItemText","primary","PureComponent","TopChat","shortTitle","getChatShortTitle","dialog","showOnline","ChatTile","onClientUpdateChatBlob","fileId","loaded","photo","src","getSrc","small","onUpdateChatPhoto","file","store","FileStore","getStore","loadChatContent","letters","getChatLetters","handleSelect","handleLoad","size","style","width","height","tileLoaded","typeId","getChatTypeId","tileColor","abs","pointer","onLoad","draggable","alt","unpinMessage","messageId","message_id","unpinAllMessages","Dialog","hidden","SelectedItem","list","onClickCapture","pointerEvents","includes","DeleteForever","Search","handleKeyDown","modalManager","modals","isComposing","target","blur","handleClose","concatSearchResults","results","arr","map","chat_ids","j","set","push","sort","b","orderCompare","getChatOrder","searchText","text","sessionId","Date","savedMessages","promises","localPromise","query","limit","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","Promise","all","catch","local","toUpperCase","savedMessagesStrings","some","el","splice","recentlyFound","loadChatsContent","trimmedText","trim","startsWith","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","sender_user_id","from_message_id","offset","filter","chat_list","offset_date","offset_chat_id","offset_message_id","MessageStore","setItems","linkMessage","url","messageLinkInfo","message","console","log","chats","users","sender","keys","loadUsersContent","loadContent","topPromise","category","recentlyFoundPromise","savedMessagesPromise","getMyId","force","error","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","current","scrollTop","offsetHeight","scrollHeight","SCROLL_PRECISION","onLoadPrevious","getOffset","date","concatMessages","total_count","concat","loading","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","createRef","searchOrLoadContent","KeyboardManager","add","remove","onSelectChat","topChats","recentlyFoundChats","localChats","ref","onScroll","IconButton","aria-label","Close","SearchInput","keyCode","onChange","element","innerText","nativeEvent","stopImmediatePropagation","onBackspace","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","handleInput","inputRef","onFocus","hint","showIcon","placeholder","contentEditable","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","onInput","DialogsHeader","onUpdateAuthorizationState","authorizationState","authorization_state","handleSearch","onSearch","openSearch","isAuthorizationReady","handleSearchTextChange","onSearchTextChange","searchInputRef","handleCloseSearch","onCloseSearch","handleFocus","AppStore","getAuthorizationState","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","focus","focusInput","popup","content","DialogPlaceholder","index","titleWidth","contentWidth","cos","position","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","items","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","behavior","setTimeout","scrollTo","reset","chatList","filters","onUpdate","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogListItem","DialogsList","onClientUpdateChatList","params","completed","loadFirstSlice","onClientUpdateLeaveChat","inProgress","hiddenChats","delete","onLoadNext","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","currentIndex","findIndex","chatIds","chatOrder","newChatIds","getChatId","last_message","setChatId","changeChatDetailsVisibility","reorderChats","loadChatContents","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","FilterStore","callback","orderedChatIds","isDifferentOrder","replace","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offset_order","finally","clientUpdate","shift","replaceChats","appendChats","newChats","isChatPinned","Array","oldChatIds","getArchiveTitle","archive","chatsOrder","manager","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","debounce","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","user","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","defaultTimeout","enter","enteringScreen","exit","leavingScreen","List","onUpdateChatFilters","handleSaveCache","onClientUpdatePageWidth","isSmallWidth","timeout","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateThemeChange","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","handleHeaderClick","scrollToTop","visible","toggleChat","setList","setOpenList","mainItems","loadCache","onClientUpdateSettings","onClientUpdateArchive","onClientUpdateContacts","onClientUpdateNewGroup","onClientUpdateNewChannel","CacheStore","mainChats","mainCacheItems","CSSTransition","in","mountOnEnter","unmountOnExit","StorageVal","readed","securityStatus","pin","KeyBoardCommon","onNumber","onDel","onOk","logo","Backspace","KeyBoardIos","w","innerWidth","boxStyle","btn","ChatsLoader","patch","cb","onUpdateChats","res","getRequests","warn","requests","isChatMember","remove_from_chat_list","isCreator","status","is_member","wait","ms","leaveChats","chatLoader","Mount","loads","flatMap","request","Pin","masterPin","onUpdatePinStatus","useState","setPin","number","setVal","navigator","platform","userAgent","Setup","pinStatus","getVal","setSecurityStatus","setWarn","openList","saveSettings","test","enabled","Lock","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","oldTop","normalizePosition","handleLoadedData","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","mouseDownRoot","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","handleMouseDown","dragging","draggingTime","handleChange","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleBlur","connectPlayer","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","tabIndex","Hint","onMouseEnter","onMouseLeave","Slider","max","step","classes","rail","track","thumb","active","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","selected","copy","clipboard","writeText","copyOld","successful","createElement","readOnly","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","Error","removeChild","ForwardDialog","getPublicMessageLink","getChatsPromise","messageIds","isSupergroup","getChatUsername","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","color","getForwardPhotoSize","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","canSendMessages","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","transitionDuration","aria-labelledby","aria-describedby","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","Checkbox","edge","checked","disableRipple","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","padding","scroll","filtersRef","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","deleteMessages","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Share","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","openMedia","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","charCodeAt","SharedLink","webPage","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","offsetTop","offsetParent","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","getRowHeight","migrateCompleted","getFilter","handleVirtScroll","prevScrollTop","loadIncomplete","lastMessages","fromMessageId","requestId","currentParams","isValidMessage","incompleteResults","loadMessageContents","onLoadMigratedNext","handleOpen","openUser","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","mediaRef","counters","migratedCounters","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","member","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","wordWrap","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","getChatUserId","minHeight","SharedMediaHeader","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","onUpdateUser","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","unread_count","isPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","handleMainClick","handleWheel","deltaY","LocalizationStore","onWheel","Archive","innerListRef","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","handleDialogEnter","headerRef","openSettings","meChatId","openContacts","openNewGroup","openNewChannel","paper","onEnter","Dialogs","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleBack","handleSearchChat","localize","str","showProgressAnimation","Back","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","LStore","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","handleLeaveContinue","getLeaveChatNotification","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.54a36047.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.4221bb55.png\";","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatLetters, isMeChat, isDeletedPrivateChat, getChatTypeId } from '../../../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../../../Utils/File';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../../../Utils/Chat';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n} from '../../../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../../../Actions/Chat';\nimport { openChat } from '../../../../Actions/Client';\nimport { viewMessages } from '../../../../Actions/Message';\nimport ApplicationStore from '../../../../Stores/ApplicationStore';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport OptionStore from '../../../../Stores/OptionStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    render() {\n        const { chatId } = this.props;\n        return (\n            <div className='dialog-wrapper'>\n                <ChatTile chatId={chatId}/>\n                <div className='dialog-inner-wrapper'>\n                    <div className='tile-first-row'>\n                        <DialogTitle chatId={chatId} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","import { DeleteForever } from '@material-ui/icons'\nimport React from 'react'\n\nconst SelectedItem = ({ list, chatId, onSelect, children, style }) => {\n  const toggle = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onSelect(chatId)\n  }\n  return (\n    <div className='selectedItem_root' onClickCapture={toggle} style={style}>\n      <div style={{ pointerEvents: 'none' }}>{children}</div>\n      {list.includes(chatId) ? <DeleteForever/> : null}\n    </div>\n  )\n}\nexport default SelectedItem\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../../Additional/KeyboardManager';\nimport CloseIcon from '../../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SectionHeader from '../../../ColumnLeft/SectionHeader'\n// import Chat from '../../Tile/Chat';\n// import TopChat from '../../Tile/TopChat';\n// import RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\n// import FoundPublicChat from '../../Tile/FoundPublicChat';\nimport { loadChatsContent, loadUsersContent } from '../../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../../Utils/Language';\nimport { orderCompare } from '../../../../Utils/Common';\nimport { getChatOrder } from '../../../../Utils/Chat';\nimport { modalManager } from '../../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../../Constants';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport MessageStore from '../../../../Stores/MessageStore';\nimport UserStore from '../../../../Stores/UserStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Search.css';\nimport Chat from '../../../Tile/Chat'\nimport RecentlyFoundChat from '../../../Tile/RecentlyFoundChat'\nimport TopChat from '../../../Tile/TopChat'\nimport Dialog from '../Tile/Dialog'\nimport SelectedItem from '../Tile/SelectedItem'\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t, list, onSelectChat } = this.props;\n        const { top, recentlyFound, local } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                          <Dialog key={x} chatId={x} />\n                      </SelectedItem>\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n              ))\n            : [];\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowBackIcon from '../../../Assets/Icons/Back'\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../../Utils/Common';\nimport AppStore from '../../../Stores/ApplicationStore';\n// import '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.props.onCloseSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n        let content = null\n        if (openSearch) {\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <div onClick={this.handleCloseSearch}><ArrowBackIcon/></div>\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../../../Utils/Chat'\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from './Tile/Dialog';\nimport DialogPlaceholder from './Tile/DialogPlaceholder';\nimport VirtualizedList from '../../Additional/VirtualizedList';\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common';\nimport { scrollTop } from '../../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatPinned } from '../../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport SupergroupStore from '../../../Stores/SupergroupStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n// import './DialogsList.css';\nimport FilterStore from '../../../Stores/FilterStore';\nimport SelectedItem from './Tile/SelectedItem'\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden } = this.props;\n\n        return (\n            <div className='dialog-list-item' onClick={() => this.onSelectMessage(chatId)}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems, list } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n        if (nextProps.list !== list) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { list, onSelectChat } = this.props\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return (\n            <SelectedItem key={x} list={list} onSelect={onSelectChat} chatId={x} style={style}>\n                <DialogListItem onSelectMessage={this.props.onSelectMessage} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)}  />\n            </SelectedItem>\n        )\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\n\nimport { openChat } from '../../../Actions/Client';\nimport { getArchiveTitle } from '../../../Utils/Archive';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport CacheStore from '../../../Stores/CacheStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogListRef = React.createRef();\n    this.archiveListRef = React.createRef();\n    this.dialogsHeaderRef = React.createRef();\n\n    this.state = {\n      cache: null,\n\n      showArchive: false,\n      archiveTitle: null,\n\n      mainItems: [],\n\n      timeout: defaultTimeout,\n      openSearch: false,\n\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    if (nextState.cache !== cache) {\n      return true;\n    }\n\n    if (nextState.showArchive !== showArchive) {\n      return true;\n    }\n\n    if (nextState.archiveTitle !== archiveTitle) {\n      return true;\n    }\n\n    if (nextState.mainItems !== mainItems) {\n      return true;\n    }\n\n    if (nextState.openSearch !== openSearch) {\n      return true;\n    }\n\n    if (nextState.searchChatId !== searchChatId) {\n      return true;\n    }\n\n    if (nextState.searchText !== searchText) {\n      return true;\n    }\n    if (nextProps.list !== this.props.list) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.loadCache();\n\n    AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  componentWillUnmount() {\n    AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  onUpdateChatFilters = () => {\n    this.handleSaveCache();\n  };\n\n  onClientUpdatePageWidth = update => {\n    const { isSmallWidth } = update;\n\n    if (!isSmallWidth) return;\n\n    const { openSearch, } = this.state;\n    if (openSearch) {\n      this.setState({\n        openSearch: false,\n        timeout: 0\n      }, () => {\n        this.setState({\n          timeout: defaultTimeout\n        });\n      });\n    }\n  };\n\n  async loadCache() {\n    const cache = (await CacheStore.load()) || {};\n\n    const { chats, archiveChats } = cache;\n\n    FilterStore.filters = FilterStore.filters || CacheStore.filters;\n    this.setState({\n      cache,\n\n      showArchive: archiveChats && archiveChats.length > 0,\n      archiveTitle: getArchiveTitle()\n    });\n\n    this.loadChatContents((chats || []).map(x => x.id));\n\n    TdLibController.clientUpdate({\n      '@type': 'clientUpdateCacheLoaded'\n    });\n  }\n\n  async saveCache() {\n    const promises = [];\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListMain' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListArchive' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    const [mainChats, archiveChats] = await Promise.all(promises);\n\n    const { filters } = FilterStore;\n\n    CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n  }\n\n  onUpdateChatOrder = () => {\n    const { showArchive: prevShowArchive } = this.state;\n\n    const { current: mainCurrent } = this.dialogListRef;\n    if (mainCurrent && mainCurrent.loading) {\n      return;\n    }\n\n    const { current: archiveCurrent } = this.archiveListRef;\n    if (archiveCurrent && archiveCurrent.loading) {\n      return;\n    }\n\n    const archiveList = ChatStore.chatList.get('chatListArchive');\n    const showArchive = archiveList && archiveList.size > 0;\n\n    this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n      if (!prevShowArchive && showArchive) {\n        const { current } = this.dialogListRef;\n        if (current.listRef) {\n          const { current: listCurrent } = current.listRef;\n          if (listCurrent && listCurrent.scrollTop > 0) {\n            current.scrollTop += 68;\n          }\n        }\n      }\n    });\n\n    if (prevShowArchive && !showArchive) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateCloseArchive'\n      });\n    }\n  };\n\n  onClientUpdateThemeChange = () => {\n    this.forceUpdate();\n  };\n\n  onClientUpdateSearchChat = update => {\n    const { isSmallWidth } = AppStore;\n    if (isSmallWidth) return;\n\n    const { chatId, query } = update;\n    const { openSearch, searchChatId, searchText } = this.state;\n\n    if (openSearch && chatId === searchChatId && query === searchText) {\n      return;\n    }\n\n    const header = this.dialogsHeaderRef.current;\n    this.setState(\n      {\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null,\n      },\n      () => {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      }\n    );\n  };\n\n  handleHeaderClick = () => {\n    this.dialogListRef.current.scrollToTop();\n  };\n\n  handleSearch = visible => {\n    this.setState({\n      openSearch: visible,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  toggleChat = (chatId) => {\n    const { list, setList } = this.props\n    let newList\n    if (list.includes(chatId)) {\n      newList = list.filter(id => id !== chatId)\n    } else {\n      newList = [...list, chatId]\n    }\n    setList(newList)\n  }\n  onSelectChat = this.toggleChat\n\n  handleSelectMessage = (chatId) => {\n    this.toggleChat(chatId)\n    // openChat(chatId, messageId);\n    //\n    // const searchChatId = openSearch ? this.state.searchChatId : 0;\n    // const searchText = openSearch ? this.state.searchText : null;\n\n    // this.setState({\n    //   openSearch,\n    //   searchChatId,\n    //   searchText\n    // });\n  };\n\n  handleCloseSearch = () => {\n    if (!this.state.openSearch) {\n      this.props.setOpenList(false)\n      return\n    }\n    this.setState({\n      openSearch: false,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  handleSearchTextChange = text => {\n    this.setState({\n      searchText: text,\n      query: null\n    });\n  };\n\n  handleSaveCache = () => {\n    this.saveCache();\n  };\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore();\n    loadChatsContent(store, chatIds);\n  }\n\n  render() {\n    const { list } = this.props\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      timeout,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    const mainCacheItems = cache ? cache.chats || [] : null;\n    return (\n      <>\n        <div className='dialogs'>\n          <div className='sidebar-page'>\n            <DialogsHeader\n              ref={this.dialogsHeaderRef}\n              openSearch={openSearch}\n              timeout={timeout !== 0}\n              onClick={this.handleHeaderClick}\n              onSearch={this.handleSearch}\n              onCloseSearch={this.handleCloseSearch}\n              onSearchTextChange={this.handleSearchTextChange}\n            />\n            <div className='dialogs-content'>\n              <div className='dialogs-content-internal'>\n                <DialogsList\n                  type='chatListMain'\n                  ref={this.dialogListRef}\n                  cacheItems={mainCacheItems}\n                  items={mainItems}\n                  showArchive={showArchive}\n                  archiveTitle={archiveTitle}\n                  onSelectChat={this.onSelectChat}\n                  open={true}\n                  onSaveCache={this.handleSaveCache}\n                  list={list}\n                />\n              </div>\n              <CSSTransition\n                classNames='search'\n                timeout={timeout}\n                in={openSearch}\n                mountOnEnter={true}\n                unmountOnExit={true}>\n                <Search\n                  chatId={searchChatId}\n                  text={searchText}\n                  onSelectChat={this.onSelectChat}\n                  onClose={this.handleCloseSearch}\n                  list={list}\n                />\n              </CSSTransition>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dialogs;\n","import List from './List'\nexport default List\n","class StorageVal {\n  constructor(key) {\n    this.key = key\n    this.readed = false\n    this.value = null\n  }\n\n  getVal() {\n    if (!this.readed) {\n      this.value = JSON.parse(localStorage.getItem(this.key))\n      this.readed = true\n    }\n    return this.value\n  }\n  setVal (value) {\n    this.value = value\n    localStorage.setItem(this.key, JSON.stringify(this.value))\n  }\n}\n\nexport const securityStatus = new StorageVal('securityStatus')\nexport const pin = new StorageVal('pin')\nexport const chatList = new StorageVal('chatList')\n","import { Backspace } from '@material-ui/icons'\nimport logo from '../../Assets/Icons/logo.png'\nimport React from 'react'\n\nconst KeyBoardCommon = ({ pin, onNumber, onDel, onOk }) => {\n  return (\n    <div className='security_pin_root'>\n      <img src={logo} className='security_pin_logo' />\n      <div className='security_pin_text'>\n        {pin.replace(/./g, '*')}\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(1)}>\n          <div>1</div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(2)}>\n          <div>2</div>\n          <div className='security_pin_alf'>ABC</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(3)}>\n          <div>3</div>\n          <div className='security_pin_alf'>DEF</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(4)}>\n          <div>4</div>\n          <div className='security_pin_alf'>GHI</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(5)}>\n          <div>5</div>\n          <div className='security_pin_alf'>JKL</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(6)}>\n          <div>6</div>\n          <div className='security_pin_alf'>NMO</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(7)}>\n          <div>7</div>\n          <div className='security_pin_alf'>PQRS</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(8)}>\n          <div>8</div>\n          <div className='security_pin_alf'>TUV</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(9)}>\n          <div>9</div>\n          <div className='security_pin_alf'>WXYZ</div>\n        </div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onDel}>\n          <div><Backspace/></div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n        <div className='security_pin_number' onClick={onNumber(0)}>\n          <div>0</div>\n          <div className='security_pin_alf'>+</div>\n        </div>\n        <div className='security_pin_number' onClick={onOk}>\n          <div>OK</div>\n          <div className='security_pin_alf'>&nbsp;</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default KeyBoardCommon\n","import { Backspace } from '@material-ui/icons'\nimport React from 'react'\nimport './KeyBoardIos.css'\n\nconst KeyBoardIos = ({ pin, onNumber, onDel, onOk }) => {\n  var w = window.innerWidth * 0.8;\n  const boxStyle = {\n    width: w,\n  }\n  const btn = {\n    width: w/4,\n    height: w/4,\n  }\n  return (\n    <div className='ios_pin_root'>\n      <div style={boxStyle}>\n        <div className='ios_pin_text'>\n          {pin.replace(/./g, '*')}\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(1)}>1</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(2)}>2</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(3)}>3</div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(4)}>4</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(5)}>5</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(6)}>6</div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(7)}>7</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(8)}>8</div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(9)}>9</div>\n        </div>\n        <div className='ios_pin_row'>\n          <div className='ios_pin_number' style={btn} onClick={onDel}><Backspace/></div>\n          <div className='ios_pin_number' style={btn} onClick={onNumber(0)}>0</div>\n          <div className='ios_pin_number' style={btn} onClick={onOk}>OK</div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default KeyBoardIos\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat'\nimport { loadChatsContent } from '../../../Utils/File'\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common'\nimport { chatListEquals, getChatOrder, hasChatList } from '../../../Utils/Chat'\nimport AppStore from '../../../Stores/ApplicationStore'\nimport ChatStore from '../../../Stores/ChatStore'\nimport FileStore from '../../../Stores/FileStore'\nimport SupergroupStore from '../../../Stores/SupergroupStore'\nimport TdLibController from '../../../Controllers/TdLibController'\nimport FilterStore from '../../../Stores/FilterStore'\n\nconst CHAT_SLICE_LIMIT = 25\n\nclass ChatsLoader {\n  setState = (patch, cb) => {\n    this.state = {\n      ...this.state,\n      ...patch,\n    }\n    return cb()\n  }\n  onUpdateChats = () => {\n  }\n\n  constructor(props) {\n    this.hiddenChats = new Map()\n\n    const { authorizationState } = AppStore\n\n    this.state = {\n      authorizationState,\n      chats: null,\n      fistSliceLoaded: false,\n      chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n      params: {\n        loading: false,\n        completed: false,\n      },\n    }\n  }\n\n  Mount() {\n    const res = this.loadFirstSlice()\n\n    AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState)\n\n    ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete)\n    ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat)\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder)\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder)\n    ChatStore.on('updateChatPosition', this.onUpdateChatPosition)\n\n    FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList)\n\n    SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup)\n    return res\n  }\n\n  Unmount() {\n    AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState)\n\n    ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete)\n    ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat)\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder)\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder)\n    ChatStore.off('updateChatPosition', this.onUpdateChatPosition)\n\n    FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList)\n\n    SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup)\n  }\n\n  onClientUpdateChatList = update => {\n    const { chatList } = update\n\n    this.setState({\n      chatList,\n      params: {\n        loading: false,\n        completed: false,\n      },\n    }, () => {\n      this.loadFirstSlice()\n    })\n  }\n\n  onUpdateSupergroup = update => {\n\n\n  }\n\n  onClientUpdateLeaveChat = update => {\n    const { inProgress, chatId } = update\n\n    if (inProgress) {\n      this.hiddenChats.set(chatId, chatId)\n    } else {\n      this.hiddenChats.delete(chatId)\n    }\n  }\n\n  onUpdateAuthorizationState = update => {\n    const { authorization_state: authorizationState } = update\n\n    this.setState({ authorizationState }, () => this.loadFirstSlice())\n  }\n\n  onFastUpdatingComplete = update => {\n    this.onLoadNext(true)\n  }\n\n  loadFirstSlice = async () => {\n    const { authorizationState } = this.state\n    if (!isAuthorizationReady(authorizationState)) return\n\n    return new Promise(resolve => FileStore.initDB(() => this.onLoadNext(true).then(resolve)))\n  }\n\n  saveCache = () => {\n    // const { onSaveCache, type } = this.props;\n    // const { chatList } = this.state;\n    // if (type !== 'chatListMain') return;\n    // if (chatList['@type'] !== 'chatListMain') return;\n    //\n    // if (onSaveCache) onSaveCache();\n  }\n\n  onUpdateChatPosition = update => {\n    const { chatList } = this.state\n    const { position } = update\n\n    if (!chatListEquals(chatList, position.list)) {\n      return\n    }\n\n    this.onUpdateChatOrder(update)\n  }\n\n  onUpdateChatOrder = update => {\n    const { chats, chatList, params } = this.state\n    if (!chats) return\n\n    const { loading } = params\n    if (loading && !chats.length) return\n\n    const { chat_id } = update\n\n    const chat = ChatStore.get(chat_id)\n    if (!chat) {\n      return\n    }\n\n    if (!hasChatList(chat_id, chatList)) {\n      return\n    }\n\n    const order = getChatOrder(chat_id, chatList)\n    const currentIndex = chats.findIndex(x => x === chat_id)\n    if (currentIndex === -1 && order === '0') {\n      return\n    }\n\n    const chatIds = []\n    for (let i = 0; i < chats.length; i++) {\n      const chat = ChatStore.get(chats[i])\n      const chatOrder = getChatOrder(chats[i], chatList)\n      if (chat && chatOrder !== '0') {\n        chatIds.push(chat.id)\n      }\n    }\n\n    const newChatIds = []\n    if (order === '0') {\n      // unselect deleted chat\n      if (chat_id === AppStore.getChatId() && !chat.last_message) {\n        TdLibController.setChatId(0)\n        changeChatDetailsVisibility(false)\n      }\n    } else {\n      if (currentIndex === -1) {\n        if (loading) {\n          console.error('[vl] skip add while getChats', update)\n          // TODO: check and add if within loaded part\n        } else {\n          newChatIds.push(chat_id)\n        }\n      }\n    }\n\n    this.reorderChats(chatIds, newChatIds, () => {\n      this.loadChatContents(newChatIds)\n      this.saveCache()\n    })\n  }\n\n  reorderChats(chatIds, newChatIds = [], callback) {\n    const { chatList } = this.state\n\n    const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n      return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList))\n    })\n\n    if (!ChatsLoader.isDifferentOrder(this.state.chats, orderedChatIds)) {\n      if (callback) callback()\n      return\n    }\n\n    this.setState({ chats: orderedChatIds }, callback)\n  }\n\n  static isDifferentOrder(oldChatIds, newChatIds) {\n    if (oldChatIds.length === newChatIds.length) {\n      for (let i = 0; i < oldChatIds.length; i++) {\n        if (oldChatIds[i] !== newChatIds[i]) return true\n      }\n\n      return false\n    }\n\n    return true\n  }\n\n  async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n    const { chats, chatList, params } = this.state\n\n    // console.log('[folders] onLoadNext', chatList, limit);\n    if (params.loading) {\n      // console.log('[folders] onLoadNext cancel loading', chatList);\n      return\n    }\n\n    if (params.completed) {\n      // console.log('[folders] onLoadNext cancel loaded', chatList);\n      return\n    }\n\n    let offsetOrder = '9223372036854775807' // 2^63 - 1\n    let offsetChatId = 0\n    if (!replace && chats && chats.length > 0) {\n      const chat = ChatStore.get(chats[chats.length - 1])\n      if (chat) {\n        offsetOrder = getChatOrder(chat.id, chatList)\n        offsetChatId = chat.id\n      }\n    }\n\n    // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n    params.loading = true\n    const result = await TdLibController.send({\n      '@type': 'getChats',\n      chat_list: chatList,\n      offset_chat_id: offsetChatId,\n      offset_order: offsetOrder,\n      limit: CHAT_SLICE_LIMIT,\n    }).finally(() => {\n      params.loading = false\n      if (replace) {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList })\n      }\n    })\n    // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n    if (params !== this.state.params) {\n      // console.log('[folders] onLoadNext cancel', chatList);\n      return\n    }\n\n    if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n      result.chat_ids.shift()\n    }\n\n    params.completed = !result.chat_ids.length\n\n    if (replace) {\n      await this.replaceChats(result.chat_ids, () => {\n        this.loadChatContents(result.chat_ids)\n        this.saveCache()\n\n        if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n          return this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length)\n        }\n      })\n    } else {\n      // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n      await this.appendChats(result.chat_ids, () => {\n        // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n        this.loadChatContents(result.chat_ids)\n\n        if (result.chat_ids.length && result.chat_ids.length < limit) {\n          return this.onLoadNext(false, limit - result.chat_ids.length)\n        }\n      })\n    }\n  }\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore()\n    loadChatsContent(store, chatIds)\n  }\n\n  appendChats(chatIds, callback) {\n    if (chatIds.length === 0) {\n      if (callback) callback()\n      return\n    }\n\n    const { chats } = this.state\n\n    const newChats = (chats || []).concat(chatIds)\n    return this.setState({ chats: newChats }, callback)\n  }\n\n  replaceChats(chats, callback) {\n    return this.setState({ chats }, callback)\n  }\n}\n\nexport default ChatsLoader\n","import React, { useState } from 'react'\nimport TdLibController from '../../Controllers/TdLibController'\nimport ChatStore from '../../Stores/ChatStore'\nimport UserStore from '../../Stores/UserStore'\nimport { isChatMember, isCreator } from '../../Utils/Chat'\nimport * as store from '../../Stores/Secret'\nimport KeyBoardCommon from './KeyBoardCommon'\nimport KeyBoardIos from './KeyBoardIos'\nimport ChatsLoader from './List/ChatsLoader'\n\nfunction iOS() {\n  return [\n      'iPad Simulator',\n      'iPhone Simulator',\n      'iPod Simulator',\n      'iPad',\n      'iPhone',\n      'iPod'\n    ].includes(navigator.platform)\n    // iPad on iOS 13 detection\n    || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n}\n\nconst getRequests = (chatId) => {\n  const chat = ChatStore.get(chatId);\n  if (!chat) {\n    console.warn('no chat for: ', chatId)\n    return []\n  }\n  const requests = [];\n  switch (chat.type['@type']) {\n    case 'chatTypeBasicGroup': {\n      if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n      break;\n    }\n    case 'chatTypeSupergroup': {\n      if (isCreator(chatId)) {\n        requests.push({\n          '@type': 'setChatMemberStatus',\n          chat_id: chatId,\n          user_id: UserStore.getMyId(),\n          status: {\n            '@type': 'chatMemberStatusCreator',\n            is_member: false\n          }\n        });\n      } else if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      break;\n    }\n    case 'chatTypePrivate':\n    case 'chatTypeSecret': {\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n    }\n  }\n  return requests\n}\nconst wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nconst leaveChats = async (list) => {\n  const chatLoader = new ChatsLoader({ type: 'chatListMain' })\n  await chatLoader.Mount()\n  await wait(500)\n  let loads = 50\n  while (list.some(id => !ChatStore.get(id)) && loads >= 0) {\n    await chatLoader.onLoadNext()\n    await wait(200)\n    loads--\n  }\n\n  await chatLoader.Mount()\n  const requests = list.flatMap(getRequests)\n  for (const request of requests) {\n    try {\n      const res = await TdLibController.send(request)\n      console.log(res)\n    } catch (e) {\n      console.log(e, request)\n    }\n  }\n}\n\n\nconst Pin = ({ pin: masterPin, list, onUpdatePinStatus }) => {\n  const [pin, setPin] = useState('')\n  const onNumber = (number) => () => {\n    if (pin.length >=masterPin.length) {\n      return\n    }\n    setPin(`${pin}${number}`)\n  }\n  const onDel = () => {\n    setPin(pin.substr(0, pin.length - 1 ))\n  }\n  const onOk = async () => {\n    if (pin === masterPin) {\n      onUpdatePinStatus('on')\n    } else {\n      console.log('ALARM!!!!', list)\n      await leaveChats(list)\n      setTimeout(() => {\n        onUpdatePinStatus('error')\n      }, 300)\n      store.chatList.setVal([])\n    }\n  }\n  const iosPatform = iOS()\n\n  if (iosPatform) {\n    return <KeyBoardIos onDel={onDel} onNumber={onNumber} onOk={onOk} pin={pin} />\n  } else {\n    return <KeyBoardCommon onDel={onDel} onNumber={onNumber} onOk={onOk} pin={pin} />\n  }\n}\n\nexport default Pin\n","import Setup from './Setup'\n\nexport default Setup\n","import { DeleteForever, Lock } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport './Security.css'\nimport List from './List'\nimport * as store from '../../Stores/Secret'\nimport Pin from './Pin'\n\nconst Setup = ({ pinStatus, onUpdatePinStatus}) => {\n  const [status, setSecurityStatus] = useState(store.securityStatus.getVal())\n  const [warn, setWarn] = useState()\n  const [pin, setPin] = useState(store.pin.getVal() || '')\n  const [list, setList] = useState(store.chatList.getVal() || [])\n  const [openList, setOpenList] = useState(false)\n\n  const saveSettings = () => {\n    if (!/\\d{4,}/.test(pin) ) {\n      setWarn('PIN меньше 4 цифр')\n      return false\n    }\n    store.chatList.setVal(list)\n    store.pin.setVal(pin)\n\n    setWarn(`настройки сохранены\\nчаты: ${list.length}, PIN: ${pin}`)\n    return true\n  }\n  const changeStatus = () => {\n    if (status === 'enabled') {\n      store.securityStatus.setVal('off')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn('PIN Off')\n    } else if (saveSettings()) {\n      onUpdatePinStatus('ok')\n      store.securityStatus.setVal('enabled')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn(`PIN On: ${pin}`)\n    }\n  }\n  const enabled = status === 'enabled'\n\n  if (enabled && !pinStatus) {\n    return <Pin onUpdatePinStatus={onUpdatePinStatus} pin={pin} list={list} />\n  }\n\n  if (openList) {\n    return <List setOpenList={setOpenList} setList={setList} list={list}/>\n  }\n\n\n  return (\n    <div className='security_root'>\n      <div className='security_setup_row'>\n        Setup\n      </div>\n      <div onClick={changeStatus} className={`security_setup_row ${enabled? 'security_enabled' : 'security_disabled'}`}>\n        <div> {enabled ? 'Выключить Пинкод' : 'Включить Пинкод' } </div>\n        <div>{enabled ? <DeleteForever/> : null}</div>\n      </div>\n      <div className='security_setup_row'>\n        PIN:\n        <input className='security_setup_pin' value={pin} onChange={e => setPin(e.target.value)} type=\"text\"/>\n      </div>\n      <div className='security_setup_row' onClick={() => setOpenList(true)}>\n        <div>Настроить чаты</div>\n        <div>{list.length}</div>\n      </div>\n      <div className='security_setup_row' onClick={saveSettings}>\n        Сохранить настройки\n      </div>\n      {\n        enabled && (\n          <div className='security_setup_row' onClick={() => onUpdatePinStatus(null)}>\n            <div>Перейти на пин</div>\n            <Lock />\n          </div>\n        )\n      }\n      { warn && <div className='security_warn'><pre>{warn}</pre></div> }\n    </div>\n  )\n}\nexport default Setup\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList } = this.state;\n        const isSmallWidth = false\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport Back from '../../Assets/Icons/Back';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleBack = () => {\n        TdLibController.setChatId(0);\n    }\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        <IconButton\n                          className='header-left-back-button'\n                          aria-label='Back'\n                          onClick={this.handleBack}>\n                            <Back />\n                        </IconButton>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        {/*<div className='message-padding'>*/}\n                        {/*    <CheckMarkIcon className='message-select-tick' />*/}\n                        {/*</div>*/}\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        {/*<div className='message-padding' />*/}\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (history.some(x => x.chat_id === chatId && x.id === messageId || !messageId && chat && chat.last_message.id === x.id)) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        if (!chatId) {\n            return  null\n        }\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport Security from './Security';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            chatId: AppStore.getChatId(),\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n    onUpdatePinStatus = (pinStatus) => {\n        this.setState({\n            pinStatus\n        })\n    }\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            chatId,\n            pinStatus,\n        } = this.state;\n\n        if (pinStatus !== 'error') {\n            return <Security onUpdatePinStatus={this.onUpdatePinStatus} pinStatus={pinStatus} />\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    {chatId ? null : <Dialogs />}\n                    {chatId ? <DialogDetails ref={this.dialogDetailsRef} /> : null}\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}