{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Components/ColumnLeft/SectionHeader.js","Utils/Language.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Delete.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/TopChat.js","Components/Security/List/Tile/ChatTile.js","Components/Security/List/Tile/DialogTitle.js","Actions/Message.js","Components/Security/List/Tile/Dialog.js","Components/Security/List/Tile/SelectedItem.js","Components/Security/List/Search/Search.js","Assets/Icons/Back.js","Assets/Icons/Search.js","Components/Security/List/Search/SearchInput.js","Components/Security/List/DialogsHeader.js","Components/Security/List/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Components/Security/List/DialogsList.js","Utils/Archive.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/Security/List/List.js","Components/Security/List/index.js","Stores/Secret.js","Components/Security/Pin.js","Components/Security/index.js","Components/Security/Setup.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","SectionHeader","command","multiline","onClick","children","classNames","Boolean","sprintf","t","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DialogTitle","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","chat_id","nextProps","nextState","ChatStore","on","off","showSavedMessages","isVerified","isChatVerified","title","getChatTitle","defaultProps","withTranslation","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","user_id","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","UserStore","SupergroupStore","externalSubtitle","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","RecentlyFoundChat","contextMenu","top","left","handleContextMenu","event","a","preventDefault","stopPropagation","clientX","clientY","handleCloseContextMenu","handleDelete","onDelete","ListItem","button","onContextMenu","Popover","open","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","e","MenuList","MenuItem","ListItemIcon","Delete","ListItemText","primary","PureComponent","TopChat","shortTitle","getChatShortTitle","dialog","showOnline","ChatTile","onClientUpdateChatBlob","fileId","loaded","photo","src","getSrc","small","onUpdateChatPhoto","file","store","FileStore","getStore","loadChatContent","letters","getChatLetters","handleSelect","handleLoad","size","style","width","height","tileLoaded","typeId","getChatTypeId","tileColor","abs","pointer","onLoad","draggable","alt","unpinMessage","messageId","message_id","unpinAllMessages","Dialog","hidden","SelectedItem","list","onClickCapture","pointerEvents","includes","DeleteForever","Search","handleKeyDown","modalManager","modals","isComposing","target","blur","handleClose","concatSearchResults","results","arr","map","chat_ids","j","set","push","sort","b","orderCompare","getChatOrder","searchText","text","sessionId","Date","savedMessages","promises","localPromise","query","limit","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","Promise","all","catch","local","toUpperCase","savedMessagesStrings","some","el","splice","recentlyFound","loadChatsContent","trimmedText","trim","startsWith","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","sender_user_id","from_message_id","offset","filter","chat_list","offset_date","offset_chat_id","offset_message_id","MessageStore","setItems","linkMessage","url","messageLinkInfo","message","console","log","chats","users","sender","keys","loadUsersContent","loadContent","topPromise","category","recentlyFoundPromise","savedMessagesPromise","getMyId","force","error","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","current","scrollTop","offsetHeight","scrollHeight","SCROLL_PRECISION","onLoadPrevious","getOffset","date","concatMessages","total_count","concat","loading","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","createRef","searchOrLoadContent","KeyboardManager","add","remove","onSelectChat","topChats","recentlyFoundChats","localChats","ref","onScroll","IconButton","aria-label","Close","SearchInput","keyCode","onChange","element","innerText","nativeEvent","stopImmediatePropagation","onBackspace","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","handleInput","inputRef","onFocus","hint","showIcon","placeholder","contentEditable","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","onInput","DialogsHeader","onUpdateAuthorizationState","authorizationState","authorization_state","handleSearch","onSearch","openSearch","isAuthorizationReady","handleSearchTextChange","onSearchTextChange","searchInputRef","handleCloseSearch","onCloseSearch","handleFocus","AppStore","getAuthorizationState","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","focus","focusInput","popup","content","DialogPlaceholder","index","titleWidth","contentWidth","cos","position","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","items","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","behavior","setTimeout","scrollTo","reset","chatList","filters","onUpdate","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogListItem","DialogsList","onClientUpdateChatList","params","completed","loadFirstSlice","onClientUpdateLeaveChat","inProgress","hiddenChats","delete","onLoadNext","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","currentIndex","findIndex","chatIds","chatOrder","newChatIds","getChatId","last_message","setChatId","changeChatDetailsVisibility","reorderChats","loadChatContents","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","FilterStore","callback","orderedChatIds","isDifferentOrder","replace","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offset_order","finally","clientUpdate","shift","replaceChats","appendChats","newChats","isChatPinned","Array","oldChatIds","getArchiveTitle","archive","chatsOrder","manager","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","debounce","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","user","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","defaultTimeout","enter","enteringScreen","exit","leavingScreen","List","onUpdateChatFilters","handleSaveCache","onClientUpdatePageWidth","isSmallWidth","timeout","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateThemeChange","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","handleHeaderClick","scrollToTop","visible","toggleChat","setList","setOpenList","mainItems","loadCache","onClientUpdateSettings","onClientUpdateArchive","onClientUpdateContacts","onClientUpdateNewGroup","onClientUpdateNewChannel","CacheStore","mainChats","mainCacheItems","CSSTransition","in","mountOnEnter","unmountOnExit","StorageVal","readed","securityStatus","pin","getRequests","warn","requests","isChatMember","remove_from_chat_list","isCreator","status","is_member","leaveChats","flatMap","request","res","Pin","masterPin","onUpdatePinStatus","useState","setPin","onNumber","number","onOk","setVal","Backspace","Setup","pinStatus","getVal","setSecurityStatus","setWarn","openList","saveSettings","test","enabled","Lock","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","oldTop","normalizePosition","handleLoadedData","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","mouseDownRoot","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","handleMouseDown","dragging","draggingTime","handleChange","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleBlur","connectPlayer","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","tabIndex","Hint","onMouseEnter","onMouseLeave","Slider","max","step","classes","rail","track","thumb","active","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","selected","copy","navigator","clipboard","writeText","copyOld","successful","createElement","readOnly","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","Error","removeChild","ForwardDialog","getPublicMessageLink","getChatsPromise","messageIds","isSupergroup","getChatUsername","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","color","getForwardPhotoSize","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","canSendMessages","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","transitionDuration","aria-labelledby","aria-describedby","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","Checkbox","edge","checked","disableRipple","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","padding","scroll","filtersRef","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","deleteMessages","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Share","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","openMedia","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","charCodeAt","SharedLink","webPage","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","offsetTop","offsetParent","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","getRowHeight","migrateCompleted","getFilter","handleVirtScroll","prevScrollTop","loadIncomplete","lastMessages","fromMessageId","requestId","currentParams","isValidMessage","incompleteResults","loadMessageContents","onLoadMigratedNext","handleOpen","openUser","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","mediaRef","counters","migratedCounters","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","member","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","wordWrap","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","getChatUserId","minHeight","SharedMediaHeader","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","onUpdateUser","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","unread_count","isPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","handleMainClick","handleWheel","deltaY","LocalizationStore","onWheel","Archive","innerListRef","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","handleDialogEnter","headerRef","openSettings","meChatId","openContacts","openNewGroup","openNewChannel","paper","onEnter","Dialogs","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleBack","handleSearchChat","localize","str","showProgressAnimation","Back","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","LStore","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","handleLeaveContinue","getLeaveChatNotification","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.cc925401.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatLetters, isMeChat, isDeletedPrivateChat, getChatTypeId } from '../../../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../../../Utils/File';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../../../Utils/Chat';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n} from '../../../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../../../Actions/Chat';\nimport { openChat } from '../../../../Actions/Client';\nimport { viewMessages } from '../../../../Actions/Message';\nimport ApplicationStore from '../../../../Stores/ApplicationStore';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport OptionStore from '../../../../Stores/OptionStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    render() {\n        const { chatId } = this.props;\n        return (\n            <div className='dialog-wrapper'>\n                <ChatTile chatId={chatId}/>\n                <div className='dialog-inner-wrapper'>\n                    <div className='tile-first-row'>\n                        <DialogTitle chatId={chatId} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","import { DeleteForever } from '@material-ui/icons'\nimport React from 'react'\n\nconst SelectedItem = ({ list, chatId, onSelect, children, style }) => {\n  const toggle = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onSelect(chatId)\n  }\n  return (\n    <div className='selectedItem_root' onClickCapture={toggle} style={style}>\n      <div style={{ pointerEvents: 'none' }}>{children}</div>\n      {list.includes(chatId) ? <DeleteForever/> : null}\n    </div>\n  )\n}\nexport default SelectedItem\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../../Additional/KeyboardManager';\nimport CloseIcon from '../../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SectionHeader from '../../../ColumnLeft/SectionHeader'\n// import Chat from '../../Tile/Chat';\n// import TopChat from '../../Tile/TopChat';\n// import RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\n// import FoundPublicChat from '../../Tile/FoundPublicChat';\nimport { loadChatsContent, loadUsersContent } from '../../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../../Utils/Language';\nimport { orderCompare } from '../../../../Utils/Common';\nimport { getChatOrder } from '../../../../Utils/Chat';\nimport { modalManager } from '../../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../../Constants';\nimport ChatStore from '../../../../Stores/ChatStore';\nimport FileStore from '../../../../Stores/FileStore';\nimport MessageStore from '../../../../Stores/MessageStore';\nimport UserStore from '../../../../Stores/UserStore';\nimport TdLibController from '../../../../Controllers/TdLibController';\nimport './Search.css';\nimport Chat from '../../../Tile/Chat'\nimport RecentlyFoundChat from '../../../Tile/RecentlyFoundChat'\nimport TopChat from '../../../Tile/TopChat'\nimport Dialog from '../Tile/Dialog'\nimport SelectedItem from '../Tile/SelectedItem'\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t, list, onSelectChat } = this.props;\n        const { top, recentlyFound, local } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                          <Dialog key={x} chatId={x} />\n                      </SelectedItem>\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                    <SelectedItem chatId={x} list={list} onSelect={onSelectChat}>\n                        <Dialog key={x} chatId={x} />\n                    </SelectedItem>\n              ))\n            : [];\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowBackIcon from '../../../Assets/Icons/Back'\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../../Utils/Common';\nimport AppStore from '../../../Stores/ApplicationStore';\n// import '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.props.onCloseSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n        let content = null\n        if (openSearch) {\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <div onClick={this.handleCloseSearch}><ArrowBackIcon/></div>\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../../../Utils/Chat'\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from './Tile/Dialog';\nimport DialogPlaceholder from './Tile/DialogPlaceholder';\nimport VirtualizedList from '../../Additional/VirtualizedList';\n\nimport { changeChatDetailsVisibility } from '../../../Actions/Chat';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../../Utils/Common';\nimport { scrollTop } from '../../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatPinned } from '../../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport SupergroupStore from '../../../Stores/SupergroupStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n// import './DialogsList.css';\nimport FilterStore from '../../../Stores/FilterStore';\nimport SelectedItem from './Tile/SelectedItem'\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden } = this.props;\n\n        return (\n            <div className='dialog-list-item' onClick={() => this.onSelectMessage(chatId)}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems, list } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n        if (nextProps.list !== list) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { list, onSelectChat } = this.props\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return (\n            <SelectedItem key={x} list={list} onSelect={onSelectChat} chatId={x} style={style}>\n                <DialogListItem onSelectMessage={this.props.onSelectMessage} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)}  />\n            </SelectedItem>\n        )\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\n\nimport { openChat } from '../../../Actions/Client';\nimport { getArchiveTitle } from '../../../Utils/Archive';\nimport { loadChatsContent } from '../../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport CacheStore from '../../../Stores/CacheStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dialogListRef = React.createRef();\n    this.archiveListRef = React.createRef();\n    this.dialogsHeaderRef = React.createRef();\n\n    this.state = {\n      cache: null,\n\n      showArchive: false,\n      archiveTitle: null,\n\n      mainItems: [],\n\n      timeout: defaultTimeout,\n      openSearch: false,\n\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    if (nextState.cache !== cache) {\n      return true;\n    }\n\n    if (nextState.showArchive !== showArchive) {\n      return true;\n    }\n\n    if (nextState.archiveTitle !== archiveTitle) {\n      return true;\n    }\n\n    if (nextState.mainItems !== mainItems) {\n      return true;\n    }\n\n    if (nextState.openSearch !== openSearch) {\n      return true;\n    }\n\n    if (nextState.searchChatId !== searchChatId) {\n      return true;\n    }\n\n    if (nextState.searchText !== searchText) {\n      return true;\n    }\n    if (nextProps.list !== this.props.list) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.loadCache();\n\n    AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  componentWillUnmount() {\n    AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n    AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n    ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n    ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n    ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n    ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n    ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n  }\n\n  onUpdateChatFilters = () => {\n    this.handleSaveCache();\n  };\n\n  onClientUpdatePageWidth = update => {\n    const { isSmallWidth } = update;\n\n    if (!isSmallWidth) return;\n\n    const { openSearch, } = this.state;\n    if (openSearch) {\n      this.setState({\n        openSearch: false,\n        timeout: 0\n      }, () => {\n        this.setState({\n          timeout: defaultTimeout\n        });\n      });\n    }\n  };\n\n  async loadCache() {\n    const cache = (await CacheStore.load()) || {};\n\n    const { chats, archiveChats } = cache;\n\n    FilterStore.filters = FilterStore.filters || CacheStore.filters;\n    this.setState({\n      cache,\n\n      showArchive: archiveChats && archiveChats.length > 0,\n      archiveTitle: getArchiveTitle()\n    });\n\n    this.loadChatContents((chats || []).map(x => x.id));\n\n    TdLibController.clientUpdate({\n      '@type': 'clientUpdateCacheLoaded'\n    });\n  }\n\n  async saveCache() {\n    const promises = [];\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListMain' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    promises.push(TdLibController.send({\n      '@type': 'getChats',\n      chat_list: { '@type': 'chatListArchive' },\n      offset_order: '9223372036854775807',\n      offset_chat_id: 0,\n      limit: CHAT_SLICE_LIMIT\n    }));\n    const [mainChats, archiveChats] = await Promise.all(promises);\n\n    const { filters } = FilterStore;\n\n    CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n  }\n\n  onUpdateChatOrder = () => {\n    const { showArchive: prevShowArchive } = this.state;\n\n    const { current: mainCurrent } = this.dialogListRef;\n    if (mainCurrent && mainCurrent.loading) {\n      return;\n    }\n\n    const { current: archiveCurrent } = this.archiveListRef;\n    if (archiveCurrent && archiveCurrent.loading) {\n      return;\n    }\n\n    const archiveList = ChatStore.chatList.get('chatListArchive');\n    const showArchive = archiveList && archiveList.size > 0;\n\n    this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n      if (!prevShowArchive && showArchive) {\n        const { current } = this.dialogListRef;\n        if (current.listRef) {\n          const { current: listCurrent } = current.listRef;\n          if (listCurrent && listCurrent.scrollTop > 0) {\n            current.scrollTop += 68;\n          }\n        }\n      }\n    });\n\n    if (prevShowArchive && !showArchive) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateCloseArchive'\n      });\n    }\n  };\n\n  onClientUpdateThemeChange = () => {\n    this.forceUpdate();\n  };\n\n  onClientUpdateSearchChat = update => {\n    const { isSmallWidth } = AppStore;\n    if (isSmallWidth) return;\n\n    const { chatId, query } = update;\n    const { openSearch, searchChatId, searchText } = this.state;\n\n    if (openSearch && chatId === searchChatId && query === searchText) {\n      return;\n    }\n\n    const header = this.dialogsHeaderRef.current;\n    this.setState(\n      {\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null,\n      },\n      () => {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      }\n    );\n  };\n\n  handleHeaderClick = () => {\n    this.dialogListRef.current.scrollToTop();\n  };\n\n  handleSearch = visible => {\n    this.setState({\n      openSearch: visible,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  toggleChat = (chatId) => {\n    const { list, setList } = this.props\n    let newList\n    if (list.includes(chatId)) {\n      newList = list.filter(id => id !== chatId)\n    } else {\n      newList = [...list, chatId]\n    }\n    setList(newList)\n  }\n  onSelectChat = this.toggleChat\n\n  handleSelectMessage = (chatId) => {\n    this.toggleChat(chatId)\n    // openChat(chatId, messageId);\n    //\n    // const searchChatId = openSearch ? this.state.searchChatId : 0;\n    // const searchText = openSearch ? this.state.searchText : null;\n\n    // this.setState({\n    //   openSearch,\n    //   searchChatId,\n    //   searchText\n    // });\n  };\n\n  handleCloseSearch = () => {\n    if (!this.state.openSearch) {\n      this.props.setOpenList(false)\n      return\n    }\n    this.setState({\n      openSearch: false,\n      searchChatId: 0,\n      searchText: null\n    });\n  };\n\n  handleSearchTextChange = text => {\n    this.setState({\n      searchText: text,\n      query: null\n    });\n  };\n\n  handleSaveCache = () => {\n    this.saveCache();\n  };\n\n  loadChatContents(chatIds) {\n    const store = FileStore.getStore();\n    loadChatsContent(store, chatIds);\n  }\n\n  render() {\n    const { list } = this.props\n    const {\n      cache,\n      showArchive,\n      archiveTitle,\n      mainItems,\n      openSearch,\n      timeout,\n      searchChatId,\n      searchText\n    } = this.state;\n\n    const mainCacheItems = cache ? cache.chats || [] : null;\n    return (\n      <>\n        <div className='dialogs'>\n          <div className='sidebar-page'>\n            <DialogsHeader\n              ref={this.dialogsHeaderRef}\n              openSearch={openSearch}\n              timeout={timeout !== 0}\n              onClick={this.handleHeaderClick}\n              onSearch={this.handleSearch}\n              onCloseSearch={this.handleCloseSearch}\n              onSearchTextChange={this.handleSearchTextChange}\n            />\n            <div className='dialogs-content'>\n              <div className='dialogs-content-internal'>\n                <DialogsList\n                  type='chatListMain'\n                  ref={this.dialogListRef}\n                  cacheItems={mainCacheItems}\n                  items={mainItems}\n                  showArchive={showArchive}\n                  archiveTitle={archiveTitle}\n                  onSelectChat={this.onSelectChat}\n                  open={true}\n                  onSaveCache={this.handleSaveCache}\n                  list={list}\n                />\n              </div>\n              <CSSTransition\n                classNames='search'\n                timeout={timeout}\n                in={openSearch}\n                mountOnEnter={true}\n                unmountOnExit={true}>\n                <Search\n                  chatId={searchChatId}\n                  text={searchText}\n                  onSelectChat={this.onSelectChat}\n                  onClose={this.handleCloseSearch}\n                  list={list}\n                />\n              </CSSTransition>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dialogs;\n","import List from './List'\nexport default List\n","class StorageVal {\n  constructor(key) {\n    this.key = key\n    this.readed = false\n    this.value = null\n  }\n\n  getVal() {\n    if (!this.readed) {\n      this.value = JSON.parse(localStorage.getItem(this.key))\n      this.readed = true\n    }\n    return this.value\n  }\n  setVal (value) {\n    this.value = value\n    localStorage.setItem(this.key, JSON.stringify(this.value))\n  }\n}\n\nexport const securityStatus = new StorageVal('securityStatus')\nexport const pin = new StorageVal('pin')\nexport const chatList = new StorageVal('chatList')\n","import { Backspace } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport TdLibController from '../../Controllers/TdLibController'\nimport ChatStore from '../../Stores/ChatStore'\nimport UserStore from '../../Stores/UserStore'\nimport { isChatMember, isCreator } from '../../Utils/Chat'\nimport * as store from '../../Stores/Secret'\n\n\nconst getRequests = (chatId) => {\n  const chat = ChatStore.get(chatId);\n  if (!chat) {\n    console.warn('no chat for: ', chatId)\n    return []\n  }\n\n  const requests = [];\n  switch (chat.type['@type']) {\n    case 'chatTypeBasicGroup': {\n      if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n      break;\n    }\n    case 'chatTypeSupergroup': {\n      if (isCreator(chatId)) {\n        requests.push({\n          '@type': 'setChatMemberStatus',\n          chat_id: chatId,\n          user_id: UserStore.getMyId(),\n          status: {\n            '@type': 'chatMemberStatusCreator',\n            is_member: false\n          }\n        });\n      } else if (isChatMember(chatId)) {\n        requests.push({ '@type': 'leaveChat', chat_id: chatId });\n      }\n      break;\n    }\n    case 'chatTypePrivate':\n    case 'chatTypeSecret': {\n      requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n    }\n  }\n  return requests\n}\n\nconst leaveChats = async (list) => {\n  const requests = list.flatMap(getRequests)\n  for (const request of requests) {\n    try {\n      const res = await TdLibController.send(request)\n      console.log(res)\n    } catch (e) {\n      console.log(e, request)\n    }\n  }\n}\n\n\nconst Pin = ({ pin: masterPin, list, onUpdatePinStatus }) => {\n  const [pin, setPin] = useState('')\n  const onNumber = (number) => () => {\n    if (pin.length >=masterPin.length) {\n      return\n    }\n    setPin(`${pin}${number}`)\n  }\n  const onDel = () => {\n    setPin(pin.substr(0, pin.length - 1 ))\n  }\n  const onOk = async () => {\n    if (pin === masterPin) {\n      onUpdatePinStatus('on')\n    } else {\n      console.log('ALARM!!!!', list)\n      onUpdatePinStatus('error')\n      await leaveChats(list)\n      store.chatList.setVal([])\n    }\n    // setPin(pin)\n  }\n\n  return (\n    <div className='security_pin_root'>\n      <div className='security_pin_text'>\n        {pin.replace(/./g, '*')}\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(1)}>1</div>\n        <div className='security_pin_number' onClick={onNumber(2)}>2</div>\n        <div className='security_pin_number' onClick={onNumber(3)}>3</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(4)}>4</div>\n        <div className='security_pin_number' onClick={onNumber(5)}>5</div>\n        <div className='security_pin_number' onClick={onNumber(6)}>6</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onNumber(7)}>7</div>\n        <div className='security_pin_number' onClick={onNumber(8)}>8</div>\n        <div className='security_pin_number' onClick={onNumber(9)}>9</div>\n      </div>\n      <div className='security_pin_row'>\n        <div className='security_pin_number' onClick={onDel}><Backspace/></div>\n        <div className='security_pin_number' onClick={onNumber()}>0</div>\n        <div className='security_pin_number' onClick={onOk}>OK</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pin\n","import Setup from './Setup'\n\nexport default Setup\n","import { DeleteForever, Lock } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport './Security.css'\nimport List from './List'\nimport * as store from '../../Stores/Secret'\nimport Pin from './Pin'\n\nconst Setup = ({ pinStatus, onUpdatePinStatus}) => {\n  const [status, setSecurityStatus] = useState(store.securityStatus.getVal())\n  const [warn, setWarn] = useState()\n  const [pin, setPin] = useState(store.pin.getVal() || '')\n  const [list, setList] = useState(store.chatList.getVal() || [])\n  const [openList, setOpenList] = useState(false)\n\n  const saveSettings = () => {\n    if (!/\\d{4,}/.test(pin) ) {\n      setWarn('PIN меньше 4 цифр')\n      return false\n    }\n    store.chatList.setVal(list)\n    store.pin.setVal(pin)\n\n    setWarn(`настройки сохранены\\nчаты: ${list.length}, PIN: ${pin}`)\n    return true\n  }\n  const changeStatus = () => {\n    if (status === 'enabled') {\n      store.securityStatus.setVal('off')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn('PIN Off')\n    } else if (saveSettings()) {\n      onUpdatePinStatus('ok')\n      store.securityStatus.setVal('enabled')\n      setSecurityStatus(store.securityStatus.getVal())\n      setWarn(`PIN On: ${pin}`)\n    }\n  }\n  const enabled = status === 'enabled'\n\n  if (enabled && !pinStatus) {\n    return <Pin onUpdatePinStatus={onUpdatePinStatus} pin={pin} list={list} />\n  }\n\n  if (openList) {\n    return <List setOpenList={setOpenList} setList={setList} list={list}/>\n  }\n\n\n  return (\n    <div className='security_root'>\n      <div className='security_setup_row'>\n        Setup\n      </div>\n      <div onClick={changeStatus} className={`security_setup_row ${enabled? 'security_enabled' : 'security_disabled'}`}>\n        <div> {enabled ? 'Выключить Пинкод' : 'Включить Пинкод' } </div>\n        <div>{enabled ? <DeleteForever/> : null}</div>\n      </div>\n      <div className='security_setup_row'>\n        PIN:\n        <input className='security_setup_pin' value={pin} onChange={e => setPin(e.target.value)} type=\"text\"/>\n      </div>\n      <div className='security_setup_row' onClick={() => setOpenList(true)}>\n        <div>Настроить чаты</div>\n        <div>{list.length}</div>\n      </div>\n      <div className='security_setup_row' onClick={saveSettings}>\n        Сохранить настройки\n      </div>\n      {\n        enabled && (\n          <div className='security_setup_row' onClick={() => onUpdatePinStatus(null)}>\n            <div>Перейти на пин</div>\n            <Lock />\n          </div>\n        )\n      }\n      { warn && <div className='security_warn'><pre>{warn}</pre></div> }\n    </div>\n  )\n}\nexport default Setup\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList } = this.state;\n        const isSmallWidth = false\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport Back from '../../Assets/Icons/Back';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleBack = () => {\n        TdLibController.setChatId(0);\n    }\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        <IconButton\n                          className='header-left-back-button'\n                          aria-label='Back'\n                          onClick={this.handleBack}>\n                            <Back />\n                        </IconButton>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        {/*<div className='message-padding'>*/}\n                        {/*    <CheckMarkIcon className='message-select-tick' />*/}\n                        {/*</div>*/}\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        {/*<div className='message-padding' />*/}\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (history.some(x => x.chat_id === chatId && x.id === messageId || !messageId && chat && chat.last_message.id === x.id)) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        if (!chatId) {\n            return  null\n        }\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport Security from './Security';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            chatId: AppStore.getChatId(),\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n    onUpdatePinStatus = (pinStatus) => {\n        this.setState({\n            pinStatus\n        })\n    }\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            chatId,\n            pinStatus,\n        } = this.state;\n\n        if (pinStatus !== 'error') {\n            return <Security onUpdatePinStatus={this.onUpdatePinStatus} pinStatus={pinStatus} />\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    {chatId ? null : <Dialogs />}\n                    {chatId ? <DialogDetails ref={this.dialogDetailsRef} /> : null}\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}